package api

import (
	"fmt"
	"github.com/haozing/mztl/pkg/code"
)

func (m *TLinputGameID) Setid(v int64)                                   { m.Data.Id = v }
func (m *TLinputGameID) Getid() int64                                    { return m.Data.Id }
func (m *TLinputGameID) Setaccess_hash(v int64)                          { m.Data.Access_hash = v }
func (m *TLinputGameID) Getaccess_hash() int64                           { return m.Data.Access_hash }
func (m *TLinputGameShortName) Setbot_id(v InputUser)                    { m.Data.Bot_id = v }
func (m *TLinputGameShortName) Getbot_id() InputUser                     { return m.Data.Bot_id }
func (m *TLinputGameShortName) Setshort_name(v string)                   { m.Data.Short_name = v }
func (m *TLinputGameShortName) Getshort_name() string                    { return m.Data.Short_name }
func (m *TLmessages_affectedMessages) Setpts(v int32)                    { m.Data.Pts = v }
func (m *TLmessages_affectedMessages) Getpts() int32                     { return m.Data.Pts }
func (m *TLmessages_affectedMessages) Setpts_count(v int32)              { m.Data.Pts_count = v }
func (m *TLmessages_affectedMessages) Getpts_count() int32               { return m.Data.Pts_count }
func (m *TLaccount_privacyRules) Setrules(v []PrivacyRule)               { m.Data.Rules = v }
func (m *TLaccount_privacyRules) Getrules() []PrivacyRule                { return m.Data.Rules }
func (m *TLaccount_privacyRules) Setchats(v []Chat)                      { m.Data.Chats = v }
func (m *TLaccount_privacyRules) Getchats() []Chat                       { return m.Data.Chats }
func (m *TLaccount_privacyRules) Setusers(v []User)                      { m.Data.Users = v }
func (m *TLaccount_privacyRules) Getusers() []User                       { return m.Data.Users }
func (m *TLcontacts_topPeers) Setcategories(v []TopPeerCategoryPeers)    { m.Data.Categories = v }
func (m *TLcontacts_topPeers) Getcategories() []TopPeerCategoryPeers     { return m.Data.Categories }
func (m *TLcontacts_topPeers) Setchats(v []Chat)                         { m.Data.Chats = v }
func (m *TLcontacts_topPeers) Getchats() []Chat                          { return m.Data.Chats }
func (m *TLcontacts_topPeers) Setusers(v []User)                         { m.Data.Users = v }
func (m *TLcontacts_topPeers) Getusers() []User                          { return m.Data.Users }
func (m *TLinputReportReasonOther) Settext(v string)                     { m.Data.Text = v }
func (m *TLinputReportReasonOther) Gettext() string                      { return m.Data.Text }
func (m *TLpayments_bankCardData) Settitle(v string)                     { m.Data.Title = v }
func (m *TLpayments_bankCardData) Gettitle() string                      { return m.Data.Title }
func (m *TLpayments_bankCardData) Setopen_urls(v []BankCardOpenUrl)      { m.Data.Open_urls = v }
func (m *TLpayments_bankCardData) Getopen_urls() []BankCardOpenUrl       { return m.Data.Open_urls }
func (m *TLauth_passwordRecovery) Setemail_pattern(v string)             { m.Data.Email_pattern = v }
func (m *TLauth_passwordRecovery) Getemail_pattern() string              { return m.Data.Email_pattern }
func (m *TLgeoPoint) Setlong_key(v float64)                              { m.Data.Long_key = v }
func (m *TLgeoPoint) Getlong_key() float64                               { return m.Data.Long_key }
func (m *TLgeoPoint) Setlat(v float64)                                   { m.Data.Lat = v }
func (m *TLgeoPoint) Getlat() float64                                    { return m.Data.Lat }
func (m *TLgeoPoint) Setaccess_hash(v int64)                             { m.Data.Access_hash = v }
func (m *TLgeoPoint) Getaccess_hash() int64                              { return m.Data.Access_hash }
func (m *TLgeoPoint) Setaccuracy_radius(v int32)                         { m.Data.Accuracy_radius = v }
func (m *TLgeoPoint) Getaccuracy_radius() int32                          { return m.Data.Accuracy_radius }
func (m *TLstatsAbsValueAndPrev) Setcurrent(v float64)                   { m.Data.Current = v }
func (m *TLstatsAbsValueAndPrev) Getcurrent() float64                    { return m.Data.Current }
func (m *TLstatsAbsValueAndPrev) Setprevious(v float64)                  { m.Data.Previous = v }
func (m *TLstatsAbsValueAndPrev) Getprevious() float64                   { return m.Data.Previous }
func (m *TLsendMessageUploadVideoAction) Setprogress(v int32)            { m.Data.Progress = v }
func (m *TLsendMessageUploadVideoAction) Getprogress() int32             { return m.Data.Progress }
func (m *TLsendMessageUploadAudioAction) Setprogress(v int32)            { m.Data.Progress = v }
func (m *TLsendMessageUploadAudioAction) Getprogress() int32             { return m.Data.Progress }
func (m *TLsendMessageUploadPhotoAction) Setprogress(v int32)            { m.Data.Progress = v }
func (m *TLsendMessageUploadPhotoAction) Getprogress() int32             { return m.Data.Progress }
func (m *TLsendMessageUploadDocumentAction) Setprogress(v int32)         { m.Data.Progress = v }
func (m *TLsendMessageUploadDocumentAction) Getprogress() int32          { return m.Data.Progress }
func (m *TLsendMessageUploadRoundAction) Setprogress(v int32)            { m.Data.Progress = v }
func (m *TLsendMessageUploadRoundAction) Getprogress() int32             { return m.Data.Progress }
func (m *TLsecureValueErrorData) Settype(v SecureValueType)              { m.Data.Type = v }
func (m *TLsecureValueErrorData) Gettype() SecureValueType               { return m.Data.Type }
func (m *TLsecureValueErrorData) Setdata_hash(v []uint8)                 { m.Data.Data_hash = v }
func (m *TLsecureValueErrorData) Getdata_hash() []uint8                  { return m.Data.Data_hash }
func (m *TLsecureValueErrorData) Setfield(v string)                      { m.Data.Field = v }
func (m *TLsecureValueErrorData) Getfield() string                       { return m.Data.Field }
func (m *TLsecureValueErrorData) Settext(v string)                       { m.Data.Text = v }
func (m *TLsecureValueErrorData) Gettext() string                        { return m.Data.Text }
func (m *TLsecureValueErrorFrontSide) Settype(v SecureValueType)         { m.Data.Type = v }
func (m *TLsecureValueErrorFrontSide) Gettype() SecureValueType          { return m.Data.Type }
func (m *TLsecureValueErrorFrontSide) Setfile_hash(v []uint8)            { m.Data.File_hash = v }
func (m *TLsecureValueErrorFrontSide) Getfile_hash() []uint8             { return m.Data.File_hash }
func (m *TLsecureValueErrorFrontSide) Settext(v string)                  { m.Data.Text = v }
func (m *TLsecureValueErrorFrontSide) Gettext() string                   { return m.Data.Text }
func (m *TLsecureValueErrorReverseSide) Settype(v SecureValueType)       { m.Data.Type = v }
func (m *TLsecureValueErrorReverseSide) Gettype() SecureValueType        { return m.Data.Type }
func (m *TLsecureValueErrorReverseSide) Setfile_hash(v []uint8)          { m.Data.File_hash = v }
func (m *TLsecureValueErrorReverseSide) Getfile_hash() []uint8           { return m.Data.File_hash }
func (m *TLsecureValueErrorReverseSide) Settext(v string)                { m.Data.Text = v }
func (m *TLsecureValueErrorReverseSide) Gettext() string                 { return m.Data.Text }
func (m *TLsecureValueErrorSelfie) Settype(v SecureValueType)            { m.Data.Type = v }
func (m *TLsecureValueErrorSelfie) Gettype() SecureValueType             { return m.Data.Type }
func (m *TLsecureValueErrorSelfie) Setfile_hash(v []uint8)               { m.Data.File_hash = v }
func (m *TLsecureValueErrorSelfie) Getfile_hash() []uint8                { return m.Data.File_hash }
func (m *TLsecureValueErrorSelfie) Settext(v string)                     { m.Data.Text = v }
func (m *TLsecureValueErrorSelfie) Gettext() string                      { return m.Data.Text }
func (m *TLsecureValueErrorFile) Settype(v SecureValueType)              { m.Data.Type = v }
func (m *TLsecureValueErrorFile) Gettype() SecureValueType               { return m.Data.Type }
func (m *TLsecureValueErrorFile) Setfile_hash(v []uint8)                 { m.Data.File_hash = v }
func (m *TLsecureValueErrorFile) Getfile_hash() []uint8                  { return m.Data.File_hash }
func (m *TLsecureValueErrorFile) Settext(v string)                       { m.Data.Text = v }
func (m *TLsecureValueErrorFile) Gettext() string                        { return m.Data.Text }
func (m *TLsecureValueErrorFiles) Settype(v SecureValueType)             { m.Data.Type = v }
func (m *TLsecureValueErrorFiles) Gettype() SecureValueType              { return m.Data.Type }
func (m *TLsecureValueErrorFiles) Setfile_hash_6(v [][]uint8)            { m.Data.File_hash_6 = v }
func (m *TLsecureValueErrorFiles) Getfile_hash_6() [][]uint8             { return m.Data.File_hash_6 }
func (m *TLsecureValueErrorFiles) Settext(v string)                      { m.Data.Text = v }
func (m *TLsecureValueErrorFiles) Gettext() string                       { return m.Data.Text }
func (m *TLsecureValueError) Settype(v SecureValueType)                  { m.Data.Type = v }
func (m *TLsecureValueError) Gettype() SecureValueType                   { return m.Data.Type }
func (m *TLsecureValueError) Sethash(v []uint8)                          { m.Data.Hash = v }
func (m *TLsecureValueError) Gethash() []uint8                           { return m.Data.Hash }
func (m *TLsecureValueError) Settext(v string)                           { m.Data.Text = v }
func (m *TLsecureValueError) Gettext() string                            { return m.Data.Text }
func (m *TLsecureValueErrorTranslationFile) Settype(v SecureValueType)   { m.Data.Type = v }
func (m *TLsecureValueErrorTranslationFile) Gettype() SecureValueType    { return m.Data.Type }
func (m *TLsecureValueErrorTranslationFile) Setfile_hash(v []uint8)      { m.Data.File_hash = v }
func (m *TLsecureValueErrorTranslationFile) Getfile_hash() []uint8       { return m.Data.File_hash }
func (m *TLsecureValueErrorTranslationFile) Settext(v string)            { m.Data.Text = v }
func (m *TLsecureValueErrorTranslationFile) Gettext() string             { return m.Data.Text }
func (m *TLsecureValueErrorTranslationFiles) Settype(v SecureValueType)  { m.Data.Type = v }
func (m *TLsecureValueErrorTranslationFiles) Gettype() SecureValueType   { return m.Data.Type }
func (m *TLsecureValueErrorTranslationFiles) Setfile_hash_6(v [][]uint8) { m.Data.File_hash_6 = v }
func (m *TLsecureValueErrorTranslationFiles) Getfile_hash_6() [][]uint8  { return m.Data.File_hash_6 }
func (m *TLsecureValueErrorTranslationFiles) Settext(v string)           { m.Data.Text = v }
func (m *TLsecureValueErrorTranslationFiles) Gettext() string            { return m.Data.Text }
func (m *TLinputSecureFileUploaded) Setid(v int64)                       { m.Data.Id = v }
func (m *TLinputSecureFileUploaded) Getid() int64                        { return m.Data.Id }
func (m *TLinputSecureFileUploaded) Setparts(v int32)                    { m.Data.Parts = v }
func (m *TLinputSecureFileUploaded) Getparts() int32                     { return m.Data.Parts }
func (m *TLinputSecureFileUploaded) Setmd5_checksum(v string)            { m.Data.Md5_checksum = v }
func (m *TLinputSecureFileUploaded) Getmd5_checksum() string             { return m.Data.Md5_checksum }
func (m *TLinputSecureFileUploaded) Setfile_hash(v []uint8)              { m.Data.File_hash = v }
func (m *TLinputSecureFileUploaded) Getfile_hash() []uint8               { return m.Data.File_hash }
func (m *TLinputSecureFileUploaded) Setsecret(v []uint8)                 { m.Data.Secret = v }
func (m *TLinputSecureFileUploaded) Getsecret() []uint8                  { return m.Data.Secret }
func (m *TLinputSecureFile) Setid(v int64)                               { m.Data.Id = v }
func (m *TLinputSecureFile) Getid() int64                                { return m.Data.Id }
func (m *TLinputSecureFile) Setaccess_hash(v int64)                      { m.Data.Access_hash = v }
func (m *TLinputSecureFile) Getaccess_hash() int64                       { return m.Data.Access_hash }
func (m *TLinputThemeSettings) Setbase_theme(v BaseTheme)                { m.Data.Base_theme = v }
func (m *TLinputThemeSettings) Getbase_theme() BaseTheme                 { return m.Data.Base_theme }
func (m *TLinputThemeSettings) Setaccent_color(v int32)                  { m.Data.Accent_color = v }
func (m *TLinputThemeSettings) Getaccent_color() int32                   { return m.Data.Accent_color }
func (m *TLinputThemeSettings) Setmessage_top_color(v int32)             { m.Data.Message_top_color = v }
func (m *TLinputThemeSettings) Getmessage_top_color() int32              { return m.Data.Message_top_color }
func (m *TLinputThemeSettings) Setmessage_bottom_color(v int32)          { m.Data.Message_bottom_color = v }
func (m *TLinputThemeSettings) Getmessage_bottom_color() int32           { return m.Data.Message_bottom_color }
func (m *TLinputThemeSettings) Setwallpaper(v InputWallPaper)            { m.Data.Wallpaper = v }
func (m *TLinputThemeSettings) Getwallpaper() InputWallPaper             { return m.Data.Wallpaper }
func (m *TLinputThemeSettings) Setwallpaper_settings(v WallPaperSettings) {
	m.Data.Wallpaper_settings = v
}
func (m *TLinputThemeSettings) Getwallpaper_settings() WallPaperSettings {
	return m.Data.Wallpaper_settings
}
func (m *TLmessages_dialogs) Setdialogs(v []Dialog)                        { m.Data.Dialogs = v }
func (m *TLmessages_dialogs) Getdialogs() []Dialog                         { return m.Data.Dialogs }
func (m *TLmessages_dialogs) Setmessages(v []Message)                      { m.Data.Messages = v }
func (m *TLmessages_dialogs) Getmessages() []Message                       { return m.Data.Messages }
func (m *TLmessages_dialogs) Setchats(v []Chat)                            { m.Data.Chats = v }
func (m *TLmessages_dialogs) Getchats() []Chat                             { return m.Data.Chats }
func (m *TLmessages_dialogs) Setusers(v []User)                            { m.Data.Users = v }
func (m *TLmessages_dialogs) Getusers() []User                             { return m.Data.Users }
func (m *TLmessages_dialogsSlice) Setcount(v int32)                        { m.Data.Count = v }
func (m *TLmessages_dialogsSlice) Getcount() int32                         { return m.Data.Count }
func (m *TLmessages_dialogsSlice) Setdialogs(v []Dialog)                   { m.Data.Dialogs = v }
func (m *TLmessages_dialogsSlice) Getdialogs() []Dialog                    { return m.Data.Dialogs }
func (m *TLmessages_dialogsSlice) Setmessages(v []Message)                 { m.Data.Messages = v }
func (m *TLmessages_dialogsSlice) Getmessages() []Message                  { return m.Data.Messages }
func (m *TLmessages_dialogsSlice) Setchats(v []Chat)                       { m.Data.Chats = v }
func (m *TLmessages_dialogsSlice) Getchats() []Chat                        { return m.Data.Chats }
func (m *TLmessages_dialogsSlice) Setusers(v []User)                       { m.Data.Users = v }
func (m *TLmessages_dialogsSlice) Getusers() []User                        { return m.Data.Users }
func (m *TLmessages_dialogsNotModified) Setcount(v int32)                  { m.Data.Count = v }
func (m *TLmessages_dialogsNotModified) Getcount() int32                   { return m.Data.Count }
func (m *TLauth_sentCodeTypeApp) Setlength(v int32)                        { m.Data.Length = v }
func (m *TLauth_sentCodeTypeApp) Getlength() int32                         { return m.Data.Length }
func (m *TLauth_sentCodeTypeSms) Setlength(v int32)                        { m.Data.Length = v }
func (m *TLauth_sentCodeTypeSms) Getlength() int32                         { return m.Data.Length }
func (m *TLauth_sentCodeTypeCall) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLauth_sentCodeTypeCall) Getlength() int32                        { return m.Data.Length }
func (m *TLauth_sentCodeTypeFlashCall) Setpattern(v string)                { m.Data.Pattern = v }
func (m *TLauth_sentCodeTypeFlashCall) Getpattern() string                 { return m.Data.Pattern }
func (m *TLimportedContact) Setuser_id(v int32)                            { m.Data.User_id = v }
func (m *TLimportedContact) Getuser_id() int32                             { return m.Data.User_id }
func (m *TLimportedContact) Setclient_id(v int64)                          { m.Data.Client_id = v }
func (m *TLimportedContact) Getclient_id() int64                           { return m.Data.Client_id }
func (m *TLaccount_autoDownloadSettings) Setlow(v AutoDownloadSettings)    { m.Data.Low = v }
func (m *TLaccount_autoDownloadSettings) Getlow() AutoDownloadSettings     { return m.Data.Low }
func (m *TLaccount_autoDownloadSettings) Setmedium(v AutoDownloadSettings) { m.Data.Medium = v }
func (m *TLaccount_autoDownloadSettings) Getmedium() AutoDownloadSettings  { return m.Data.Medium }
func (m *TLaccount_autoDownloadSettings) Sethigh(v AutoDownloadSettings)   { m.Data.High = v }
func (m *TLaccount_autoDownloadSettings) Gethigh() AutoDownloadSettings    { return m.Data.High }
func (m *TLinputEncryptedChat) Setchat_id(v int32)                         { m.Data.Chat_id = v }
func (m *TLinputEncryptedChat) Getchat_id() int32                          { return m.Data.Chat_id }
func (m *TLinputEncryptedChat) Setaccess_hash(v int64)                     { m.Data.Access_hash = v }
func (m *TLinputEncryptedChat) Getaccess_hash() int64                      { return m.Data.Access_hash }
func (m *TLuserEmpty) Setid(v int32)                                       { m.Data.Id = v }
func (m *TLuserEmpty) Getid() int32                                        { return m.Data.Id }
func (m *TLuser) Setself(v bool)                                           { m.Data.Self = v }
func (m *TLuser) Getself() bool                                            { return m.Data.Self }
func (m *TLuser) Setcontact(v bool)                                        { m.Data.Contact = v }
func (m *TLuser) Getcontact() bool                                         { return m.Data.Contact }
func (m *TLuser) Setmutual_contact(v bool)                                 { m.Data.Mutual_contact = v }
func (m *TLuser) Getmutual_contact() bool                                  { return m.Data.Mutual_contact }
func (m *TLuser) Setdeleted(v bool)                                        { m.Data.Deleted = v }
func (m *TLuser) Getdeleted() bool                                         { return m.Data.Deleted }
func (m *TLuser) Setbot(v bool)                                            { m.Data.Bot = v }
func (m *TLuser) Getbot() bool                                             { return m.Data.Bot }
func (m *TLuser) Setbot_chat_history(v bool)                               { m.Data.Bot_chat_history = v }
func (m *TLuser) Getbot_chat_history() bool                                { return m.Data.Bot_chat_history }
func (m *TLuser) Setbot_nochats(v bool)                                    { m.Data.Bot_nochats = v }
func (m *TLuser) Getbot_nochats() bool                                     { return m.Data.Bot_nochats }
func (m *TLuser) Setverified(v bool)                                       { m.Data.Verified = v }
func (m *TLuser) Getverified() bool                                        { return m.Data.Verified }
func (m *TLuser) Setrestricted(v bool)                                     { m.Data.Restricted = v }
func (m *TLuser) Getrestricted() bool                                      { return m.Data.Restricted }
func (m *TLuser) Setmin(v bool)                                            { m.Data.Min = v }
func (m *TLuser) Getmin() bool                                             { return m.Data.Min }
func (m *TLuser) Setbot_inline_geo(v bool)                                 { m.Data.Bot_inline_geo = v }
func (m *TLuser) Getbot_inline_geo() bool                                  { return m.Data.Bot_inline_geo }
func (m *TLuser) Setsupport(v bool)                                        { m.Data.Support = v }
func (m *TLuser) Getsupport() bool                                         { return m.Data.Support }
func (m *TLuser) Setscam(v bool)                                           { m.Data.Scam = v }
func (m *TLuser) Getscam() bool                                            { return m.Data.Scam }
func (m *TLuser) Setapply_min_photo(v bool)                                { m.Data.Apply_min_photo = v }
func (m *TLuser) Getapply_min_photo() bool                                 { return m.Data.Apply_min_photo }
func (m *TLuser) Setid(v int32)                                            { m.Data.Id = v }
func (m *TLuser) Getid() int32                                             { return m.Data.Id }
func (m *TLuser) Setaccess_hash(v int64)                                   { m.Data.Access_hash = v }
func (m *TLuser) Getaccess_hash() int64                                    { return m.Data.Access_hash }
func (m *TLuser) Setfirst_name(v string)                                   { m.Data.First_name = v }
func (m *TLuser) Getfirst_name() string                                    { return m.Data.First_name }
func (m *TLuser) Setlast_name(v string)                                    { m.Data.Last_name = v }
func (m *TLuser) Getlast_name() string                                     { return m.Data.Last_name }
func (m *TLuser) Setusername(v string)                                     { m.Data.Username = v }
func (m *TLuser) Getusername() string                                      { return m.Data.Username }
func (m *TLuser) Setphone(v string)                                        { m.Data.Phone = v }
func (m *TLuser) Getphone() string                                         { return m.Data.Phone }
func (m *TLuser) Setphoto(v UserProfilePhoto)                              { m.Data.Photo = v }
func (m *TLuser) Getphoto() UserProfilePhoto                               { return m.Data.Photo }
func (m *TLuser) Setstatus(v UserStatus)                                   { m.Data.Status = v }
func (m *TLuser) Getstatus() UserStatus                                    { return m.Data.Status }
func (m *TLuser) Setbot_info_version(v int32)                              { m.Data.Bot_info_version = v }
func (m *TLuser) Getbot_info_version() int32                               { return m.Data.Bot_info_version }
func (m *TLuser) Setrestriction_reason(v []RestrictionReason)              { m.Data.Restriction_reason = v }
func (m *TLuser) Getrestriction_reason() []RestrictionReason               { return m.Data.Restriction_reason }
func (m *TLuser) Setbot_inline_placeholder(v string)                       { m.Data.Bot_inline_placeholder = v }
func (m *TLuser) Getbot_inline_placeholder() string                        { return m.Data.Bot_inline_placeholder }
func (m *TLuser) Setlang_code(v string)                                    { m.Data.Lang_code = v }
func (m *TLuser) Getlang_code() string                                     { return m.Data.Lang_code }
func (m *TLdataJSON) Setdata(v string)                                     { m.Data.Data = v }
func (m *TLdataJSON) Getdata() string                                      { return m.Data.Data }
func (m *TLhelp_termsOfServiceUpdateEmpty) Setexpires(v int32)             { m.Data.Expires = v }
func (m *TLhelp_termsOfServiceUpdateEmpty) Getexpires() int32              { return m.Data.Expires }
func (m *TLhelp_termsOfServiceUpdate) Setexpires(v int32)                  { m.Data.Expires = v }
func (m *TLhelp_termsOfServiceUpdate) Getexpires() int32                   { return m.Data.Expires }
func (m *TLhelp_termsOfServiceUpdate) Setterms_of_service(v Help_TermsOfService) {
	m.Data.Terms_of_service = v
}
func (m *TLhelp_termsOfServiceUpdate) Getterms_of_service() Help_TermsOfService {
	return m.Data.Terms_of_service
}
func (m *TLmessages_messageEditData) Setcaption(v bool)                     { m.Data.Caption = v }
func (m *TLmessages_messageEditData) Getcaption() bool                      { return m.Data.Caption }
func (m *TLhelp_appUpdate) Setcan_not_skip(v bool)                          { m.Data.Can_not_skip = v }
func (m *TLhelp_appUpdate) Getcan_not_skip() bool                           { return m.Data.Can_not_skip }
func (m *TLhelp_appUpdate) Setid(v int32)                                   { m.Data.Id = v }
func (m *TLhelp_appUpdate) Getid() int32                                    { return m.Data.Id }
func (m *TLhelp_appUpdate) Setversion(v string)                             { m.Data.Version = v }
func (m *TLhelp_appUpdate) Getversion() string                              { return m.Data.Version }
func (m *TLhelp_appUpdate) Settext(v string)                                { m.Data.Text = v }
func (m *TLhelp_appUpdate) Gettext() string                                 { return m.Data.Text }
func (m *TLhelp_appUpdate) Setentities(v []MessageEntity)                   { m.Data.Entities = v }
func (m *TLhelp_appUpdate) Getentities() []MessageEntity                    { return m.Data.Entities }
func (m *TLhelp_appUpdate) Setdocument(v Document)                          { m.Data.Document = v }
func (m *TLhelp_appUpdate) Getdocument() Document                           { return m.Data.Document }
func (m *TLhelp_appUpdate) Seturl(v string)                                 { m.Data.Url = v }
func (m *TLhelp_appUpdate) Geturl() string                                  { return m.Data.Url }
func (m *TLexportedMessageLink) Setlink(v string)                           { m.Data.Link = v }
func (m *TLexportedMessageLink) Getlink() string                            { return m.Data.Link }
func (m *TLexportedMessageLink) Sethtml(v string)                           { m.Data.Html = v }
func (m *TLexportedMessageLink) Gethtml() string                            { return m.Data.Html }
func (m *TLinvoice) Settest(v bool)                                         { m.Data.Test = v }
func (m *TLinvoice) Gettest() bool                                          { return m.Data.Test }
func (m *TLinvoice) Setname_requested(v bool)                               { m.Data.Name_requested = v }
func (m *TLinvoice) Getname_requested() bool                                { return m.Data.Name_requested }
func (m *TLinvoice) Setphone_requested(v bool)                              { m.Data.Phone_requested = v }
func (m *TLinvoice) Getphone_requested() bool                               { return m.Data.Phone_requested }
func (m *TLinvoice) Setemail_requested(v bool)                              { m.Data.Email_requested = v }
func (m *TLinvoice) Getemail_requested() bool                               { return m.Data.Email_requested }
func (m *TLinvoice) Setshipping_address_requested(v bool)                   { m.Data.Shipping_address_requested = v }
func (m *TLinvoice) Getshipping_address_requested() bool                    { return m.Data.Shipping_address_requested }
func (m *TLinvoice) Setflexible(v bool)                                     { m.Data.Flexible = v }
func (m *TLinvoice) Getflexible() bool                                      { return m.Data.Flexible }
func (m *TLinvoice) Setphone_to_provider(v bool)                            { m.Data.Phone_to_provider = v }
func (m *TLinvoice) Getphone_to_provider() bool                             { return m.Data.Phone_to_provider }
func (m *TLinvoice) Setemail_to_provider(v bool)                            { m.Data.Email_to_provider = v }
func (m *TLinvoice) Getemail_to_provider() bool                             { return m.Data.Email_to_provider }
func (m *TLinvoice) Setcurrency(v string)                                   { m.Data.Currency = v }
func (m *TLinvoice) Getcurrency() string                                    { return m.Data.Currency }
func (m *TLinvoice) Setprices(v []LabeledPrice)                             { m.Data.Prices = v }
func (m *TLinvoice) Getprices() []LabeledPrice                              { return m.Data.Prices }
func (m *TLemojiLanguage) Setlang_code(v string)                            { m.Data.Lang_code = v }
func (m *TLemojiLanguage) Getlang_code() string                             { return m.Data.Lang_code }
func (m *TLupdateShortMessage) Setout_key(v bool)                           { m.Data.Out_key = v }
func (m *TLupdateShortMessage) Getout_key() bool                            { return m.Data.Out_key }
func (m *TLupdateShortMessage) Setmentioned(v bool)                         { m.Data.Mentioned = v }
func (m *TLupdateShortMessage) Getmentioned() bool                          { return m.Data.Mentioned }
func (m *TLupdateShortMessage) Setmedia_unread(v bool)                      { m.Data.Media_unread = v }
func (m *TLupdateShortMessage) Getmedia_unread() bool                       { return m.Data.Media_unread }
func (m *TLupdateShortMessage) Setsilent(v bool)                            { m.Data.Silent = v }
func (m *TLupdateShortMessage) Getsilent() bool                             { return m.Data.Silent }
func (m *TLupdateShortMessage) Setid(v int32)                               { m.Data.Id = v }
func (m *TLupdateShortMessage) Getid() int32                                { return m.Data.Id }
func (m *TLupdateShortMessage) Setuser_id(v int32)                          { m.Data.User_id = v }
func (m *TLupdateShortMessage) Getuser_id() int32                           { return m.Data.User_id }
func (m *TLupdateShortMessage) Setmessage(v string)                         { m.Data.Message = v }
func (m *TLupdateShortMessage) Getmessage() string                          { return m.Data.Message }
func (m *TLupdateShortMessage) Setpts(v int32)                              { m.Data.Pts = v }
func (m *TLupdateShortMessage) Getpts() int32                               { return m.Data.Pts }
func (m *TLupdateShortMessage) Setpts_count(v int32)                        { m.Data.Pts_count = v }
func (m *TLupdateShortMessage) Getpts_count() int32                         { return m.Data.Pts_count }
func (m *TLupdateShortMessage) Setdate(v int32)                             { m.Data.Date = v }
func (m *TLupdateShortMessage) Getdate() int32                              { return m.Data.Date }
func (m *TLupdateShortMessage) Setfwd_from(v MessageFwdHeader)              { m.Data.Fwd_from = v }
func (m *TLupdateShortMessage) Getfwd_from() MessageFwdHeader               { return m.Data.Fwd_from }
func (m *TLupdateShortMessage) Setvia_bot_id(v int32)                       { m.Data.Via_bot_id = v }
func (m *TLupdateShortMessage) Getvia_bot_id() int32                        { return m.Data.Via_bot_id }
func (m *TLupdateShortMessage) Setreply_to(v MessageReplyHeader)            { m.Data.Reply_to = v }
func (m *TLupdateShortMessage) Getreply_to() MessageReplyHeader             { return m.Data.Reply_to }
func (m *TLupdateShortMessage) Setentities(v []MessageEntity)               { m.Data.Entities = v }
func (m *TLupdateShortMessage) Getentities() []MessageEntity                { return m.Data.Entities }
func (m *TLupdateShortChatMessage) Setout_key(v bool)                       { m.Data.Out_key = v }
func (m *TLupdateShortChatMessage) Getout_key() bool                        { return m.Data.Out_key }
func (m *TLupdateShortChatMessage) Setmentioned(v bool)                     { m.Data.Mentioned = v }
func (m *TLupdateShortChatMessage) Getmentioned() bool                      { return m.Data.Mentioned }
func (m *TLupdateShortChatMessage) Setmedia_unread(v bool)                  { m.Data.Media_unread = v }
func (m *TLupdateShortChatMessage) Getmedia_unread() bool                   { return m.Data.Media_unread }
func (m *TLupdateShortChatMessage) Setsilent(v bool)                        { m.Data.Silent = v }
func (m *TLupdateShortChatMessage) Getsilent() bool                         { return m.Data.Silent }
func (m *TLupdateShortChatMessage) Setid(v int32)                           { m.Data.Id = v }
func (m *TLupdateShortChatMessage) Getid() int32                            { return m.Data.Id }
func (m *TLupdateShortChatMessage) Setfrom_id(v int32)                      { m.Data.From_id = v }
func (m *TLupdateShortChatMessage) Getfrom_id() int32                       { return m.Data.From_id }
func (m *TLupdateShortChatMessage) Setchat_id(v int32)                      { m.Data.Chat_id = v }
func (m *TLupdateShortChatMessage) Getchat_id() int32                       { return m.Data.Chat_id }
func (m *TLupdateShortChatMessage) Setmessage(v string)                     { m.Data.Message = v }
func (m *TLupdateShortChatMessage) Getmessage() string                      { return m.Data.Message }
func (m *TLupdateShortChatMessage) Setpts(v int32)                          { m.Data.Pts = v }
func (m *TLupdateShortChatMessage) Getpts() int32                           { return m.Data.Pts }
func (m *TLupdateShortChatMessage) Setpts_count(v int32)                    { m.Data.Pts_count = v }
func (m *TLupdateShortChatMessage) Getpts_count() int32                     { return m.Data.Pts_count }
func (m *TLupdateShortChatMessage) Setdate(v int32)                         { m.Data.Date = v }
func (m *TLupdateShortChatMessage) Getdate() int32                          { return m.Data.Date }
func (m *TLupdateShortChatMessage) Setfwd_from(v MessageFwdHeader)          { m.Data.Fwd_from = v }
func (m *TLupdateShortChatMessage) Getfwd_from() MessageFwdHeader           { return m.Data.Fwd_from }
func (m *TLupdateShortChatMessage) Setvia_bot_id(v int32)                   { m.Data.Via_bot_id = v }
func (m *TLupdateShortChatMessage) Getvia_bot_id() int32                    { return m.Data.Via_bot_id }
func (m *TLupdateShortChatMessage) Setreply_to(v MessageReplyHeader)        { m.Data.Reply_to = v }
func (m *TLupdateShortChatMessage) Getreply_to() MessageReplyHeader         { return m.Data.Reply_to }
func (m *TLupdateShortChatMessage) Setentities(v []MessageEntity)           { m.Data.Entities = v }
func (m *TLupdateShortChatMessage) Getentities() []MessageEntity            { return m.Data.Entities }
func (m *TLupdateShort) Setupdate(v Update)                                 { m.Data.Update = v }
func (m *TLupdateShort) Getupdate() Update                                  { return m.Data.Update }
func (m *TLupdateShort) Setdate(v int32)                                    { m.Data.Date = v }
func (m *TLupdateShort) Getdate() int32                                     { return m.Data.Date }
func (m *TLupdatesCombined) Setupdates(v []Update)                          { m.Data.Updates = v }
func (m *TLupdatesCombined) Getupdates() []Update                           { return m.Data.Updates }
func (m *TLupdatesCombined) Setusers(v []User)                              { m.Data.Users = v }
func (m *TLupdatesCombined) Getusers() []User                               { return m.Data.Users }
func (m *TLupdatesCombined) Setchats(v []Chat)                              { m.Data.Chats = v }
func (m *TLupdatesCombined) Getchats() []Chat                               { return m.Data.Chats }
func (m *TLupdatesCombined) Setdate(v int32)                                { m.Data.Date = v }
func (m *TLupdatesCombined) Getdate() int32                                 { return m.Data.Date }
func (m *TLupdatesCombined) Setseq_start(v int32)                           { m.Data.Seq_start = v }
func (m *TLupdatesCombined) Getseq_start() int32                            { return m.Data.Seq_start }
func (m *TLupdatesCombined) Setseq(v int32)                                 { m.Data.Seq = v }
func (m *TLupdatesCombined) Getseq() int32                                  { return m.Data.Seq }
func (m *TLupdates) Setupdates(v []Update)                                  { m.Data.Updates = v }
func (m *TLupdates) Getupdates() []Update                                   { return m.Data.Updates }
func (m *TLupdates) Setusers(v []User)                                      { m.Data.Users = v }
func (m *TLupdates) Getusers() []User                                       { return m.Data.Users }
func (m *TLupdates) Setchats(v []Chat)                                      { m.Data.Chats = v }
func (m *TLupdates) Getchats() []Chat                                       { return m.Data.Chats }
func (m *TLupdates) Setdate(v int32)                                        { m.Data.Date = v }
func (m *TLupdates) Getdate() int32                                         { return m.Data.Date }
func (m *TLupdates) Setseq(v int32)                                         { m.Data.Seq = v }
func (m *TLupdates) Getseq() int32                                          { return m.Data.Seq }
func (m *TLupdateShortSentMessage) Setout_key(v bool)                       { m.Data.Out_key = v }
func (m *TLupdateShortSentMessage) Getout_key() bool                        { return m.Data.Out_key }
func (m *TLupdateShortSentMessage) Setid(v int32)                           { m.Data.Id = v }
func (m *TLupdateShortSentMessage) Getid() int32                            { return m.Data.Id }
func (m *TLupdateShortSentMessage) Setpts(v int32)                          { m.Data.Pts = v }
func (m *TLupdateShortSentMessage) Getpts() int32                           { return m.Data.Pts }
func (m *TLupdateShortSentMessage) Setpts_count(v int32)                    { m.Data.Pts_count = v }
func (m *TLupdateShortSentMessage) Getpts_count() int32                     { return m.Data.Pts_count }
func (m *TLupdateShortSentMessage) Setdate(v int32)                         { m.Data.Date = v }
func (m *TLupdateShortSentMessage) Getdate() int32                          { return m.Data.Date }
func (m *TLupdateShortSentMessage) Setmedia(v MessageMedia)                 { m.Data.Media = v }
func (m *TLupdateShortSentMessage) Getmedia() MessageMedia                  { return m.Data.Media }
func (m *TLupdateShortSentMessage) Setentities(v []MessageEntity)           { m.Data.Entities = v }
func (m *TLupdateShortSentMessage) Getentities() []MessageEntity            { return m.Data.Entities }
func (m *TLfileHash) Setoffset(v int32)                                     { m.Data.Offset = v }
func (m *TLfileHash) Getoffset() int32                                      { return m.Data.Offset }
func (m *TLfileHash) Setlimit(v int32)                                      { m.Data.Limit = v }
func (m *TLfileHash) Getlimit() int32                                       { return m.Data.Limit }
func (m *TLfileHash) Sethash(v []uint8)                                     { m.Data.Hash = v }
func (m *TLfileHash) Gethash() []uint8                                      { return m.Data.Hash }
func (m *TLcdnPublicKey) Setdc_id(v int32)                                  { m.Data.Dc_id = v }
func (m *TLcdnPublicKey) Getdc_id() int32                                   { return m.Data.Dc_id }
func (m *TLcdnPublicKey) Setpublic_key(v string)                            { m.Data.Public_key = v }
func (m *TLcdnPublicKey) Getpublic_key() string                             { return m.Data.Public_key }
func (m *TLchatBannedRights) Setview_messages(v bool)                       { m.Data.View_messages = v }
func (m *TLchatBannedRights) Getview_messages() bool                        { return m.Data.View_messages }
func (m *TLchatBannedRights) Setsend_messages(v bool)                       { m.Data.Send_messages = v }
func (m *TLchatBannedRights) Getsend_messages() bool                        { return m.Data.Send_messages }
func (m *TLchatBannedRights) Setsend_media(v bool)                          { m.Data.Send_media = v }
func (m *TLchatBannedRights) Getsend_media() bool                           { return m.Data.Send_media }
func (m *TLchatBannedRights) Setsend_stickers(v bool)                       { m.Data.Send_stickers = v }
func (m *TLchatBannedRights) Getsend_stickers() bool                        { return m.Data.Send_stickers }
func (m *TLchatBannedRights) Setsend_gifs(v bool)                           { m.Data.Send_gifs = v }
func (m *TLchatBannedRights) Getsend_gifs() bool                            { return m.Data.Send_gifs }
func (m *TLchatBannedRights) Setsend_games(v bool)                          { m.Data.Send_games = v }
func (m *TLchatBannedRights) Getsend_games() bool                           { return m.Data.Send_games }
func (m *TLchatBannedRights) Setsend_inline(v bool)                         { m.Data.Send_inline = v }
func (m *TLchatBannedRights) Getsend_inline() bool                          { return m.Data.Send_inline }
func (m *TLchatBannedRights) Setembed_links(v bool)                         { m.Data.Embed_links = v }
func (m *TLchatBannedRights) Getembed_links() bool                          { return m.Data.Embed_links }
func (m *TLchatBannedRights) Setsend_polls(v bool)                          { m.Data.Send_polls = v }
func (m *TLchatBannedRights) Getsend_polls() bool                           { return m.Data.Send_polls }
func (m *TLchatBannedRights) Setchange_info(v bool)                         { m.Data.Change_info = v }
func (m *TLchatBannedRights) Getchange_info() bool                          { return m.Data.Change_info }
func (m *TLchatBannedRights) Setinvite_users(v bool)                        { m.Data.Invite_users = v }
func (m *TLchatBannedRights) Getinvite_users() bool                         { return m.Data.Invite_users }
func (m *TLchatBannedRights) Setpin_messages(v bool)                        { m.Data.Pin_messages = v }
func (m *TLchatBannedRights) Getpin_messages() bool                         { return m.Data.Pin_messages }
func (m *TLchatBannedRights) Setuntil_date(v int32)                         { m.Data.Until_date = v }
func (m *TLchatBannedRights) Getuntil_date() int32                          { return m.Data.Until_date }
func (m *TLpageRelatedArticle) Seturl(v string)                             { m.Data.Url = v }
func (m *TLpageRelatedArticle) Geturl() string                              { return m.Data.Url }
func (m *TLpageRelatedArticle) Setwebpage_id(v int64)                       { m.Data.Webpage_id = v }
func (m *TLpageRelatedArticle) Getwebpage_id() int64                        { return m.Data.Webpage_id }
func (m *TLpageRelatedArticle) Settitle(v string)                           { m.Data.Title = v }
func (m *TLpageRelatedArticle) Gettitle() string                            { return m.Data.Title }
func (m *TLpageRelatedArticle) Setdescription(v string)                     { m.Data.Description = v }
func (m *TLpageRelatedArticle) Getdescription() string                      { return m.Data.Description }
func (m *TLpageRelatedArticle) Setphoto_id(v int64)                         { m.Data.Photo_id = v }
func (m *TLpageRelatedArticle) Getphoto_id() int64                          { return m.Data.Photo_id }
func (m *TLpageRelatedArticle) Setauthor(v string)                          { m.Data.Author = v }
func (m *TLpageRelatedArticle) Getauthor() string                           { return m.Data.Author }
func (m *TLpageRelatedArticle) Setpublished_date(v int32)                   { m.Data.Published_date = v }
func (m *TLpageRelatedArticle) Getpublished_date() int32                    { return m.Data.Published_date }
func (m *TLcontacts_found) Setmy_results(v []Peer)                          { m.Data.My_results = v }
func (m *TLcontacts_found) Getmy_results() []Peer                           { return m.Data.My_results }
func (m *TLcontacts_found) Setresults(v []Peer)                             { m.Data.Results = v }
func (m *TLcontacts_found) Getresults() []Peer                              { return m.Data.Results }
func (m *TLcontacts_found) Setchats(v []Chat)                               { m.Data.Chats = v }
func (m *TLcontacts_found) Getchats() []Chat                                { return m.Data.Chats }
func (m *TLcontacts_found) Setusers(v []User)                               { m.Data.Users = v }
func (m *TLcontacts_found) Getusers() []User                                { return m.Data.Users }
func (m *TLaccount_sentEmailCode) Setemail_pattern(v string)                { m.Data.Email_pattern = v }
func (m *TLaccount_sentEmailCode) Getemail_pattern() string                 { return m.Data.Email_pattern }
func (m *TLaccount_sentEmailCode) Setlength(v int32)                        { m.Data.Length = v }
func (m *TLaccount_sentEmailCode) Getlength() int32                         { return m.Data.Length }
func (m *TLstatsURL) Seturl(v string)                                       { m.Data.Url = v }
func (m *TLstatsURL) Geturl() string                                        { return m.Data.Url }
func (m *TLphoneCallProtocol) Setudp_p2p(v bool)                            { m.Data.Udp_p2p = v }
func (m *TLphoneCallProtocol) Getudp_p2p() bool                             { return m.Data.Udp_p2p }
func (m *TLphoneCallProtocol) Setudp_reflector(v bool)                      { m.Data.Udp_reflector = v }
func (m *TLphoneCallProtocol) Getudp_reflector() bool                       { return m.Data.Udp_reflector }
func (m *TLphoneCallProtocol) Setmin_layer(v int32)                         { m.Data.Min_layer = v }
func (m *TLphoneCallProtocol) Getmin_layer() int32                          { return m.Data.Min_layer }
func (m *TLphoneCallProtocol) Setmax_layer(v int32)                         { m.Data.Max_layer = v }
func (m *TLphoneCallProtocol) Getmax_layer() int32                          { return m.Data.Max_layer }
func (m *TLphoneCallProtocol) Setlibrary_versions(v []String)               { m.Data.Library_versions = v }
func (m *TLphoneCallProtocol) Getlibrary_versions() []String                { return m.Data.Library_versions }
func (m *TLpeerSettings) Setreport_spam(v bool)                             { m.Data.Report_spam = v }
func (m *TLpeerSettings) Getreport_spam() bool                              { return m.Data.Report_spam }
func (m *TLpeerSettings) Setadd_contact(v bool)                             { m.Data.Add_contact = v }
func (m *TLpeerSettings) Getadd_contact() bool                              { return m.Data.Add_contact }
func (m *TLpeerSettings) Setblock_contact(v bool)                           { m.Data.Block_contact = v }
func (m *TLpeerSettings) Getblock_contact() bool                            { return m.Data.Block_contact }
func (m *TLpeerSettings) Setshare_contact(v bool)                           { m.Data.Share_contact = v }
func (m *TLpeerSettings) Getshare_contact() bool                            { return m.Data.Share_contact }
func (m *TLpeerSettings) Setneed_contacts_exception(v bool)                 { m.Data.Need_contacts_exception = v }
func (m *TLpeerSettings) Getneed_contacts_exception() bool                  { return m.Data.Need_contacts_exception }
func (m *TLpeerSettings) Setreport_geo(v bool)                              { m.Data.Report_geo = v }
func (m *TLpeerSettings) Getreport_geo() bool                               { return m.Data.Report_geo }
func (m *TLpeerSettings) Setautoarchived(v bool)                            { m.Data.Autoarchived = v }
func (m *TLpeerSettings) Getautoarchived() bool                             { return m.Data.Autoarchived }
func (m *TLpeerSettings) Setgeo_distance(v int32)                           { m.Data.Geo_distance = v }
func (m *TLpeerSettings) Getgeo_distance() int32                            { return m.Data.Geo_distance }
func (m *TLinputMessageID) Setid(v int32)                                   { m.Data.Id = v }
func (m *TLinputMessageID) Getid() int32                                    { return m.Data.Id }
func (m *TLinputMessageReplyTo) Setid(v int32)                              { m.Data.Id = v }
func (m *TLinputMessageReplyTo) Getid() int32                               { return m.Data.Id }
func (m *TLinputMessageCallbackQuery) Setid(v int32)                        { m.Data.Id = v }
func (m *TLinputMessageCallbackQuery) Getid() int32                         { return m.Data.Id }
func (m *TLinputMessageCallbackQuery) Setquery_id(v int64)                  { m.Data.Query_id = v }
func (m *TLinputMessageCallbackQuery) Getquery_id() int64                   { return m.Data.Query_id }
func (m *TLmessageUserVote) Setuser_id(v int32)                             { m.Data.User_id = v }
func (m *TLmessageUserVote) Getuser_id() int32                              { return m.Data.User_id }
func (m *TLmessageUserVote) Setoption(v []uint8)                            { m.Data.Option = v }
func (m *TLmessageUserVote) Getoption() []uint8                             { return m.Data.Option }
func (m *TLmessageUserVote) Setdate(v int32)                                { m.Data.Date = v }
func (m *TLmessageUserVote) Getdate() int32                                 { return m.Data.Date }
func (m *TLmessageUserVoteInputOption) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLmessageUserVoteInputOption) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLmessageUserVoteInputOption) Setdate(v int32)                     { m.Data.Date = v }
func (m *TLmessageUserVoteInputOption) Getdate() int32                      { return m.Data.Date }
func (m *TLmessageUserVoteMultiple) Setuser_id(v int32)                     { m.Data.User_id = v }
func (m *TLmessageUserVoteMultiple) Getuser_id() int32                      { return m.Data.User_id }
func (m *TLmessageUserVoteMultiple) Setoptions(v [][]uint8)                 { m.Data.Options = v }
func (m *TLmessageUserVoteMultiple) Getoptions() [][]uint8                  { return m.Data.Options }
func (m *TLmessageUserVoteMultiple) Setdate(v int32)                        { m.Data.Date = v }
func (m *TLmessageUserVoteMultiple) Getdate() int32                         { return m.Data.Date }
func (m *TLpaymentCharge) Setid(v string)                                   { m.Data.Id = v }
func (m *TLpaymentCharge) Getid() string                                    { return m.Data.Id }
func (m *TLpaymentCharge) Setprovider_charge_id(v string)                   { m.Data.Provider_charge_id = v }
func (m *TLpaymentCharge) Getprovider_charge_id() string                    { return m.Data.Provider_charge_id }
func (m *TLemojiURL) Seturl(v string)                                       { m.Data.Url = v }
func (m *TLemojiURL) Geturl() string                                        { return m.Data.Url }
func (m *TLinputMediaUploadedPhoto) Setfile(v InputFile)                    { m.Data.File = v }
func (m *TLinputMediaUploadedPhoto) Getfile() InputFile                     { return m.Data.File }
func (m *TLinputMediaUploadedPhoto) Setstickers(v []InputDocument)          { m.Data.Stickers = v }
func (m *TLinputMediaUploadedPhoto) Getstickers() []InputDocument           { return m.Data.Stickers }
func (m *TLinputMediaUploadedPhoto) Setttl_seconds(v int32)                 { m.Data.Ttl_seconds = v }
func (m *TLinputMediaUploadedPhoto) Getttl_seconds() int32                  { return m.Data.Ttl_seconds }
func (m *TLinputMediaPhoto) Setid(v InputPhoto)                             { m.Data.Id = v }
func (m *TLinputMediaPhoto) Getid() InputPhoto                              { return m.Data.Id }
func (m *TLinputMediaPhoto) Setttl_seconds(v int32)                         { m.Data.Ttl_seconds = v }
func (m *TLinputMediaPhoto) Getttl_seconds() int32                          { return m.Data.Ttl_seconds }
func (m *TLinputMediaGeoPoint) Setgeo_point(v InputGeoPoint)                { m.Data.Geo_point = v }
func (m *TLinputMediaGeoPoint) Getgeo_point() InputGeoPoint                 { return m.Data.Geo_point }
func (m *TLinputMediaContact) Setphone_number(v string)                     { m.Data.Phone_number = v }
func (m *TLinputMediaContact) Getphone_number() string                      { return m.Data.Phone_number }
func (m *TLinputMediaContact) Setfirst_name(v string)                       { m.Data.First_name = v }
func (m *TLinputMediaContact) Getfirst_name() string                        { return m.Data.First_name }
func (m *TLinputMediaContact) Setlast_name(v string)                        { m.Data.Last_name = v }
func (m *TLinputMediaContact) Getlast_name() string                         { return m.Data.Last_name }
func (m *TLinputMediaContact) Setvcard(v string)                            { m.Data.Vcard = v }
func (m *TLinputMediaContact) Getvcard() string                             { return m.Data.Vcard }
func (m *TLinputMediaUploadedDocument) Setnosound_video(v bool)             { m.Data.Nosound_video = v }
func (m *TLinputMediaUploadedDocument) Getnosound_video() bool              { return m.Data.Nosound_video }
func (m *TLinputMediaUploadedDocument) Setforce_file(v bool)                { m.Data.Force_file = v }
func (m *TLinputMediaUploadedDocument) Getforce_file() bool                 { return m.Data.Force_file }
func (m *TLinputMediaUploadedDocument) Setfile(v InputFile)                 { m.Data.File = v }
func (m *TLinputMediaUploadedDocument) Getfile() InputFile                  { return m.Data.File }
func (m *TLinputMediaUploadedDocument) Setthumb(v InputFile)                { m.Data.Thumb = v }
func (m *TLinputMediaUploadedDocument) Getthumb() InputFile                 { return m.Data.Thumb }
func (m *TLinputMediaUploadedDocument) Setmime_type(v string)               { m.Data.Mime_type = v }
func (m *TLinputMediaUploadedDocument) Getmime_type() string                { return m.Data.Mime_type }
func (m *TLinputMediaUploadedDocument) Setattributes(v []DocumentAttribute) { m.Data.Attributes = v }
func (m *TLinputMediaUploadedDocument) Getattributes() []DocumentAttribute  { return m.Data.Attributes }
func (m *TLinputMediaUploadedDocument) Setstickers(v []InputDocument)       { m.Data.Stickers = v }
func (m *TLinputMediaUploadedDocument) Getstickers() []InputDocument        { return m.Data.Stickers }
func (m *TLinputMediaUploadedDocument) Setttl_seconds(v int32)              { m.Data.Ttl_seconds = v }
func (m *TLinputMediaUploadedDocument) Getttl_seconds() int32               { return m.Data.Ttl_seconds }
func (m *TLinputMediaDocument) Setid_15(v InputDocument)                    { m.Data.Id_15 = v }
func (m *TLinputMediaDocument) Getid_15() InputDocument                     { return m.Data.Id_15 }
func (m *TLinputMediaDocument) Setttl_seconds(v int32)                      { m.Data.Ttl_seconds = v }
func (m *TLinputMediaDocument) Getttl_seconds() int32                       { return m.Data.Ttl_seconds }
func (m *TLinputMediaVenue) Setgeo_point(v InputGeoPoint)                   { m.Data.Geo_point = v }
func (m *TLinputMediaVenue) Getgeo_point() InputGeoPoint                    { return m.Data.Geo_point }
func (m *TLinputMediaVenue) Settitle(v string)                              { m.Data.Title = v }
func (m *TLinputMediaVenue) Gettitle() string                               { return m.Data.Title }
func (m *TLinputMediaVenue) Setaddress(v string)                            { m.Data.Address = v }
func (m *TLinputMediaVenue) Getaddress() string                             { return m.Data.Address }
func (m *TLinputMediaVenue) Setprovider(v string)                           { m.Data.Provider = v }
func (m *TLinputMediaVenue) Getprovider() string                            { return m.Data.Provider }
func (m *TLinputMediaVenue) Setvenue_id(v string)                           { m.Data.Venue_id = v }
func (m *TLinputMediaVenue) Getvenue_id() string                            { return m.Data.Venue_id }
func (m *TLinputMediaVenue) Setvenue_type(v string)                         { m.Data.Venue_type = v }
func (m *TLinputMediaVenue) Getvenue_type() string                          { return m.Data.Venue_type }
func (m *TLinputMediaPhotoExternal) Seturl(v string)                        { m.Data.Url = v }
func (m *TLinputMediaPhotoExternal) Geturl() string                         { return m.Data.Url }
func (m *TLinputMediaPhotoExternal) Setttl_seconds(v int32)                 { m.Data.Ttl_seconds = v }
func (m *TLinputMediaPhotoExternal) Getttl_seconds() int32                  { return m.Data.Ttl_seconds }
func (m *TLinputMediaDocumentExternal) Seturl(v string)                     { m.Data.Url = v }
func (m *TLinputMediaDocumentExternal) Geturl() string                      { return m.Data.Url }
func (m *TLinputMediaDocumentExternal) Setttl_seconds(v int32)              { m.Data.Ttl_seconds = v }
func (m *TLinputMediaDocumentExternal) Getttl_seconds() int32               { return m.Data.Ttl_seconds }
func (m *TLinputMediaGame) Setid_22(v InputGame)                            { m.Data.Id_22 = v }
func (m *TLinputMediaGame) Getid_22() InputGame                             { return m.Data.Id_22 }
func (m *TLinputMediaInvoice) Settitle(v string)                            { m.Data.Title = v }
func (m *TLinputMediaInvoice) Gettitle() string                             { return m.Data.Title }
func (m *TLinputMediaInvoice) Setdescription(v string)                      { m.Data.Description = v }
func (m *TLinputMediaInvoice) Getdescription() string                       { return m.Data.Description }
func (m *TLinputMediaInvoice) Setphoto(v InputWebDocument)                  { m.Data.Photo = v }
func (m *TLinputMediaInvoice) Getphoto() InputWebDocument                   { return m.Data.Photo }
func (m *TLinputMediaInvoice) Setinvoice(v Invoice)                         { m.Data.Invoice = v }
func (m *TLinputMediaInvoice) Getinvoice() Invoice                          { return m.Data.Invoice }
func (m *TLinputMediaInvoice) Setpayload(v []uint8)                         { m.Data.Payload = v }
func (m *TLinputMediaInvoice) Getpayload() []uint8                          { return m.Data.Payload }
func (m *TLinputMediaInvoice) Setprovider(v string)                         { m.Data.Provider = v }
func (m *TLinputMediaInvoice) Getprovider() string                          { return m.Data.Provider }
func (m *TLinputMediaInvoice) Setprovider_data(v DataJSON)                  { m.Data.Provider_data = v }
func (m *TLinputMediaInvoice) Getprovider_data() DataJSON                   { return m.Data.Provider_data }
func (m *TLinputMediaInvoice) Setstart_param(v string)                      { m.Data.Start_param = v }
func (m *TLinputMediaInvoice) Getstart_param() string                       { return m.Data.Start_param }
func (m *TLinputMediaGeoLive) Setstopped(v bool)                            { m.Data.Stopped = v }
func (m *TLinputMediaGeoLive) Getstopped() bool                             { return m.Data.Stopped }
func (m *TLinputMediaGeoLive) Setgeo_point(v InputGeoPoint)                 { m.Data.Geo_point = v }
func (m *TLinputMediaGeoLive) Getgeo_point() InputGeoPoint                  { return m.Data.Geo_point }
func (m *TLinputMediaGeoLive) Setheading(v int32)                           { m.Data.Heading = v }
func (m *TLinputMediaGeoLive) Getheading() int32                            { return m.Data.Heading }
func (m *TLinputMediaGeoLive) Setperiod(v int32)                            { m.Data.Period = v }
func (m *TLinputMediaGeoLive) Getperiod() int32                             { return m.Data.Period }
func (m *TLinputMediaGeoLive) Setproximity_notification_radius(v int32) {
	m.Data.Proximity_notification_radius = v
}
func (m *TLinputMediaGeoLive) Getproximity_notification_radius() int32 {
	return m.Data.Proximity_notification_radius
}
func (m *TLinputMediaPoll) Setpoll(v Poll)                               { m.Data.Poll = v }
func (m *TLinputMediaPoll) Getpoll() Poll                                { return m.Data.Poll }
func (m *TLinputMediaPoll) Setcorrect_answers(v [][]uint8)               { m.Data.Correct_answers = v }
func (m *TLinputMediaPoll) Getcorrect_answers() [][]uint8                { return m.Data.Correct_answers }
func (m *TLinputMediaPoll) Setsolution(v string)                         { m.Data.Solution = v }
func (m *TLinputMediaPoll) Getsolution() string                          { return m.Data.Solution }
func (m *TLinputMediaPoll) Setsolution_entities(v []MessageEntity)       { m.Data.Solution_entities = v }
func (m *TLinputMediaPoll) Getsolution_entities() []MessageEntity        { return m.Data.Solution_entities }
func (m *TLinputMediaDice) Setemoticon(v string)                         { m.Data.Emoticon = v }
func (m *TLinputMediaDice) Getemoticon() string                          { return m.Data.Emoticon }
func (m *TLpageCaption) Settext(v RichText)                              { m.Data.Text = v }
func (m *TLpageCaption) Gettext() RichText                               { return m.Data.Text }
func (m *TLpageCaption) Setcredit(v RichText)                            { m.Data.Credit = v }
func (m *TLpageCaption) Getcredit() RichText                             { return m.Data.Credit }
func (m *TLchatEmpty) Setid(v int32)                                     { m.Data.Id = v }
func (m *TLchatEmpty) Getid() int32                                      { return m.Data.Id }
func (m *TLchat) Setcreator(v bool)                                      { m.Data.Creator = v }
func (m *TLchat) Getcreator() bool                                       { return m.Data.Creator }
func (m *TLchat) Setkicked(v bool)                                       { m.Data.Kicked = v }
func (m *TLchat) Getkicked() bool                                        { return m.Data.Kicked }
func (m *TLchat) Setleft(v bool)                                         { m.Data.Left = v }
func (m *TLchat) Getleft() bool                                          { return m.Data.Left }
func (m *TLchat) Setdeactivated(v bool)                                  { m.Data.Deactivated = v }
func (m *TLchat) Getdeactivated() bool                                   { return m.Data.Deactivated }
func (m *TLchat) Setcall_active(v bool)                                  { m.Data.Call_active = v }
func (m *TLchat) Getcall_active() bool                                   { return m.Data.Call_active }
func (m *TLchat) Setcall_not_empty(v bool)                               { m.Data.Call_not_empty = v }
func (m *TLchat) Getcall_not_empty() bool                                { return m.Data.Call_not_empty }
func (m *TLchat) Setid(v int32)                                          { m.Data.Id = v }
func (m *TLchat) Getid() int32                                           { return m.Data.Id }
func (m *TLchat) Settitle(v string)                                      { m.Data.Title = v }
func (m *TLchat) Gettitle() string                                       { return m.Data.Title }
func (m *TLchat) Setphoto(v ChatPhoto)                                   { m.Data.Photo = v }
func (m *TLchat) Getphoto() ChatPhoto                                    { return m.Data.Photo }
func (m *TLchat) Setparticipants_count(v int32)                          { m.Data.Participants_count = v }
func (m *TLchat) Getparticipants_count() int32                           { return m.Data.Participants_count }
func (m *TLchat) Setdate(v int32)                                        { m.Data.Date = v }
func (m *TLchat) Getdate() int32                                         { return m.Data.Date }
func (m *TLchat) Setversion(v int32)                                     { m.Data.Version = v }
func (m *TLchat) Getversion() int32                                      { return m.Data.Version }
func (m *TLchat) Setmigrated_to(v InputChannel)                          { m.Data.Migrated_to = v }
func (m *TLchat) Getmigrated_to() InputChannel                           { return m.Data.Migrated_to }
func (m *TLchat) Setadmin_rights(v ChatAdminRights)                      { m.Data.Admin_rights = v }
func (m *TLchat) Getadmin_rights() ChatAdminRights                       { return m.Data.Admin_rights }
func (m *TLchat) Setdefault_banned_rights(v ChatBannedRights)            { m.Data.Default_banned_rights = v }
func (m *TLchat) Getdefault_banned_rights() ChatBannedRights             { return m.Data.Default_banned_rights }
func (m *TLchatForbidden) Setid(v int32)                                 { m.Data.Id = v }
func (m *TLchatForbidden) Getid() int32                                  { return m.Data.Id }
func (m *TLchatForbidden) Settitle(v string)                             { m.Data.Title = v }
func (m *TLchatForbidden) Gettitle() string                              { return m.Data.Title }
func (m *TLchannel) Setcreator(v bool)                                   { m.Data.Creator = v }
func (m *TLchannel) Getcreator() bool                                    { return m.Data.Creator }
func (m *TLchannel) Setleft(v bool)                                      { m.Data.Left = v }
func (m *TLchannel) Getleft() bool                                       { return m.Data.Left }
func (m *TLchannel) Setbroadcast(v bool)                                 { m.Data.Broadcast = v }
func (m *TLchannel) Getbroadcast() bool                                  { return m.Data.Broadcast }
func (m *TLchannel) Setverified(v bool)                                  { m.Data.Verified = v }
func (m *TLchannel) Getverified() bool                                   { return m.Data.Verified }
func (m *TLchannel) Setmegagroup(v bool)                                 { m.Data.Megagroup = v }
func (m *TLchannel) Getmegagroup() bool                                  { return m.Data.Megagroup }
func (m *TLchannel) Setrestricted(v bool)                                { m.Data.Restricted = v }
func (m *TLchannel) Getrestricted() bool                                 { return m.Data.Restricted }
func (m *TLchannel) Setsignatures(v bool)                                { m.Data.Signatures = v }
func (m *TLchannel) Getsignatures() bool                                 { return m.Data.Signatures }
func (m *TLchannel) Setmin(v bool)                                       { m.Data.Min = v }
func (m *TLchannel) Getmin() bool                                        { return m.Data.Min }
func (m *TLchannel) Setscam(v bool)                                      { m.Data.Scam = v }
func (m *TLchannel) Getscam() bool                                       { return m.Data.Scam }
func (m *TLchannel) Sethas_link(v bool)                                  { m.Data.Has_link = v }
func (m *TLchannel) Gethas_link() bool                                   { return m.Data.Has_link }
func (m *TLchannel) Sethas_geo(v bool)                                   { m.Data.Has_geo = v }
func (m *TLchannel) Gethas_geo() bool                                    { return m.Data.Has_geo }
func (m *TLchannel) Setslowmode_enabled(v bool)                          { m.Data.Slowmode_enabled = v }
func (m *TLchannel) Getslowmode_enabled() bool                           { return m.Data.Slowmode_enabled }
func (m *TLchannel) Setcall_active(v bool)                               { m.Data.Call_active = v }
func (m *TLchannel) Getcall_active() bool                                { return m.Data.Call_active }
func (m *TLchannel) Setcall_not_empty(v bool)                            { m.Data.Call_not_empty = v }
func (m *TLchannel) Getcall_not_empty() bool                             { return m.Data.Call_not_empty }
func (m *TLchannel) Setid(v int32)                                       { m.Data.Id = v }
func (m *TLchannel) Getid() int32                                        { return m.Data.Id }
func (m *TLchannel) Setaccess_hash(v int64)                              { m.Data.Access_hash = v }
func (m *TLchannel) Getaccess_hash() int64                               { return m.Data.Access_hash }
func (m *TLchannel) Settitle(v string)                                   { m.Data.Title = v }
func (m *TLchannel) Gettitle() string                                    { return m.Data.Title }
func (m *TLchannel) Setusername(v string)                                { m.Data.Username = v }
func (m *TLchannel) Getusername() string                                 { return m.Data.Username }
func (m *TLchannel) Setphoto(v ChatPhoto)                                { m.Data.Photo = v }
func (m *TLchannel) Getphoto() ChatPhoto                                 { return m.Data.Photo }
func (m *TLchannel) Setdate(v int32)                                     { m.Data.Date = v }
func (m *TLchannel) Getdate() int32                                      { return m.Data.Date }
func (m *TLchannel) Setversion(v int32)                                  { m.Data.Version = v }
func (m *TLchannel) Getversion() int32                                   { return m.Data.Version }
func (m *TLchannel) Setrestriction_reason(v []RestrictionReason)         { m.Data.Restriction_reason = v }
func (m *TLchannel) Getrestriction_reason() []RestrictionReason          { return m.Data.Restriction_reason }
func (m *TLchannel) Setadmin_rights(v ChatAdminRights)                   { m.Data.Admin_rights = v }
func (m *TLchannel) Getadmin_rights() ChatAdminRights                    { return m.Data.Admin_rights }
func (m *TLchannel) Setbanned_rights(v ChatBannedRights)                 { m.Data.Banned_rights = v }
func (m *TLchannel) Getbanned_rights() ChatBannedRights                  { return m.Data.Banned_rights }
func (m *TLchannel) Setdefault_banned_rights(v ChatBannedRights)         { m.Data.Default_banned_rights = v }
func (m *TLchannel) Getdefault_banned_rights() ChatBannedRights          { return m.Data.Default_banned_rights }
func (m *TLchannel) Setparticipants_count(v int32)                       { m.Data.Participants_count = v }
func (m *TLchannel) Getparticipants_count() int32                        { return m.Data.Participants_count }
func (m *TLchannelForbidden) Setbroadcast(v bool)                        { m.Data.Broadcast = v }
func (m *TLchannelForbidden) Getbroadcast() bool                         { return m.Data.Broadcast }
func (m *TLchannelForbidden) Setmegagroup(v bool)                        { m.Data.Megagroup = v }
func (m *TLchannelForbidden) Getmegagroup() bool                         { return m.Data.Megagroup }
func (m *TLchannelForbidden) Setid(v int32)                              { m.Data.Id = v }
func (m *TLchannelForbidden) Getid() int32                               { return m.Data.Id }
func (m *TLchannelForbidden) Setaccess_hash(v int64)                     { m.Data.Access_hash = v }
func (m *TLchannelForbidden) Getaccess_hash() int64                      { return m.Data.Access_hash }
func (m *TLchannelForbidden) Settitle(v string)                          { m.Data.Title = v }
func (m *TLchannelForbidden) Gettitle() string                           { return m.Data.Title }
func (m *TLchannelForbidden) Setuntil_date(v int32)                      { m.Data.Until_date = v }
func (m *TLchannelForbidden) Getuntil_date() int32                       { return m.Data.Until_date }
func (m *TLpage) Setpart(v bool)                                         { m.Data.Part = v }
func (m *TLpage) Getpart() bool                                          { return m.Data.Part }
func (m *TLpage) Setrtl(v bool)                                          { m.Data.Rtl = v }
func (m *TLpage) Getrtl() bool                                           { return m.Data.Rtl }
func (m *TLpage) Setv2(v bool)                                           { m.Data.V2 = v }
func (m *TLpage) Getv2() bool                                            { return m.Data.V2 }
func (m *TLpage) Seturl(v string)                                        { m.Data.Url = v }
func (m *TLpage) Geturl() string                                         { return m.Data.Url }
func (m *TLpage) Setblocks(v []PageBlock)                                { m.Data.Blocks = v }
func (m *TLpage) Getblocks() []PageBlock                                 { return m.Data.Blocks }
func (m *TLpage) Setphotos(v []Photo)                                    { m.Data.Photos = v }
func (m *TLpage) Getphotos() []Photo                                     { return m.Data.Photos }
func (m *TLpage) Setdocuments(v []Document)                              { m.Data.Documents = v }
func (m *TLpage) Getdocuments() []Document                               { return m.Data.Documents }
func (m *TLpage) Setviews(v int32)                                       { m.Data.Views = v }
func (m *TLpage) Getviews() int32                                        { return m.Data.Views }
func (m *TLsecureValue) Settype(v SecureValueType)                       { m.Data.Type = v }
func (m *TLsecureValue) Gettype() SecureValueType                        { return m.Data.Type }
func (m *TLsecureValue) Setdata(v SecureData)                            { m.Data.Data = v }
func (m *TLsecureValue) Getdata() SecureData                             { return m.Data.Data }
func (m *TLsecureValue) Setfront_side(v SecureFile)                      { m.Data.Front_side = v }
func (m *TLsecureValue) Getfront_side() SecureFile                       { return m.Data.Front_side }
func (m *TLsecureValue) Setreverse_side(v SecureFile)                    { m.Data.Reverse_side = v }
func (m *TLsecureValue) Getreverse_side() SecureFile                     { return m.Data.Reverse_side }
func (m *TLsecureValue) Setselfie(v SecureFile)                          { m.Data.Selfie = v }
func (m *TLsecureValue) Getselfie() SecureFile                           { return m.Data.Selfie }
func (m *TLsecureValue) Settranslation(v []SecureFile)                   { m.Data.Translation = v }
func (m *TLsecureValue) Gettranslation() []SecureFile                    { return m.Data.Translation }
func (m *TLsecureValue) Setfiles(v []SecureFile)                         { m.Data.Files = v }
func (m *TLsecureValue) Getfiles() []SecureFile                          { return m.Data.Files }
func (m *TLsecureValue) Setplain_data(v SecurePlainData)                 { m.Data.Plain_data = v }
func (m *TLsecureValue) Getplain_data() SecurePlainData                  { return m.Data.Plain_data }
func (m *TLsecureValue) Sethash(v []uint8)                               { m.Data.Hash = v }
func (m *TLsecureValue) Gethash() []uint8                                { return m.Data.Hash }
func (m *TLaccount_passwordInputSettings) Setnew_algo(v PasswordKdfAlgo) { m.Data.New_algo = v }
func (m *TLaccount_passwordInputSettings) Getnew_algo() PasswordKdfAlgo  { return m.Data.New_algo }
func (m *TLaccount_passwordInputSettings) Setnew_password_hash(v []uint8) {
	m.Data.New_password_hash = v
}
func (m *TLaccount_passwordInputSettings) Getnew_password_hash() []uint8 {
	return m.Data.New_password_hash
}
func (m *TLaccount_passwordInputSettings) Sethint(v string)  { m.Data.Hint = v }
func (m *TLaccount_passwordInputSettings) Gethint() string   { return m.Data.Hint }
func (m *TLaccount_passwordInputSettings) Setemail(v string) { m.Data.Email = v }
func (m *TLaccount_passwordInputSettings) Getemail() string  { return m.Data.Email }
func (m *TLaccount_passwordInputSettings) Setnew_secure_settings(v SecureSecretSettings) {
	m.Data.New_secure_settings = v
}
func (m *TLaccount_passwordInputSettings) Getnew_secure_settings() SecureSecretSettings {
	return m.Data.New_secure_settings
}
func (m *TLmessages_chats) Setchats(v []Chat)                                { m.Data.Chats = v }
func (m *TLmessages_chats) Getchats() []Chat                                 { return m.Data.Chats }
func (m *TLmessages_chatsSlice) Setcount(v int32)                            { m.Data.Count = v }
func (m *TLmessages_chatsSlice) Getcount() int32                             { return m.Data.Count }
func (m *TLmessages_chatsSlice) Setchats(v []Chat)                           { m.Data.Chats = v }
func (m *TLmessages_chatsSlice) Getchats() []Chat                            { return m.Data.Chats }
func (m *TLsavedPhoneContact) Setphone(v string)                             { m.Data.Phone = v }
func (m *TLsavedPhoneContact) Getphone() string                              { return m.Data.Phone }
func (m *TLsavedPhoneContact) Setfirst_name(v string)                        { m.Data.First_name = v }
func (m *TLsavedPhoneContact) Getfirst_name() string                         { return m.Data.First_name }
func (m *TLsavedPhoneContact) Setlast_name(v string)                         { m.Data.Last_name = v }
func (m *TLsavedPhoneContact) Getlast_name() string                          { return m.Data.Last_name }
func (m *TLsavedPhoneContact) Setdate(v int32)                               { m.Data.Date = v }
func (m *TLsavedPhoneContact) Getdate() int32                                { return m.Data.Date }
func (m *TLtextPlain) Settext(v string)                                      { m.Data.Text = v }
func (m *TLtextPlain) Gettext() string                                       { return m.Data.Text }
func (m *TLtextBold) Settext_2(v RichText)                                   { m.Data.Text_2 = v }
func (m *TLtextBold) Gettext_2() RichText                                    { return m.Data.Text_2 }
func (m *TLtextItalic) Settext_2(v RichText)                                 { m.Data.Text_2 = v }
func (m *TLtextItalic) Gettext_2() RichText                                  { return m.Data.Text_2 }
func (m *TLtextUnderline) Settext_2(v RichText)                              { m.Data.Text_2 = v }
func (m *TLtextUnderline) Gettext_2() RichText                               { return m.Data.Text_2 }
func (m *TLtextStrike) Settext_2(v RichText)                                 { m.Data.Text_2 = v }
func (m *TLtextStrike) Gettext_2() RichText                                  { return m.Data.Text_2 }
func (m *TLtextFixed) Settext_2(v RichText)                                  { m.Data.Text_2 = v }
func (m *TLtextFixed) Gettext_2() RichText                                   { return m.Data.Text_2 }
func (m *TLtextUrl) Settext_2(v RichText)                                    { m.Data.Text_2 = v }
func (m *TLtextUrl) Gettext_2() RichText                                     { return m.Data.Text_2 }
func (m *TLtextUrl) Seturl(v string)                                         { m.Data.Url = v }
func (m *TLtextUrl) Geturl() string                                          { return m.Data.Url }
func (m *TLtextUrl) Setwebpage_id(v int64)                                   { m.Data.Webpage_id = v }
func (m *TLtextUrl) Getwebpage_id() int64                                    { return m.Data.Webpage_id }
func (m *TLtextEmail) Settext_2(v RichText)                                  { m.Data.Text_2 = v }
func (m *TLtextEmail) Gettext_2() RichText                                   { return m.Data.Text_2 }
func (m *TLtextEmail) Setemail(v string)                                     { m.Data.Email = v }
func (m *TLtextEmail) Getemail() string                                      { return m.Data.Email }
func (m *TLtextConcat) Settexts(v []RichText)                                { m.Data.Texts = v }
func (m *TLtextConcat) Gettexts() []RichText                                 { return m.Data.Texts }
func (m *TLtextSubscript) Settext_2(v RichText)                              { m.Data.Text_2 = v }
func (m *TLtextSubscript) Gettext_2() RichText                               { return m.Data.Text_2 }
func (m *TLtextSuperscript) Settext_2(v RichText)                            { m.Data.Text_2 = v }
func (m *TLtextSuperscript) Gettext_2() RichText                             { return m.Data.Text_2 }
func (m *TLtextMarked) Settext_2(v RichText)                                 { m.Data.Text_2 = v }
func (m *TLtextMarked) Gettext_2() RichText                                  { return m.Data.Text_2 }
func (m *TLtextPhone) Settext_2(v RichText)                                  { m.Data.Text_2 = v }
func (m *TLtextPhone) Gettext_2() RichText                                   { return m.Data.Text_2 }
func (m *TLtextPhone) Setphone(v string)                                     { m.Data.Phone = v }
func (m *TLtextPhone) Getphone() string                                      { return m.Data.Phone }
func (m *TLtextImage) Setdocument_id(v int64)                                { m.Data.Document_id = v }
func (m *TLtextImage) Getdocument_id() int64                                 { return m.Data.Document_id }
func (m *TLtextImage) Setw(v int32)                                          { m.Data.W = v }
func (m *TLtextImage) Getw() int32                                           { return m.Data.W }
func (m *TLtextImage) Seth(v int32)                                          { m.Data.H = v }
func (m *TLtextImage) Geth() int32                                           { return m.Data.H }
func (m *TLtextAnchor) Settext_2(v RichText)                                 { m.Data.Text_2 = v }
func (m *TLtextAnchor) Gettext_2() RichText                                  { return m.Data.Text_2 }
func (m *TLtextAnchor) Setname(v string)                                     { m.Data.Name = v }
func (m *TLtextAnchor) Getname() string                                      { return m.Data.Name }
func (m *TLchannels_channelParticipant) Setparticipant(v ChannelParticipant) { m.Data.Participant = v }
func (m *TLchannels_channelParticipant) Getparticipant() ChannelParticipant {
	return m.Data.Participant
}
func (m *TLchannels_channelParticipant) Setusers(v []User)                { m.Data.Users = v }
func (m *TLchannels_channelParticipant) Getusers() []User                 { return m.Data.Users }
func (m *TLstatsGroupTopAdmin) Setuser_id(v int32)                        { m.Data.User_id = v }
func (m *TLstatsGroupTopAdmin) Getuser_id() int32                         { return m.Data.User_id }
func (m *TLstatsGroupTopAdmin) Setdeleted(v int32)                        { m.Data.Deleted = v }
func (m *TLstatsGroupTopAdmin) Getdeleted() int32                         { return m.Data.Deleted }
func (m *TLstatsGroupTopAdmin) Setkicked(v int32)                         { m.Data.Kicked = v }
func (m *TLstatsGroupTopAdmin) Getkicked() int32                          { return m.Data.Kicked }
func (m *TLstatsGroupTopAdmin) Setbanned(v int32)                         { m.Data.Banned = v }
func (m *TLstatsGroupTopAdmin) Getbanned() int32                          { return m.Data.Banned }
func (m *TLpeerUser) Setuser_id(v int32)                                  { m.Data.User_id = v }
func (m *TLpeerUser) Getuser_id() int32                                   { return m.Data.User_id }
func (m *TLpeerChat) Setchat_id(v int32)                                  { m.Data.Chat_id = v }
func (m *TLpeerChat) Getchat_id() int32                                   { return m.Data.Chat_id }
func (m *TLpeerChannel) Setchannel_id(v int32)                            { m.Data.Channel_id = v }
func (m *TLpeerChannel) Getchannel_id() int32                             { return m.Data.Channel_id }
func (m *TLencryptedFile) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLencryptedFile) Getid() int64                                   { return m.Data.Id }
func (m *TLencryptedFile) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLencryptedFile) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLencryptedFile) Setsize(v int32)                                { m.Data.Size = v }
func (m *TLencryptedFile) Getsize() int32                                 { return m.Data.Size }
func (m *TLencryptedFile) Setdc_id(v int32)                               { m.Data.Dc_id = v }
func (m *TLencryptedFile) Getdc_id() int32                                { return m.Data.Dc_id }
func (m *TLencryptedFile) Setkey_fingerprint(v int32)                     { m.Data.Key_fingerprint = v }
func (m *TLencryptedFile) Getkey_fingerprint() int32                      { return m.Data.Key_fingerprint }
func (m *TLinputChannel) Setchannel_id(v int32)                           { m.Data.Channel_id = v }
func (m *TLinputChannel) Getchannel_id() int32                            { return m.Data.Channel_id }
func (m *TLinputChannel) Setaccess_hash(v int64)                          { m.Data.Access_hash = v }
func (m *TLinputChannel) Getaccess_hash() int64                           { return m.Data.Access_hash }
func (m *TLinputChannelFromMessage) Setpeer(v InputPeer)                  { m.Data.Peer = v }
func (m *TLinputChannelFromMessage) Getpeer() InputPeer                   { return m.Data.Peer }
func (m *TLinputChannelFromMessage) Setmsg_id(v int32)                    { m.Data.Msg_id = v }
func (m *TLinputChannelFromMessage) Getmsg_id() int32                     { return m.Data.Msg_id }
func (m *TLinputChannelFromMessage) Setchannel_id(v int32)                { m.Data.Channel_id = v }
func (m *TLinputChannelFromMessage) Getchannel_id() int32                 { return m.Data.Channel_id }
func (m *TLuserFull) Setblocked(v bool)                                   { m.Data.Blocked = v }
func (m *TLuserFull) Getblocked() bool                                    { return m.Data.Blocked }
func (m *TLuserFull) Setphone_calls_available(v bool)                     { m.Data.Phone_calls_available = v }
func (m *TLuserFull) Getphone_calls_available() bool                      { return m.Data.Phone_calls_available }
func (m *TLuserFull) Setphone_calls_private(v bool)                       { m.Data.Phone_calls_private = v }
func (m *TLuserFull) Getphone_calls_private() bool                        { return m.Data.Phone_calls_private }
func (m *TLuserFull) Setcan_pin_message(v bool)                           { m.Data.Can_pin_message = v }
func (m *TLuserFull) Getcan_pin_message() bool                            { return m.Data.Can_pin_message }
func (m *TLuserFull) Sethas_scheduled(v bool)                             { m.Data.Has_scheduled = v }
func (m *TLuserFull) Gethas_scheduled() bool                              { return m.Data.Has_scheduled }
func (m *TLuserFull) Setvideo_calls_available(v bool)                     { m.Data.Video_calls_available = v }
func (m *TLuserFull) Getvideo_calls_available() bool                      { return m.Data.Video_calls_available }
func (m *TLuserFull) Setuser(v User)                                      { m.Data.User = v }
func (m *TLuserFull) Getuser() User                                       { return m.Data.User }
func (m *TLuserFull) Setabout(v string)                                   { m.Data.About = v }
func (m *TLuserFull) Getabout() string                                    { return m.Data.About }
func (m *TLuserFull) Setsettings(v PeerSettings)                          { m.Data.Settings = v }
func (m *TLuserFull) Getsettings() PeerSettings                           { return m.Data.Settings }
func (m *TLuserFull) Setprofile_photo(v Photo)                            { m.Data.Profile_photo = v }
func (m *TLuserFull) Getprofile_photo() Photo                             { return m.Data.Profile_photo }
func (m *TLuserFull) Setnotify_settings(v PeerNotifySettings)             { m.Data.Notify_settings = v }
func (m *TLuserFull) Getnotify_settings() PeerNotifySettings              { return m.Data.Notify_settings }
func (m *TLuserFull) Setbot_info(v BotInfo)                               { m.Data.Bot_info = v }
func (m *TLuserFull) Getbot_info() BotInfo                                { return m.Data.Bot_info }
func (m *TLuserFull) Setpinned_msg_id(v int32)                            { m.Data.Pinned_msg_id = v }
func (m *TLuserFull) Getpinned_msg_id() int32                             { return m.Data.Pinned_msg_id }
func (m *TLuserFull) Setcommon_chats_count(v int32)                       { m.Data.Common_chats_count = v }
func (m *TLuserFull) Getcommon_chats_count() int32                        { return m.Data.Common_chats_count }
func (m *TLuserFull) Setfolder_id(v int32)                                { m.Data.Folder_id = v }
func (m *TLuserFull) Getfolder_id() int32                                 { return m.Data.Folder_id }
func (m *TLtopPeer) Setpeer(v Peer)                                       { m.Data.Peer = v }
func (m *TLtopPeer) Getpeer() Peer                                        { return m.Data.Peer }
func (m *TLtopPeer) Setrating(v float64)                                  { m.Data.Rating = v }
func (m *TLtopPeer) Getrating() float64                                   { return m.Data.Rating }
func (m *TLcontacts_resolvedPeer) Setpeer(v Peer)                         { m.Data.Peer = v }
func (m *TLcontacts_resolvedPeer) Getpeer() Peer                          { return m.Data.Peer }
func (m *TLcontacts_resolvedPeer) Setchats(v []Chat)                      { m.Data.Chats = v }
func (m *TLcontacts_resolvedPeer) Getchats() []Chat                       { return m.Data.Chats }
func (m *TLcontacts_resolvedPeer) Setusers(v []User)                      { m.Data.Users = v }
func (m *TLcontacts_resolvedPeer) Getusers() []User                       { return m.Data.Users }
func (m *TLpoll) Setid(v int64)                                           { m.Data.Id = v }
func (m *TLpoll) Getid() int64                                            { return m.Data.Id }
func (m *TLpoll) Setclosed(v bool)                                        { m.Data.Closed = v }
func (m *TLpoll) Getclosed() bool                                         { return m.Data.Closed }
func (m *TLpoll) Setpublic_voters(v bool)                                 { m.Data.Public_voters = v }
func (m *TLpoll) Getpublic_voters() bool                                  { return m.Data.Public_voters }
func (m *TLpoll) Setmultiple_choice(v bool)                               { m.Data.Multiple_choice = v }
func (m *TLpoll) Getmultiple_choice() bool                                { return m.Data.Multiple_choice }
func (m *TLpoll) Setquiz(v bool)                                          { m.Data.Quiz = v }
func (m *TLpoll) Getquiz() bool                                           { return m.Data.Quiz }
func (m *TLpoll) Setquestion(v string)                                    { m.Data.Question = v }
func (m *TLpoll) Getquestion() string                                     { return m.Data.Question }
func (m *TLpoll) Setanswers(v []PollAnswer)                               { m.Data.Answers = v }
func (m *TLpoll) Getanswers() []PollAnswer                                { return m.Data.Answers }
func (m *TLpoll) Setclose_period(v int32)                                 { m.Data.Close_period = v }
func (m *TLpoll) Getclose_period() int32                                  { return m.Data.Close_period }
func (m *TLpoll) Setclose_date(v int32)                                   { m.Data.Close_date = v }
func (m *TLpoll) Getclose_date() int32                                    { return m.Data.Close_date }
func (m *TLmessages_messageViews) Setviews(v []MessageViews)              { m.Data.Views = v }
func (m *TLmessages_messageViews) Getviews() []MessageViews               { return m.Data.Views }
func (m *TLmessages_messageViews) Setchats(v []Chat)                      { m.Data.Chats = v }
func (m *TLmessages_messageViews) Getchats() []Chat                       { return m.Data.Chats }
func (m *TLmessages_messageViews) Setusers(v []User)                      { m.Data.Users = v }
func (m *TLmessages_messageViews) Getusers() []User                       { return m.Data.Users }
func (m *TLuserStatusOnline) Setexpires(v int32)                          { m.Data.Expires = v }
func (m *TLuserStatusOnline) Getexpires() int32                           { return m.Data.Expires }
func (m *TLuserStatusOffline) Setwas_online(v int32)                      { m.Data.Was_online = v }
func (m *TLuserStatusOffline) Getwas_online() int32                       { return m.Data.Was_online }
func (m *TLjsonBool) Setvalue(v Bool)                                     { m.Data.Value = v }
func (m *TLjsonBool) Getvalue() Bool                                      { return m.Data.Value }
func (m *TLjsonNumber) Setvalue_2(v float64)                              { m.Data.Value_2 = v }
func (m *TLjsonNumber) Getvalue_2() float64                               { return m.Data.Value_2 }
func (m *TLjsonString) Setvalue_3(v string)                               { m.Data.Value_3 = v }
func (m *TLjsonString) Getvalue_3() string                                { return m.Data.Value_3 }
func (m *TLjsonArray) Setvalue_4(v []JSONValue)                           { m.Data.Value_4 = v }
func (m *TLjsonArray) Getvalue_4() []JSONValue                            { return m.Data.Value_4 }
func (m *TLjsonObject) Setvalue_5(v []JSONObjectValue)                    { m.Data.Value_5 = v }
func (m *TLjsonObject) Getvalue_5() []JSONObjectValue                     { return m.Data.Value_5 }
func (m *TLpageTableRow) Setcells(v []PageTableCell)                      { m.Data.Cells = v }
func (m *TLpageTableRow) Getcells() []PageTableCell                       { return m.Data.Cells }
func (m *TLaccount_themes) Sethash(v int32)                               { m.Data.Hash = v }
func (m *TLaccount_themes) Gethash() int32                                { return m.Data.Hash }
func (m *TLaccount_themes) Setthemes(v []Theme)                           { m.Data.Themes = v }
func (m *TLaccount_themes) Getthemes() []Theme                            { return m.Data.Themes }
func (m *TLupload_webFile) Setsize(v int32)                               { m.Data.Size = v }
func (m *TLupload_webFile) Getsize() int32                                { return m.Data.Size }
func (m *TLupload_webFile) Setmime_type(v string)                         { m.Data.Mime_type = v }
func (m *TLupload_webFile) Getmime_type() string                          { return m.Data.Mime_type }
func (m *TLupload_webFile) Setfile_type(v Storage_FileType)               { m.Data.File_type = v }
func (m *TLupload_webFile) Getfile_type() Storage_FileType                { return m.Data.File_type }
func (m *TLupload_webFile) Setmtime(v int32)                              { m.Data.Mtime = v }
func (m *TLupload_webFile) Getmtime() int32                               { return m.Data.Mtime }
func (m *TLupload_webFile) Setbytes(v []uint8)                            { m.Data.Bytes = v }
func (m *TLupload_webFile) Getbytes() []uint8                             { return m.Data.Bytes }
func (m *TLgame) Setid(v int64)                                           { m.Data.Id = v }
func (m *TLgame) Getid() int64                                            { return m.Data.Id }
func (m *TLgame) Setaccess_hash(v int64)                                  { m.Data.Access_hash = v }
func (m *TLgame) Getaccess_hash() int64                                   { return m.Data.Access_hash }
func (m *TLgame) Setshort_name(v string)                                  { m.Data.Short_name = v }
func (m *TLgame) Getshort_name() string                                   { return m.Data.Short_name }
func (m *TLgame) Settitle(v string)                                       { m.Data.Title = v }
func (m *TLgame) Gettitle() string                                        { return m.Data.Title }
func (m *TLgame) Setdescription(v string)                                 { m.Data.Description = v }
func (m *TLgame) Getdescription() string                                  { return m.Data.Description }
func (m *TLgame) Setphoto(v Photo)                                        { m.Data.Photo = v }
func (m *TLgame) Getphoto() Photo                                         { return m.Data.Photo }
func (m *TLgame) Setdocument(v Document)                                  { m.Data.Document = v }
func (m *TLgame) Getdocument() Document                                   { return m.Data.Document }
func (m *TLinputClientProxy) Setaddress(v string)                         { m.Data.Address = v }
func (m *TLinputClientProxy) Getaddress() string                          { return m.Data.Address }
func (m *TLinputClientProxy) Setport(v int32)                             { m.Data.Port = v }
func (m *TLinputClientProxy) Getport() int32                              { return m.Data.Port }
func (m *TLpageListItemText) Settext(v RichText)                          { m.Data.Text = v }
func (m *TLpageListItemText) Gettext() RichText                           { return m.Data.Text }
func (m *TLpageListItemBlocks) Setblocks(v []PageBlock)                   { m.Data.Blocks = v }
func (m *TLpageListItemBlocks) Getblocks() []PageBlock                    { return m.Data.Blocks }
func (m *TLupdates_state) Setpts(v int32)                                 { m.Data.Pts = v }
func (m *TLupdates_state) Getpts() int32                                  { return m.Data.Pts }
func (m *TLupdates_state) Setqts(v int32)                                 { m.Data.Qts = v }
func (m *TLupdates_state) Getqts() int32                                  { return m.Data.Qts }
func (m *TLupdates_state) Setdate(v int32)                                { m.Data.Date = v }
func (m *TLupdates_state) Getdate() int32                                 { return m.Data.Date }
func (m *TLupdates_state) Setseq(v int32)                                 { m.Data.Seq = v }
func (m *TLupdates_state) Getseq() int32                                  { return m.Data.Seq }
func (m *TLupdates_state) Setunread_count(v int32)                        { m.Data.Unread_count = v }
func (m *TLupdates_state) Getunread_count() int32                         { return m.Data.Unread_count }
func (m *TLchatOnlines) Setonlines(v int32)                               { m.Data.Onlines = v }
func (m *TLchatOnlines) Getonlines() int32                                { return m.Data.Onlines }
func (m *TLinputBotInlineResult) Setid(v string)                          { m.Data.Id = v }
func (m *TLinputBotInlineResult) Getid() string                           { return m.Data.Id }
func (m *TLinputBotInlineResult) Settype(v string)                        { m.Data.Type = v }
func (m *TLinputBotInlineResult) Gettype() string                         { return m.Data.Type }
func (m *TLinputBotInlineResult) Settitle(v string)                       { m.Data.Title = v }
func (m *TLinputBotInlineResult) Gettitle() string                        { return m.Data.Title }
func (m *TLinputBotInlineResult) Setdescription(v string)                 { m.Data.Description = v }
func (m *TLinputBotInlineResult) Getdescription() string                  { return m.Data.Description }
func (m *TLinputBotInlineResult) Seturl(v string)                         { m.Data.Url = v }
func (m *TLinputBotInlineResult) Geturl() string                          { return m.Data.Url }
func (m *TLinputBotInlineResult) Setthumb(v InputWebDocument)             { m.Data.Thumb = v }
func (m *TLinputBotInlineResult) Getthumb() InputWebDocument              { return m.Data.Thumb }
func (m *TLinputBotInlineResult) Setcontent(v InputWebDocument)           { m.Data.Content = v }
func (m *TLinputBotInlineResult) Getcontent() InputWebDocument            { return m.Data.Content }
func (m *TLinputBotInlineResult) Setsend_message(v InputBotInlineMessage) { m.Data.Send_message = v }
func (m *TLinputBotInlineResult) Getsend_message() InputBotInlineMessage  { return m.Data.Send_message }
func (m *TLinputBotInlineResultPhoto) Setid(v string)                     { m.Data.Id = v }
func (m *TLinputBotInlineResultPhoto) Getid() string                      { return m.Data.Id }
func (m *TLinputBotInlineResultPhoto) Settype(v string)                   { m.Data.Type = v }
func (m *TLinputBotInlineResultPhoto) Gettype() string                    { return m.Data.Type }
func (m *TLinputBotInlineResultPhoto) Setphoto(v InputPhoto)              { m.Data.Photo = v }
func (m *TLinputBotInlineResultPhoto) Getphoto() InputPhoto               { return m.Data.Photo }
func (m *TLinputBotInlineResultPhoto) Setsend_message(v InputBotInlineMessage) {
	m.Data.Send_message = v
}
func (m *TLinputBotInlineResultPhoto) Getsend_message() InputBotInlineMessage {
	return m.Data.Send_message
}
func (m *TLinputBotInlineResultDocument) Setid(v string)              { m.Data.Id = v }
func (m *TLinputBotInlineResultDocument) Getid() string               { return m.Data.Id }
func (m *TLinputBotInlineResultDocument) Settype(v string)            { m.Data.Type = v }
func (m *TLinputBotInlineResultDocument) Gettype() string             { return m.Data.Type }
func (m *TLinputBotInlineResultDocument) Settitle(v string)           { m.Data.Title = v }
func (m *TLinputBotInlineResultDocument) Gettitle() string            { return m.Data.Title }
func (m *TLinputBotInlineResultDocument) Setdescription(v string)     { m.Data.Description = v }
func (m *TLinputBotInlineResultDocument) Getdescription() string      { return m.Data.Description }
func (m *TLinputBotInlineResultDocument) Setdocument(v InputDocument) { m.Data.Document = v }
func (m *TLinputBotInlineResultDocument) Getdocument() InputDocument  { return m.Data.Document }
func (m *TLinputBotInlineResultDocument) Setsend_message(v InputBotInlineMessage) {
	m.Data.Send_message = v
}
func (m *TLinputBotInlineResultDocument) Getsend_message() InputBotInlineMessage {
	return m.Data.Send_message
}
func (m *TLinputBotInlineResultGame) Setid(v string)         { m.Data.Id = v }
func (m *TLinputBotInlineResultGame) Getid() string          { return m.Data.Id }
func (m *TLinputBotInlineResultGame) Setshort_name(v string) { m.Data.Short_name = v }
func (m *TLinputBotInlineResultGame) Getshort_name() string  { return m.Data.Short_name }
func (m *TLinputBotInlineResultGame) Setsend_message(v InputBotInlineMessage) {
	m.Data.Send_message = v
}
func (m *TLinputBotInlineResultGame) Getsend_message() InputBotInlineMessage {
	return m.Data.Send_message
}
func (m *TLpayments_validatedRequestedInfo) Setid(v string) { m.Data.Id = v }
func (m *TLpayments_validatedRequestedInfo) Getid() string  { return m.Data.Id }
func (m *TLpayments_validatedRequestedInfo) Setshipping_options(v []ShippingOption) {
	m.Data.Shipping_options = v
}
func (m *TLpayments_validatedRequestedInfo) Getshipping_options() []ShippingOption {
	return m.Data.Shipping_options
}
func (m *TLpollAnswer) Settext(v string)                                 { m.Data.Text = v }
func (m *TLpollAnswer) Gettext() string                                  { return m.Data.Text }
func (m *TLpollAnswer) Setoption(v []uint8)                              { m.Data.Option = v }
func (m *TLpollAnswer) Getoption() []uint8                               { return m.Data.Option }
func (m *TLerror) Setcode(v int32)                                       { m.Data.Code = v }
func (m *TLerror) Getcode() int32                                        { return m.Data.Code }
func (m *TLerror) Settext(v string)                                      { m.Data.Text = v }
func (m *TLerror) Gettext() string                                       { return m.Data.Text }
func (m *TLuserProfilePhoto) Sethas_video(v bool)                        { m.Data.Has_video = v }
func (m *TLuserProfilePhoto) Gethas_video() bool                         { return m.Data.Has_video }
func (m *TLuserProfilePhoto) Setphoto_id(v int64)                        { m.Data.Photo_id = v }
func (m *TLuserProfilePhoto) Getphoto_id() int64                         { return m.Data.Photo_id }
func (m *TLuserProfilePhoto) Setphoto_small(v FileLocation)              { m.Data.Photo_small = v }
func (m *TLuserProfilePhoto) Getphoto_small() FileLocation               { return m.Data.Photo_small }
func (m *TLuserProfilePhoto) Setphoto_big(v FileLocation)                { m.Data.Photo_big = v }
func (m *TLuserProfilePhoto) Getphoto_big() FileLocation                 { return m.Data.Photo_big }
func (m *TLuserProfilePhoto) Setdc_id(v int32)                           { m.Data.Dc_id = v }
func (m *TLuserProfilePhoto) Getdc_id() int32                            { return m.Data.Dc_id }
func (m *TLsecureCredentialsEncrypted) Setdata(v []uint8)                { m.Data.Data = v }
func (m *TLsecureCredentialsEncrypted) Getdata() []uint8                 { return m.Data.Data }
func (m *TLsecureCredentialsEncrypted) Sethash(v []uint8)                { m.Data.Hash = v }
func (m *TLsecureCredentialsEncrypted) Gethash() []uint8                 { return m.Data.Hash }
func (m *TLsecureCredentialsEncrypted) Setsecret(v []uint8)              { m.Data.Secret = v }
func (m *TLsecureCredentialsEncrypted) Getsecret() []uint8               { return m.Data.Secret }
func (m *TLstatsPercentValue) Setpart(v float64)                         { m.Data.Part = v }
func (m *TLstatsPercentValue) Getpart() float64                          { return m.Data.Part }
func (m *TLstatsPercentValue) Settotal(v float64)                        { m.Data.Total = v }
func (m *TLstatsPercentValue) Gettotal() float64                         { return m.Data.Total }
func (m *TLsecureSecretSettings) Setsecure_algo(v SecurePasswordKdfAlgo) { m.Data.Secure_algo = v }
func (m *TLsecureSecretSettings) Getsecure_algo() SecurePasswordKdfAlgo  { return m.Data.Secure_algo }
func (m *TLsecureSecretSettings) Setsecure_secret(v []uint8)             { m.Data.Secure_secret = v }
func (m *TLsecureSecretSettings) Getsecure_secret() []uint8              { return m.Data.Secure_secret }
func (m *TLsecureSecretSettings) Setsecure_secret_id(v int64)            { m.Data.Secure_secret_id = v }
func (m *TLsecureSecretSettings) Getsecure_secret_id() int64             { return m.Data.Secure_secret_id }
func (m *TLhelp_passportConfig) Sethash(v int32)                         { m.Data.Hash = v }
func (m *TLhelp_passportConfig) Gethash() int32                          { return m.Data.Hash }
func (m *TLhelp_passportConfig) Setcountries_langs(v DataJSON)           { m.Data.Countries_langs = v }
func (m *TLhelp_passportConfig) Getcountries_langs() DataJSON            { return m.Data.Countries_langs }
func (m *TLchatParticipantsForbidden) Setchat_id(v int32)                { m.Data.Chat_id = v }
func (m *TLchatParticipantsForbidden) Getchat_id() int32                 { return m.Data.Chat_id }
func (m *TLchatParticipantsForbidden) Setself_participant(v ChatParticipant) {
	m.Data.Self_participant = v
}
func (m *TLchatParticipantsForbidden) Getself_participant() ChatParticipant {
	return m.Data.Self_participant
}
func (m *TLchatParticipants) Setchat_id(v int32)                    { m.Data.Chat_id = v }
func (m *TLchatParticipants) Getchat_id() int32                     { return m.Data.Chat_id }
func (m *TLchatParticipants) Setparticipants(v []ChatParticipant)   { m.Data.Participants = v }
func (m *TLchatParticipants) Getparticipants() []ChatParticipant    { return m.Data.Participants }
func (m *TLchatParticipants) Setversion(v int32)                    { m.Data.Version = v }
func (m *TLchatParticipants) Getversion() int32                     { return m.Data.Version }
func (m *TLmessages_chatFull) Setfull_chat(v ChatFull)              { m.Data.Full_chat = v }
func (m *TLmessages_chatFull) Getfull_chat() ChatFull               { return m.Data.Full_chat }
func (m *TLmessages_chatFull) Setchats(v []Chat)                    { m.Data.Chats = v }
func (m *TLmessages_chatFull) Getchats() []Chat                     { return m.Data.Chats }
func (m *TLmessages_chatFull) Setusers(v []User)                    { m.Data.Users = v }
func (m *TLmessages_chatFull) Getusers() []User                     { return m.Data.Users }
func (m *TLmessageViews) Setviews(v int32)                          { m.Data.Views = v }
func (m *TLmessageViews) Getviews() int32                           { return m.Data.Views }
func (m *TLmessageViews) Setforwards(v int32)                       { m.Data.Forwards = v }
func (m *TLmessageViews) Getforwards() int32                        { return m.Data.Forwards }
func (m *TLmessageViews) Setreplies(v MessageReplies)               { m.Data.Replies = v }
func (m *TLmessageViews) Getreplies() MessageReplies                { return m.Data.Replies }
func (m *TLphotos_photos) Setphotos(v []Photo)                      { m.Data.Photos = v }
func (m *TLphotos_photos) Getphotos() []Photo                       { return m.Data.Photos }
func (m *TLphotos_photos) Setusers(v []User)                        { m.Data.Users = v }
func (m *TLphotos_photos) Getusers() []User                         { return m.Data.Users }
func (m *TLphotos_photosSlice) Setcount(v int32)                    { m.Data.Count = v }
func (m *TLphotos_photosSlice) Getcount() int32                     { return m.Data.Count }
func (m *TLphotos_photosSlice) Setphotos(v []Photo)                 { m.Data.Photos = v }
func (m *TLphotos_photosSlice) Getphotos() []Photo                  { return m.Data.Photos }
func (m *TLphotos_photosSlice) Setusers(v []User)                   { m.Data.Users = v }
func (m *TLphotos_photosSlice) Getusers() []User                    { return m.Data.Users }
func (m *TLdraftMessageEmpty) Setdate(v int32)                      { m.Data.Date = v }
func (m *TLdraftMessageEmpty) Getdate() int32                       { return m.Data.Date }
func (m *TLdraftMessage) Setno_webpage(v bool)                      { m.Data.No_webpage = v }
func (m *TLdraftMessage) Getno_webpage() bool                       { return m.Data.No_webpage }
func (m *TLdraftMessage) Setreply_to_msg_id(v int32)                { m.Data.Reply_to_msg_id = v }
func (m *TLdraftMessage) Getreply_to_msg_id() int32                 { return m.Data.Reply_to_msg_id }
func (m *TLdraftMessage) Setmessage(v string)                       { m.Data.Message = v }
func (m *TLdraftMessage) Getmessage() string                        { return m.Data.Message }
func (m *TLdraftMessage) Setentities(v []MessageEntity)             { m.Data.Entities = v }
func (m *TLdraftMessage) Getentities() []MessageEntity              { return m.Data.Entities }
func (m *TLdraftMessage) Setdate(v int32)                           { m.Data.Date = v }
func (m *TLdraftMessage) Getdate() int32                            { return m.Data.Date }
func (m *TLaccount_contentSettings) Setsensitive_enabled(v bool)    { m.Data.Sensitive_enabled = v }
func (m *TLaccount_contentSettings) Getsensitive_enabled() bool     { return m.Data.Sensitive_enabled }
func (m *TLaccount_contentSettings) Setsensitive_can_change(v bool) { m.Data.Sensitive_can_change = v }
func (m *TLaccount_contentSettings) Getsensitive_can_change() bool {
	return m.Data.Sensitive_can_change
}
func (m *TLfileLocationToBeDeprecated) Setvolume_id(v int64)           { m.Data.Volume_id = v }
func (m *TLfileLocationToBeDeprecated) Getvolume_id() int64            { return m.Data.Volume_id }
func (m *TLfileLocationToBeDeprecated) Setlocal_id(v int32)            { m.Data.Local_id = v }
func (m *TLfileLocationToBeDeprecated) Getlocal_id() int32             { return m.Data.Local_id }
func (m *TLmessages_affectedHistory) Setpts(v int32)                   { m.Data.Pts = v }
func (m *TLmessages_affectedHistory) Getpts() int32                    { return m.Data.Pts }
func (m *TLmessages_affectedHistory) Setpts_count(v int32)             { m.Data.Pts_count = v }
func (m *TLmessages_affectedHistory) Getpts_count() int32              { return m.Data.Pts_count }
func (m *TLmessages_affectedHistory) Setoffset(v int32)                { m.Data.Offset = v }
func (m *TLmessages_affectedHistory) Getoffset() int32                 { return m.Data.Offset }
func (m *TLhelp_supportName) Setname(v string)                         { m.Data.Name = v }
func (m *TLhelp_supportName) Getname() string                          { return m.Data.Name }
func (m *TLphoneConnection) Setid(v int64)                             { m.Data.Id = v }
func (m *TLphoneConnection) Getid() int64                              { return m.Data.Id }
func (m *TLphoneConnection) Setip(v string)                            { m.Data.Ip = v }
func (m *TLphoneConnection) Getip() string                             { return m.Data.Ip }
func (m *TLphoneConnection) Setipv6(v string)                          { m.Data.Ipv6 = v }
func (m *TLphoneConnection) Getipv6() string                           { return m.Data.Ipv6 }
func (m *TLphoneConnection) Setport(v int32)                           { m.Data.Port = v }
func (m *TLphoneConnection) Getport() int32                            { return m.Data.Port }
func (m *TLphoneConnection) Setpeer_tag(v []uint8)                     { m.Data.Peer_tag = v }
func (m *TLphoneConnection) Getpeer_tag() []uint8                      { return m.Data.Peer_tag }
func (m *TLphoneConnectionWebrtc) Setturn(v bool)                      { m.Data.Turn = v }
func (m *TLphoneConnectionWebrtc) Getturn() bool                       { return m.Data.Turn }
func (m *TLphoneConnectionWebrtc) Setstun(v bool)                      { m.Data.Stun = v }
func (m *TLphoneConnectionWebrtc) Getstun() bool                       { return m.Data.Stun }
func (m *TLphoneConnectionWebrtc) Setid(v int64)                       { m.Data.Id = v }
func (m *TLphoneConnectionWebrtc) Getid() int64                        { return m.Data.Id }
func (m *TLphoneConnectionWebrtc) Setip(v string)                      { m.Data.Ip = v }
func (m *TLphoneConnectionWebrtc) Getip() string                       { return m.Data.Ip }
func (m *TLphoneConnectionWebrtc) Setipv6(v string)                    { m.Data.Ipv6 = v }
func (m *TLphoneConnectionWebrtc) Getipv6() string                     { return m.Data.Ipv6 }
func (m *TLphoneConnectionWebrtc) Setport(v int32)                     { m.Data.Port = v }
func (m *TLphoneConnectionWebrtc) Getport() int32                      { return m.Data.Port }
func (m *TLphoneConnectionWebrtc) Setusername(v string)                { m.Data.Username = v }
func (m *TLphoneConnectionWebrtc) Getusername() string                 { return m.Data.Username }
func (m *TLphoneConnectionWebrtc) Setpassword(v string)                { m.Data.Password = v }
func (m *TLphoneConnectionWebrtc) Getpassword() string                 { return m.Data.Password }
func (m *TLinputDocument) Setid(v int64)                               { m.Data.Id = v }
func (m *TLinputDocument) Getid() int64                                { return m.Data.Id }
func (m *TLinputDocument) Setaccess_hash(v int64)                      { m.Data.Access_hash = v }
func (m *TLinputDocument) Getaccess_hash() int64                       { return m.Data.Access_hash }
func (m *TLinputDocument) Setfile_reference(v []uint8)                 { m.Data.File_reference = v }
func (m *TLinputDocument) Getfile_reference() []uint8                  { return m.Data.File_reference }
func (m *TLmessages_searchCounter) Setinexact(v bool)                  { m.Data.Inexact = v }
func (m *TLmessages_searchCounter) Getinexact() bool                   { return m.Data.Inexact }
func (m *TLmessages_searchCounter) Setfilter(v MessagesFilter)         { m.Data.Filter = v }
func (m *TLmessages_searchCounter) Getfilter() MessagesFilter          { return m.Data.Filter }
func (m *TLmessages_searchCounter) Setcount(v int32)                   { m.Data.Count = v }
func (m *TLmessages_searchCounter) Getcount() int32                    { return m.Data.Count }
func (m *TLchatAdminRights) Setchange_info(v bool)                     { m.Data.Change_info = v }
func (m *TLchatAdminRights) Getchange_info() bool                      { return m.Data.Change_info }
func (m *TLchatAdminRights) Setpost_messages(v bool)                   { m.Data.Post_messages = v }
func (m *TLchatAdminRights) Getpost_messages() bool                    { return m.Data.Post_messages }
func (m *TLchatAdminRights) Setedit_messages(v bool)                   { m.Data.Edit_messages = v }
func (m *TLchatAdminRights) Getedit_messages() bool                    { return m.Data.Edit_messages }
func (m *TLchatAdminRights) Setdelete_messages(v bool)                 { m.Data.Delete_messages = v }
func (m *TLchatAdminRights) Getdelete_messages() bool                  { return m.Data.Delete_messages }
func (m *TLchatAdminRights) Setban_users(v bool)                       { m.Data.Ban_users = v }
func (m *TLchatAdminRights) Getban_users() bool                        { return m.Data.Ban_users }
func (m *TLchatAdminRights) Setinvite_users(v bool)                    { m.Data.Invite_users = v }
func (m *TLchatAdminRights) Getinvite_users() bool                     { return m.Data.Invite_users }
func (m *TLchatAdminRights) Setpin_messages(v bool)                    { m.Data.Pin_messages = v }
func (m *TLchatAdminRights) Getpin_messages() bool                     { return m.Data.Pin_messages }
func (m *TLchatAdminRights) Setadd_admins(v bool)                      { m.Data.Add_admins = v }
func (m *TLchatAdminRights) Getadd_admins() bool                       { return m.Data.Add_admins }
func (m *TLchatAdminRights) Setanonymous(v bool)                       { m.Data.Anonymous = v }
func (m *TLchatAdminRights) Getanonymous() bool                        { return m.Data.Anonymous }
func (m *TLchatAdminRights) Setmanage_call(v bool)                     { m.Data.Manage_call = v }
func (m *TLchatAdminRights) Getmanage_call() bool                      { return m.Data.Manage_call }
func (m *TLcontacts_importedContacts) Setimported(v []ImportedContact) { m.Data.Imported = v }
func (m *TLcontacts_importedContacts) Getimported() []ImportedContact  { return m.Data.Imported }
func (m *TLcontacts_importedContacts) Setpopular_invites(v []PopularContact) {
	m.Data.Popular_invites = v
}
func (m *TLcontacts_importedContacts) Getpopular_invites() []PopularContact {
	return m.Data.Popular_invites
}
func (m *TLcontacts_importedContacts) Setretry_contacts(v []Long)    { m.Data.Retry_contacts = v }
func (m *TLcontacts_importedContacts) Getretry_contacts() []Long     { return m.Data.Retry_contacts }
func (m *TLcontacts_importedContacts) Setusers(v []User)             { m.Data.Users = v }
func (m *TLcontacts_importedContacts) Getusers() []User              { return m.Data.Users }
func (m *TLchatInviteAlready) Setchat(v Chat)                        { m.Data.Chat = v }
func (m *TLchatInviteAlready) Getchat() Chat                         { return m.Data.Chat }
func (m *TLchatInvite) Setchannel(v bool)                            { m.Data.Channel = v }
func (m *TLchatInvite) Getchannel() bool                             { return m.Data.Channel }
func (m *TLchatInvite) Setbroadcast(v bool)                          { m.Data.Broadcast = v }
func (m *TLchatInvite) Getbroadcast() bool                           { return m.Data.Broadcast }
func (m *TLchatInvite) Setpublic(v bool)                             { m.Data.Public = v }
func (m *TLchatInvite) Getpublic() bool                              { return m.Data.Public }
func (m *TLchatInvite) Setmegagroup(v bool)                          { m.Data.Megagroup = v }
func (m *TLchatInvite) Getmegagroup() bool                           { return m.Data.Megagroup }
func (m *TLchatInvite) Settitle(v string)                            { m.Data.Title = v }
func (m *TLchatInvite) Gettitle() string                             { return m.Data.Title }
func (m *TLchatInvite) Setphoto(v Photo)                             { m.Data.Photo = v }
func (m *TLchatInvite) Getphoto() Photo                              { return m.Data.Photo }
func (m *TLchatInvite) Setparticipants_count(v int32)                { m.Data.Participants_count = v }
func (m *TLchatInvite) Getparticipants_count() int32                 { return m.Data.Participants_count }
func (m *TLchatInvite) Setparticipants(v []User)                     { m.Data.Participants = v }
func (m *TLchatInvite) Getparticipants() []User                      { return m.Data.Participants }
func (m *TLchatInvitePeek) Setchat(v Chat)                           { m.Data.Chat = v }
func (m *TLchatInvitePeek) Getchat() Chat                            { return m.Data.Chat }
func (m *TLchatInvitePeek) Setexpires(v int32)                       { m.Data.Expires = v }
func (m *TLchatInvitePeek) Getexpires() int32                        { return m.Data.Expires }
func (m *TLmessages_botCallbackAnswer) Setalert(v bool)              { m.Data.Alert = v }
func (m *TLmessages_botCallbackAnswer) Getalert() bool               { return m.Data.Alert }
func (m *TLmessages_botCallbackAnswer) Sethas_url(v bool)            { m.Data.Has_url = v }
func (m *TLmessages_botCallbackAnswer) Gethas_url() bool             { return m.Data.Has_url }
func (m *TLmessages_botCallbackAnswer) Setnative_ui(v bool)          { m.Data.Native_ui = v }
func (m *TLmessages_botCallbackAnswer) Getnative_ui() bool           { return m.Data.Native_ui }
func (m *TLmessages_botCallbackAnswer) Setmessage(v string)          { m.Data.Message = v }
func (m *TLmessages_botCallbackAnswer) Getmessage() string           { return m.Data.Message }
func (m *TLmessages_botCallbackAnswer) Seturl(v string)              { m.Data.Url = v }
func (m *TLmessages_botCallbackAnswer) Geturl() string               { return m.Data.Url }
func (m *TLmessages_botCallbackAnswer) Setcache_time(v int32)        { m.Data.Cache_time = v }
func (m *TLmessages_botCallbackAnswer) Getcache_time() int32         { return m.Data.Cache_time }
func (m *TLstats_megagroupStats) Setperiod(v StatsDateRangeDays)     { m.Data.Period = v }
func (m *TLstats_megagroupStats) Getperiod() StatsDateRangeDays      { return m.Data.Period }
func (m *TLstats_megagroupStats) Setmembers(v StatsAbsValueAndPrev)  { m.Data.Members = v }
func (m *TLstats_megagroupStats) Getmembers() StatsAbsValueAndPrev   { return m.Data.Members }
func (m *TLstats_megagroupStats) Setmessages(v StatsAbsValueAndPrev) { m.Data.Messages = v }
func (m *TLstats_megagroupStats) Getmessages() StatsAbsValueAndPrev  { return m.Data.Messages }
func (m *TLstats_megagroupStats) Setviewers(v StatsAbsValueAndPrev)  { m.Data.Viewers = v }
func (m *TLstats_megagroupStats) Getviewers() StatsAbsValueAndPrev   { return m.Data.Viewers }
func (m *TLstats_megagroupStats) Setposters(v StatsAbsValueAndPrev)  { m.Data.Posters = v }
func (m *TLstats_megagroupStats) Getposters() StatsAbsValueAndPrev   { return m.Data.Posters }
func (m *TLstats_megagroupStats) Setgrowth_graph(v StatsGraph)       { m.Data.Growth_graph = v }
func (m *TLstats_megagroupStats) Getgrowth_graph() StatsGraph        { return m.Data.Growth_graph }
func (m *TLstats_megagroupStats) Setmembers_graph(v StatsGraph)      { m.Data.Members_graph = v }
func (m *TLstats_megagroupStats) Getmembers_graph() StatsGraph       { return m.Data.Members_graph }
func (m *TLstats_megagroupStats) Setnew_members_by_source_graph(v StatsGraph) {
	m.Data.New_members_by_source_graph = v
}
func (m *TLstats_megagroupStats) Getnew_members_by_source_graph() StatsGraph {
	return m.Data.New_members_by_source_graph
}
func (m *TLstats_megagroupStats) Setlanguages_graph(v StatsGraph)          { m.Data.Languages_graph = v }
func (m *TLstats_megagroupStats) Getlanguages_graph() StatsGraph           { return m.Data.Languages_graph }
func (m *TLstats_megagroupStats) Setmessages_graph(v StatsGraph)           { m.Data.Messages_graph = v }
func (m *TLstats_megagroupStats) Getmessages_graph() StatsGraph            { return m.Data.Messages_graph }
func (m *TLstats_megagroupStats) Setactions_graph(v StatsGraph)            { m.Data.Actions_graph = v }
func (m *TLstats_megagroupStats) Getactions_graph() StatsGraph             { return m.Data.Actions_graph }
func (m *TLstats_megagroupStats) Settop_hours_graph(v StatsGraph)          { m.Data.Top_hours_graph = v }
func (m *TLstats_megagroupStats) Gettop_hours_graph() StatsGraph           { return m.Data.Top_hours_graph }
func (m *TLstats_megagroupStats) Setweekdays_graph(v StatsGraph)           { m.Data.Weekdays_graph = v }
func (m *TLstats_megagroupStats) Getweekdays_graph() StatsGraph            { return m.Data.Weekdays_graph }
func (m *TLstats_megagroupStats) Settop_posters(v []StatsGroupTopPoster)   { m.Data.Top_posters = v }
func (m *TLstats_megagroupStats) Gettop_posters() []StatsGroupTopPoster    { return m.Data.Top_posters }
func (m *TLstats_megagroupStats) Settop_admins(v []StatsGroupTopAdmin)     { m.Data.Top_admins = v }
func (m *TLstats_megagroupStats) Gettop_admins() []StatsGroupTopAdmin      { return m.Data.Top_admins }
func (m *TLstats_megagroupStats) Settop_inviters(v []StatsGroupTopInviter) { m.Data.Top_inviters = v }
func (m *TLstats_megagroupStats) Gettop_inviters() []StatsGroupTopInviter  { return m.Data.Top_inviters }
func (m *TLstats_megagroupStats) Setusers(v []User)                        { m.Data.Users = v }
func (m *TLstats_megagroupStats) Getusers() []User                         { return m.Data.Users }
func (m *TLconfig) Setphonecalls_enabled(v bool)                           { m.Data.Phonecalls_enabled = v }
func (m *TLconfig) Getphonecalls_enabled() bool                            { return m.Data.Phonecalls_enabled }
func (m *TLconfig) Setdefault_p2p_contacts(v bool)                         { m.Data.Default_p2p_contacts = v }
func (m *TLconfig) Getdefault_p2p_contacts() bool                          { return m.Data.Default_p2p_contacts }
func (m *TLconfig) Setpreload_featured_stickers(v bool)                    { m.Data.Preload_featured_stickers = v }
func (m *TLconfig) Getpreload_featured_stickers() bool                     { return m.Data.Preload_featured_stickers }
func (m *TLconfig) Setignore_phone_entities(v bool)                        { m.Data.Ignore_phone_entities = v }
func (m *TLconfig) Getignore_phone_entities() bool                         { return m.Data.Ignore_phone_entities }
func (m *TLconfig) Setrevoke_pm_inbox(v bool)                              { m.Data.Revoke_pm_inbox = v }
func (m *TLconfig) Getrevoke_pm_inbox() bool                               { return m.Data.Revoke_pm_inbox }
func (m *TLconfig) Setblocked_mode(v bool)                                 { m.Data.Blocked_mode = v }
func (m *TLconfig) Getblocked_mode() bool                                  { return m.Data.Blocked_mode }
func (m *TLconfig) Setpfs_enabled(v bool)                                  { m.Data.Pfs_enabled = v }
func (m *TLconfig) Getpfs_enabled() bool                                   { return m.Data.Pfs_enabled }
func (m *TLconfig) Setdate(v int32)                                        { m.Data.Date = v }
func (m *TLconfig) Getdate() int32                                         { return m.Data.Date }
func (m *TLconfig) Setexpires(v int32)                                     { m.Data.Expires = v }
func (m *TLconfig) Getexpires() int32                                      { return m.Data.Expires }
func (m *TLconfig) Settest_mode(v Bool)                                    { m.Data.Test_mode = v }
func (m *TLconfig) Gettest_mode() Bool                                     { return m.Data.Test_mode }
func (m *TLconfig) Setthis_dc(v int32)                                     { m.Data.This_dc = v }
func (m *TLconfig) Getthis_dc() int32                                      { return m.Data.This_dc }
func (m *TLconfig) Setdc_options(v []DcOption)                             { m.Data.Dc_options = v }
func (m *TLconfig) Getdc_options() []DcOption                              { return m.Data.Dc_options }
func (m *TLconfig) Setdc_txt_domain_name(v string)                         { m.Data.Dc_txt_domain_name = v }
func (m *TLconfig) Getdc_txt_domain_name() string                          { return m.Data.Dc_txt_domain_name }
func (m *TLconfig) Setchat_size_max(v int32)                               { m.Data.Chat_size_max = v }
func (m *TLconfig) Getchat_size_max() int32                                { return m.Data.Chat_size_max }
func (m *TLconfig) Setmegagroup_size_max(v int32)                          { m.Data.Megagroup_size_max = v }
func (m *TLconfig) Getmegagroup_size_max() int32                           { return m.Data.Megagroup_size_max }
func (m *TLconfig) Setforwarded_count_max(v int32)                         { m.Data.Forwarded_count_max = v }
func (m *TLconfig) Getforwarded_count_max() int32                          { return m.Data.Forwarded_count_max }
func (m *TLconfig) Setonline_update_period_ms(v int32)                     { m.Data.Online_update_period_ms = v }
func (m *TLconfig) Getonline_update_period_ms() int32                      { return m.Data.Online_update_period_ms }
func (m *TLconfig) Setoffline_blur_timeout_ms(v int32)                     { m.Data.Offline_blur_timeout_ms = v }
func (m *TLconfig) Getoffline_blur_timeout_ms() int32                      { return m.Data.Offline_blur_timeout_ms }
func (m *TLconfig) Setoffline_idle_timeout_ms(v int32)                     { m.Data.Offline_idle_timeout_ms = v }
func (m *TLconfig) Getoffline_idle_timeout_ms() int32                      { return m.Data.Offline_idle_timeout_ms }
func (m *TLconfig) Setonline_cloud_timeout_ms(v int32)                     { m.Data.Online_cloud_timeout_ms = v }
func (m *TLconfig) Getonline_cloud_timeout_ms() int32                      { return m.Data.Online_cloud_timeout_ms }
func (m *TLconfig) Setnotify_cloud_delay_ms(v int32)                       { m.Data.Notify_cloud_delay_ms = v }
func (m *TLconfig) Getnotify_cloud_delay_ms() int32                        { return m.Data.Notify_cloud_delay_ms }
func (m *TLconfig) Setnotify_default_delay_ms(v int32)                     { m.Data.Notify_default_delay_ms = v }
func (m *TLconfig) Getnotify_default_delay_ms() int32                      { return m.Data.Notify_default_delay_ms }
func (m *TLconfig) Setpush_chat_period_ms(v int32)                         { m.Data.Push_chat_period_ms = v }
func (m *TLconfig) Getpush_chat_period_ms() int32                          { return m.Data.Push_chat_period_ms }
func (m *TLconfig) Setpush_chat_limit(v int32)                             { m.Data.Push_chat_limit = v }
func (m *TLconfig) Getpush_chat_limit() int32                              { return m.Data.Push_chat_limit }
func (m *TLconfig) Setsaved_gifs_limit(v int32)                            { m.Data.Saved_gifs_limit = v }
func (m *TLconfig) Getsaved_gifs_limit() int32                             { return m.Data.Saved_gifs_limit }
func (m *TLconfig) Setedit_time_limit(v int32)                             { m.Data.Edit_time_limit = v }
func (m *TLconfig) Getedit_time_limit() int32                              { return m.Data.Edit_time_limit }
func (m *TLconfig) Setrevoke_time_limit(v int32)                           { m.Data.Revoke_time_limit = v }
func (m *TLconfig) Getrevoke_time_limit() int32                            { return m.Data.Revoke_time_limit }
func (m *TLconfig) Setrevoke_pm_time_limit(v int32)                        { m.Data.Revoke_pm_time_limit = v }
func (m *TLconfig) Getrevoke_pm_time_limit() int32                         { return m.Data.Revoke_pm_time_limit }
func (m *TLconfig) Setrating_e_decay(v int32)                              { m.Data.Rating_e_decay = v }
func (m *TLconfig) Getrating_e_decay() int32                               { return m.Data.Rating_e_decay }
func (m *TLconfig) Setstickers_recent_limit(v int32)                       { m.Data.Stickers_recent_limit = v }
func (m *TLconfig) Getstickers_recent_limit() int32                        { return m.Data.Stickers_recent_limit }
func (m *TLconfig) Setstickers_faved_limit(v int32)                        { m.Data.Stickers_faved_limit = v }
func (m *TLconfig) Getstickers_faved_limit() int32                         { return m.Data.Stickers_faved_limit }
func (m *TLconfig) Setchannels_read_media_period(v int32)                  { m.Data.Channels_read_media_period = v }
func (m *TLconfig) Getchannels_read_media_period() int32                   { return m.Data.Channels_read_media_period }
func (m *TLconfig) Settmp_sessions(v int32)                                { m.Data.Tmp_sessions = v }
func (m *TLconfig) Gettmp_sessions() int32                                 { return m.Data.Tmp_sessions }
func (m *TLconfig) Setpinned_dialogs_count_max(v int32)                    { m.Data.Pinned_dialogs_count_max = v }
func (m *TLconfig) Getpinned_dialogs_count_max() int32                     { return m.Data.Pinned_dialogs_count_max }
func (m *TLconfig) Setpinned_infolder_count_max(v int32)                   { m.Data.Pinned_infolder_count_max = v }
func (m *TLconfig) Getpinned_infolder_count_max() int32                    { return m.Data.Pinned_infolder_count_max }
func (m *TLconfig) Setcall_receive_timeout_ms(v int32)                     { m.Data.Call_receive_timeout_ms = v }
func (m *TLconfig) Getcall_receive_timeout_ms() int32                      { return m.Data.Call_receive_timeout_ms }
func (m *TLconfig) Setcall_ring_timeout_ms(v int32)                        { m.Data.Call_ring_timeout_ms = v }
func (m *TLconfig) Getcall_ring_timeout_ms() int32                         { return m.Data.Call_ring_timeout_ms }
func (m *TLconfig) Setcall_connect_timeout_ms(v int32)                     { m.Data.Call_connect_timeout_ms = v }
func (m *TLconfig) Getcall_connect_timeout_ms() int32                      { return m.Data.Call_connect_timeout_ms }
func (m *TLconfig) Setcall_packet_timeout_ms(v int32)                      { m.Data.Call_packet_timeout_ms = v }
func (m *TLconfig) Getcall_packet_timeout_ms() int32                       { return m.Data.Call_packet_timeout_ms }
func (m *TLconfig) Setme_url_prefix(v string)                              { m.Data.Me_url_prefix = v }
func (m *TLconfig) Getme_url_prefix() string                               { return m.Data.Me_url_prefix }
func (m *TLconfig) Setautoupdate_url_prefix(v string)                      { m.Data.Autoupdate_url_prefix = v }
func (m *TLconfig) Getautoupdate_url_prefix() string                       { return m.Data.Autoupdate_url_prefix }
func (m *TLconfig) Setgif_search_username(v string)                        { m.Data.Gif_search_username = v }
func (m *TLconfig) Getgif_search_username() string                         { return m.Data.Gif_search_username }
func (m *TLconfig) Setvenue_search_username(v string)                      { m.Data.Venue_search_username = v }
func (m *TLconfig) Getvenue_search_username() string                       { return m.Data.Venue_search_username }
func (m *TLconfig) Setimg_search_username(v string)                        { m.Data.Img_search_username = v }
func (m *TLconfig) Getimg_search_username() string                         { return m.Data.Img_search_username }
func (m *TLconfig) Setstatic_maps_provider(v string)                       { m.Data.Static_maps_provider = v }
func (m *TLconfig) Getstatic_maps_provider() string                        { return m.Data.Static_maps_provider }
func (m *TLconfig) Setcaption_length_max(v int32)                          { m.Data.Caption_length_max = v }
func (m *TLconfig) Getcaption_length_max() int32                           { return m.Data.Caption_length_max }
func (m *TLconfig) Setmessage_length_max(v int32)                          { m.Data.Message_length_max = v }
func (m *TLconfig) Getmessage_length_max() int32                           { return m.Data.Message_length_max }
func (m *TLconfig) Setwebfile_dc_id(v int32)                               { m.Data.Webfile_dc_id = v }
func (m *TLconfig) Getwebfile_dc_id() int32                                { return m.Data.Webfile_dc_id }
func (m *TLconfig) Setsuggested_lang_code(v string)                        { m.Data.Suggested_lang_code = v }
func (m *TLconfig) Getsuggested_lang_code() string                         { return m.Data.Suggested_lang_code }
func (m *TLconfig) Setlang_pack_version(v int32)                           { m.Data.Lang_pack_version = v }
func (m *TLconfig) Getlang_pack_version() int32                            { return m.Data.Lang_pack_version }
func (m *TLconfig) Setbase_lang_pack_version(v int32)                      { m.Data.Base_lang_pack_version = v }
func (m *TLconfig) Getbase_lang_pack_version() int32                       { return m.Data.Base_lang_pack_version }
func (m *TLaccount_webAuthorizations) Setauthorizations(v []WebAuthorization) {
	m.Data.Authorizations = v
}
func (m *TLaccount_webAuthorizations) Getauthorizations() []WebAuthorization {
	return m.Data.Authorizations
}
func (m *TLaccount_webAuthorizations) Setusers(v []User)   { m.Data.Users = v }
func (m *TLaccount_webAuthorizations) Getusers() []User    { return m.Data.Users }
func (m *TLdcOption) Setipv6(v bool)                       { m.Data.Ipv6 = v }
func (m *TLdcOption) Getipv6() bool                        { return m.Data.Ipv6 }
func (m *TLdcOption) Setmedia_only(v bool)                 { m.Data.Media_only = v }
func (m *TLdcOption) Getmedia_only() bool                  { return m.Data.Media_only }
func (m *TLdcOption) Settcpo_only(v bool)                  { m.Data.Tcpo_only = v }
func (m *TLdcOption) Gettcpo_only() bool                   { return m.Data.Tcpo_only }
func (m *TLdcOption) Setcdn(v bool)                        { m.Data.Cdn = v }
func (m *TLdcOption) Getcdn() bool                         { return m.Data.Cdn }
func (m *TLdcOption) Setstatic(v bool)                     { m.Data.Static = v }
func (m *TLdcOption) Getstatic() bool                      { return m.Data.Static }
func (m *TLdcOption) Setid(v int32)                        { m.Data.Id = v }
func (m *TLdcOption) Getid() int32                         { return m.Data.Id }
func (m *TLdcOption) Setip_address(v string)               { m.Data.Ip_address = v }
func (m *TLdcOption) Getip_address() string                { return m.Data.Ip_address }
func (m *TLdcOption) Setport(v int32)                      { m.Data.Port = v }
func (m *TLdcOption) Getport() int32                       { return m.Data.Port }
func (m *TLdcOption) Setsecret(v []uint8)                  { m.Data.Secret = v }
func (m *TLdcOption) Getsecret() []uint8                   { return m.Data.Secret }
func (m *TLsecureValueHash) Settype(v SecureValueType)     { m.Data.Type = v }
func (m *TLsecureValueHash) Gettype() SecureValueType      { return m.Data.Type }
func (m *TLsecureValueHash) Sethash(v []uint8)             { m.Data.Hash = v }
func (m *TLsecureValueHash) Gethash() []uint8              { return m.Data.Hash }
func (m *TLchannels_channelParticipants) Setcount(v int32) { m.Data.Count = v }
func (m *TLchannels_channelParticipants) Getcount() int32  { return m.Data.Count }
func (m *TLchannels_channelParticipants) Setparticipants(v []ChannelParticipant) {
	m.Data.Participants = v
}
func (m *TLchannels_channelParticipants) Getparticipants() []ChannelParticipant {
	return m.Data.Participants
}
func (m *TLchannels_channelParticipants) Setusers(v []User)               { m.Data.Users = v }
func (m *TLchannels_channelParticipants) Getusers() []User                { return m.Data.Users }
func (m *TLmessages_peerDialogs) Setdialogs(v []Dialog)                   { m.Data.Dialogs = v }
func (m *TLmessages_peerDialogs) Getdialogs() []Dialog                    { return m.Data.Dialogs }
func (m *TLmessages_peerDialogs) Setmessages(v []Message)                 { m.Data.Messages = v }
func (m *TLmessages_peerDialogs) Getmessages() []Message                  { return m.Data.Messages }
func (m *TLmessages_peerDialogs) Setchats(v []Chat)                       { m.Data.Chats = v }
func (m *TLmessages_peerDialogs) Getchats() []Chat                        { return m.Data.Chats }
func (m *TLmessages_peerDialogs) Setusers(v []User)                       { m.Data.Users = v }
func (m *TLmessages_peerDialogs) Getusers() []User                        { return m.Data.Users }
func (m *TLmessages_peerDialogs) Setstate(v Updates_State)                { m.Data.State = v }
func (m *TLmessages_peerDialogs) Getstate() Updates_State                 { return m.Data.State }
func (m *TLinputWallPaper) Setid(v int64)                                 { m.Data.Id = v }
func (m *TLinputWallPaper) Getid() int64                                  { return m.Data.Id }
func (m *TLinputWallPaper) Setaccess_hash(v int64)                        { m.Data.Access_hash = v }
func (m *TLinputWallPaper) Getaccess_hash() int64                         { return m.Data.Access_hash }
func (m *TLinputWallPaperSlug) Setslug(v string)                          { m.Data.Slug = v }
func (m *TLinputWallPaperSlug) Getslug() string                           { return m.Data.Slug }
func (m *TLbotInfo) Setuser_id(v int32)                                   { m.Data.User_id = v }
func (m *TLbotInfo) Getuser_id() int32                                    { return m.Data.User_id }
func (m *TLbotInfo) Setdescription(v string)                              { m.Data.Description = v }
func (m *TLbotInfo) Getdescription() string                               { return m.Data.Description }
func (m *TLbotInfo) Setcommands(v []BotCommand)                           { m.Data.Commands = v }
func (m *TLbotInfo) Getcommands() []BotCommand                            { return m.Data.Commands }
func (m *TLupdates_channelDifferenceEmpty) Setfinal(v bool)               { m.Data.Final = v }
func (m *TLupdates_channelDifferenceEmpty) Getfinal() bool                { return m.Data.Final }
func (m *TLupdates_channelDifferenceEmpty) Setpts(v int32)                { m.Data.Pts = v }
func (m *TLupdates_channelDifferenceEmpty) Getpts() int32                 { return m.Data.Pts }
func (m *TLupdates_channelDifferenceEmpty) Settimeout(v int32)            { m.Data.Timeout = v }
func (m *TLupdates_channelDifferenceEmpty) Gettimeout() int32             { return m.Data.Timeout }
func (m *TLupdates_channelDifferenceTooLong) Setfinal(v bool)             { m.Data.Final = v }
func (m *TLupdates_channelDifferenceTooLong) Getfinal() bool              { return m.Data.Final }
func (m *TLupdates_channelDifferenceTooLong) Settimeout(v int32)          { m.Data.Timeout = v }
func (m *TLupdates_channelDifferenceTooLong) Gettimeout() int32           { return m.Data.Timeout }
func (m *TLupdates_channelDifferenceTooLong) Setdialog(v Dialog)          { m.Data.Dialog = v }
func (m *TLupdates_channelDifferenceTooLong) Getdialog() Dialog           { return m.Data.Dialog }
func (m *TLupdates_channelDifferenceTooLong) Setmessages(v []Message)     { m.Data.Messages = v }
func (m *TLupdates_channelDifferenceTooLong) Getmessages() []Message      { return m.Data.Messages }
func (m *TLupdates_channelDifferenceTooLong) Setchats(v []Chat)           { m.Data.Chats = v }
func (m *TLupdates_channelDifferenceTooLong) Getchats() []Chat            { return m.Data.Chats }
func (m *TLupdates_channelDifferenceTooLong) Setusers(v []User)           { m.Data.Users = v }
func (m *TLupdates_channelDifferenceTooLong) Getusers() []User            { return m.Data.Users }
func (m *TLupdates_channelDifference) Setfinal(v bool)                    { m.Data.Final = v }
func (m *TLupdates_channelDifference) Getfinal() bool                     { return m.Data.Final }
func (m *TLupdates_channelDifference) Setpts(v int32)                     { m.Data.Pts = v }
func (m *TLupdates_channelDifference) Getpts() int32                      { return m.Data.Pts }
func (m *TLupdates_channelDifference) Settimeout(v int32)                 { m.Data.Timeout = v }
func (m *TLupdates_channelDifference) Gettimeout() int32                  { return m.Data.Timeout }
func (m *TLupdates_channelDifference) Setnew_messages(v []Message)        { m.Data.New_messages = v }
func (m *TLupdates_channelDifference) Getnew_messages() []Message         { return m.Data.New_messages }
func (m *TLupdates_channelDifference) Setother_updates(v []Update)        { m.Data.Other_updates = v }
func (m *TLupdates_channelDifference) Getother_updates() []Update         { return m.Data.Other_updates }
func (m *TLupdates_channelDifference) Setchats(v []Chat)                  { m.Data.Chats = v }
func (m *TLupdates_channelDifference) Getchats() []Chat                   { return m.Data.Chats }
func (m *TLupdates_channelDifference) Setusers(v []User)                  { m.Data.Users = v }
func (m *TLupdates_channelDifference) Getusers() []User                   { return m.Data.Users }
func (m *TLlangPackDifference) Setlang_code(v string)                     { m.Data.Lang_code = v }
func (m *TLlangPackDifference) Getlang_code() string                      { return m.Data.Lang_code }
func (m *TLlangPackDifference) Setfrom_version(v int32)                   { m.Data.From_version = v }
func (m *TLlangPackDifference) Getfrom_version() int32                    { return m.Data.From_version }
func (m *TLlangPackDifference) Setversion(v int32)                        { m.Data.Version = v }
func (m *TLlangPackDifference) Getversion() int32                         { return m.Data.Version }
func (m *TLlangPackDifference) Setstrings(v []LangPackString)             { m.Data.Strings = v }
func (m *TLlangPackDifference) Getstrings() []LangPackString              { return m.Data.Strings }
func (m *TLinputFileLocation) Setvolume_id(v int64)                       { m.Data.Volume_id = v }
func (m *TLinputFileLocation) Getvolume_id() int64                        { return m.Data.Volume_id }
func (m *TLinputFileLocation) Setlocal_id(v int32)                        { m.Data.Local_id = v }
func (m *TLinputFileLocation) Getlocal_id() int32                         { return m.Data.Local_id }
func (m *TLinputFileLocation) Setsecret(v int64)                          { m.Data.Secret = v }
func (m *TLinputFileLocation) Getsecret() int64                           { return m.Data.Secret }
func (m *TLinputFileLocation) Setfile_reference(v []uint8)                { m.Data.File_reference = v }
func (m *TLinputFileLocation) Getfile_reference() []uint8                 { return m.Data.File_reference }
func (m *TLinputEncryptedFileLocation) Setid(v int64)                     { m.Data.Id = v }
func (m *TLinputEncryptedFileLocation) Getid() int64                      { return m.Data.Id }
func (m *TLinputEncryptedFileLocation) Setaccess_hash(v int64)            { m.Data.Access_hash = v }
func (m *TLinputEncryptedFileLocation) Getaccess_hash() int64             { return m.Data.Access_hash }
func (m *TLinputDocumentFileLocation) Setid(v int64)                      { m.Data.Id = v }
func (m *TLinputDocumentFileLocation) Getid() int64                       { return m.Data.Id }
func (m *TLinputDocumentFileLocation) Setaccess_hash(v int64)             { m.Data.Access_hash = v }
func (m *TLinputDocumentFileLocation) Getaccess_hash() int64              { return m.Data.Access_hash }
func (m *TLinputDocumentFileLocation) Setfile_reference(v []uint8)        { m.Data.File_reference = v }
func (m *TLinputDocumentFileLocation) Getfile_reference() []uint8         { return m.Data.File_reference }
func (m *TLinputDocumentFileLocation) Setthumb_size(v string)             { m.Data.Thumb_size = v }
func (m *TLinputDocumentFileLocation) Getthumb_size() string              { return m.Data.Thumb_size }
func (m *TLinputSecureFileLocation) Setid(v int64)                        { m.Data.Id = v }
func (m *TLinputSecureFileLocation) Getid() int64                         { return m.Data.Id }
func (m *TLinputSecureFileLocation) Setaccess_hash(v int64)               { m.Data.Access_hash = v }
func (m *TLinputSecureFileLocation) Getaccess_hash() int64                { return m.Data.Access_hash }
func (m *TLinputPhotoFileLocation) Setid(v int64)                         { m.Data.Id = v }
func (m *TLinputPhotoFileLocation) Getid() int64                          { return m.Data.Id }
func (m *TLinputPhotoFileLocation) Setaccess_hash(v int64)                { m.Data.Access_hash = v }
func (m *TLinputPhotoFileLocation) Getaccess_hash() int64                 { return m.Data.Access_hash }
func (m *TLinputPhotoFileLocation) Setfile_reference(v []uint8)           { m.Data.File_reference = v }
func (m *TLinputPhotoFileLocation) Getfile_reference() []uint8            { return m.Data.File_reference }
func (m *TLinputPhotoFileLocation) Setthumb_size(v string)                { m.Data.Thumb_size = v }
func (m *TLinputPhotoFileLocation) Getthumb_size() string                 { return m.Data.Thumb_size }
func (m *TLinputPhotoLegacyFileLocation) Setid(v int64)                   { m.Data.Id = v }
func (m *TLinputPhotoLegacyFileLocation) Getid() int64                    { return m.Data.Id }
func (m *TLinputPhotoLegacyFileLocation) Setaccess_hash(v int64)          { m.Data.Access_hash = v }
func (m *TLinputPhotoLegacyFileLocation) Getaccess_hash() int64           { return m.Data.Access_hash }
func (m *TLinputPhotoLegacyFileLocation) Setfile_reference(v []uint8)     { m.Data.File_reference = v }
func (m *TLinputPhotoLegacyFileLocation) Getfile_reference() []uint8      { return m.Data.File_reference }
func (m *TLinputPhotoLegacyFileLocation) Setvolume_id(v int64)            { m.Data.Volume_id = v }
func (m *TLinputPhotoLegacyFileLocation) Getvolume_id() int64             { return m.Data.Volume_id }
func (m *TLinputPhotoLegacyFileLocation) Setlocal_id(v int32)             { m.Data.Local_id = v }
func (m *TLinputPhotoLegacyFileLocation) Getlocal_id() int32              { return m.Data.Local_id }
func (m *TLinputPhotoLegacyFileLocation) Setsecret(v int64)               { m.Data.Secret = v }
func (m *TLinputPhotoLegacyFileLocation) Getsecret() int64                { return m.Data.Secret }
func (m *TLinputPeerPhotoFileLocation) Setbig(v bool)                     { m.Data.Big = v }
func (m *TLinputPeerPhotoFileLocation) Getbig() bool                      { return m.Data.Big }
func (m *TLinputPeerPhotoFileLocation) Setpeer(v InputPeer)               { m.Data.Peer = v }
func (m *TLinputPeerPhotoFileLocation) Getpeer() InputPeer                { return m.Data.Peer }
func (m *TLinputPeerPhotoFileLocation) Setvolume_id(v int64)              { m.Data.Volume_id = v }
func (m *TLinputPeerPhotoFileLocation) Getvolume_id() int64               { return m.Data.Volume_id }
func (m *TLinputPeerPhotoFileLocation) Setlocal_id(v int32)               { m.Data.Local_id = v }
func (m *TLinputPeerPhotoFileLocation) Getlocal_id() int32                { return m.Data.Local_id }
func (m *TLinputStickerSetThumb) Setstickerset(v InputStickerSet)         { m.Data.Stickerset = v }
func (m *TLinputStickerSetThumb) Getstickerset() InputStickerSet          { return m.Data.Stickerset }
func (m *TLinputStickerSetThumb) Setvolume_id(v int64)                    { m.Data.Volume_id = v }
func (m *TLinputStickerSetThumb) Getvolume_id() int64                     { return m.Data.Volume_id }
func (m *TLinputStickerSetThumb) Setlocal_id(v int32)                     { m.Data.Local_id = v }
func (m *TLinputStickerSetThumb) Getlocal_id() int32                      { return m.Data.Local_id }
func (m *TLinputCheckPasswordSRP) Setsrp_id(v int64)                      { m.Data.Srp_id = v }
func (m *TLinputCheckPasswordSRP) Getsrp_id() int64                       { return m.Data.Srp_id }
func (m *TLinputCheckPasswordSRP) SetA(v []uint8)                         { m.Data.A = v }
func (m *TLinputCheckPasswordSRP) GetA() []uint8                          { return m.Data.A }
func (m *TLinputCheckPasswordSRP) SetM1(v []uint8)                        { m.Data.M1 = v }
func (m *TLinputCheckPasswordSRP) GetM1() []uint8                         { return m.Data.M1 }
func (m *TLauth_loginToken) Setexpires(v int32)                           { m.Data.Expires = v }
func (m *TLauth_loginToken) Getexpires() int32                            { return m.Data.Expires }
func (m *TLauth_loginToken) Settoken(v []uint8)                           { m.Data.Token = v }
func (m *TLauth_loginToken) Gettoken() []uint8                            { return m.Data.Token }
func (m *TLauth_loginTokenMigrateTo) Setdc_id(v int32)                    { m.Data.Dc_id = v }
func (m *TLauth_loginTokenMigrateTo) Getdc_id() int32                     { return m.Data.Dc_id }
func (m *TLauth_loginTokenMigrateTo) Settoken(v []uint8)                  { m.Data.Token = v }
func (m *TLauth_loginTokenMigrateTo) Gettoken() []uint8                   { return m.Data.Token }
func (m *TLauth_loginTokenSuccess) Setauthorization(v Auth_Authorization) { m.Data.Authorization = v }
func (m *TLauth_loginTokenSuccess) Getauthorization() Auth_Authorization  { return m.Data.Authorization }
func (m *TLaccount_authorizationForm) Setrequired_types(v []SecureRequiredType) {
	m.Data.Required_types = v
}
func (m *TLaccount_authorizationForm) Getrequired_types() []SecureRequiredType {
	return m.Data.Required_types
}
func (m *TLaccount_authorizationForm) Setvalues(v []SecureValue)      { m.Data.Values = v }
func (m *TLaccount_authorizationForm) Getvalues() []SecureValue       { return m.Data.Values }
func (m *TLaccount_authorizationForm) Seterrors(v []SecureValueError) { m.Data.Errors = v }
func (m *TLaccount_authorizationForm) Geterrors() []SecureValueError  { return m.Data.Errors }
func (m *TLaccount_authorizationForm) Setusers(v []User)              { m.Data.Users = v }
func (m *TLaccount_authorizationForm) Getusers() []User               { return m.Data.Users }
func (m *TLaccount_authorizationForm) Setprivacy_policy_url(v string) { m.Data.Privacy_policy_url = v }
func (m *TLaccount_authorizationForm) Getprivacy_policy_url() string {
	return m.Data.Privacy_policy_url
}
func (m *TLsecureRequiredType) Setnative_names(v bool)                    { m.Data.Native_names = v }
func (m *TLsecureRequiredType) Getnative_names() bool                     { return m.Data.Native_names }
func (m *TLsecureRequiredType) Setselfie_required(v bool)                 { m.Data.Selfie_required = v }
func (m *TLsecureRequiredType) Getselfie_required() bool                  { return m.Data.Selfie_required }
func (m *TLsecureRequiredType) Settranslation_required(v bool)            { m.Data.Translation_required = v }
func (m *TLsecureRequiredType) Gettranslation_required() bool             { return m.Data.Translation_required }
func (m *TLsecureRequiredType) Settype(v SecureValueType)                 { m.Data.Type = v }
func (m *TLsecureRequiredType) Gettype() SecureValueType                  { return m.Data.Type }
func (m *TLsecureRequiredTypeOneOf) Settypes(v []SecureRequiredType)      { m.Data.Types = v }
func (m *TLsecureRequiredTypeOneOf) Gettypes() []SecureRequiredType       { return m.Data.Types }
func (m *TLupdateNewMessage) Setmessage(v Message)                        { m.Data.Message = v }
func (m *TLupdateNewMessage) Getmessage() Message                         { return m.Data.Message }
func (m *TLupdateNewMessage) Setpts(v int32)                              { m.Data.Pts = v }
func (m *TLupdateNewMessage) Getpts() int32                               { return m.Data.Pts }
func (m *TLupdateNewMessage) Setpts_count(v int32)                        { m.Data.Pts_count = v }
func (m *TLupdateNewMessage) Getpts_count() int32                         { return m.Data.Pts_count }
func (m *TLupdateMessageID) Setid(v int32)                                { m.Data.Id = v }
func (m *TLupdateMessageID) Getid() int32                                 { return m.Data.Id }
func (m *TLupdateMessageID) Setrandom_id(v int64)                         { m.Data.Random_id = v }
func (m *TLupdateMessageID) Getrandom_id() int64                          { return m.Data.Random_id }
func (m *TLupdateDeleteMessages) Setmessages(v []int32)                   { m.Data.Messages = v }
func (m *TLupdateDeleteMessages) Getmessages() []int32                    { return m.Data.Messages }
func (m *TLupdateDeleteMessages) Setpts(v int32)                          { m.Data.Pts = v }
func (m *TLupdateDeleteMessages) Getpts() int32                           { return m.Data.Pts }
func (m *TLupdateDeleteMessages) Setpts_count(v int32)                    { m.Data.Pts_count = v }
func (m *TLupdateDeleteMessages) Getpts_count() int32                     { return m.Data.Pts_count }
func (m *TLupdateUserTyping) Setuser_id(v int32)                          { m.Data.User_id = v }
func (m *TLupdateUserTyping) Getuser_id() int32                           { return m.Data.User_id }
func (m *TLupdateUserTyping) Setaction(v SendMessageAction)               { m.Data.Action = v }
func (m *TLupdateUserTyping) Getaction() SendMessageAction                { return m.Data.Action }
func (m *TLupdateChatUserTyping) Setchat_id(v int32)                      { m.Data.Chat_id = v }
func (m *TLupdateChatUserTyping) Getchat_id() int32                       { return m.Data.Chat_id }
func (m *TLupdateChatUserTyping) Setuser_id(v int32)                      { m.Data.User_id = v }
func (m *TLupdateChatUserTyping) Getuser_id() int32                       { return m.Data.User_id }
func (m *TLupdateChatUserTyping) Setaction(v SendMessageAction)           { m.Data.Action = v }
func (m *TLupdateChatUserTyping) Getaction() SendMessageAction            { return m.Data.Action }
func (m *TLupdateChatParticipants) Setparticipants(v ChatParticipants)    { m.Data.Participants = v }
func (m *TLupdateChatParticipants) Getparticipants() ChatParticipants     { return m.Data.Participants }
func (m *TLupdateUserStatus) Setuser_id(v int32)                          { m.Data.User_id = v }
func (m *TLupdateUserStatus) Getuser_id() int32                           { return m.Data.User_id }
func (m *TLupdateUserStatus) Setstatus(v UserStatus)                      { m.Data.Status = v }
func (m *TLupdateUserStatus) Getstatus() UserStatus                       { return m.Data.Status }
func (m *TLupdateUserName) Setuser_id(v int32)                            { m.Data.User_id = v }
func (m *TLupdateUserName) Getuser_id() int32                             { return m.Data.User_id }
func (m *TLupdateUserName) Setfirst_name(v string)                        { m.Data.First_name = v }
func (m *TLupdateUserName) Getfirst_name() string                         { return m.Data.First_name }
func (m *TLupdateUserName) Setlast_name(v string)                         { m.Data.Last_name = v }
func (m *TLupdateUserName) Getlast_name() string                          { return m.Data.Last_name }
func (m *TLupdateUserName) Setusername(v string)                          { m.Data.Username = v }
func (m *TLupdateUserName) Getusername() string                           { return m.Data.Username }
func (m *TLupdateUserPhoto) Setuser_id(v int32)                           { m.Data.User_id = v }
func (m *TLupdateUserPhoto) Getuser_id() int32                            { return m.Data.User_id }
func (m *TLupdateUserPhoto) Setdate(v int32)                              { m.Data.Date = v }
func (m *TLupdateUserPhoto) Getdate() int32                               { return m.Data.Date }
func (m *TLupdateUserPhoto) Setphoto(v UserProfilePhoto)                  { m.Data.Photo = v }
func (m *TLupdateUserPhoto) Getphoto() UserProfilePhoto                   { return m.Data.Photo }
func (m *TLupdateUserPhoto) Setprevious(v Bool)                           { m.Data.Previous = v }
func (m *TLupdateUserPhoto) Getprevious() Bool                            { return m.Data.Previous }
func (m *TLupdateNewEncryptedMessage) Setmessage_18(v EncryptedMessage)   { m.Data.Message_18 = v }
func (m *TLupdateNewEncryptedMessage) Getmessage_18() EncryptedMessage    { return m.Data.Message_18 }
func (m *TLupdateNewEncryptedMessage) Setqts(v int32)                     { m.Data.Qts = v }
func (m *TLupdateNewEncryptedMessage) Getqts() int32                      { return m.Data.Qts }
func (m *TLupdateEncryptedChatTyping) Setchat_id(v int32)                 { m.Data.Chat_id = v }
func (m *TLupdateEncryptedChatTyping) Getchat_id() int32                  { return m.Data.Chat_id }
func (m *TLupdateEncryption) Setchat(v EncryptedChat)                     { m.Data.Chat = v }
func (m *TLupdateEncryption) Getchat() EncryptedChat                      { return m.Data.Chat }
func (m *TLupdateEncryption) Setdate(v int32)                             { m.Data.Date = v }
func (m *TLupdateEncryption) Getdate() int32                              { return m.Data.Date }
func (m *TLupdateEncryptedMessagesRead) Setchat_id(v int32)               { m.Data.Chat_id = v }
func (m *TLupdateEncryptedMessagesRead) Getchat_id() int32                { return m.Data.Chat_id }
func (m *TLupdateEncryptedMessagesRead) Setmax_date(v int32)              { m.Data.Max_date = v }
func (m *TLupdateEncryptedMessagesRead) Getmax_date() int32               { return m.Data.Max_date }
func (m *TLupdateEncryptedMessagesRead) Setdate(v int32)                  { m.Data.Date = v }
func (m *TLupdateEncryptedMessagesRead) Getdate() int32                   { return m.Data.Date }
func (m *TLupdateChatParticipantAdd) Setchat_id(v int32)                  { m.Data.Chat_id = v }
func (m *TLupdateChatParticipantAdd) Getchat_id() int32                   { return m.Data.Chat_id }
func (m *TLupdateChatParticipantAdd) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLupdateChatParticipantAdd) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLupdateChatParticipantAdd) Setinviter_id(v int32)               { m.Data.Inviter_id = v }
func (m *TLupdateChatParticipantAdd) Getinviter_id() int32                { return m.Data.Inviter_id }
func (m *TLupdateChatParticipantAdd) Setdate(v int32)                     { m.Data.Date = v }
func (m *TLupdateChatParticipantAdd) Getdate() int32                      { return m.Data.Date }
func (m *TLupdateChatParticipantAdd) Setversion(v int32)                  { m.Data.Version = v }
func (m *TLupdateChatParticipantAdd) Getversion() int32                   { return m.Data.Version }
func (m *TLupdateChatParticipantDelete) Setchat_id(v int32)               { m.Data.Chat_id = v }
func (m *TLupdateChatParticipantDelete) Getchat_id() int32                { return m.Data.Chat_id }
func (m *TLupdateChatParticipantDelete) Setuser_id(v int32)               { m.Data.User_id = v }
func (m *TLupdateChatParticipantDelete) Getuser_id() int32                { return m.Data.User_id }
func (m *TLupdateChatParticipantDelete) Setversion(v int32)               { m.Data.Version = v }
func (m *TLupdateChatParticipantDelete) Getversion() int32                { return m.Data.Version }
func (m *TLupdateDcOptions) Setdc_options(v []DcOption)                   { m.Data.Dc_options = v }
func (m *TLupdateDcOptions) Getdc_options() []DcOption                    { return m.Data.Dc_options }
func (m *TLupdateNotifySettings) Setpeer(v NotifyPeer)                    { m.Data.Peer = v }
func (m *TLupdateNotifySettings) Getpeer() NotifyPeer                     { return m.Data.Peer }
func (m *TLupdateNotifySettings) Setnotify_settings(v PeerNotifySettings) { m.Data.Notify_settings = v }
func (m *TLupdateNotifySettings) Getnotify_settings() PeerNotifySettings {
	return m.Data.Notify_settings
}
func (m *TLupdateServiceNotification) Setpopup(v bool)                        { m.Data.Popup = v }
func (m *TLupdateServiceNotification) Getpopup() bool                         { return m.Data.Popup }
func (m *TLupdateServiceNotification) Setinbox_date(v int32)                  { m.Data.Inbox_date = v }
func (m *TLupdateServiceNotification) Getinbox_date() int32                   { return m.Data.Inbox_date }
func (m *TLupdateServiceNotification) Settype(v string)                       { m.Data.Type = v }
func (m *TLupdateServiceNotification) Gettype() string                        { return m.Data.Type }
func (m *TLupdateServiceNotification) Setmessage_30(v string)                 { m.Data.Message_30 = v }
func (m *TLupdateServiceNotification) Getmessage_30() string                  { return m.Data.Message_30 }
func (m *TLupdateServiceNotification) Setmedia(v MessageMedia)                { m.Data.Media = v }
func (m *TLupdateServiceNotification) Getmedia() MessageMedia                 { return m.Data.Media }
func (m *TLupdateServiceNotification) Setentities(v []MessageEntity)          { m.Data.Entities = v }
func (m *TLupdateServiceNotification) Getentities() []MessageEntity           { return m.Data.Entities }
func (m *TLupdatePrivacy) Setkey_key(v PrivacyKey)                            { m.Data.Key_key = v }
func (m *TLupdatePrivacy) Getkey_key() PrivacyKey                             { return m.Data.Key_key }
func (m *TLupdatePrivacy) Setrules(v []PrivacyRule)                           { m.Data.Rules = v }
func (m *TLupdatePrivacy) Getrules() []PrivacyRule                            { return m.Data.Rules }
func (m *TLupdateUserPhone) Setuser_id(v int32)                               { m.Data.User_id = v }
func (m *TLupdateUserPhone) Getuser_id() int32                                { return m.Data.User_id }
func (m *TLupdateUserPhone) Setphone(v string)                                { m.Data.Phone = v }
func (m *TLupdateUserPhone) Getphone() string                                 { return m.Data.Phone }
func (m *TLupdateReadHistoryInbox) Setfolder_id(v int32)                      { m.Data.Folder_id = v }
func (m *TLupdateReadHistoryInbox) Getfolder_id() int32                       { return m.Data.Folder_id }
func (m *TLupdateReadHistoryInbox) Setpeer_37(v Peer)                         { m.Data.Peer_37 = v }
func (m *TLupdateReadHistoryInbox) Getpeer_37() Peer                          { return m.Data.Peer_37 }
func (m *TLupdateReadHistoryInbox) Setmax_id(v int32)                         { m.Data.Max_id = v }
func (m *TLupdateReadHistoryInbox) Getmax_id() int32                          { return m.Data.Max_id }
func (m *TLupdateReadHistoryInbox) Setstill_unread_count(v int32)             { m.Data.Still_unread_count = v }
func (m *TLupdateReadHistoryInbox) Getstill_unread_count() int32              { return m.Data.Still_unread_count }
func (m *TLupdateReadHistoryInbox) Setpts(v int32)                            { m.Data.Pts = v }
func (m *TLupdateReadHistoryInbox) Getpts() int32                             { return m.Data.Pts }
func (m *TLupdateReadHistoryInbox) Setpts_count(v int32)                      { m.Data.Pts_count = v }
func (m *TLupdateReadHistoryInbox) Getpts_count() int32                       { return m.Data.Pts_count }
func (m *TLupdateReadHistoryOutbox) Setpeer_37(v Peer)                        { m.Data.Peer_37 = v }
func (m *TLupdateReadHistoryOutbox) Getpeer_37() Peer                         { return m.Data.Peer_37 }
func (m *TLupdateReadHistoryOutbox) Setmax_id(v int32)                        { m.Data.Max_id = v }
func (m *TLupdateReadHistoryOutbox) Getmax_id() int32                         { return m.Data.Max_id }
func (m *TLupdateReadHistoryOutbox) Setpts(v int32)                           { m.Data.Pts = v }
func (m *TLupdateReadHistoryOutbox) Getpts() int32                            { return m.Data.Pts }
func (m *TLupdateReadHistoryOutbox) Setpts_count(v int32)                     { m.Data.Pts_count = v }
func (m *TLupdateReadHistoryOutbox) Getpts_count() int32                      { return m.Data.Pts_count }
func (m *TLupdateWebPage) Setwebpage(v WebPage)                               { m.Data.Webpage = v }
func (m *TLupdateWebPage) Getwebpage() WebPage                                { return m.Data.Webpage }
func (m *TLupdateWebPage) Setpts(v int32)                                     { m.Data.Pts = v }
func (m *TLupdateWebPage) Getpts() int32                                      { return m.Data.Pts }
func (m *TLupdateWebPage) Setpts_count(v int32)                               { m.Data.Pts_count = v }
func (m *TLupdateWebPage) Getpts_count() int32                                { return m.Data.Pts_count }
func (m *TLupdateReadMessagesContents) Setmessages(v []int32)                 { m.Data.Messages = v }
func (m *TLupdateReadMessagesContents) Getmessages() []int32                  { return m.Data.Messages }
func (m *TLupdateReadMessagesContents) Setpts(v int32)                        { m.Data.Pts = v }
func (m *TLupdateReadMessagesContents) Getpts() int32                         { return m.Data.Pts }
func (m *TLupdateReadMessagesContents) Setpts_count(v int32)                  { m.Data.Pts_count = v }
func (m *TLupdateReadMessagesContents) Getpts_count() int32                   { return m.Data.Pts_count }
func (m *TLupdateChannelTooLong) Setchannel_id(v int32)                       { m.Data.Channel_id = v }
func (m *TLupdateChannelTooLong) Getchannel_id() int32                        { return m.Data.Channel_id }
func (m *TLupdateChannelTooLong) Setpts(v int32)                              { m.Data.Pts = v }
func (m *TLupdateChannelTooLong) Getpts() int32                               { return m.Data.Pts }
func (m *TLupdateChannel) Setchannel_id(v int32)                              { m.Data.Channel_id = v }
func (m *TLupdateChannel) Getchannel_id() int32                               { return m.Data.Channel_id }
func (m *TLupdateNewChannelMessage) Setmessage(v Message)                     { m.Data.Message = v }
func (m *TLupdateNewChannelMessage) Getmessage() Message                      { return m.Data.Message }
func (m *TLupdateNewChannelMessage) Setpts(v int32)                           { m.Data.Pts = v }
func (m *TLupdateNewChannelMessage) Getpts() int32                            { return m.Data.Pts }
func (m *TLupdateNewChannelMessage) Setpts_count(v int32)                     { m.Data.Pts_count = v }
func (m *TLupdateNewChannelMessage) Getpts_count() int32                      { return m.Data.Pts_count }
func (m *TLupdateReadChannelInbox) Setfolder_id(v int32)                      { m.Data.Folder_id = v }
func (m *TLupdateReadChannelInbox) Getfolder_id() int32                       { return m.Data.Folder_id }
func (m *TLupdateReadChannelInbox) Setchannel_id(v int32)                     { m.Data.Channel_id = v }
func (m *TLupdateReadChannelInbox) Getchannel_id() int32                      { return m.Data.Channel_id }
func (m *TLupdateReadChannelInbox) Setmax_id(v int32)                         { m.Data.Max_id = v }
func (m *TLupdateReadChannelInbox) Getmax_id() int32                          { return m.Data.Max_id }
func (m *TLupdateReadChannelInbox) Setstill_unread_count(v int32)             { m.Data.Still_unread_count = v }
func (m *TLupdateReadChannelInbox) Getstill_unread_count() int32              { return m.Data.Still_unread_count }
func (m *TLupdateReadChannelInbox) Setpts(v int32)                            { m.Data.Pts = v }
func (m *TLupdateReadChannelInbox) Getpts() int32                             { return m.Data.Pts }
func (m *TLupdateDeleteChannelMessages) Setchannel_id(v int32)                { m.Data.Channel_id = v }
func (m *TLupdateDeleteChannelMessages) Getchannel_id() int32                 { return m.Data.Channel_id }
func (m *TLupdateDeleteChannelMessages) Setmessages(v []int32)                { m.Data.Messages = v }
func (m *TLupdateDeleteChannelMessages) Getmessages() []int32                 { return m.Data.Messages }
func (m *TLupdateDeleteChannelMessages) Setpts(v int32)                       { m.Data.Pts = v }
func (m *TLupdateDeleteChannelMessages) Getpts() int32                        { return m.Data.Pts }
func (m *TLupdateDeleteChannelMessages) Setpts_count(v int32)                 { m.Data.Pts_count = v }
func (m *TLupdateDeleteChannelMessages) Getpts_count() int32                  { return m.Data.Pts_count }
func (m *TLupdateChannelMessageViews) Setchannel_id(v int32)                  { m.Data.Channel_id = v }
func (m *TLupdateChannelMessageViews) Getchannel_id() int32                   { return m.Data.Channel_id }
func (m *TLupdateChannelMessageViews) Setid(v int32)                          { m.Data.Id = v }
func (m *TLupdateChannelMessageViews) Getid() int32                           { return m.Data.Id }
func (m *TLupdateChannelMessageViews) Setviews(v int32)                       { m.Data.Views = v }
func (m *TLupdateChannelMessageViews) Getviews() int32                        { return m.Data.Views }
func (m *TLupdateChatParticipantAdmin) Setchat_id(v int32)                    { m.Data.Chat_id = v }
func (m *TLupdateChatParticipantAdmin) Getchat_id() int32                     { return m.Data.Chat_id }
func (m *TLupdateChatParticipantAdmin) Setuser_id(v int32)                    { m.Data.User_id = v }
func (m *TLupdateChatParticipantAdmin) Getuser_id() int32                     { return m.Data.User_id }
func (m *TLupdateChatParticipantAdmin) Setis_admin(v Bool)                    { m.Data.Is_admin = v }
func (m *TLupdateChatParticipantAdmin) Getis_admin() Bool                     { return m.Data.Is_admin }
func (m *TLupdateChatParticipantAdmin) Setversion(v int32)                    { m.Data.Version = v }
func (m *TLupdateChatParticipantAdmin) Getversion() int32                     { return m.Data.Version }
func (m *TLupdateNewStickerSet) Setstickerset(v Messages_StickerSet)          { m.Data.Stickerset = v }
func (m *TLupdateNewStickerSet) Getstickerset() Messages_StickerSet           { return m.Data.Stickerset }
func (m *TLupdateStickerSetsOrder) Setmasks(v bool)                           { m.Data.Masks = v }
func (m *TLupdateStickerSetsOrder) Getmasks() bool                            { return m.Data.Masks }
func (m *TLupdateStickerSetsOrder) Setorder(v []Long)                         { m.Data.Order = v }
func (m *TLupdateStickerSetsOrder) Getorder() []Long                          { return m.Data.Order }
func (m *TLupdateBotInlineQuery) Setquery_id(v int64)                         { m.Data.Query_id = v }
func (m *TLupdateBotInlineQuery) Getquery_id() int64                          { return m.Data.Query_id }
func (m *TLupdateBotInlineQuery) Setuser_id(v int32)                          { m.Data.User_id = v }
func (m *TLupdateBotInlineQuery) Getuser_id() int32                           { return m.Data.User_id }
func (m *TLupdateBotInlineQuery) Setquery(v string)                           { m.Data.Query = v }
func (m *TLupdateBotInlineQuery) Getquery() string                            { return m.Data.Query }
func (m *TLupdateBotInlineQuery) Setgeo(v GeoPoint)                           { m.Data.Geo = v }
func (m *TLupdateBotInlineQuery) Getgeo() GeoPoint                            { return m.Data.Geo }
func (m *TLupdateBotInlineQuery) Setoffset(v string)                          { m.Data.Offset = v }
func (m *TLupdateBotInlineQuery) Getoffset() string                           { return m.Data.Offset }
func (m *TLupdateBotInlineSend) Setuser_id(v int32)                           { m.Data.User_id = v }
func (m *TLupdateBotInlineSend) Getuser_id() int32                            { return m.Data.User_id }
func (m *TLupdateBotInlineSend) Setquery(v string)                            { m.Data.Query = v }
func (m *TLupdateBotInlineSend) Getquery() string                             { return m.Data.Query }
func (m *TLupdateBotInlineSend) Setgeo(v GeoPoint)                            { m.Data.Geo = v }
func (m *TLupdateBotInlineSend) Getgeo() GeoPoint                             { return m.Data.Geo }
func (m *TLupdateBotInlineSend) Setid_51(v string)                            { m.Data.Id_51 = v }
func (m *TLupdateBotInlineSend) Getid_51() string                             { return m.Data.Id_51 }
func (m *TLupdateBotInlineSend) Setmsg_id(v InputBotInlineMessageID)          { m.Data.Msg_id = v }
func (m *TLupdateBotInlineSend) Getmsg_id() InputBotInlineMessageID           { return m.Data.Msg_id }
func (m *TLupdateEditChannelMessage) Setmessage(v Message)                    { m.Data.Message = v }
func (m *TLupdateEditChannelMessage) Getmessage() Message                     { return m.Data.Message }
func (m *TLupdateEditChannelMessage) Setpts(v int32)                          { m.Data.Pts = v }
func (m *TLupdateEditChannelMessage) Getpts() int32                           { return m.Data.Pts }
func (m *TLupdateEditChannelMessage) Setpts_count(v int32)                    { m.Data.Pts_count = v }
func (m *TLupdateEditChannelMessage) Getpts_count() int32                     { return m.Data.Pts_count }
func (m *TLupdateBotCallbackQuery) Setquery_id(v int64)                       { m.Data.Query_id = v }
func (m *TLupdateBotCallbackQuery) Getquery_id() int64                        { return m.Data.Query_id }
func (m *TLupdateBotCallbackQuery) Setuser_id(v int32)                        { m.Data.User_id = v }
func (m *TLupdateBotCallbackQuery) Getuser_id() int32                         { return m.Data.User_id }
func (m *TLupdateBotCallbackQuery) Setpeer_37(v Peer)                         { m.Data.Peer_37 = v }
func (m *TLupdateBotCallbackQuery) Getpeer_37() Peer                          { return m.Data.Peer_37 }
func (m *TLupdateBotCallbackQuery) Setmsg_id_53(v int32)                      { m.Data.Msg_id_53 = v }
func (m *TLupdateBotCallbackQuery) Getmsg_id_53() int32                       { return m.Data.Msg_id_53 }
func (m *TLupdateBotCallbackQuery) Setchat_instance(v int64)                  { m.Data.Chat_instance = v }
func (m *TLupdateBotCallbackQuery) Getchat_instance() int64                   { return m.Data.Chat_instance }
func (m *TLupdateBotCallbackQuery) Setdata(v []uint8)                         { m.Data.Data = v }
func (m *TLupdateBotCallbackQuery) Getdata() []uint8                          { return m.Data.Data }
func (m *TLupdateBotCallbackQuery) Setgame_short_name(v string)               { m.Data.Game_short_name = v }
func (m *TLupdateBotCallbackQuery) Getgame_short_name() string                { return m.Data.Game_short_name }
func (m *TLupdateEditMessage) Setmessage(v Message)                           { m.Data.Message = v }
func (m *TLupdateEditMessage) Getmessage() Message                            { return m.Data.Message }
func (m *TLupdateEditMessage) Setpts(v int32)                                 { m.Data.Pts = v }
func (m *TLupdateEditMessage) Getpts() int32                                  { return m.Data.Pts }
func (m *TLupdateEditMessage) Setpts_count(v int32)                           { m.Data.Pts_count = v }
func (m *TLupdateEditMessage) Getpts_count() int32                            { return m.Data.Pts_count }
func (m *TLupdateInlineBotCallbackQuery) Setquery_id(v int64)                 { m.Data.Query_id = v }
func (m *TLupdateInlineBotCallbackQuery) Getquery_id() int64                  { return m.Data.Query_id }
func (m *TLupdateInlineBotCallbackQuery) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLupdateInlineBotCallbackQuery) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLupdateInlineBotCallbackQuery) Setmsg_id(v InputBotInlineMessageID) { m.Data.Msg_id = v }
func (m *TLupdateInlineBotCallbackQuery) Getmsg_id() InputBotInlineMessageID  { return m.Data.Msg_id }
func (m *TLupdateInlineBotCallbackQuery) Setchat_instance(v int64)            { m.Data.Chat_instance = v }
func (m *TLupdateInlineBotCallbackQuery) Getchat_instance() int64             { return m.Data.Chat_instance }
func (m *TLupdateInlineBotCallbackQuery) Setdata(v []uint8)                   { m.Data.Data = v }
func (m *TLupdateInlineBotCallbackQuery) Getdata() []uint8                    { return m.Data.Data }
func (m *TLupdateInlineBotCallbackQuery) Setgame_short_name(v string)         { m.Data.Game_short_name = v }
func (m *TLupdateInlineBotCallbackQuery) Getgame_short_name() string          { return m.Data.Game_short_name }
func (m *TLupdateReadChannelOutbox) Setchannel_id(v int32)                    { m.Data.Channel_id = v }
func (m *TLupdateReadChannelOutbox) Getchannel_id() int32                     { return m.Data.Channel_id }
func (m *TLupdateReadChannelOutbox) Setmax_id(v int32)                        { m.Data.Max_id = v }
func (m *TLupdateReadChannelOutbox) Getmax_id() int32                         { return m.Data.Max_id }
func (m *TLupdateDraftMessage) Setpeer_37(v Peer)                             { m.Data.Peer_37 = v }
func (m *TLupdateDraftMessage) Getpeer_37() Peer                              { return m.Data.Peer_37 }
func (m *TLupdateDraftMessage) Setdraft(v DraftMessage)                       { m.Data.Draft = v }
func (m *TLupdateDraftMessage) Getdraft() DraftMessage                        { return m.Data.Draft }
func (m *TLupdateChannelWebPage) Setchannel_id(v int32)                       { m.Data.Channel_id = v }
func (m *TLupdateChannelWebPage) Getchannel_id() int32                        { return m.Data.Channel_id }
func (m *TLupdateChannelWebPage) Setwebpage(v WebPage)                        { m.Data.Webpage = v }
func (m *TLupdateChannelWebPage) Getwebpage() WebPage                         { return m.Data.Webpage }
func (m *TLupdateChannelWebPage) Setpts(v int32)                              { m.Data.Pts = v }
func (m *TLupdateChannelWebPage) Getpts() int32                               { return m.Data.Pts }
func (m *TLupdateChannelWebPage) Setpts_count(v int32)                        { m.Data.Pts_count = v }
func (m *TLupdateChannelWebPage) Getpts_count() int32                         { return m.Data.Pts_count }
func (m *TLupdateDialogPinned) Setpinned(v bool)                              { m.Data.Pinned = v }
func (m *TLupdateDialogPinned) Getpinned() bool                               { return m.Data.Pinned }
func (m *TLupdateDialogPinned) Setfolder_id(v int32)                          { m.Data.Folder_id = v }
func (m *TLupdateDialogPinned) Getfolder_id() int32                           { return m.Data.Folder_id }
func (m *TLupdateDialogPinned) Setpeer_59(v DialogPeer)                       { m.Data.Peer_59 = v }
func (m *TLupdateDialogPinned) Getpeer_59() DialogPeer                        { return m.Data.Peer_59 }
func (m *TLupdatePinnedDialogs) Setfolder_id(v int32)                         { m.Data.Folder_id = v }
func (m *TLupdatePinnedDialogs) Getfolder_id() int32                          { return m.Data.Folder_id }
func (m *TLupdatePinnedDialogs) Setorder_60(v []DialogPeer)                   { m.Data.Order_60 = v }
func (m *TLupdatePinnedDialogs) Getorder_60() []DialogPeer                    { return m.Data.Order_60 }
func (m *TLupdateBotWebhookJSON) Setdata_61(v DataJSON)                       { m.Data.Data_61 = v }
func (m *TLupdateBotWebhookJSON) Getdata_61() DataJSON                        { return m.Data.Data_61 }
func (m *TLupdateBotWebhookJSONQuery) Setquery_id(v int64)                    { m.Data.Query_id = v }
func (m *TLupdateBotWebhookJSONQuery) Getquery_id() int64                     { return m.Data.Query_id }
func (m *TLupdateBotWebhookJSONQuery) Setdata_61(v DataJSON)                  { m.Data.Data_61 = v }
func (m *TLupdateBotWebhookJSONQuery) Getdata_61() DataJSON                   { return m.Data.Data_61 }
func (m *TLupdateBotWebhookJSONQuery) Settimeout(v int32)                     { m.Data.Timeout = v }
func (m *TLupdateBotWebhookJSONQuery) Gettimeout() int32                      { return m.Data.Timeout }
func (m *TLupdateBotShippingQuery) Setquery_id(v int64)                       { m.Data.Query_id = v }
func (m *TLupdateBotShippingQuery) Getquery_id() int64                        { return m.Data.Query_id }
func (m *TLupdateBotShippingQuery) Setuser_id(v int32)                        { m.Data.User_id = v }
func (m *TLupdateBotShippingQuery) Getuser_id() int32                         { return m.Data.User_id }
func (m *TLupdateBotShippingQuery) Setpayload(v []uint8)                      { m.Data.Payload = v }
func (m *TLupdateBotShippingQuery) Getpayload() []uint8                       { return m.Data.Payload }
func (m *TLupdateBotShippingQuery) Setshipping_address(v PostAddress)         { m.Data.Shipping_address = v }
func (m *TLupdateBotShippingQuery) Getshipping_address() PostAddress          { return m.Data.Shipping_address }
func (m *TLupdateBotPrecheckoutQuery) Setquery_id(v int64)                    { m.Data.Query_id = v }
func (m *TLupdateBotPrecheckoutQuery) Getquery_id() int64                     { return m.Data.Query_id }
func (m *TLupdateBotPrecheckoutQuery) Setuser_id(v int32)                     { m.Data.User_id = v }
func (m *TLupdateBotPrecheckoutQuery) Getuser_id() int32                      { return m.Data.User_id }
func (m *TLupdateBotPrecheckoutQuery) Setpayload(v []uint8)                   { m.Data.Payload = v }
func (m *TLupdateBotPrecheckoutQuery) Getpayload() []uint8                    { return m.Data.Payload }
func (m *TLupdateBotPrecheckoutQuery) Setinfo(v PaymentRequestedInfo)         { m.Data.Info = v }
func (m *TLupdateBotPrecheckoutQuery) Getinfo() PaymentRequestedInfo          { return m.Data.Info }
func (m *TLupdateBotPrecheckoutQuery) Setshipping_option_id(v string)         { m.Data.Shipping_option_id = v }
func (m *TLupdateBotPrecheckoutQuery) Getshipping_option_id() string {
	return m.Data.Shipping_option_id
}
func (m *TLupdateBotPrecheckoutQuery) Setcurrency(v string)             { m.Data.Currency = v }
func (m *TLupdateBotPrecheckoutQuery) Getcurrency() string              { return m.Data.Currency }
func (m *TLupdateBotPrecheckoutQuery) Settotal_amount(v int64)          { m.Data.Total_amount = v }
func (m *TLupdateBotPrecheckoutQuery) Gettotal_amount() int64           { return m.Data.Total_amount }
func (m *TLupdatePhoneCall) Setphone_call(v PhoneCall)                  { m.Data.Phone_call = v }
func (m *TLupdatePhoneCall) Getphone_call() PhoneCall                   { return m.Data.Phone_call }
func (m *TLupdateLangPackTooLong) Setlang_code(v string)                { m.Data.Lang_code = v }
func (m *TLupdateLangPackTooLong) Getlang_code() string                 { return m.Data.Lang_code }
func (m *TLupdateLangPack) Setdifference(v LangPackDifference)          { m.Data.Difference = v }
func (m *TLupdateLangPack) Getdifference() LangPackDifference           { return m.Data.Difference }
func (m *TLupdateChannelReadMessagesContents) Setchannel_id(v int32)    { m.Data.Channel_id = v }
func (m *TLupdateChannelReadMessagesContents) Getchannel_id() int32     { return m.Data.Channel_id }
func (m *TLupdateChannelReadMessagesContents) Setmessages(v []int32)    { m.Data.Messages = v }
func (m *TLupdateChannelReadMessagesContents) Getmessages() []int32     { return m.Data.Messages }
func (m *TLupdateChannelAvailableMessages) Setchannel_id(v int32)       { m.Data.Channel_id = v }
func (m *TLupdateChannelAvailableMessages) Getchannel_id() int32        { return m.Data.Channel_id }
func (m *TLupdateChannelAvailableMessages) Setavailable_min_id(v int32) { m.Data.Available_min_id = v }
func (m *TLupdateChannelAvailableMessages) Getavailable_min_id() int32 {
	return m.Data.Available_min_id
}
func (m *TLupdateDialogUnreadMark) Setunread(v bool)         { m.Data.Unread = v }
func (m *TLupdateDialogUnreadMark) Getunread() bool          { return m.Data.Unread }
func (m *TLupdateDialogUnreadMark) Setpeer_59(v DialogPeer)  { m.Data.Peer_59 = v }
func (m *TLupdateDialogUnreadMark) Getpeer_59() DialogPeer   { return m.Data.Peer_59 }
func (m *TLupdateMessagePoll) Setpoll_id(v int64)            { m.Data.Poll_id = v }
func (m *TLupdateMessagePoll) Getpoll_id() int64             { return m.Data.Poll_id }
func (m *TLupdateMessagePoll) Setpoll(v Poll)                { m.Data.Poll = v }
func (m *TLupdateMessagePoll) Getpoll() Poll                 { return m.Data.Poll }
func (m *TLupdateMessagePoll) Setresults(v PollResults)      { m.Data.Results = v }
func (m *TLupdateMessagePoll) Getresults() PollResults       { return m.Data.Results }
func (m *TLupdateChatDefaultBannedRights) Setpeer_37(v Peer) { m.Data.Peer_37 = v }
func (m *TLupdateChatDefaultBannedRights) Getpeer_37() Peer  { return m.Data.Peer_37 }
func (m *TLupdateChatDefaultBannedRights) Setdefault_banned_rights(v ChatBannedRights) {
	m.Data.Default_banned_rights = v
}
func (m *TLupdateChatDefaultBannedRights) Getdefault_banned_rights() ChatBannedRights {
	return m.Data.Default_banned_rights
}
func (m *TLupdateChatDefaultBannedRights) Setversion(v int32)      { m.Data.Version = v }
func (m *TLupdateChatDefaultBannedRights) Getversion() int32       { return m.Data.Version }
func (m *TLupdateFolderPeers) Setfolder_peers(v []FolderPeer)      { m.Data.Folder_peers = v }
func (m *TLupdateFolderPeers) Getfolder_peers() []FolderPeer       { return m.Data.Folder_peers }
func (m *TLupdateFolderPeers) Setpts(v int32)                      { m.Data.Pts = v }
func (m *TLupdateFolderPeers) Getpts() int32                       { return m.Data.Pts }
func (m *TLupdateFolderPeers) Setpts_count(v int32)                { m.Data.Pts_count = v }
func (m *TLupdateFolderPeers) Getpts_count() int32                 { return m.Data.Pts_count }
func (m *TLupdatePeerSettings) Setpeer_37(v Peer)                  { m.Data.Peer_37 = v }
func (m *TLupdatePeerSettings) Getpeer_37() Peer                   { return m.Data.Peer_37 }
func (m *TLupdatePeerSettings) Setsettings(v PeerSettings)         { m.Data.Settings = v }
func (m *TLupdatePeerSettings) Getsettings() PeerSettings          { return m.Data.Settings }
func (m *TLupdatePeerLocated) Setpeers(v []PeerLocated)            { m.Data.Peers = v }
func (m *TLupdatePeerLocated) Getpeers() []PeerLocated             { return m.Data.Peers }
func (m *TLupdateNewScheduledMessage) Setmessage(v Message)        { m.Data.Message = v }
func (m *TLupdateNewScheduledMessage) Getmessage() Message         { return m.Data.Message }
func (m *TLupdateDeleteScheduledMessages) Setpeer_37(v Peer)       { m.Data.Peer_37 = v }
func (m *TLupdateDeleteScheduledMessages) Getpeer_37() Peer        { return m.Data.Peer_37 }
func (m *TLupdateDeleteScheduledMessages) Setmessages(v []int32)   { m.Data.Messages = v }
func (m *TLupdateDeleteScheduledMessages) Getmessages() []int32    { return m.Data.Messages }
func (m *TLupdateTheme) Settheme(v Theme)                          { m.Data.Theme = v }
func (m *TLupdateTheme) Gettheme() Theme                           { return m.Data.Theme }
func (m *TLupdateGeoLiveViewed) Setpeer_37(v Peer)                 { m.Data.Peer_37 = v }
func (m *TLupdateGeoLiveViewed) Getpeer_37() Peer                  { return m.Data.Peer_37 }
func (m *TLupdateGeoLiveViewed) Setmsg_id_53(v int32)              { m.Data.Msg_id_53 = v }
func (m *TLupdateGeoLiveViewed) Getmsg_id_53() int32               { return m.Data.Msg_id_53 }
func (m *TLupdateMessagePollVote) Setpoll_id(v int64)              { m.Data.Poll_id = v }
func (m *TLupdateMessagePollVote) Getpoll_id() int64               { return m.Data.Poll_id }
func (m *TLupdateMessagePollVote) Setuser_id(v int32)              { m.Data.User_id = v }
func (m *TLupdateMessagePollVote) Getuser_id() int32               { return m.Data.User_id }
func (m *TLupdateMessagePollVote) Setoptions(v [][]uint8)          { m.Data.Options = v }
func (m *TLupdateMessagePollVote) Getoptions() [][]uint8           { return m.Data.Options }
func (m *TLupdateDialogFilter) Setid(v int32)                      { m.Data.Id = v }
func (m *TLupdateDialogFilter) Getid() int32                       { return m.Data.Id }
func (m *TLupdateDialogFilter) Setfilter(v DialogFilter)           { m.Data.Filter = v }
func (m *TLupdateDialogFilter) Getfilter() DialogFilter            { return m.Data.Filter }
func (m *TLupdateDialogFilterOrder) Setorder_84(v []int32)         { m.Data.Order_84 = v }
func (m *TLupdateDialogFilterOrder) Getorder_84() []int32          { return m.Data.Order_84 }
func (m *TLupdatePhoneCallSignalingData) Setphone_call_id(v int64) { m.Data.Phone_call_id = v }
func (m *TLupdatePhoneCallSignalingData) Getphone_call_id() int64  { return m.Data.Phone_call_id }
func (m *TLupdatePhoneCallSignalingData) Setdata(v []uint8)        { m.Data.Data = v }
func (m *TLupdatePhoneCallSignalingData) Getdata() []uint8         { return m.Data.Data }
func (m *TLupdateChannelParticipant) Setchannel_id(v int32)        { m.Data.Channel_id = v }
func (m *TLupdateChannelParticipant) Getchannel_id() int32         { return m.Data.Channel_id }
func (m *TLupdateChannelParticipant) Setdate(v int32)              { m.Data.Date = v }
func (m *TLupdateChannelParticipant) Getdate() int32               { return m.Data.Date }
func (m *TLupdateChannelParticipant) Setuser_id(v int32)           { m.Data.User_id = v }
func (m *TLupdateChannelParticipant) Getuser_id() int32            { return m.Data.User_id }
func (m *TLupdateChannelParticipant) Setprev_participant(v ChannelParticipant) {
	m.Data.Prev_participant = v
}
func (m *TLupdateChannelParticipant) Getprev_participant() ChannelParticipant {
	return m.Data.Prev_participant
}
func (m *TLupdateChannelParticipant) Setnew_participant(v ChannelParticipant) {
	m.Data.New_participant = v
}
func (m *TLupdateChannelParticipant) Getnew_participant() ChannelParticipant {
	return m.Data.New_participant
}
func (m *TLupdateChannelParticipant) Setqts(v int32)                      { m.Data.Qts = v }
func (m *TLupdateChannelParticipant) Getqts() int32                       { return m.Data.Qts }
func (m *TLupdateChannelMessageForwards) Setchannel_id(v int32)           { m.Data.Channel_id = v }
func (m *TLupdateChannelMessageForwards) Getchannel_id() int32            { return m.Data.Channel_id }
func (m *TLupdateChannelMessageForwards) Setid(v int32)                   { m.Data.Id = v }
func (m *TLupdateChannelMessageForwards) Getid() int32                    { return m.Data.Id }
func (m *TLupdateChannelMessageForwards) Setforwards(v int32)             { m.Data.Forwards = v }
func (m *TLupdateChannelMessageForwards) Getforwards() int32              { return m.Data.Forwards }
func (m *TLupdateReadChannelDiscussionInbox) Setchannel_id(v int32)       { m.Data.Channel_id = v }
func (m *TLupdateReadChannelDiscussionInbox) Getchannel_id() int32        { return m.Data.Channel_id }
func (m *TLupdateReadChannelDiscussionInbox) Settop_msg_id(v int32)       { m.Data.Top_msg_id = v }
func (m *TLupdateReadChannelDiscussionInbox) Gettop_msg_id() int32        { return m.Data.Top_msg_id }
func (m *TLupdateReadChannelDiscussionInbox) Setread_max_id(v int32)      { m.Data.Read_max_id = v }
func (m *TLupdateReadChannelDiscussionInbox) Getread_max_id() int32       { return m.Data.Read_max_id }
func (m *TLupdateReadChannelDiscussionInbox) Setbroadcast_id(v int32)     { m.Data.Broadcast_id = v }
func (m *TLupdateReadChannelDiscussionInbox) Getbroadcast_id() int32      { return m.Data.Broadcast_id }
func (m *TLupdateReadChannelDiscussionInbox) Setbroadcast_post(v int32)   { m.Data.Broadcast_post = v }
func (m *TLupdateReadChannelDiscussionInbox) Getbroadcast_post() int32    { return m.Data.Broadcast_post }
func (m *TLupdateReadChannelDiscussionOutbox) Setchannel_id(v int32)      { m.Data.Channel_id = v }
func (m *TLupdateReadChannelDiscussionOutbox) Getchannel_id() int32       { return m.Data.Channel_id }
func (m *TLupdateReadChannelDiscussionOutbox) Settop_msg_id(v int32)      { m.Data.Top_msg_id = v }
func (m *TLupdateReadChannelDiscussionOutbox) Gettop_msg_id() int32       { return m.Data.Top_msg_id }
func (m *TLupdateReadChannelDiscussionOutbox) Setread_max_id(v int32)     { m.Data.Read_max_id = v }
func (m *TLupdateReadChannelDiscussionOutbox) Getread_max_id() int32      { return m.Data.Read_max_id }
func (m *TLupdatePeerBlocked) Setpeer_id(v Peer)                          { m.Data.Peer_id = v }
func (m *TLupdatePeerBlocked) Getpeer_id() Peer                           { return m.Data.Peer_id }
func (m *TLupdatePeerBlocked) Setblocked(v Bool)                          { m.Data.Blocked = v }
func (m *TLupdatePeerBlocked) Getblocked() Bool                           { return m.Data.Blocked }
func (m *TLupdateChannelUserTyping) Setchannel_id(v int32)                { m.Data.Channel_id = v }
func (m *TLupdateChannelUserTyping) Getchannel_id() int32                 { return m.Data.Channel_id }
func (m *TLupdateChannelUserTyping) Settop_msg_id(v int32)                { m.Data.Top_msg_id = v }
func (m *TLupdateChannelUserTyping) Gettop_msg_id() int32                 { return m.Data.Top_msg_id }
func (m *TLupdateChannelUserTyping) Setuser_id(v int32)                   { m.Data.User_id = v }
func (m *TLupdateChannelUserTyping) Getuser_id() int32                    { return m.Data.User_id }
func (m *TLupdateChannelUserTyping) Setaction(v SendMessageAction)        { m.Data.Action = v }
func (m *TLupdateChannelUserTyping) Getaction() SendMessageAction         { return m.Data.Action }
func (m *TLupdatePinnedMessages) Setpinned(v bool)                        { m.Data.Pinned = v }
func (m *TLupdatePinnedMessages) Getpinned() bool                         { return m.Data.Pinned }
func (m *TLupdatePinnedMessages) Setpeer_37(v Peer)                       { m.Data.Peer_37 = v }
func (m *TLupdatePinnedMessages) Getpeer_37() Peer                        { return m.Data.Peer_37 }
func (m *TLupdatePinnedMessages) Setmessages(v []int32)                   { m.Data.Messages = v }
func (m *TLupdatePinnedMessages) Getmessages() []int32                    { return m.Data.Messages }
func (m *TLupdatePinnedMessages) Setpts(v int32)                          { m.Data.Pts = v }
func (m *TLupdatePinnedMessages) Getpts() int32                           { return m.Data.Pts }
func (m *TLupdatePinnedMessages) Setpts_count(v int32)                    { m.Data.Pts_count = v }
func (m *TLupdatePinnedMessages) Getpts_count() int32                     { return m.Data.Pts_count }
func (m *TLupdatePinnedChannelMessages) Setpinned(v bool)                 { m.Data.Pinned = v }
func (m *TLupdatePinnedChannelMessages) Getpinned() bool                  { return m.Data.Pinned }
func (m *TLupdatePinnedChannelMessages) Setchannel_id(v int32)            { m.Data.Channel_id = v }
func (m *TLupdatePinnedChannelMessages) Getchannel_id() int32             { return m.Data.Channel_id }
func (m *TLupdatePinnedChannelMessages) Setmessages(v []int32)            { m.Data.Messages = v }
func (m *TLupdatePinnedChannelMessages) Getmessages() []int32             { return m.Data.Messages }
func (m *TLupdatePinnedChannelMessages) Setpts(v int32)                   { m.Data.Pts = v }
func (m *TLupdatePinnedChannelMessages) Getpts() int32                    { return m.Data.Pts }
func (m *TLupdatePinnedChannelMessages) Setpts_count(v int32)             { m.Data.Pts_count = v }
func (m *TLupdatePinnedChannelMessages) Getpts_count() int32              { return m.Data.Pts_count }
func (m *TLsecurePlainPhone) Setphone(v string)                           { m.Data.Phone = v }
func (m *TLsecurePlainPhone) Getphone() string                            { return m.Data.Phone }
func (m *TLsecurePlainEmail) Setemail(v string)                           { m.Data.Email = v }
func (m *TLsecurePlainEmail) Getemail() string                            { return m.Data.Email }
func (m *TLmessages_messages) Setmessages(v []Message)                    { m.Data.Messages = v }
func (m *TLmessages_messages) Getmessages() []Message                     { return m.Data.Messages }
func (m *TLmessages_messages) Setchats(v []Chat)                          { m.Data.Chats = v }
func (m *TLmessages_messages) Getchats() []Chat                           { return m.Data.Chats }
func (m *TLmessages_messages) Setusers(v []User)                          { m.Data.Users = v }
func (m *TLmessages_messages) Getusers() []User                           { return m.Data.Users }
func (m *TLmessages_messagesSlice) Setinexact(v bool)                     { m.Data.Inexact = v }
func (m *TLmessages_messagesSlice) Getinexact() bool                      { return m.Data.Inexact }
func (m *TLmessages_messagesSlice) Setcount(v int32)                      { m.Data.Count = v }
func (m *TLmessages_messagesSlice) Getcount() int32                       { return m.Data.Count }
func (m *TLmessages_messagesSlice) Setnext_rate(v int32)                  { m.Data.Next_rate = v }
func (m *TLmessages_messagesSlice) Getnext_rate() int32                   { return m.Data.Next_rate }
func (m *TLmessages_messagesSlice) Setoffset_id_offset(v int32)           { m.Data.Offset_id_offset = v }
func (m *TLmessages_messagesSlice) Getoffset_id_offset() int32            { return m.Data.Offset_id_offset }
func (m *TLmessages_messagesSlice) Setmessages(v []Message)               { m.Data.Messages = v }
func (m *TLmessages_messagesSlice) Getmessages() []Message                { return m.Data.Messages }
func (m *TLmessages_messagesSlice) Setchats(v []Chat)                     { m.Data.Chats = v }
func (m *TLmessages_messagesSlice) Getchats() []Chat                      { return m.Data.Chats }
func (m *TLmessages_messagesSlice) Setusers(v []User)                     { m.Data.Users = v }
func (m *TLmessages_messagesSlice) Getusers() []User                      { return m.Data.Users }
func (m *TLmessages_channelMessages) Setinexact(v bool)                   { m.Data.Inexact = v }
func (m *TLmessages_channelMessages) Getinexact() bool                    { return m.Data.Inexact }
func (m *TLmessages_channelMessages) Setpts(v int32)                      { m.Data.Pts = v }
func (m *TLmessages_channelMessages) Getpts() int32                       { return m.Data.Pts }
func (m *TLmessages_channelMessages) Setcount(v int32)                    { m.Data.Count = v }
func (m *TLmessages_channelMessages) Getcount() int32                     { return m.Data.Count }
func (m *TLmessages_channelMessages) Setoffset_id_offset(v int32)         { m.Data.Offset_id_offset = v }
func (m *TLmessages_channelMessages) Getoffset_id_offset() int32          { return m.Data.Offset_id_offset }
func (m *TLmessages_channelMessages) Setmessages(v []Message)             { m.Data.Messages = v }
func (m *TLmessages_channelMessages) Getmessages() []Message              { return m.Data.Messages }
func (m *TLmessages_channelMessages) Setchats(v []Chat)                   { m.Data.Chats = v }
func (m *TLmessages_channelMessages) Getchats() []Chat                    { return m.Data.Chats }
func (m *TLmessages_channelMessages) Setusers(v []User)                   { m.Data.Users = v }
func (m *TLmessages_channelMessages) Getusers() []User                    { return m.Data.Users }
func (m *TLmessages_messagesNotModified) Setcount(v int32)                { m.Data.Count = v }
func (m *TLmessages_messagesNotModified) Getcount() int32                 { return m.Data.Count }
func (m *TLupload_cdnFileReuploadNeeded) Setrequest_token(v []uint8)      { m.Data.Request_token = v }
func (m *TLupload_cdnFileReuploadNeeded) Getrequest_token() []uint8       { return m.Data.Request_token }
func (m *TLupload_cdnFile) Setbytes(v []uint8)                            { m.Data.Bytes = v }
func (m *TLupload_cdnFile) Getbytes() []uint8                             { return m.Data.Bytes }
func (m *TLmessageEmpty) Setid(v int32)                                   { m.Data.Id = v }
func (m *TLmessageEmpty) Getid() int32                                    { return m.Data.Id }
func (m *TLmessage) Setout_key(v bool)                                    { m.Data.Out_key = v }
func (m *TLmessage) Getout_key() bool                                     { return m.Data.Out_key }
func (m *TLmessage) Setmentioned(v bool)                                  { m.Data.Mentioned = v }
func (m *TLmessage) Getmentioned() bool                                   { return m.Data.Mentioned }
func (m *TLmessage) Setmedia_unread(v bool)                               { m.Data.Media_unread = v }
func (m *TLmessage) Getmedia_unread() bool                                { return m.Data.Media_unread }
func (m *TLmessage) Setsilent(v bool)                                     { m.Data.Silent = v }
func (m *TLmessage) Getsilent() bool                                      { return m.Data.Silent }
func (m *TLmessage) Setpost(v bool)                                       { m.Data.Post = v }
func (m *TLmessage) Getpost() bool                                        { return m.Data.Post }
func (m *TLmessage) Setfrom_scheduled(v bool)                             { m.Data.From_scheduled = v }
func (m *TLmessage) Getfrom_scheduled() bool                              { return m.Data.From_scheduled }
func (m *TLmessage) Setlegacy(v bool)                                     { m.Data.Legacy = v }
func (m *TLmessage) Getlegacy() bool                                      { return m.Data.Legacy }
func (m *TLmessage) Setedit_hide(v bool)                                  { m.Data.Edit_hide = v }
func (m *TLmessage) Getedit_hide() bool                                   { return m.Data.Edit_hide }
func (m *TLmessage) Setpinned(v bool)                                     { m.Data.Pinned = v }
func (m *TLmessage) Getpinned() bool                                      { return m.Data.Pinned }
func (m *TLmessage) Setid(v int32)                                        { m.Data.Id = v }
func (m *TLmessage) Getid() int32                                         { return m.Data.Id }
func (m *TLmessage) Setfrom_id(v Peer)                                    { m.Data.From_id = v }
func (m *TLmessage) Getfrom_id() Peer                                     { return m.Data.From_id }
func (m *TLmessage) Setpeer_id(v Peer)                                    { m.Data.Peer_id = v }
func (m *TLmessage) Getpeer_id() Peer                                     { return m.Data.Peer_id }
func (m *TLmessage) Setfwd_from(v MessageFwdHeader)                       { m.Data.Fwd_from = v }
func (m *TLmessage) Getfwd_from() MessageFwdHeader                        { return m.Data.Fwd_from }
func (m *TLmessage) Setvia_bot_id(v int32)                                { m.Data.Via_bot_id = v }
func (m *TLmessage) Getvia_bot_id() int32                                 { return m.Data.Via_bot_id }
func (m *TLmessage) Setreply_to(v MessageReplyHeader)                     { m.Data.Reply_to = v }
func (m *TLmessage) Getreply_to() MessageReplyHeader                      { return m.Data.Reply_to }
func (m *TLmessage) Setdate(v int32)                                      { m.Data.Date = v }
func (m *TLmessage) Getdate() int32                                       { return m.Data.Date }
func (m *TLmessage) Setmessage(v string)                                  { m.Data.Message = v }
func (m *TLmessage) Getmessage() string                                   { return m.Data.Message }
func (m *TLmessage) Setmedia(v MessageMedia)                              { m.Data.Media = v }
func (m *TLmessage) Getmedia() MessageMedia                               { return m.Data.Media }
func (m *TLmessage) Setreply_markup(v ReplyMarkup)                        { m.Data.Reply_markup = v }
func (m *TLmessage) Getreply_markup() ReplyMarkup                         { return m.Data.Reply_markup }
func (m *TLmessage) Setentities(v []MessageEntity)                        { m.Data.Entities = v }
func (m *TLmessage) Getentities() []MessageEntity                         { return m.Data.Entities }
func (m *TLmessage) Setviews(v int32)                                     { m.Data.Views = v }
func (m *TLmessage) Getviews() int32                                      { return m.Data.Views }
func (m *TLmessage) Setforwards(v int32)                                  { m.Data.Forwards = v }
func (m *TLmessage) Getforwards() int32                                   { return m.Data.Forwards }
func (m *TLmessage) Setreplies(v MessageReplies)                          { m.Data.Replies = v }
func (m *TLmessage) Getreplies() MessageReplies                           { return m.Data.Replies }
func (m *TLmessage) Setedit_date(v int32)                                 { m.Data.Edit_date = v }
func (m *TLmessage) Getedit_date() int32                                  { return m.Data.Edit_date }
func (m *TLmessage) Setpost_author(v string)                              { m.Data.Post_author = v }
func (m *TLmessage) Getpost_author() string                               { return m.Data.Post_author }
func (m *TLmessage) Setgrouped_id(v int64)                                { m.Data.Grouped_id = v }
func (m *TLmessage) Getgrouped_id() int64                                 { return m.Data.Grouped_id }
func (m *TLmessage) Setrestriction_reason(v []RestrictionReason)          { m.Data.Restriction_reason = v }
func (m *TLmessage) Getrestriction_reason() []RestrictionReason           { return m.Data.Restriction_reason }
func (m *TLmessageService) Setout_key(v bool)                             { m.Data.Out_key = v }
func (m *TLmessageService) Getout_key() bool                              { return m.Data.Out_key }
func (m *TLmessageService) Setmentioned(v bool)                           { m.Data.Mentioned = v }
func (m *TLmessageService) Getmentioned() bool                            { return m.Data.Mentioned }
func (m *TLmessageService) Setmedia_unread(v bool)                        { m.Data.Media_unread = v }
func (m *TLmessageService) Getmedia_unread() bool                         { return m.Data.Media_unread }
func (m *TLmessageService) Setsilent(v bool)                              { m.Data.Silent = v }
func (m *TLmessageService) Getsilent() bool                               { return m.Data.Silent }
func (m *TLmessageService) Setpost(v bool)                                { m.Data.Post = v }
func (m *TLmessageService) Getpost() bool                                 { return m.Data.Post }
func (m *TLmessageService) Setlegacy(v bool)                              { m.Data.Legacy = v }
func (m *TLmessageService) Getlegacy() bool                               { return m.Data.Legacy }
func (m *TLmessageService) Setid(v int32)                                 { m.Data.Id = v }
func (m *TLmessageService) Getid() int32                                  { return m.Data.Id }
func (m *TLmessageService) Setfrom_id(v Peer)                             { m.Data.From_id = v }
func (m *TLmessageService) Getfrom_id() Peer                              { return m.Data.From_id }
func (m *TLmessageService) Setpeer_id(v Peer)                             { m.Data.Peer_id = v }
func (m *TLmessageService) Getpeer_id() Peer                              { return m.Data.Peer_id }
func (m *TLmessageService) Setreply_to(v MessageReplyHeader)              { m.Data.Reply_to = v }
func (m *TLmessageService) Getreply_to() MessageReplyHeader               { return m.Data.Reply_to }
func (m *TLmessageService) Setdate(v int32)                               { m.Data.Date = v }
func (m *TLmessageService) Getdate() int32                                { return m.Data.Date }
func (m *TLmessageService) Setaction(v MessageAction)                     { m.Data.Action = v }
func (m *TLmessageService) Getaction() MessageAction                      { return m.Data.Action }
func (m *TLcontacts_blocked) Setblocked(v []PeerBlocked)                  { m.Data.Blocked = v }
func (m *TLcontacts_blocked) Getblocked() []PeerBlocked                   { return m.Data.Blocked }
func (m *TLcontacts_blocked) Setchats(v []Chat)                           { m.Data.Chats = v }
func (m *TLcontacts_blocked) Getchats() []Chat                            { return m.Data.Chats }
func (m *TLcontacts_blocked) Setusers(v []User)                           { m.Data.Users = v }
func (m *TLcontacts_blocked) Getusers() []User                            { return m.Data.Users }
func (m *TLcontacts_blockedSlice) Setcount(v int32)                       { m.Data.Count = v }
func (m *TLcontacts_blockedSlice) Getcount() int32                        { return m.Data.Count }
func (m *TLcontacts_blockedSlice) Setblocked(v []PeerBlocked)             { m.Data.Blocked = v }
func (m *TLcontacts_blockedSlice) Getblocked() []PeerBlocked              { return m.Data.Blocked }
func (m *TLcontacts_blockedSlice) Setchats(v []Chat)                      { m.Data.Chats = v }
func (m *TLcontacts_blockedSlice) Getchats() []Chat                       { return m.Data.Chats }
func (m *TLcontacts_blockedSlice) Setusers(v []User)                      { m.Data.Users = v }
func (m *TLcontacts_blockedSlice) Getusers() []User                       { return m.Data.Users }
func (m *TLurlAuthResultRequest) Setrequest_write_access(v bool)          { m.Data.Request_write_access = v }
func (m *TLurlAuthResultRequest) Getrequest_write_access() bool           { return m.Data.Request_write_access }
func (m *TLurlAuthResultRequest) Setbot(v User)                           { m.Data.Bot = v }
func (m *TLurlAuthResultRequest) Getbot() User                            { return m.Data.Bot }
func (m *TLurlAuthResultRequest) Setdomain(v string)                      { m.Data.Domain = v }
func (m *TLurlAuthResultRequest) Getdomain() string                       { return m.Data.Domain }
func (m *TLurlAuthResultAccepted) Seturl(v string)                        { m.Data.Url = v }
func (m *TLurlAuthResultAccepted) Geturl() string                         { return m.Data.Url }
func (m *TLchannelAdminLogEventsFilter) Setjoin(v bool)                   { m.Data.Join = v }
func (m *TLchannelAdminLogEventsFilter) Getjoin() bool                    { return m.Data.Join }
func (m *TLchannelAdminLogEventsFilter) Setleave(v bool)                  { m.Data.Leave = v }
func (m *TLchannelAdminLogEventsFilter) Getleave() bool                   { return m.Data.Leave }
func (m *TLchannelAdminLogEventsFilter) Setinvite(v bool)                 { m.Data.Invite = v }
func (m *TLchannelAdminLogEventsFilter) Getinvite() bool                  { return m.Data.Invite }
func (m *TLchannelAdminLogEventsFilter) Setban(v bool)                    { m.Data.Ban = v }
func (m *TLchannelAdminLogEventsFilter) Getban() bool                     { return m.Data.Ban }
func (m *TLchannelAdminLogEventsFilter) Setunban(v bool)                  { m.Data.Unban = v }
func (m *TLchannelAdminLogEventsFilter) Getunban() bool                   { return m.Data.Unban }
func (m *TLchannelAdminLogEventsFilter) Setkick(v bool)                   { m.Data.Kick = v }
func (m *TLchannelAdminLogEventsFilter) Getkick() bool                    { return m.Data.Kick }
func (m *TLchannelAdminLogEventsFilter) Setunkick(v bool)                 { m.Data.Unkick = v }
func (m *TLchannelAdminLogEventsFilter) Getunkick() bool                  { return m.Data.Unkick }
func (m *TLchannelAdminLogEventsFilter) Setpromote(v bool)                { m.Data.Promote = v }
func (m *TLchannelAdminLogEventsFilter) Getpromote() bool                 { return m.Data.Promote }
func (m *TLchannelAdminLogEventsFilter) Setdemote(v bool)                 { m.Data.Demote = v }
func (m *TLchannelAdminLogEventsFilter) Getdemote() bool                  { return m.Data.Demote }
func (m *TLchannelAdminLogEventsFilter) Setinfo(v bool)                   { m.Data.Info = v }
func (m *TLchannelAdminLogEventsFilter) Getinfo() bool                    { return m.Data.Info }
func (m *TLchannelAdminLogEventsFilter) Setsettings(v bool)               { m.Data.Settings = v }
func (m *TLchannelAdminLogEventsFilter) Getsettings() bool                { return m.Data.Settings }
func (m *TLchannelAdminLogEventsFilter) Setpinned(v bool)                 { m.Data.Pinned = v }
func (m *TLchannelAdminLogEventsFilter) Getpinned() bool                  { return m.Data.Pinned }
func (m *TLchannelAdminLogEventsFilter) Setedit(v bool)                   { m.Data.Edit = v }
func (m *TLchannelAdminLogEventsFilter) Getedit() bool                    { return m.Data.Edit }
func (m *TLchannelAdminLogEventsFilter) Setdelete(v bool)                 { m.Data.Delete = v }
func (m *TLchannelAdminLogEventsFilter) Getdelete() bool                  { return m.Data.Delete }
func (m *TLchannelAdminLogEventsFilter) Setgroup_call(v bool)             { m.Data.Group_call = v }
func (m *TLchannelAdminLogEventsFilter) Getgroup_call() bool              { return m.Data.Group_call }
func (m *TLtheme) Setcreator(v bool)                                      { m.Data.Creator = v }
func (m *TLtheme) Getcreator() bool                                       { return m.Data.Creator }
func (m *TLtheme) Setdefault(v bool)                                      { m.Data.Default = v }
func (m *TLtheme) Getdefault() bool                                       { return m.Data.Default }
func (m *TLtheme) Setid(v int64)                                          { m.Data.Id = v }
func (m *TLtheme) Getid() int64                                           { return m.Data.Id }
func (m *TLtheme) Setaccess_hash(v int64)                                 { m.Data.Access_hash = v }
func (m *TLtheme) Getaccess_hash() int64                                  { return m.Data.Access_hash }
func (m *TLtheme) Setslug(v string)                                       { m.Data.Slug = v }
func (m *TLtheme) Getslug() string                                        { return m.Data.Slug }
func (m *TLtheme) Settitle(v string)                                      { m.Data.Title = v }
func (m *TLtheme) Gettitle() string                                       { return m.Data.Title }
func (m *TLtheme) Setdocument(v Document)                                 { m.Data.Document = v }
func (m *TLtheme) Getdocument() Document                                  { return m.Data.Document }
func (m *TLtheme) Setsettings(v ThemeSettings)                            { m.Data.Settings = v }
func (m *TLtheme) Getsettings() ThemeSettings                             { return m.Data.Settings }
func (m *TLtheme) Setinstalls_count(v int32)                              { m.Data.Installs_count = v }
func (m *TLtheme) Getinstalls_count() int32                               { return m.Data.Installs_count }
func (m *TLchannelParticipantsKicked) Setq(v string)                      { m.Data.Q = v }
func (m *TLchannelParticipantsKicked) Getq() string                       { return m.Data.Q }
func (m *TLchannelParticipantsBanned) Setq(v string)                      { m.Data.Q = v }
func (m *TLchannelParticipantsBanned) Getq() string                       { return m.Data.Q }
func (m *TLchannelParticipantsSearch) Setq(v string)                      { m.Data.Q = v }
func (m *TLchannelParticipantsSearch) Getq() string                       { return m.Data.Q }
func (m *TLchannelParticipantsContacts) Setq(v string)                    { m.Data.Q = v }
func (m *TLchannelParticipantsContacts) Getq() string                     { return m.Data.Q }
func (m *TLchannelParticipantsMentions) Setq(v string)                    { m.Data.Q = v }
func (m *TLchannelParticipantsMentions) Getq() string                     { return m.Data.Q }
func (m *TLchannelParticipantsMentions) Settop_msg_id(v int32)            { m.Data.Top_msg_id = v }
func (m *TLchannelParticipantsMentions) Gettop_msg_id() int32             { return m.Data.Top_msg_id }
func (m *TLchannelParticipant) Setuser_id(v int32)                        { m.Data.User_id = v }
func (m *TLchannelParticipant) Getuser_id() int32                         { return m.Data.User_id }
func (m *TLchannelParticipant) Setdate(v int32)                           { m.Data.Date = v }
func (m *TLchannelParticipant) Getdate() int32                            { return m.Data.Date }
func (m *TLchannelParticipantSelf) Setuser_id(v int32)                    { m.Data.User_id = v }
func (m *TLchannelParticipantSelf) Getuser_id() int32                     { return m.Data.User_id }
func (m *TLchannelParticipantSelf) Setinviter_id(v int32)                 { m.Data.Inviter_id = v }
func (m *TLchannelParticipantSelf) Getinviter_id() int32                  { return m.Data.Inviter_id }
func (m *TLchannelParticipantSelf) Setdate(v int32)                       { m.Data.Date = v }
func (m *TLchannelParticipantSelf) Getdate() int32                        { return m.Data.Date }
func (m *TLchannelParticipantCreator) Setuser_id(v int32)                 { m.Data.User_id = v }
func (m *TLchannelParticipantCreator) Getuser_id() int32                  { return m.Data.User_id }
func (m *TLchannelParticipantCreator) Setadmin_rights(v ChatAdminRights)  { m.Data.Admin_rights = v }
func (m *TLchannelParticipantCreator) Getadmin_rights() ChatAdminRights   { return m.Data.Admin_rights }
func (m *TLchannelParticipantCreator) Setrank(v string)                   { m.Data.Rank = v }
func (m *TLchannelParticipantCreator) Getrank() string                    { return m.Data.Rank }
func (m *TLchannelParticipantAdmin) Setcan_edit(v bool)                   { m.Data.Can_edit = v }
func (m *TLchannelParticipantAdmin) Getcan_edit() bool                    { return m.Data.Can_edit }
func (m *TLchannelParticipantAdmin) Setself(v bool)                       { m.Data.Self = v }
func (m *TLchannelParticipantAdmin) Getself() bool                        { return m.Data.Self }
func (m *TLchannelParticipantAdmin) Setuser_id(v int32)                   { m.Data.User_id = v }
func (m *TLchannelParticipantAdmin) Getuser_id() int32                    { return m.Data.User_id }
func (m *TLchannelParticipantAdmin) Setinviter_id(v int32)                { m.Data.Inviter_id = v }
func (m *TLchannelParticipantAdmin) Getinviter_id() int32                 { return m.Data.Inviter_id }
func (m *TLchannelParticipantAdmin) Setpromoted_by(v int32)               { m.Data.Promoted_by = v }
func (m *TLchannelParticipantAdmin) Getpromoted_by() int32                { return m.Data.Promoted_by }
func (m *TLchannelParticipantAdmin) Setdate(v int32)                      { m.Data.Date = v }
func (m *TLchannelParticipantAdmin) Getdate() int32                       { return m.Data.Date }
func (m *TLchannelParticipantAdmin) Setadmin_rights(v ChatAdminRights)    { m.Data.Admin_rights = v }
func (m *TLchannelParticipantAdmin) Getadmin_rights() ChatAdminRights     { return m.Data.Admin_rights }
func (m *TLchannelParticipantAdmin) Setrank(v string)                     { m.Data.Rank = v }
func (m *TLchannelParticipantAdmin) Getrank() string                      { return m.Data.Rank }
func (m *TLchannelParticipantBanned) Setleft(v bool)                      { m.Data.Left = v }
func (m *TLchannelParticipantBanned) Getleft() bool                       { return m.Data.Left }
func (m *TLchannelParticipantBanned) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLchannelParticipantBanned) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLchannelParticipantBanned) Setkicked_by(v int32)                { m.Data.Kicked_by = v }
func (m *TLchannelParticipantBanned) Getkicked_by() int32                 { return m.Data.Kicked_by }
func (m *TLchannelParticipantBanned) Setdate(v int32)                     { m.Data.Date = v }
func (m *TLchannelParticipantBanned) Getdate() int32                      { return m.Data.Date }
func (m *TLchannelParticipantBanned) Setbanned_rights(v ChatBannedRights) { m.Data.Banned_rights = v }
func (m *TLchannelParticipantBanned) Getbanned_rights() ChatBannedRights  { return m.Data.Banned_rights }
func (m *TLchannelParticipantLeft) Setuser_id(v int32)                    { m.Data.User_id = v }
func (m *TLchannelParticipantLeft) Getuser_id() int32                     { return m.Data.User_id }
func (m *TLphotos_photo) Setphoto(v Photo)                                { m.Data.Photo = v }
func (m *TLphotos_photo) Getphoto() Photo                                 { return m.Data.Photo }
func (m *TLphotos_photo) Setusers(v []User)                               { m.Data.Users = v }
func (m *TLphotos_photo) Getusers() []User                                { return m.Data.Users }
func (m *TLchannelAdminLogEvent) Setid(v int64)                           { m.Data.Id = v }
func (m *TLchannelAdminLogEvent) Getid() int64                            { return m.Data.Id }
func (m *TLchannelAdminLogEvent) Setdate(v int32)                         { m.Data.Date = v }
func (m *TLchannelAdminLogEvent) Getdate() int32                          { return m.Data.Date }
func (m *TLchannelAdminLogEvent) Setuser_id(v int32)                      { m.Data.User_id = v }
func (m *TLchannelAdminLogEvent) Getuser_id() int32                       { return m.Data.User_id }
func (m *TLchannelAdminLogEvent) Setaction(v ChannelAdminLogEventAction)  { m.Data.Action = v }
func (m *TLchannelAdminLogEvent) Getaction() ChannelAdminLogEventAction   { return m.Data.Action }
func (m *TLpeerLocated) Setpeer(v Peer)                                   { m.Data.Peer = v }
func (m *TLpeerLocated) Getpeer() Peer                                    { return m.Data.Peer }
func (m *TLpeerLocated) Setexpires(v int32)                               { m.Data.Expires = v }
func (m *TLpeerLocated) Getexpires() int32                                { return m.Data.Expires }
func (m *TLpeerLocated) Setdistance(v int32)                              { m.Data.Distance = v }
func (m *TLpeerLocated) Getdistance() int32                               { return m.Data.Distance }
func (m *TLpeerSelfLocated) Setexpires(v int32)                           { m.Data.Expires = v }
func (m *TLpeerSelfLocated) Getexpires() int32                            { return m.Data.Expires }
func (m *TLcontacts_contacts) Setcontacts(v []Contact)                    { m.Data.Contacts = v }
func (m *TLcontacts_contacts) Getcontacts() []Contact                     { return m.Data.Contacts }
func (m *TLcontacts_contacts) Setsaved_count(v int32)                     { m.Data.Saved_count = v }
func (m *TLcontacts_contacts) Getsaved_count() int32                      { return m.Data.Saved_count }
func (m *TLcontacts_contacts) Setusers(v []User)                          { m.Data.Users = v }
func (m *TLcontacts_contacts) Getusers() []User                           { return m.Data.Users }
func (m *TLemojiKeyword) Setkeyword(v string)                             { m.Data.Keyword = v }
func (m *TLemojiKeyword) Getkeyword() string                              { return m.Data.Keyword }
func (m *TLemojiKeyword) Setemoticons(v []String)                         { m.Data.Emoticons = v }
func (m *TLemojiKeyword) Getemoticons() []String                          { return m.Data.Emoticons }
func (m *TLemojiKeywordDeleted) Setkeyword(v string)                      { m.Data.Keyword = v }
func (m *TLemojiKeywordDeleted) Getkeyword() string                       { return m.Data.Keyword }
func (m *TLemojiKeywordDeleted) Setemoticons(v []String)                  { m.Data.Emoticons = v }
func (m *TLemojiKeywordDeleted) Getemoticons() []String                   { return m.Data.Emoticons }
func (m *TLmessages_foundStickerSets) Sethash(v int32)                    { m.Data.Hash = v }
func (m *TLmessages_foundStickerSets) Gethash() int32                     { return m.Data.Hash }
func (m *TLmessages_foundStickerSets) Setsets(v []StickerSetCovered)      { m.Data.Sets = v }
func (m *TLmessages_foundStickerSets) Getsets() []StickerSetCovered       { return m.Data.Sets }
func (m *TLphotoSizeEmpty) Settype(v string)                              { m.Data.Type = v }
func (m *TLphotoSizeEmpty) Gettype() string                               { return m.Data.Type }
func (m *TLphotoSize) Settype(v string)                                   { m.Data.Type = v }
func (m *TLphotoSize) Gettype() string                                    { return m.Data.Type }
func (m *TLphotoSize) Setlocation(v FileLocation)                         { m.Data.Location = v }
func (m *TLphotoSize) Getlocation() FileLocation                          { return m.Data.Location }
func (m *TLphotoSize) Setw(v int32)                                       { m.Data.W = v }
func (m *TLphotoSize) Getw() int32                                        { return m.Data.W }
func (m *TLphotoSize) Seth(v int32)                                       { m.Data.H = v }
func (m *TLphotoSize) Geth() int32                                        { return m.Data.H }
func (m *TLphotoSize) Setsize(v int32)                                    { m.Data.Size = v }
func (m *TLphotoSize) Getsize() int32                                     { return m.Data.Size }
func (m *TLphotoCachedSize) Settype(v string)                             { m.Data.Type = v }
func (m *TLphotoCachedSize) Gettype() string                              { return m.Data.Type }
func (m *TLphotoCachedSize) Setlocation(v FileLocation)                   { m.Data.Location = v }
func (m *TLphotoCachedSize) Getlocation() FileLocation                    { return m.Data.Location }
func (m *TLphotoCachedSize) Setw(v int32)                                 { m.Data.W = v }
func (m *TLphotoCachedSize) Getw() int32                                  { return m.Data.W }
func (m *TLphotoCachedSize) Seth(v int32)                                 { m.Data.H = v }
func (m *TLphotoCachedSize) Geth() int32                                  { return m.Data.H }
func (m *TLphotoCachedSize) Setbytes(v []uint8)                           { m.Data.Bytes = v }
func (m *TLphotoCachedSize) Getbytes() []uint8                            { return m.Data.Bytes }
func (m *TLphotoStrippedSize) Settype(v string)                           { m.Data.Type = v }
func (m *TLphotoStrippedSize) Gettype() string                            { return m.Data.Type }
func (m *TLphotoStrippedSize) Setbytes(v []uint8)                         { m.Data.Bytes = v }
func (m *TLphotoStrippedSize) Getbytes() []uint8                          { return m.Data.Bytes }
func (m *TLphotoSizeProgressive) Settype(v string)                        { m.Data.Type = v }
func (m *TLphotoSizeProgressive) Gettype() string                         { return m.Data.Type }
func (m *TLphotoSizeProgressive) Setlocation(v FileLocation)              { m.Data.Location = v }
func (m *TLphotoSizeProgressive) Getlocation() FileLocation               { return m.Data.Location }
func (m *TLphotoSizeProgressive) Setw(v int32)                            { m.Data.W = v }
func (m *TLphotoSizeProgressive) Getw() int32                             { return m.Data.W }
func (m *TLphotoSizeProgressive) Seth(v int32)                            { m.Data.H = v }
func (m *TLphotoSizeProgressive) Geth() int32                             { return m.Data.H }
func (m *TLphotoSizeProgressive) Setsizes(v []int32)                      { m.Data.Sizes = v }
func (m *TLphotoSizeProgressive) Getsizes() []int32                       { return m.Data.Sizes }
func (m *TLphotoPathSize) Settype(v string)                               { m.Data.Type = v }
func (m *TLphotoPathSize) Gettype() string                                { return m.Data.Type }
func (m *TLphotoPathSize) Setbytes(v []uint8)                             { m.Data.Bytes = v }
func (m *TLphotoPathSize) Getbytes() []uint8                              { return m.Data.Bytes }
func (m *TLautoDownloadSettings) Setdisabled(v bool)                      { m.Data.Disabled = v }
func (m *TLautoDownloadSettings) Getdisabled() bool                       { return m.Data.Disabled }
func (m *TLautoDownloadSettings) Setvideo_preload_large(v bool)           { m.Data.Video_preload_large = v }
func (m *TLautoDownloadSettings) Getvideo_preload_large() bool            { return m.Data.Video_preload_large }
func (m *TLautoDownloadSettings) Setaudio_preload_next(v bool)            { m.Data.Audio_preload_next = v }
func (m *TLautoDownloadSettings) Getaudio_preload_next() bool             { return m.Data.Audio_preload_next }
func (m *TLautoDownloadSettings) Setphonecalls_less_data(v bool)          { m.Data.Phonecalls_less_data = v }
func (m *TLautoDownloadSettings) Getphonecalls_less_data() bool           { return m.Data.Phonecalls_less_data }
func (m *TLautoDownloadSettings) Setphoto_size_max(v int32)               { m.Data.Photo_size_max = v }
func (m *TLautoDownloadSettings) Getphoto_size_max() int32                { return m.Data.Photo_size_max }
func (m *TLautoDownloadSettings) Setvideo_size_max(v int32)               { m.Data.Video_size_max = v }
func (m *TLautoDownloadSettings) Getvideo_size_max() int32                { return m.Data.Video_size_max }
func (m *TLautoDownloadSettings) Setfile_size_max(v int32)                { m.Data.File_size_max = v }
func (m *TLautoDownloadSettings) Getfile_size_max() int32                 { return m.Data.File_size_max }
func (m *TLautoDownloadSettings) Setvideo_upload_maxbitrate(v int32) {
	m.Data.Video_upload_maxbitrate = v
}
func (m *TLautoDownloadSettings) Getvideo_upload_maxbitrate() int32 {
	return m.Data.Video_upload_maxbitrate
}
func (m *TLbotInlineResult) Setid(v string)                                    { m.Data.Id = v }
func (m *TLbotInlineResult) Getid() string                                     { return m.Data.Id }
func (m *TLbotInlineResult) Settype(v string)                                  { m.Data.Type = v }
func (m *TLbotInlineResult) Gettype() string                                   { return m.Data.Type }
func (m *TLbotInlineResult) Settitle(v string)                                 { m.Data.Title = v }
func (m *TLbotInlineResult) Gettitle() string                                  { return m.Data.Title }
func (m *TLbotInlineResult) Setdescription(v string)                           { m.Data.Description = v }
func (m *TLbotInlineResult) Getdescription() string                            { return m.Data.Description }
func (m *TLbotInlineResult) Seturl(v string)                                   { m.Data.Url = v }
func (m *TLbotInlineResult) Geturl() string                                    { return m.Data.Url }
func (m *TLbotInlineResult) Setthumb(v WebDocument)                            { m.Data.Thumb = v }
func (m *TLbotInlineResult) Getthumb() WebDocument                             { return m.Data.Thumb }
func (m *TLbotInlineResult) Setcontent(v WebDocument)                          { m.Data.Content = v }
func (m *TLbotInlineResult) Getcontent() WebDocument                           { return m.Data.Content }
func (m *TLbotInlineResult) Setsend_message(v BotInlineMessage)                { m.Data.Send_message = v }
func (m *TLbotInlineResult) Getsend_message() BotInlineMessage                 { return m.Data.Send_message }
func (m *TLbotInlineMediaResult) Setid(v string)                               { m.Data.Id = v }
func (m *TLbotInlineMediaResult) Getid() string                                { return m.Data.Id }
func (m *TLbotInlineMediaResult) Settype(v string)                             { m.Data.Type = v }
func (m *TLbotInlineMediaResult) Gettype() string                              { return m.Data.Type }
func (m *TLbotInlineMediaResult) Setphoto(v Photo)                             { m.Data.Photo = v }
func (m *TLbotInlineMediaResult) Getphoto() Photo                              { return m.Data.Photo }
func (m *TLbotInlineMediaResult) Setdocument(v Document)                       { m.Data.Document = v }
func (m *TLbotInlineMediaResult) Getdocument() Document                        { return m.Data.Document }
func (m *TLbotInlineMediaResult) Settitle(v string)                            { m.Data.Title = v }
func (m *TLbotInlineMediaResult) Gettitle() string                             { return m.Data.Title }
func (m *TLbotInlineMediaResult) Setdescription(v string)                      { m.Data.Description = v }
func (m *TLbotInlineMediaResult) Getdescription() string                       { return m.Data.Description }
func (m *TLbotInlineMediaResult) Setsend_message(v BotInlineMessage)           { m.Data.Send_message = v }
func (m *TLbotInlineMediaResult) Getsend_message() BotInlineMessage            { return m.Data.Send_message }
func (m *TLauth_sentCode) Settype(v Auth_SentCodeType)                         { m.Data.Type = v }
func (m *TLauth_sentCode) Gettype() Auth_SentCodeType                          { return m.Data.Type }
func (m *TLauth_sentCode) Setphone_code_hash(v string)                         { m.Data.Phone_code_hash = v }
func (m *TLauth_sentCode) Getphone_code_hash() string                          { return m.Data.Phone_code_hash }
func (m *TLauth_sentCode) Setnext_type(v Auth_CodeType)                        { m.Data.Next_type = v }
func (m *TLauth_sentCode) Getnext_type() Auth_CodeType                         { return m.Data.Next_type }
func (m *TLauth_sentCode) Settimeout(v int32)                                  { m.Data.Timeout = v }
func (m *TLauth_sentCode) Gettimeout() int32                                   { return m.Data.Timeout }
func (m *TLphoneCallEmpty) Setid(v int64)                                      { m.Data.Id = v }
func (m *TLphoneCallEmpty) Getid() int64                                       { return m.Data.Id }
func (m *TLphoneCallWaiting) Setvideo(v bool)                                  { m.Data.Video = v }
func (m *TLphoneCallWaiting) Getvideo() bool                                   { return m.Data.Video }
func (m *TLphoneCallWaiting) Setid(v int64)                                    { m.Data.Id = v }
func (m *TLphoneCallWaiting) Getid() int64                                     { return m.Data.Id }
func (m *TLphoneCallWaiting) Setaccess_hash(v int64)                           { m.Data.Access_hash = v }
func (m *TLphoneCallWaiting) Getaccess_hash() int64                            { return m.Data.Access_hash }
func (m *TLphoneCallWaiting) Setdate(v int32)                                  { m.Data.Date = v }
func (m *TLphoneCallWaiting) Getdate() int32                                   { return m.Data.Date }
func (m *TLphoneCallWaiting) Setadmin_id(v int32)                              { m.Data.Admin_id = v }
func (m *TLphoneCallWaiting) Getadmin_id() int32                               { return m.Data.Admin_id }
func (m *TLphoneCallWaiting) Setparticipant_id(v int32)                        { m.Data.Participant_id = v }
func (m *TLphoneCallWaiting) Getparticipant_id() int32                         { return m.Data.Participant_id }
func (m *TLphoneCallWaiting) Setprotocol(v PhoneCallProtocol)                  { m.Data.Protocol = v }
func (m *TLphoneCallWaiting) Getprotocol() PhoneCallProtocol                   { return m.Data.Protocol }
func (m *TLphoneCallWaiting) Setreceive_date(v int32)                          { m.Data.Receive_date = v }
func (m *TLphoneCallWaiting) Getreceive_date() int32                           { return m.Data.Receive_date }
func (m *TLphoneCallRequested) Setvideo(v bool)                                { m.Data.Video = v }
func (m *TLphoneCallRequested) Getvideo() bool                                 { return m.Data.Video }
func (m *TLphoneCallRequested) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLphoneCallRequested) Getid() int64                                   { return m.Data.Id }
func (m *TLphoneCallRequested) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLphoneCallRequested) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLphoneCallRequested) Setdate(v int32)                                { m.Data.Date = v }
func (m *TLphoneCallRequested) Getdate() int32                                 { return m.Data.Date }
func (m *TLphoneCallRequested) Setadmin_id(v int32)                            { m.Data.Admin_id = v }
func (m *TLphoneCallRequested) Getadmin_id() int32                             { return m.Data.Admin_id }
func (m *TLphoneCallRequested) Setparticipant_id(v int32)                      { m.Data.Participant_id = v }
func (m *TLphoneCallRequested) Getparticipant_id() int32                       { return m.Data.Participant_id }
func (m *TLphoneCallRequested) Setg_a_hash(v []uint8)                          { m.Data.G_a_hash = v }
func (m *TLphoneCallRequested) Getg_a_hash() []uint8                           { return m.Data.G_a_hash }
func (m *TLphoneCallRequested) Setprotocol(v PhoneCallProtocol)                { m.Data.Protocol = v }
func (m *TLphoneCallRequested) Getprotocol() PhoneCallProtocol                 { return m.Data.Protocol }
func (m *TLphoneCallAccepted) Setvideo(v bool)                                 { m.Data.Video = v }
func (m *TLphoneCallAccepted) Getvideo() bool                                  { return m.Data.Video }
func (m *TLphoneCallAccepted) Setid(v int64)                                   { m.Data.Id = v }
func (m *TLphoneCallAccepted) Getid() int64                                    { return m.Data.Id }
func (m *TLphoneCallAccepted) Setaccess_hash(v int64)                          { m.Data.Access_hash = v }
func (m *TLphoneCallAccepted) Getaccess_hash() int64                           { return m.Data.Access_hash }
func (m *TLphoneCallAccepted) Setdate(v int32)                                 { m.Data.Date = v }
func (m *TLphoneCallAccepted) Getdate() int32                                  { return m.Data.Date }
func (m *TLphoneCallAccepted) Setadmin_id(v int32)                             { m.Data.Admin_id = v }
func (m *TLphoneCallAccepted) Getadmin_id() int32                              { return m.Data.Admin_id }
func (m *TLphoneCallAccepted) Setparticipant_id(v int32)                       { m.Data.Participant_id = v }
func (m *TLphoneCallAccepted) Getparticipant_id() int32                        { return m.Data.Participant_id }
func (m *TLphoneCallAccepted) Setg_b(v []uint8)                                { m.Data.G_b = v }
func (m *TLphoneCallAccepted) Getg_b() []uint8                                 { return m.Data.G_b }
func (m *TLphoneCallAccepted) Setprotocol(v PhoneCallProtocol)                 { m.Data.Protocol = v }
func (m *TLphoneCallAccepted) Getprotocol() PhoneCallProtocol                  { return m.Data.Protocol }
func (m *TLphoneCall) Setp2p_allowed(v bool)                                   { m.Data.P2p_allowed = v }
func (m *TLphoneCall) Getp2p_allowed() bool                                    { return m.Data.P2p_allowed }
func (m *TLphoneCall) Setvideo(v bool)                                         { m.Data.Video = v }
func (m *TLphoneCall) Getvideo() bool                                          { return m.Data.Video }
func (m *TLphoneCall) Setid(v int64)                                           { m.Data.Id = v }
func (m *TLphoneCall) Getid() int64                                            { return m.Data.Id }
func (m *TLphoneCall) Setaccess_hash(v int64)                                  { m.Data.Access_hash = v }
func (m *TLphoneCall) Getaccess_hash() int64                                   { return m.Data.Access_hash }
func (m *TLphoneCall) Setdate(v int32)                                         { m.Data.Date = v }
func (m *TLphoneCall) Getdate() int32                                          { return m.Data.Date }
func (m *TLphoneCall) Setadmin_id(v int32)                                     { m.Data.Admin_id = v }
func (m *TLphoneCall) Getadmin_id() int32                                      { return m.Data.Admin_id }
func (m *TLphoneCall) Setparticipant_id(v int32)                               { m.Data.Participant_id = v }
func (m *TLphoneCall) Getparticipant_id() int32                                { return m.Data.Participant_id }
func (m *TLphoneCall) Setg_a_or_b(v []uint8)                                   { m.Data.G_a_or_b = v }
func (m *TLphoneCall) Getg_a_or_b() []uint8                                    { return m.Data.G_a_or_b }
func (m *TLphoneCall) Setkey_fingerprint(v int64)                              { m.Data.Key_fingerprint = v }
func (m *TLphoneCall) Getkey_fingerprint() int64                               { return m.Data.Key_fingerprint }
func (m *TLphoneCall) Setprotocol(v PhoneCallProtocol)                         { m.Data.Protocol = v }
func (m *TLphoneCall) Getprotocol() PhoneCallProtocol                          { return m.Data.Protocol }
func (m *TLphoneCall) Setconnections(v []PhoneConnection)                      { m.Data.Connections = v }
func (m *TLphoneCall) Getconnections() []PhoneConnection                       { return m.Data.Connections }
func (m *TLphoneCall) Setstart_date(v int32)                                   { m.Data.Start_date = v }
func (m *TLphoneCall) Getstart_date() int32                                    { return m.Data.Start_date }
func (m *TLphoneCallDiscarded) Setneed_rating(v bool)                          { m.Data.Need_rating = v }
func (m *TLphoneCallDiscarded) Getneed_rating() bool                           { return m.Data.Need_rating }
func (m *TLphoneCallDiscarded) Setneed_debug(v bool)                           { m.Data.Need_debug = v }
func (m *TLphoneCallDiscarded) Getneed_debug() bool                            { return m.Data.Need_debug }
func (m *TLphoneCallDiscarded) Setvideo(v bool)                                { m.Data.Video = v }
func (m *TLphoneCallDiscarded) Getvideo() bool                                 { return m.Data.Video }
func (m *TLphoneCallDiscarded) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLphoneCallDiscarded) Getid() int64                                   { return m.Data.Id }
func (m *TLphoneCallDiscarded) Setreason(v PhoneCallDiscardReason)             { m.Data.Reason = v }
func (m *TLphoneCallDiscarded) Getreason() PhoneCallDiscardReason              { return m.Data.Reason }
func (m *TLphoneCallDiscarded) Setduration(v int32)                            { m.Data.Duration = v }
func (m *TLphoneCallDiscarded) Getduration() int32                             { return m.Data.Duration }
func (m *TLmessageReplyHeader) Setreply_to_msg_id(v int32)                     { m.Data.Reply_to_msg_id = v }
func (m *TLmessageReplyHeader) Getreply_to_msg_id() int32                      { return m.Data.Reply_to_msg_id }
func (m *TLmessageReplyHeader) Setreply_to_peer_id(v Peer)                     { m.Data.Reply_to_peer_id = v }
func (m *TLmessageReplyHeader) Getreply_to_peer_id() Peer                      { return m.Data.Reply_to_peer_id }
func (m *TLmessageReplyHeader) Setreply_to_top_id(v int32)                     { m.Data.Reply_to_top_id = v }
func (m *TLmessageReplyHeader) Getreply_to_top_id() int32                      { return m.Data.Reply_to_top_id }
func (m *TLmessages_stickers) Sethash(v int32)                                 { m.Data.Hash = v }
func (m *TLmessages_stickers) Gethash() int32                                  { return m.Data.Hash }
func (m *TLmessages_stickers) Setstickers(v []Document)                        { m.Data.Stickers = v }
func (m *TLmessages_stickers) Getstickers() []Document                         { return m.Data.Stickers }
func (m *TLsecureFile) Setid(v int64)                                          { m.Data.Id = v }
func (m *TLsecureFile) Getid() int64                                           { return m.Data.Id }
func (m *TLsecureFile) Setaccess_hash(v int64)                                 { m.Data.Access_hash = v }
func (m *TLsecureFile) Getaccess_hash() int64                                  { return m.Data.Access_hash }
func (m *TLsecureFile) Setsize(v int32)                                        { m.Data.Size = v }
func (m *TLsecureFile) Getsize() int32                                         { return m.Data.Size }
func (m *TLsecureFile) Setdc_id(v int32)                                       { m.Data.Dc_id = v }
func (m *TLsecureFile) Getdc_id() int32                                        { return m.Data.Dc_id }
func (m *TLsecureFile) Setdate(v int32)                                        { m.Data.Date = v }
func (m *TLsecureFile) Getdate() int32                                         { return m.Data.Date }
func (m *TLsecureFile) Setfile_hash(v []uint8)                                 { m.Data.File_hash = v }
func (m *TLsecureFile) Getfile_hash() []uint8                                  { return m.Data.File_hash }
func (m *TLsecureFile) Setsecret(v []uint8)                                    { m.Data.Secret = v }
func (m *TLsecureFile) Getsecret() []uint8                                     { return m.Data.Secret }
func (m *TLinputEncryptedFileUploaded) Setid(v int64)                          { m.Data.Id = v }
func (m *TLinputEncryptedFileUploaded) Getid() int64                           { return m.Data.Id }
func (m *TLinputEncryptedFileUploaded) Setparts(v int32)                       { m.Data.Parts = v }
func (m *TLinputEncryptedFileUploaded) Getparts() int32                        { return m.Data.Parts }
func (m *TLinputEncryptedFileUploaded) Setmd5_checksum(v string)               { m.Data.Md5_checksum = v }
func (m *TLinputEncryptedFileUploaded) Getmd5_checksum() string                { return m.Data.Md5_checksum }
func (m *TLinputEncryptedFileUploaded) Setkey_fingerprint(v int32)             { m.Data.Key_fingerprint = v }
func (m *TLinputEncryptedFileUploaded) Getkey_fingerprint() int32              { return m.Data.Key_fingerprint }
func (m *TLinputEncryptedFile) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLinputEncryptedFile) Getid() int64                                   { return m.Data.Id }
func (m *TLinputEncryptedFile) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLinputEncryptedFile) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLinputEncryptedFileBigUploaded) Setid(v int64)                       { m.Data.Id = v }
func (m *TLinputEncryptedFileBigUploaded) Getid() int64                        { return m.Data.Id }
func (m *TLinputEncryptedFileBigUploaded) Setparts(v int32)                    { m.Data.Parts = v }
func (m *TLinputEncryptedFileBigUploaded) Getparts() int32                     { return m.Data.Parts }
func (m *TLinputEncryptedFileBigUploaded) Setkey_fingerprint(v int32)          { m.Data.Key_fingerprint = v }
func (m *TLinputEncryptedFileBigUploaded) Getkey_fingerprint() int32           { return m.Data.Key_fingerprint }
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Setsalt(v []uint8) { m.Data.Salt = v }
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Getsalt() []uint8  { return m.Data.Salt }
func (m *TLsecurePasswordKdfAlgoSHA512) Setsalt(v []uint8)                     { m.Data.Salt = v }
func (m *TLsecurePasswordKdfAlgoSHA512) Getsalt() []uint8                      { return m.Data.Salt }
func (m *TLhelp_countriesList) Setcountries(v []Help_Country)                  { m.Data.Countries = v }
func (m *TLhelp_countriesList) Getcountries() []Help_Country                   { return m.Data.Countries }
func (m *TLhelp_countriesList) Sethash(v int32)                                { m.Data.Hash = v }
func (m *TLhelp_countriesList) Gethash() int32                                 { return m.Data.Hash }
func (m *TLinputDialogPeer) Setpeer(v InputPeer)                               { m.Data.Peer = v }
func (m *TLinputDialogPeer) Getpeer() InputPeer                                { return m.Data.Peer }
func (m *TLinputDialogPeerFolder) Setfolder_id(v int32)                        { m.Data.Folder_id = v }
func (m *TLinputDialogPeerFolder) Getfolder_id() int32                         { return m.Data.Folder_id }
func (m *TLhelp_countryCode) Setcountry_code(v string)                         { m.Data.Country_code = v }
func (m *TLhelp_countryCode) Getcountry_code() string                          { return m.Data.Country_code }
func (m *TLhelp_countryCode) Setprefixes(v []String)                           { m.Data.Prefixes = v }
func (m *TLhelp_countryCode) Getprefixes() []String                            { return m.Data.Prefixes }
func (m *TLhelp_countryCode) Setpatterns(v []String)                           { m.Data.Patterns = v }
func (m *TLhelp_countryCode) Getpatterns() []String                            { return m.Data.Patterns }
func (m *TLencryptedMessage) Setrandom_id(v int64)                             { m.Data.Random_id = v }
func (m *TLencryptedMessage) Getrandom_id() int64                              { return m.Data.Random_id }
func (m *TLencryptedMessage) Setchat_id(v int32)                               { m.Data.Chat_id = v }
func (m *TLencryptedMessage) Getchat_id() int32                                { return m.Data.Chat_id }
func (m *TLencryptedMessage) Setdate(v int32)                                  { m.Data.Date = v }
func (m *TLencryptedMessage) Getdate() int32                                   { return m.Data.Date }
func (m *TLencryptedMessage) Setbytes(v []uint8)                               { m.Data.Bytes = v }
func (m *TLencryptedMessage) Getbytes() []uint8                                { return m.Data.Bytes }
func (m *TLencryptedMessage) Setfile(v EncryptedFile)                          { m.Data.File = v }
func (m *TLencryptedMessage) Getfile() EncryptedFile                           { return m.Data.File }
func (m *TLencryptedMessageService) Setrandom_id(v int64)                      { m.Data.Random_id = v }
func (m *TLencryptedMessageService) Getrandom_id() int64                       { return m.Data.Random_id }
func (m *TLencryptedMessageService) Setchat_id(v int32)                        { m.Data.Chat_id = v }
func (m *TLencryptedMessageService) Getchat_id() int32                         { return m.Data.Chat_id }
func (m *TLencryptedMessageService) Setdate(v int32)                           { m.Data.Date = v }
func (m *TLencryptedMessageService) Getdate() int32                            { return m.Data.Date }
func (m *TLencryptedMessageService) Setbytes(v []uint8)                        { m.Data.Bytes = v }
func (m *TLencryptedMessageService) Getbytes() []uint8                         { return m.Data.Bytes }
func (m *TLinputSingleMedia) Setmedia(v InputMedia)                            { m.Data.Media = v }
func (m *TLinputSingleMedia) Getmedia() InputMedia                             { return m.Data.Media }
func (m *TLinputSingleMedia) Setrandom_id(v int64)                             { m.Data.Random_id = v }
func (m *TLinputSingleMedia) Getrandom_id() int64                              { return m.Data.Random_id }
func (m *TLinputSingleMedia) Setmessage(v string)                              { m.Data.Message = v }
func (m *TLinputSingleMedia) Getmessage() string                               { return m.Data.Message }
func (m *TLinputSingleMedia) Setentities(v []MessageEntity)                    { m.Data.Entities = v }
func (m *TLinputSingleMedia) Getentities() []MessageEntity                     { return m.Data.Entities }
func (m *TLpageTableCell) Setheader(v bool)                                    { m.Data.Header = v }
func (m *TLpageTableCell) Getheader() bool                                     { return m.Data.Header }
func (m *TLpageTableCell) Setalign_center(v bool)                              { m.Data.Align_center = v }
func (m *TLpageTableCell) Getalign_center() bool                               { return m.Data.Align_center }
func (m *TLpageTableCell) Setalign_right(v bool)                               { m.Data.Align_right = v }
func (m *TLpageTableCell) Getalign_right() bool                                { return m.Data.Align_right }
func (m *TLpageTableCell) Setvalign_middle(v bool)                             { m.Data.Valign_middle = v }
func (m *TLpageTableCell) Getvalign_middle() bool                              { return m.Data.Valign_middle }
func (m *TLpageTableCell) Setvalign_bottom(v bool)                             { m.Data.Valign_bottom = v }
func (m *TLpageTableCell) Getvalign_bottom() bool                              { return m.Data.Valign_bottom }
func (m *TLpageTableCell) Settext(v RichText)                                  { m.Data.Text = v }
func (m *TLpageTableCell) Gettext() RichText                                   { return m.Data.Text }
func (m *TLpageTableCell) Setcolspan(v int32)                                  { m.Data.Colspan = v }
func (m *TLpageTableCell) Getcolspan() int32                                   { return m.Data.Colspan }
func (m *TLpageTableCell) Setrowspan(v int32)                                  { m.Data.Rowspan = v }
func (m *TLpageTableCell) Getrowspan() int32                                   { return m.Data.Rowspan }
func (m *TLreceivedNotifyMessage) Setid(v int32)                               { m.Data.Id = v }
func (m *TLreceivedNotifyMessage) Getid() int32                                { return m.Data.Id }
func (m *TLreceivedNotifyMessage) Setflags(v int32)                            { m.Data.Flags = v }
func (m *TLreceivedNotifyMessage) Getflags() int32                             { return m.Data.Flags }
func (m *TLshippingOption) Setid(v string)                                     { m.Data.Id = v }
func (m *TLshippingOption) Getid() string                                      { return m.Data.Id }
func (m *TLshippingOption) Settitle(v string)                                  { m.Data.Title = v }
func (m *TLshippingOption) Gettitle() string                                   { return m.Data.Title }
func (m *TLshippingOption) Setprices(v []LabeledPrice)                         { m.Data.Prices = v }
func (m *TLshippingOption) Getprices() []LabeledPrice                          { return m.Data.Prices }
func (m *TLencryptedChatEmpty) Setid(v int32)                                  { m.Data.Id = v }
func (m *TLencryptedChatEmpty) Getid() int32                                   { return m.Data.Id }
func (m *TLencryptedChatWaiting) Setid(v int32)                                { m.Data.Id = v }
func (m *TLencryptedChatWaiting) Getid() int32                                 { return m.Data.Id }
func (m *TLencryptedChatWaiting) Setaccess_hash(v int64)                       { m.Data.Access_hash = v }
func (m *TLencryptedChatWaiting) Getaccess_hash() int64                        { return m.Data.Access_hash }
func (m *TLencryptedChatWaiting) Setdate(v int32)                              { m.Data.Date = v }
func (m *TLencryptedChatWaiting) Getdate() int32                               { return m.Data.Date }
func (m *TLencryptedChatWaiting) Setadmin_id(v int32)                          { m.Data.Admin_id = v }
func (m *TLencryptedChatWaiting) Getadmin_id() int32                           { return m.Data.Admin_id }
func (m *TLencryptedChatWaiting) Setparticipant_id(v int32)                    { m.Data.Participant_id = v }
func (m *TLencryptedChatWaiting) Getparticipant_id() int32                     { return m.Data.Participant_id }
func (m *TLencryptedChatRequested) Setfolder_id(v int32)                       { m.Data.Folder_id = v }
func (m *TLencryptedChatRequested) Getfolder_id() int32                        { return m.Data.Folder_id }
func (m *TLencryptedChatRequested) Setid(v int32)                              { m.Data.Id = v }
func (m *TLencryptedChatRequested) Getid() int32                               { return m.Data.Id }
func (m *TLencryptedChatRequested) Setaccess_hash(v int64)                     { m.Data.Access_hash = v }
func (m *TLencryptedChatRequested) Getaccess_hash() int64                      { return m.Data.Access_hash }
func (m *TLencryptedChatRequested) Setdate(v int32)                            { m.Data.Date = v }
func (m *TLencryptedChatRequested) Getdate() int32                             { return m.Data.Date }
func (m *TLencryptedChatRequested) Setadmin_id(v int32)                        { m.Data.Admin_id = v }
func (m *TLencryptedChatRequested) Getadmin_id() int32                         { return m.Data.Admin_id }
func (m *TLencryptedChatRequested) Setparticipant_id(v int32)                  { m.Data.Participant_id = v }
func (m *TLencryptedChatRequested) Getparticipant_id() int32                   { return m.Data.Participant_id }
func (m *TLencryptedChatRequested) Setg_a(v []uint8)                           { m.Data.G_a = v }
func (m *TLencryptedChatRequested) Getg_a() []uint8                            { return m.Data.G_a }
func (m *TLencryptedChat) Setid(v int32)                                       { m.Data.Id = v }
func (m *TLencryptedChat) Getid() int32                                        { return m.Data.Id }
func (m *TLencryptedChat) Setaccess_hash(v int64)                              { m.Data.Access_hash = v }
func (m *TLencryptedChat) Getaccess_hash() int64                               { return m.Data.Access_hash }
func (m *TLencryptedChat) Setdate(v int32)                                     { m.Data.Date = v }
func (m *TLencryptedChat) Getdate() int32                                      { return m.Data.Date }
func (m *TLencryptedChat) Setadmin_id(v int32)                                 { m.Data.Admin_id = v }
func (m *TLencryptedChat) Getadmin_id() int32                                  { return m.Data.Admin_id }
func (m *TLencryptedChat) Setparticipant_id(v int32)                           { m.Data.Participant_id = v }
func (m *TLencryptedChat) Getparticipant_id() int32                            { return m.Data.Participant_id }
func (m *TLencryptedChat) Setg_a_or_b(v []uint8)                               { m.Data.G_a_or_b = v }
func (m *TLencryptedChat) Getg_a_or_b() []uint8                                { return m.Data.G_a_or_b }
func (m *TLencryptedChat) Setkey_fingerprint(v int64)                          { m.Data.Key_fingerprint = v }
func (m *TLencryptedChat) Getkey_fingerprint() int64                           { return m.Data.Key_fingerprint }
func (m *TLencryptedChatDiscarded) Setid(v int32)                              { m.Data.Id = v }
func (m *TLencryptedChatDiscarded) Getid() int32                               { return m.Data.Id }
func (m *TLupdates_differenceEmpty) Setdate(v int32)                           { m.Data.Date = v }
func (m *TLupdates_differenceEmpty) Getdate() int32                            { return m.Data.Date }
func (m *TLupdates_differenceEmpty) Setseq(v int32)                            { m.Data.Seq = v }
func (m *TLupdates_differenceEmpty) Getseq() int32                             { return m.Data.Seq }
func (m *TLupdates_difference) Setnew_messages(v []Message)                    { m.Data.New_messages = v }
func (m *TLupdates_difference) Getnew_messages() []Message                     { return m.Data.New_messages }
func (m *TLupdates_difference) Setnew_encrypted_messages(v []EncryptedMessage) {
	m.Data.New_encrypted_messages = v
}
func (m *TLupdates_difference) Getnew_encrypted_messages() []EncryptedMessage {
	return m.Data.New_encrypted_messages
}
func (m *TLupdates_difference) Setother_updates(v []Update)      { m.Data.Other_updates = v }
func (m *TLupdates_difference) Getother_updates() []Update       { return m.Data.Other_updates }
func (m *TLupdates_difference) Setchats(v []Chat)                { m.Data.Chats = v }
func (m *TLupdates_difference) Getchats() []Chat                 { return m.Data.Chats }
func (m *TLupdates_difference) Setusers(v []User)                { m.Data.Users = v }
func (m *TLupdates_difference) Getusers() []User                 { return m.Data.Users }
func (m *TLupdates_difference) Setstate(v Updates_State)         { m.Data.State = v }
func (m *TLupdates_difference) Getstate() Updates_State          { return m.Data.State }
func (m *TLupdates_differenceSlice) Setnew_messages(v []Message) { m.Data.New_messages = v }
func (m *TLupdates_differenceSlice) Getnew_messages() []Message  { return m.Data.New_messages }
func (m *TLupdates_differenceSlice) Setnew_encrypted_messages(v []EncryptedMessage) {
	m.Data.New_encrypted_messages = v
}
func (m *TLupdates_differenceSlice) Getnew_encrypted_messages() []EncryptedMessage {
	return m.Data.New_encrypted_messages
}
func (m *TLupdates_differenceSlice) Setother_updates(v []Update) { m.Data.Other_updates = v }
func (m *TLupdates_differenceSlice) Getother_updates() []Update  { return m.Data.Other_updates }
func (m *TLupdates_differenceSlice) Setchats(v []Chat)           { m.Data.Chats = v }
func (m *TLupdates_differenceSlice) Getchats() []Chat            { return m.Data.Chats }
func (m *TLupdates_differenceSlice) Setusers(v []User)           { m.Data.Users = v }
func (m *TLupdates_differenceSlice) Getusers() []User            { return m.Data.Users }
func (m *TLupdates_differenceSlice) Setintermediate_state(v Updates_State) {
	m.Data.Intermediate_state = v
}
func (m *TLupdates_differenceSlice) Getintermediate_state() Updates_State {
	return m.Data.Intermediate_state
}
func (m *TLupdates_differenceTooLong) Setpts(v int32)            { m.Data.Pts = v }
func (m *TLupdates_differenceTooLong) Getpts() int32             { return m.Data.Pts }
func (m *TLpollAnswerVoters) Setchosen(v bool)                   { m.Data.Chosen = v }
func (m *TLpollAnswerVoters) Getchosen() bool                    { return m.Data.Chosen }
func (m *TLpollAnswerVoters) Setcorrect(v bool)                  { m.Data.Correct = v }
func (m *TLpollAnswerVoters) Getcorrect() bool                   { return m.Data.Correct }
func (m *TLpollAnswerVoters) Setoption(v []uint8)                { m.Data.Option = v }
func (m *TLpollAnswerVoters) Getoption() []uint8                 { return m.Data.Option }
func (m *TLpollAnswerVoters) Setvoters(v int32)                  { m.Data.Voters = v }
func (m *TLpollAnswerVoters) Getvoters() int32                   { return m.Data.Voters }
func (m *TLdocumentEmpty) Setid(v int64)                         { m.Data.Id = v }
func (m *TLdocumentEmpty) Getid() int64                          { return m.Data.Id }
func (m *TLdocument) Setid(v int64)                              { m.Data.Id = v }
func (m *TLdocument) Getid() int64                               { return m.Data.Id }
func (m *TLdocument) Setaccess_hash(v int64)                     { m.Data.Access_hash = v }
func (m *TLdocument) Getaccess_hash() int64                      { return m.Data.Access_hash }
func (m *TLdocument) Setfile_reference(v []uint8)                { m.Data.File_reference = v }
func (m *TLdocument) Getfile_reference() []uint8                 { return m.Data.File_reference }
func (m *TLdocument) Setdate(v int32)                            { m.Data.Date = v }
func (m *TLdocument) Getdate() int32                             { return m.Data.Date }
func (m *TLdocument) Setmime_type(v string)                      { m.Data.Mime_type = v }
func (m *TLdocument) Getmime_type() string                       { return m.Data.Mime_type }
func (m *TLdocument) Setsize(v int32)                            { m.Data.Size = v }
func (m *TLdocument) Getsize() int32                             { return m.Data.Size }
func (m *TLdocument) Setthumbs(v []PhotoSize)                    { m.Data.Thumbs = v }
func (m *TLdocument) Getthumbs() []PhotoSize                     { return m.Data.Thumbs }
func (m *TLdocument) Setvideo_thumbs(v []VideoSize)              { m.Data.Video_thumbs = v }
func (m *TLdocument) Getvideo_thumbs() []VideoSize               { return m.Data.Video_thumbs }
func (m *TLdocument) Setdc_id(v int32)                           { m.Data.Dc_id = v }
func (m *TLdocument) Getdc_id() int32                            { return m.Data.Dc_id }
func (m *TLdocument) Setattributes(v []DocumentAttribute)        { m.Data.Attributes = v }
func (m *TLdocument) Getattributes() []DocumentAttribute         { return m.Data.Attributes }
func (m *TLinputStickeredMediaPhoto) Setid(v InputPhoto)         { m.Data.Id = v }
func (m *TLinputStickeredMediaPhoto) Getid() InputPhoto          { return m.Data.Id }
func (m *TLinputStickeredMediaDocument) Setid_2(v InputDocument) { m.Data.Id_2 = v }
func (m *TLinputStickeredMediaDocument) Getid_2() InputDocument  { return m.Data.Id_2 }
func (m *TLfolder) Setautofill_new_broadcasts(v bool)            { m.Data.Autofill_new_broadcasts = v }
func (m *TLfolder) Getautofill_new_broadcasts() bool             { return m.Data.Autofill_new_broadcasts }
func (m *TLfolder) Setautofill_public_groups(v bool)             { m.Data.Autofill_public_groups = v }
func (m *TLfolder) Getautofill_public_groups() bool              { return m.Data.Autofill_public_groups }
func (m *TLfolder) Setautofill_new_correspondents(v bool)        { m.Data.Autofill_new_correspondents = v }
func (m *TLfolder) Getautofill_new_correspondents() bool         { return m.Data.Autofill_new_correspondents }
func (m *TLfolder) Setid(v int32)                                { m.Data.Id = v }
func (m *TLfolder) Getid() int32                                 { return m.Data.Id }
func (m *TLfolder) Settitle(v string)                            { m.Data.Title = v }
func (m *TLfolder) Gettitle() string                             { return m.Data.Title }
func (m *TLfolder) Setphoto(v ChatPhoto)                         { m.Data.Photo = v }
func (m *TLfolder) Getphoto() ChatPhoto                          { return m.Data.Photo }
func (m *TLphotoEmpty) Setid(v int64)                            { m.Data.Id = v }
func (m *TLphotoEmpty) Getid() int64                             { return m.Data.Id }
func (m *TLphoto) Sethas_stickers(v bool)                        { m.Data.Has_stickers = v }
func (m *TLphoto) Gethas_stickers() bool                         { return m.Data.Has_stickers }
func (m *TLphoto) Setid(v int64)                                 { m.Data.Id = v }
func (m *TLphoto) Getid() int64                                  { return m.Data.Id }
func (m *TLphoto) Setaccess_hash(v int64)                        { m.Data.Access_hash = v }
func (m *TLphoto) Getaccess_hash() int64                         { return m.Data.Access_hash }
func (m *TLphoto) Setfile_reference(v []uint8)                   { m.Data.File_reference = v }
func (m *TLphoto) Getfile_reference() []uint8                    { return m.Data.File_reference }
func (m *TLphoto) Setdate(v int32)                               { m.Data.Date = v }
func (m *TLphoto) Getdate() int32                                { return m.Data.Date }
func (m *TLphoto) Setsizes(v []PhotoSize)                        { m.Data.Sizes = v }
func (m *TLphoto) Getsizes() []PhotoSize                         { return m.Data.Sizes }
func (m *TLphoto) Setvideo_sizes(v []VideoSize)                  { m.Data.Video_sizes = v }
func (m *TLphoto) Getvideo_sizes() []VideoSize                   { return m.Data.Video_sizes }
func (m *TLphoto) Setdc_id(v int32)                              { m.Data.Dc_id = v }
func (m *TLphoto) Getdc_id() int32                               { return m.Data.Dc_id }
func (m *TLaccount_password) Sethas_recovery(v bool)             { m.Data.Has_recovery = v }
func (m *TLaccount_password) Gethas_recovery() bool              { return m.Data.Has_recovery }
func (m *TLaccount_password) Sethas_secure_values(v bool)        { m.Data.Has_secure_values = v }
func (m *TLaccount_password) Gethas_secure_values() bool         { return m.Data.Has_secure_values }
func (m *TLaccount_password) Sethas_password(v bool)             { m.Data.Has_password = v }
func (m *TLaccount_password) Gethas_password() bool              { return m.Data.Has_password }
func (m *TLaccount_password) Setcurrent_algo(v PasswordKdfAlgo)  { m.Data.Current_algo = v }
func (m *TLaccount_password) Getcurrent_algo() PasswordKdfAlgo   { return m.Data.Current_algo }
func (m *TLaccount_password) Setsrp_B(v []uint8)                 { m.Data.Srp_B = v }
func (m *TLaccount_password) Getsrp_B() []uint8                  { return m.Data.Srp_B }
func (m *TLaccount_password) Setsrp_id(v int64)                  { m.Data.Srp_id = v }
func (m *TLaccount_password) Getsrp_id() int64                   { return m.Data.Srp_id }
func (m *TLaccount_password) Sethint(v string)                   { m.Data.Hint = v }
func (m *TLaccount_password) Gethint() string                    { return m.Data.Hint }
func (m *TLaccount_password) Setemail_unconfirmed_pattern(v string) {
	m.Data.Email_unconfirmed_pattern = v
}
func (m *TLaccount_password) Getemail_unconfirmed_pattern() string {
	return m.Data.Email_unconfirmed_pattern
}
func (m *TLaccount_password) Setnew_algo(v PasswordKdfAlgo)              { m.Data.New_algo = v }
func (m *TLaccount_password) Getnew_algo() PasswordKdfAlgo               { return m.Data.New_algo }
func (m *TLaccount_password) Setnew_secure_algo(v SecurePasswordKdfAlgo) { m.Data.New_secure_algo = v }
func (m *TLaccount_password) Getnew_secure_algo() SecurePasswordKdfAlgo {
	return m.Data.New_secure_algo
}
func (m *TLaccount_password) Setsecure_random(v []uint8)                   { m.Data.Secure_random = v }
func (m *TLaccount_password) Getsecure_random() []uint8                    { return m.Data.Secure_random }
func (m *TLstats_broadcastStats) Setperiod(v StatsDateRangeDays)           { m.Data.Period = v }
func (m *TLstats_broadcastStats) Getperiod() StatsDateRangeDays            { return m.Data.Period }
func (m *TLstats_broadcastStats) Setfollowers(v StatsAbsValueAndPrev)      { m.Data.Followers = v }
func (m *TLstats_broadcastStats) Getfollowers() StatsAbsValueAndPrev       { return m.Data.Followers }
func (m *TLstats_broadcastStats) Setviews_per_post(v StatsAbsValueAndPrev) { m.Data.Views_per_post = v }
func (m *TLstats_broadcastStats) Getviews_per_post() StatsAbsValueAndPrev {
	return m.Data.Views_per_post
}
func (m *TLstats_broadcastStats) Setshares_per_post(v StatsAbsValueAndPrev) {
	m.Data.Shares_per_post = v
}
func (m *TLstats_broadcastStats) Getshares_per_post() StatsAbsValueAndPrev {
	return m.Data.Shares_per_post
}
func (m *TLstats_broadcastStats) Setenabled_notifications(v StatsPercentValue) {
	m.Data.Enabled_notifications = v
}
func (m *TLstats_broadcastStats) Getenabled_notifications() StatsPercentValue {
	return m.Data.Enabled_notifications
}
func (m *TLstats_broadcastStats) Setgrowth_graph(v StatsGraph)       { m.Data.Growth_graph = v }
func (m *TLstats_broadcastStats) Getgrowth_graph() StatsGraph        { return m.Data.Growth_graph }
func (m *TLstats_broadcastStats) Setfollowers_graph(v StatsGraph)    { m.Data.Followers_graph = v }
func (m *TLstats_broadcastStats) Getfollowers_graph() StatsGraph     { return m.Data.Followers_graph }
func (m *TLstats_broadcastStats) Setmute_graph(v StatsGraph)         { m.Data.Mute_graph = v }
func (m *TLstats_broadcastStats) Getmute_graph() StatsGraph          { return m.Data.Mute_graph }
func (m *TLstats_broadcastStats) Settop_hours_graph(v StatsGraph)    { m.Data.Top_hours_graph = v }
func (m *TLstats_broadcastStats) Gettop_hours_graph() StatsGraph     { return m.Data.Top_hours_graph }
func (m *TLstats_broadcastStats) Setinteractions_graph(v StatsGraph) { m.Data.Interactions_graph = v }
func (m *TLstats_broadcastStats) Getinteractions_graph() StatsGraph  { return m.Data.Interactions_graph }
func (m *TLstats_broadcastStats) Setiv_interactions_graph(v StatsGraph) {
	m.Data.Iv_interactions_graph = v
}
func (m *TLstats_broadcastStats) Getiv_interactions_graph() StatsGraph {
	return m.Data.Iv_interactions_graph
}
func (m *TLstats_broadcastStats) Setviews_by_source_graph(v StatsGraph) {
	m.Data.Views_by_source_graph = v
}
func (m *TLstats_broadcastStats) Getviews_by_source_graph() StatsGraph {
	return m.Data.Views_by_source_graph
}
func (m *TLstats_broadcastStats) Setnew_followers_by_source_graph(v StatsGraph) {
	m.Data.New_followers_by_source_graph = v
}
func (m *TLstats_broadcastStats) Getnew_followers_by_source_graph() StatsGraph {
	return m.Data.New_followers_by_source_graph
}
func (m *TLstats_broadcastStats) Setlanguages_graph(v StatsGraph) { m.Data.Languages_graph = v }
func (m *TLstats_broadcastStats) Getlanguages_graph() StatsGraph  { return m.Data.Languages_graph }
func (m *TLstats_broadcastStats) Setrecent_message_interactions(v []MessageInteractionCounters) {
	m.Data.Recent_message_interactions = v
}
func (m *TLstats_broadcastStats) Getrecent_message_interactions() []MessageInteractionCounters {
	return m.Data.Recent_message_interactions
}
func (m *TLpayments_paymentForm) Setcan_save_credentials(v bool)       { m.Data.Can_save_credentials = v }
func (m *TLpayments_paymentForm) Getcan_save_credentials() bool        { return m.Data.Can_save_credentials }
func (m *TLpayments_paymentForm) Setpassword_missing(v bool)           { m.Data.Password_missing = v }
func (m *TLpayments_paymentForm) Getpassword_missing() bool            { return m.Data.Password_missing }
func (m *TLpayments_paymentForm) Setbot_id(v int32)                    { m.Data.Bot_id = v }
func (m *TLpayments_paymentForm) Getbot_id() int32                     { return m.Data.Bot_id }
func (m *TLpayments_paymentForm) Setinvoice(v Invoice)                 { m.Data.Invoice = v }
func (m *TLpayments_paymentForm) Getinvoice() Invoice                  { return m.Data.Invoice }
func (m *TLpayments_paymentForm) Setprovider_id(v int32)               { m.Data.Provider_id = v }
func (m *TLpayments_paymentForm) Getprovider_id() int32                { return m.Data.Provider_id }
func (m *TLpayments_paymentForm) Seturl(v string)                      { m.Data.Url = v }
func (m *TLpayments_paymentForm) Geturl() string                       { return m.Data.Url }
func (m *TLpayments_paymentForm) Setnative_provider(v string)          { m.Data.Native_provider = v }
func (m *TLpayments_paymentForm) Getnative_provider() string           { return m.Data.Native_provider }
func (m *TLpayments_paymentForm) Setnative_params(v DataJSON)          { m.Data.Native_params = v }
func (m *TLpayments_paymentForm) Getnative_params() DataJSON           { return m.Data.Native_params }
func (m *TLpayments_paymentForm) Setsaved_info(v PaymentRequestedInfo) { m.Data.Saved_info = v }
func (m *TLpayments_paymentForm) Getsaved_info() PaymentRequestedInfo  { return m.Data.Saved_info }
func (m *TLpayments_paymentForm) Setsaved_credentials(v PaymentSavedCredentials) {
	m.Data.Saved_credentials = v
}
func (m *TLpayments_paymentForm) Getsaved_credentials() PaymentSavedCredentials {
	return m.Data.Saved_credentials
}
func (m *TLpayments_paymentForm) Setusers(v []User)                        { m.Data.Users = v }
func (m *TLpayments_paymentForm) Getusers() []User                         { return m.Data.Users }
func (m *TLmessageFwdHeader) Setfrom_id(v Peer)                            { m.Data.From_id = v }
func (m *TLmessageFwdHeader) Getfrom_id() Peer                             { return m.Data.From_id }
func (m *TLmessageFwdHeader) Setfrom_name(v string)                        { m.Data.From_name = v }
func (m *TLmessageFwdHeader) Getfrom_name() string                         { return m.Data.From_name }
func (m *TLmessageFwdHeader) Setdate(v int32)                              { m.Data.Date = v }
func (m *TLmessageFwdHeader) Getdate() int32                               { return m.Data.Date }
func (m *TLmessageFwdHeader) Setchannel_post(v int32)                      { m.Data.Channel_post = v }
func (m *TLmessageFwdHeader) Getchannel_post() int32                       { return m.Data.Channel_post }
func (m *TLmessageFwdHeader) Setpost_author(v string)                      { m.Data.Post_author = v }
func (m *TLmessageFwdHeader) Getpost_author() string                       { return m.Data.Post_author }
func (m *TLmessageFwdHeader) Setsaved_from_peer(v Peer)                    { m.Data.Saved_from_peer = v }
func (m *TLmessageFwdHeader) Getsaved_from_peer() Peer                     { return m.Data.Saved_from_peer }
func (m *TLmessageFwdHeader) Setsaved_from_msg_id(v int32)                 { m.Data.Saved_from_msg_id = v }
func (m *TLmessageFwdHeader) Getsaved_from_msg_id() int32                  { return m.Data.Saved_from_msg_id }
func (m *TLmessageFwdHeader) Setpsa_type(v string)                         { m.Data.Psa_type = v }
func (m *TLmessageFwdHeader) Getpsa_type() string                          { return m.Data.Psa_type }
func (m *TLinputPaymentCredentialsSaved) Setid(v string)                   { m.Data.Id = v }
func (m *TLinputPaymentCredentialsSaved) Getid() string                    { return m.Data.Id }
func (m *TLinputPaymentCredentialsSaved) Settmp_password(v []uint8)        { m.Data.Tmp_password = v }
func (m *TLinputPaymentCredentialsSaved) Gettmp_password() []uint8         { return m.Data.Tmp_password }
func (m *TLinputPaymentCredentials) Setsave(v bool)                        { m.Data.Save = v }
func (m *TLinputPaymentCredentials) Getsave() bool                         { return m.Data.Save }
func (m *TLinputPaymentCredentials) Setdata(v DataJSON)                    { m.Data.Data = v }
func (m *TLinputPaymentCredentials) Getdata() DataJSON                     { return m.Data.Data }
func (m *TLinputPaymentCredentialsApplePay) Setpayment_data(v DataJSON)    { m.Data.Payment_data = v }
func (m *TLinputPaymentCredentialsApplePay) Getpayment_data() DataJSON     { return m.Data.Payment_data }
func (m *TLinputPaymentCredentialsAndroidPay) Setpayment_token(v DataJSON) { m.Data.Payment_token = v }
func (m *TLinputPaymentCredentialsAndroidPay) Getpayment_token() DataJSON {
	return m.Data.Payment_token
}
func (m *TLinputPaymentCredentialsAndroidPay) Setgoogle_transaction_id(v string) {
	m.Data.Google_transaction_id = v
}
func (m *TLinputPaymentCredentialsAndroidPay) Getgoogle_transaction_id() string {
	return m.Data.Google_transaction_id
}
func (m *TLstickerSet) Setarchived(v bool)                      { m.Data.Archived = v }
func (m *TLstickerSet) Getarchived() bool                       { return m.Data.Archived }
func (m *TLstickerSet) Setofficial(v bool)                      { m.Data.Official = v }
func (m *TLstickerSet) Getofficial() bool                       { return m.Data.Official }
func (m *TLstickerSet) Setmasks(v bool)                         { m.Data.Masks = v }
func (m *TLstickerSet) Getmasks() bool                          { return m.Data.Masks }
func (m *TLstickerSet) Setanimated(v bool)                      { m.Data.Animated = v }
func (m *TLstickerSet) Getanimated() bool                       { return m.Data.Animated }
func (m *TLstickerSet) Setinstalled_date(v int32)               { m.Data.Installed_date = v }
func (m *TLstickerSet) Getinstalled_date() int32                { return m.Data.Installed_date }
func (m *TLstickerSet) Setid(v int64)                           { m.Data.Id = v }
func (m *TLstickerSet) Getid() int64                            { return m.Data.Id }
func (m *TLstickerSet) Setaccess_hash(v int64)                  { m.Data.Access_hash = v }
func (m *TLstickerSet) Getaccess_hash() int64                   { return m.Data.Access_hash }
func (m *TLstickerSet) Settitle(v string)                       { m.Data.Title = v }
func (m *TLstickerSet) Gettitle() string                        { return m.Data.Title }
func (m *TLstickerSet) Setshort_name(v string)                  { m.Data.Short_name = v }
func (m *TLstickerSet) Getshort_name() string                   { return m.Data.Short_name }
func (m *TLstickerSet) Setthumb(v PhotoSize)                    { m.Data.Thumb = v }
func (m *TLstickerSet) Getthumb() PhotoSize                     { return m.Data.Thumb }
func (m *TLstickerSet) Setthumb_dc_id(v int32)                  { m.Data.Thumb_dc_id = v }
func (m *TLstickerSet) Getthumb_dc_id() int32                   { return m.Data.Thumb_dc_id }
func (m *TLstickerSet) Setcount(v int32)                        { m.Data.Count = v }
func (m *TLstickerSet) Getcount() int32                         { return m.Data.Count }
func (m *TLstickerSet) Sethash(v int32)                         { m.Data.Hash = v }
func (m *TLstickerSet) Gethash() int32                          { return m.Data.Hash }
func (m *TLpageListOrderedItemText) Setnum(v string)            { m.Data.Num = v }
func (m *TLpageListOrderedItemText) Getnum() string             { return m.Data.Num }
func (m *TLpageListOrderedItemText) Settext(v RichText)         { m.Data.Text = v }
func (m *TLpageListOrderedItemText) Gettext() RichText          { return m.Data.Text }
func (m *TLpageListOrderedItemBlocks) Setnum(v string)          { m.Data.Num = v }
func (m *TLpageListOrderedItemBlocks) Getnum() string           { return m.Data.Num }
func (m *TLpageListOrderedItemBlocks) Setblocks(v []PageBlock)  { m.Data.Blocks = v }
func (m *TLpageListOrderedItemBlocks) Getblocks() []PageBlock   { return m.Data.Blocks }
func (m *TLmessageReplies) Setcomments(v bool)                  { m.Data.Comments = v }
func (m *TLmessageReplies) Getcomments() bool                   { return m.Data.Comments }
func (m *TLmessageReplies) Setreplies(v int32)                  { m.Data.Replies = v }
func (m *TLmessageReplies) Getreplies() int32                   { return m.Data.Replies }
func (m *TLmessageReplies) Setreplies_pts(v int32)              { m.Data.Replies_pts = v }
func (m *TLmessageReplies) Getreplies_pts() int32               { return m.Data.Replies_pts }
func (m *TLmessageReplies) Setrecent_repliers(v []Peer)         { m.Data.Recent_repliers = v }
func (m *TLmessageReplies) Getrecent_repliers() []Peer          { return m.Data.Recent_repliers }
func (m *TLmessageReplies) Setchannel_id(v int32)               { m.Data.Channel_id = v }
func (m *TLmessageReplies) Getchannel_id() int32                { return m.Data.Channel_id }
func (m *TLmessageReplies) Setmax_id(v int32)                   { m.Data.Max_id = v }
func (m *TLmessageReplies) Getmax_id() int32                    { return m.Data.Max_id }
func (m *TLmessageReplies) Setread_max_id(v int32)              { m.Data.Read_max_id = v }
func (m *TLmessageReplies) Getread_max_id() int32               { return m.Data.Read_max_id }
func (m *TLhelp_userInfo) Setmessage(v string)                  { m.Data.Message = v }
func (m *TLhelp_userInfo) Getmessage() string                   { return m.Data.Message }
func (m *TLhelp_userInfo) Setentities(v []MessageEntity)        { m.Data.Entities = v }
func (m *TLhelp_userInfo) Getentities() []MessageEntity         { return m.Data.Entities }
func (m *TLhelp_userInfo) Setauthor(v string)                   { m.Data.Author = v }
func (m *TLhelp_userInfo) Getauthor() string                    { return m.Data.Author }
func (m *TLhelp_userInfo) Setdate(v int32)                      { m.Data.Date = v }
func (m *TLhelp_userInfo) Getdate() int32                       { return m.Data.Date }
func (m *TLrestrictionReason) Setplatform(v string)             { m.Data.Platform = v }
func (m *TLrestrictionReason) Getplatform() string              { return m.Data.Platform }
func (m *TLrestrictionReason) Setreason(v string)               { m.Data.Reason = v }
func (m *TLrestrictionReason) Getreason() string                { return m.Data.Reason }
func (m *TLrestrictionReason) Settext(v string)                 { m.Data.Text = v }
func (m *TLrestrictionReason) Gettext() string                  { return m.Data.Text }
func (m *TLkeyboardButton) Settext(v string)                    { m.Data.Text = v }
func (m *TLkeyboardButton) Gettext() string                     { return m.Data.Text }
func (m *TLkeyboardButtonUrl) Settext(v string)                 { m.Data.Text = v }
func (m *TLkeyboardButtonUrl) Gettext() string                  { return m.Data.Text }
func (m *TLkeyboardButtonUrl) Seturl(v string)                  { m.Data.Url = v }
func (m *TLkeyboardButtonUrl) Geturl() string                   { return m.Data.Url }
func (m *TLkeyboardButtonCallback) Setrequires_password(v bool) { m.Data.Requires_password = v }
func (m *TLkeyboardButtonCallback) Getrequires_password() bool  { return m.Data.Requires_password }
func (m *TLkeyboardButtonCallback) Settext(v string)            { m.Data.Text = v }
func (m *TLkeyboardButtonCallback) Gettext() string             { return m.Data.Text }
func (m *TLkeyboardButtonCallback) Setdata(v []uint8)           { m.Data.Data = v }
func (m *TLkeyboardButtonCallback) Getdata() []uint8            { return m.Data.Data }
func (m *TLkeyboardButtonRequestPhone) Settext(v string)        { m.Data.Text = v }
func (m *TLkeyboardButtonRequestPhone) Gettext() string         { return m.Data.Text }
func (m *TLkeyboardButtonRequestGeoLocation) Settext(v string)  { m.Data.Text = v }
func (m *TLkeyboardButtonRequestGeoLocation) Gettext() string   { return m.Data.Text }
func (m *TLkeyboardButtonSwitchInline) Setsame_peer(v bool)     { m.Data.Same_peer = v }
func (m *TLkeyboardButtonSwitchInline) Getsame_peer() bool      { return m.Data.Same_peer }
func (m *TLkeyboardButtonSwitchInline) Settext(v string)        { m.Data.Text = v }
func (m *TLkeyboardButtonSwitchInline) Gettext() string         { return m.Data.Text }
func (m *TLkeyboardButtonSwitchInline) Setquery(v string)       { m.Data.Query = v }
func (m *TLkeyboardButtonSwitchInline) Getquery() string        { return m.Data.Query }
func (m *TLkeyboardButtonGame) Settext(v string)                { m.Data.Text = v }
func (m *TLkeyboardButtonGame) Gettext() string                 { return m.Data.Text }
func (m *TLkeyboardButtonBuy) Settext(v string)                 { m.Data.Text = v }
func (m *TLkeyboardButtonBuy) Gettext() string                  { return m.Data.Text }
func (m *TLkeyboardButtonUrlAuth) Settext(v string)             { m.Data.Text = v }
func (m *TLkeyboardButtonUrlAuth) Gettext() string              { return m.Data.Text }
func (m *TLkeyboardButtonUrlAuth) Setfwd_text(v string)         { m.Data.Fwd_text = v }
func (m *TLkeyboardButtonUrlAuth) Getfwd_text() string          { return m.Data.Fwd_text }
func (m *TLkeyboardButtonUrlAuth) Seturl(v string)              { m.Data.Url = v }
func (m *TLkeyboardButtonUrlAuth) Geturl() string               { return m.Data.Url }
func (m *TLkeyboardButtonUrlAuth) Setbutton_id(v int32)         { m.Data.Button_id = v }
func (m *TLkeyboardButtonUrlAuth) Getbutton_id() int32          { return m.Data.Button_id }
func (m *TLinputKeyboardButtonUrlAuth) Setrequest_write_access(v bool) {
	m.Data.Request_write_access = v
}
func (m *TLinputKeyboardButtonUrlAuth) Getrequest_write_access() bool {
	return m.Data.Request_write_access
}
func (m *TLinputKeyboardButtonUrlAuth) Settext(v string)              { m.Data.Text = v }
func (m *TLinputKeyboardButtonUrlAuth) Gettext() string               { return m.Data.Text }
func (m *TLinputKeyboardButtonUrlAuth) Setfwd_text(v string)          { m.Data.Fwd_text = v }
func (m *TLinputKeyboardButtonUrlAuth) Getfwd_text() string           { return m.Data.Fwd_text }
func (m *TLinputKeyboardButtonUrlAuth) Seturl(v string)               { m.Data.Url = v }
func (m *TLinputKeyboardButtonUrlAuth) Geturl() string                { return m.Data.Url }
func (m *TLinputKeyboardButtonUrlAuth) Setbot(v InputUser)            { m.Data.Bot = v }
func (m *TLinputKeyboardButtonUrlAuth) Getbot() InputUser             { return m.Data.Bot }
func (m *TLkeyboardButtonRequestPoll) Setquiz(v Bool)                 { m.Data.Quiz = v }
func (m *TLkeyboardButtonRequestPoll) Getquiz() Bool                  { return m.Data.Quiz }
func (m *TLkeyboardButtonRequestPoll) Settext(v string)               { m.Data.Text = v }
func (m *TLkeyboardButtonRequestPoll) Gettext() string                { return m.Data.Text }
func (m *TLchatPhoto) Sethas_video(v bool)                            { m.Data.Has_video = v }
func (m *TLchatPhoto) Gethas_video() bool                             { return m.Data.Has_video }
func (m *TLchatPhoto) Setphoto_small(v FileLocation)                  { m.Data.Photo_small = v }
func (m *TLchatPhoto) Getphoto_small() FileLocation                   { return m.Data.Photo_small }
func (m *TLchatPhoto) Setphoto_big(v FileLocation)                    { m.Data.Photo_big = v }
func (m *TLchatPhoto) Getphoto_big() FileLocation                     { return m.Data.Photo_big }
func (m *TLchatPhoto) Setdc_id(v int32)                               { m.Data.Dc_id = v }
func (m *TLchatPhoto) Getdc_id() int32                                { return m.Data.Dc_id }
func (m *TLpeerNotifySettings) Setshow_previews(v Bool)               { m.Data.Show_previews = v }
func (m *TLpeerNotifySettings) Getshow_previews() Bool                { return m.Data.Show_previews }
func (m *TLpeerNotifySettings) Setsilent(v Bool)                      { m.Data.Silent = v }
func (m *TLpeerNotifySettings) Getsilent() Bool                       { return m.Data.Silent }
func (m *TLpeerNotifySettings) Setmute_until(v int32)                 { m.Data.Mute_until = v }
func (m *TLpeerNotifySettings) Getmute_until() int32                  { return m.Data.Mute_until }
func (m *TLpeerNotifySettings) Setsound(v string)                     { m.Data.Sound = v }
func (m *TLpeerNotifySettings) Getsound() string                      { return m.Data.Sound }
func (m *TLmessages_discussionMessage) Setmessages(v []Message)       { m.Data.Messages = v }
func (m *TLmessages_discussionMessage) Getmessages() []Message        { return m.Data.Messages }
func (m *TLmessages_discussionMessage) Setmax_id(v int32)             { m.Data.Max_id = v }
func (m *TLmessages_discussionMessage) Getmax_id() int32              { return m.Data.Max_id }
func (m *TLmessages_discussionMessage) Setread_inbox_max_id(v int32)  { m.Data.Read_inbox_max_id = v }
func (m *TLmessages_discussionMessage) Getread_inbox_max_id() int32   { return m.Data.Read_inbox_max_id }
func (m *TLmessages_discussionMessage) Setread_outbox_max_id(v int32) { m.Data.Read_outbox_max_id = v }
func (m *TLmessages_discussionMessage) Getread_outbox_max_id() int32 {
	return m.Data.Read_outbox_max_id
}
func (m *TLmessages_discussionMessage) Setchats(v []Chat)             { m.Data.Chats = v }
func (m *TLmessages_discussionMessage) Getchats() []Chat              { return m.Data.Chats }
func (m *TLmessages_discussionMessage) Setusers(v []User)             { m.Data.Users = v }
func (m *TLmessages_discussionMessage) Getusers() []User              { return m.Data.Users }
func (m *TLinputPhoneCall) Setid(v int64)                             { m.Data.Id = v }
func (m *TLinputPhoneCall) Getid() int64                              { return m.Data.Id }
func (m *TLinputPhoneCall) Setaccess_hash(v int64)                    { m.Data.Access_hash = v }
func (m *TLinputPhoneCall) Getaccess_hash() int64                     { return m.Data.Access_hash }
func (m *TLthemeSettings) Setbase_theme(v BaseTheme)                  { m.Data.Base_theme = v }
func (m *TLthemeSettings) Getbase_theme() BaseTheme                   { return m.Data.Base_theme }
func (m *TLthemeSettings) Setaccent_color(v int32)                    { m.Data.Accent_color = v }
func (m *TLthemeSettings) Getaccent_color() int32                     { return m.Data.Accent_color }
func (m *TLthemeSettings) Setmessage_top_color(v int32)               { m.Data.Message_top_color = v }
func (m *TLthemeSettings) Getmessage_top_color() int32                { return m.Data.Message_top_color }
func (m *TLthemeSettings) Setmessage_bottom_color(v int32)            { m.Data.Message_bottom_color = v }
func (m *TLthemeSettings) Getmessage_bottom_color() int32             { return m.Data.Message_bottom_color }
func (m *TLthemeSettings) Setwallpaper(v WallPaper)                   { m.Data.Wallpaper = v }
func (m *TLthemeSettings) Getwallpaper() WallPaper                    { return m.Data.Wallpaper }
func (m *TLdocumentAttributeImageSize) Setw(v int32)                  { m.Data.W = v }
func (m *TLdocumentAttributeImageSize) Getw() int32                   { return m.Data.W }
func (m *TLdocumentAttributeImageSize) Seth(v int32)                  { m.Data.H = v }
func (m *TLdocumentAttributeImageSize) Geth() int32                   { return m.Data.H }
func (m *TLdocumentAttributeSticker) Setmask(v bool)                  { m.Data.Mask = v }
func (m *TLdocumentAttributeSticker) Getmask() bool                   { return m.Data.Mask }
func (m *TLdocumentAttributeSticker) Setalt(v string)                 { m.Data.Alt = v }
func (m *TLdocumentAttributeSticker) Getalt() string                  { return m.Data.Alt }
func (m *TLdocumentAttributeSticker) Setstickerset(v InputStickerSet) { m.Data.Stickerset = v }
func (m *TLdocumentAttributeSticker) Getstickerset() InputStickerSet  { return m.Data.Stickerset }
func (m *TLdocumentAttributeSticker) Setmask_coords(v MaskCoords)     { m.Data.Mask_coords = v }
func (m *TLdocumentAttributeSticker) Getmask_coords() MaskCoords      { return m.Data.Mask_coords }
func (m *TLdocumentAttributeVideo) Setround_message(v bool)           { m.Data.Round_message = v }
func (m *TLdocumentAttributeVideo) Getround_message() bool            { return m.Data.Round_message }
func (m *TLdocumentAttributeVideo) Setsupports_streaming(v bool)      { m.Data.Supports_streaming = v }
func (m *TLdocumentAttributeVideo) Getsupports_streaming() bool       { return m.Data.Supports_streaming }
func (m *TLdocumentAttributeVideo) Setduration(v int32)               { m.Data.Duration = v }
func (m *TLdocumentAttributeVideo) Getduration() int32                { return m.Data.Duration }
func (m *TLdocumentAttributeVideo) Setw(v int32)                      { m.Data.W = v }
func (m *TLdocumentAttributeVideo) Getw() int32                       { return m.Data.W }
func (m *TLdocumentAttributeVideo) Seth(v int32)                      { m.Data.H = v }
func (m *TLdocumentAttributeVideo) Geth() int32                       { return m.Data.H }
func (m *TLdocumentAttributeAudio) Setvoice(v bool)                   { m.Data.Voice = v }
func (m *TLdocumentAttributeAudio) Getvoice() bool                    { return m.Data.Voice }
func (m *TLdocumentAttributeAudio) Setduration(v int32)               { m.Data.Duration = v }
func (m *TLdocumentAttributeAudio) Getduration() int32                { return m.Data.Duration }
func (m *TLdocumentAttributeAudio) Settitle(v string)                 { m.Data.Title = v }
func (m *TLdocumentAttributeAudio) Gettitle() string                  { return m.Data.Title }
func (m *TLdocumentAttributeAudio) Setperformer(v string)             { m.Data.Performer = v }
func (m *TLdocumentAttributeAudio) Getperformer() string              { return m.Data.Performer }
func (m *TLdocumentAttributeAudio) Setwaveform(v []uint8)             { m.Data.Waveform = v }
func (m *TLdocumentAttributeAudio) Getwaveform() []uint8              { return m.Data.Waveform }
func (m *TLdocumentAttributeFilename) Setfile_name(v string)          { m.Data.File_name = v }
func (m *TLdocumentAttributeFilename) Getfile_name() string           { return m.Data.File_name }
func (m *TLinputPhoneContact) Setclient_id(v int64)                   { m.Data.Client_id = v }
func (m *TLinputPhoneContact) Getclient_id() int64                    { return m.Data.Client_id }
func (m *TLinputPhoneContact) Setphone(v string)                      { m.Data.Phone = v }
func (m *TLinputPhoneContact) Getphone() string                       { return m.Data.Phone }
func (m *TLinputPhoneContact) Setfirst_name(v string)                 { m.Data.First_name = v }
func (m *TLinputPhoneContact) Getfirst_name() string                  { return m.Data.First_name }
func (m *TLinputPhoneContact) Setlast_name(v string)                  { m.Data.Last_name = v }
func (m *TLinputPhoneContact) Getlast_name() string                   { return m.Data.Last_name }
func (m *TLpopularContact) Setclient_id(v int64)                      { m.Data.Client_id = v }
func (m *TLpopularContact) Getclient_id() int64                       { return m.Data.Client_id }
func (m *TLpopularContact) Setimporters(v int32)                      { m.Data.Importers = v }
func (m *TLpopularContact) Getimporters() int32                       { return m.Data.Importers }
func (m *TLpollResults) Setmin(v bool)                                { m.Data.Min = v }
func (m *TLpollResults) Getmin() bool                                 { return m.Data.Min }
func (m *TLpollResults) Setresults(v []PollAnswerVoters)              { m.Data.Results = v }
func (m *TLpollResults) Getresults() []PollAnswerVoters               { return m.Data.Results }
func (m *TLpollResults) Settotal_voters(v int32)                      { m.Data.Total_voters = v }
func (m *TLpollResults) Gettotal_voters() int32                       { return m.Data.Total_voters }
func (m *TLpollResults) Setrecent_voters(v []int32)                   { m.Data.Recent_voters = v }
func (m *TLpollResults) Getrecent_voters() []int32                    { return m.Data.Recent_voters }
func (m *TLpollResults) Setsolution(v string)                         { m.Data.Solution = v }
func (m *TLpollResults) Getsolution() string                          { return m.Data.Solution }
func (m *TLpollResults) Setsolution_entities(v []MessageEntity)       { m.Data.Solution_entities = v }
func (m *TLpollResults) Getsolution_entities() []MessageEntity        { return m.Data.Solution_entities }
func (m *TLpaymentRequestedInfo) Setname(v string)                    { m.Data.Name = v }
func (m *TLpaymentRequestedInfo) Getname() string                     { return m.Data.Name }
func (m *TLpaymentRequestedInfo) Setphone(v string)                   { m.Data.Phone = v }
func (m *TLpaymentRequestedInfo) Getphone() string                    { return m.Data.Phone }
func (m *TLpaymentRequestedInfo) Setemail(v string)                   { m.Data.Email = v }
func (m *TLpaymentRequestedInfo) Getemail() string                    { return m.Data.Email }
func (m *TLpaymentRequestedInfo) Setshipping_address(v PostAddress)   { m.Data.Shipping_address = v }
func (m *TLpaymentRequestedInfo) Getshipping_address() PostAddress    { return m.Data.Shipping_address }
func (m *TLnearestDc) Setcountry(v string)                            { m.Data.Country = v }
func (m *TLnearestDc) Getcountry() string                             { return m.Data.Country }
func (m *TLnearestDc) Setthis_dc(v int32)                             { m.Data.This_dc = v }
func (m *TLnearestDc) Getthis_dc() int32                              { return m.Data.This_dc }
func (m *TLnearestDc) Setnearest_dc(v int32)                          { m.Data.Nearest_dc = v }
func (m *TLnearestDc) Getnearest_dc() int32                           { return m.Data.Nearest_dc }
func (m *TLmessageRange) Setmin_id(v int32)                           { m.Data.Min_id = v }
func (m *TLmessageRange) Getmin_id() int32                            { return m.Data.Min_id }
func (m *TLmessageRange) Setmax_id(v int32)                           { m.Data.Max_id = v }
func (m *TLmessageRange) Getmax_id() int32                            { return m.Data.Max_id }
func (m *TLwallPaperSettings) Setblur(v bool)                         { m.Data.Blur = v }
func (m *TLwallPaperSettings) Getblur() bool                          { return m.Data.Blur }
func (m *TLwallPaperSettings) Setmotion(v bool)                       { m.Data.Motion = v }
func (m *TLwallPaperSettings) Getmotion() bool                        { return m.Data.Motion }
func (m *TLwallPaperSettings) Setbackground_color(v int32)            { m.Data.Background_color = v }
func (m *TLwallPaperSettings) Getbackground_color() int32             { return m.Data.Background_color }
func (m *TLwallPaperSettings) Setsecond_background_color(v int32)     { m.Data.Second_background_color = v }
func (m *TLwallPaperSettings) Getsecond_background_color() int32 {
	return m.Data.Second_background_color
}
func (m *TLwallPaperSettings) Setintensity(v int32) { m.Data.Intensity = v }
func (m *TLwallPaperSettings) Getintensity() int32  { return m.Data.Intensity }
func (m *TLwallPaperSettings) Setrotation(v int32)  { m.Data.Rotation = v }
func (m *TLwallPaperSettings) Getrotation() int32   { return m.Data.Rotation }
func (m *TLdialogPeer) Setpeer(v Peer)              { m.Data.Peer = v }
func (m *TLdialogPeer) Getpeer() Peer               { return m.Data.Peer }
func (m *TLdialogPeerFolder) Setfolder_id(v int32)  { m.Data.Folder_id = v }
func (m *TLdialogPeerFolder) Getfolder_id() int32   { return m.Data.Folder_id }
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Setsalt1(v []uint8) {
	m.Data.Salt1 = v
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Getsalt1() []uint8 {
	return m.Data.Salt1
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Setsalt2(v []uint8) {
	m.Data.Salt2 = v
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Getsalt2() []uint8 {
	return m.Data.Salt2
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Setg(v int32) {
	m.Data.G = v
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Getg() int32 {
	return m.Data.G
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Setp(v []uint8) {
	m.Data.P = v
}
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Getp() []uint8 {
	return m.Data.P
}
func (m *TLmessageInteractionCounters) Setmsg_id(v int32)                          { m.Data.Msg_id = v }
func (m *TLmessageInteractionCounters) Getmsg_id() int32                           { return m.Data.Msg_id }
func (m *TLmessageInteractionCounters) Setviews(v int32)                           { m.Data.Views = v }
func (m *TLmessageInteractionCounters) Getviews() int32                            { return m.Data.Views }
func (m *TLmessageInteractionCounters) Setforwards(v int32)                        { m.Data.Forwards = v }
func (m *TLmessageInteractionCounters) Getforwards() int32                         { return m.Data.Forwards }
func (m *TLinputGeoPoint) Setlat(v float64)                                        { m.Data.Lat = v }
func (m *TLinputGeoPoint) Getlat() float64                                         { return m.Data.Lat }
func (m *TLinputGeoPoint) Setlong_key(v float64)                                   { m.Data.Long_key = v }
func (m *TLinputGeoPoint) Getlong_key() float64                                    { return m.Data.Long_key }
func (m *TLinputGeoPoint) Setaccuracy_radius(v int32)                              { m.Data.Accuracy_radius = v }
func (m *TLinputGeoPoint) Getaccuracy_radius() int32                               { return m.Data.Accuracy_radius }
func (m *TLaccount_wallPapers) Sethash(v int32)                                    { m.Data.Hash = v }
func (m *TLaccount_wallPapers) Gethash() int32                                     { return m.Data.Hash }
func (m *TLaccount_wallPapers) Setwallpapers(v []WallPaper)                        { m.Data.Wallpapers = v }
func (m *TLaccount_wallPapers) Getwallpapers() []WallPaper                         { return m.Data.Wallpapers }
func (m *TLmessages_featuredStickersNotModified) Setcount(v int32)                 { m.Data.Count = v }
func (m *TLmessages_featuredStickersNotModified) Getcount() int32                  { return m.Data.Count }
func (m *TLmessages_featuredStickers) Sethash(v int32)                             { m.Data.Hash = v }
func (m *TLmessages_featuredStickers) Gethash() int32                              { return m.Data.Hash }
func (m *TLmessages_featuredStickers) Setcount(v int32)                            { m.Data.Count = v }
func (m *TLmessages_featuredStickers) Getcount() int32                             { return m.Data.Count }
func (m *TLmessages_featuredStickers) Setsets(v []StickerSetCovered)               { m.Data.Sets = v }
func (m *TLmessages_featuredStickers) Getsets() []StickerSetCovered                { return m.Data.Sets }
func (m *TLmessages_featuredStickers) Setunread(v []Long)                          { m.Data.Unread = v }
func (m *TLmessages_featuredStickers) Getunread() []Long                           { return m.Data.Unread }
func (m *TLinputWebDocument) Seturl(v string)                                      { m.Data.Url = v }
func (m *TLinputWebDocument) Geturl() string                                       { return m.Data.Url }
func (m *TLinputWebDocument) Setsize(v int32)                                      { m.Data.Size = v }
func (m *TLinputWebDocument) Getsize() int32                                       { return m.Data.Size }
func (m *TLinputWebDocument) Setmime_type(v string)                                { m.Data.Mime_type = v }
func (m *TLinputWebDocument) Getmime_type() string                                 { return m.Data.Mime_type }
func (m *TLinputWebDocument) Setattributes(v []DocumentAttribute)                  { m.Data.Attributes = v }
func (m *TLinputWebDocument) Getattributes() []DocumentAttribute                   { return m.Data.Attributes }
func (m *TLmessages_allStickers) Sethash(v int32)                                  { m.Data.Hash = v }
func (m *TLmessages_allStickers) Gethash() int32                                   { return m.Data.Hash }
func (m *TLmessages_allStickers) Setsets(v []StickerSet)                           { m.Data.Sets = v }
func (m *TLmessages_allStickers) Getsets() []StickerSet                            { return m.Data.Sets }
func (m *TLmessages_stickerSetInstallResultArchive) Setsets(v []StickerSetCovered) { m.Data.Sets = v }
func (m *TLmessages_stickerSetInstallResultArchive) Getsets() []StickerSetCovered  { return m.Data.Sets }
func (m *TLphone_phoneCall) Setphone_call(v PhoneCall)                             { m.Data.Phone_call = v }
func (m *TLphone_phoneCall) Getphone_call() PhoneCall                              { return m.Data.Phone_call }
func (m *TLphone_phoneCall) Setusers(v []User)                                     { m.Data.Users = v }
func (m *TLphone_phoneCall) Getusers() []User                                      { return m.Data.Users }
func (m *TLchatFull) Setcan_set_username(v bool)                                   { m.Data.Can_set_username = v }
func (m *TLchatFull) Getcan_set_username() bool                                    { return m.Data.Can_set_username }
func (m *TLchatFull) Sethas_scheduled(v bool)                                      { m.Data.Has_scheduled = v }
func (m *TLchatFull) Gethas_scheduled() bool                                       { return m.Data.Has_scheduled }
func (m *TLchatFull) Setid(v int32)                                                { m.Data.Id = v }
func (m *TLchatFull) Getid() int32                                                 { return m.Data.Id }
func (m *TLchatFull) Setabout(v string)                                            { m.Data.About = v }
func (m *TLchatFull) Getabout() string                                             { return m.Data.About }
func (m *TLchatFull) Setparticipants(v ChatParticipants)                           { m.Data.Participants = v }
func (m *TLchatFull) Getparticipants() ChatParticipants                            { return m.Data.Participants }
func (m *TLchatFull) Setchat_photo(v Photo)                                        { m.Data.Chat_photo = v }
func (m *TLchatFull) Getchat_photo() Photo                                         { return m.Data.Chat_photo }
func (m *TLchatFull) Setnotify_settings(v PeerNotifySettings)                      { m.Data.Notify_settings = v }
func (m *TLchatFull) Getnotify_settings() PeerNotifySettings                       { return m.Data.Notify_settings }
func (m *TLchatFull) Setexported_invite(v ExportedChatInvite)                      { m.Data.Exported_invite = v }
func (m *TLchatFull) Getexported_invite() ExportedChatInvite                       { return m.Data.Exported_invite }
func (m *TLchatFull) Setbot_info(v []BotInfo)                                      { m.Data.Bot_info = v }
func (m *TLchatFull) Getbot_info() []BotInfo                                       { return m.Data.Bot_info }
func (m *TLchatFull) Setpinned_msg_id(v int32)                                     { m.Data.Pinned_msg_id = v }
func (m *TLchatFull) Getpinned_msg_id() int32                                      { return m.Data.Pinned_msg_id }
func (m *TLchatFull) Setfolder_id(v int32)                                         { m.Data.Folder_id = v }
func (m *TLchatFull) Getfolder_id() int32                                          { return m.Data.Folder_id }
func (m *TLchannelFull) Setcan_view_participants(v bool)                           { m.Data.Can_view_participants = v }
func (m *TLchannelFull) Getcan_view_participants() bool                            { return m.Data.Can_view_participants }
func (m *TLchannelFull) Setcan_set_username(v bool)                                { m.Data.Can_set_username = v }
func (m *TLchannelFull) Getcan_set_username() bool                                 { return m.Data.Can_set_username }
func (m *TLchannelFull) Setcan_set_stickers(v bool)                                { m.Data.Can_set_stickers = v }
func (m *TLchannelFull) Getcan_set_stickers() bool                                 { return m.Data.Can_set_stickers }
func (m *TLchannelFull) Sethidden_prehistory(v bool)                               { m.Data.Hidden_prehistory = v }
func (m *TLchannelFull) Gethidden_prehistory() bool                                { return m.Data.Hidden_prehistory }
func (m *TLchannelFull) Setcan_set_location(v bool)                                { m.Data.Can_set_location = v }
func (m *TLchannelFull) Getcan_set_location() bool                                 { return m.Data.Can_set_location }
func (m *TLchannelFull) Sethas_scheduled(v bool)                                   { m.Data.Has_scheduled = v }
func (m *TLchannelFull) Gethas_scheduled() bool                                    { return m.Data.Has_scheduled }
func (m *TLchannelFull) Setcan_view_stats(v bool)                                  { m.Data.Can_view_stats = v }
func (m *TLchannelFull) Getcan_view_stats() bool                                   { return m.Data.Can_view_stats }
func (m *TLchannelFull) Setblocked(v bool)                                         { m.Data.Blocked = v }
func (m *TLchannelFull) Getblocked() bool                                          { return m.Data.Blocked }
func (m *TLchannelFull) Setid(v int32)                                             { m.Data.Id = v }
func (m *TLchannelFull) Getid() int32                                              { return m.Data.Id }
func (m *TLchannelFull) Setabout(v string)                                         { m.Data.About = v }
func (m *TLchannelFull) Getabout() string                                          { return m.Data.About }
func (m *TLchannelFull) Setparticipants_count(v int32)                             { m.Data.Participants_count = v }
func (m *TLchannelFull) Getparticipants_count() int32                              { return m.Data.Participants_count }
func (m *TLchannelFull) Setadmins_count(v int32)                                   { m.Data.Admins_count = v }
func (m *TLchannelFull) Getadmins_count() int32                                    { return m.Data.Admins_count }
func (m *TLchannelFull) Setkicked_count(v int32)                                   { m.Data.Kicked_count = v }
func (m *TLchannelFull) Getkicked_count() int32                                    { return m.Data.Kicked_count }
func (m *TLchannelFull) Setbanned_count(v int32)                                   { m.Data.Banned_count = v }
func (m *TLchannelFull) Getbanned_count() int32                                    { return m.Data.Banned_count }
func (m *TLchannelFull) Setonline_count(v int32)                                   { m.Data.Online_count = v }
func (m *TLchannelFull) Getonline_count() int32                                    { return m.Data.Online_count }
func (m *TLchannelFull) Setread_inbox_max_id(v int32)                              { m.Data.Read_inbox_max_id = v }
func (m *TLchannelFull) Getread_inbox_max_id() int32                               { return m.Data.Read_inbox_max_id }
func (m *TLchannelFull) Setread_outbox_max_id(v int32)                             { m.Data.Read_outbox_max_id = v }
func (m *TLchannelFull) Getread_outbox_max_id() int32                              { return m.Data.Read_outbox_max_id }
func (m *TLchannelFull) Setunread_count(v int32)                                   { m.Data.Unread_count = v }
func (m *TLchannelFull) Getunread_count() int32                                    { return m.Data.Unread_count }
func (m *TLchannelFull) Setchat_photo(v Photo)                                     { m.Data.Chat_photo = v }
func (m *TLchannelFull) Getchat_photo() Photo                                      { return m.Data.Chat_photo }
func (m *TLchannelFull) Setnotify_settings(v PeerNotifySettings)                   { m.Data.Notify_settings = v }
func (m *TLchannelFull) Getnotify_settings() PeerNotifySettings                    { return m.Data.Notify_settings }
func (m *TLchannelFull) Setexported_invite(v ExportedChatInvite)                   { m.Data.Exported_invite = v }
func (m *TLchannelFull) Getexported_invite() ExportedChatInvite                    { return m.Data.Exported_invite }
func (m *TLchannelFull) Setbot_info(v []BotInfo)                                   { m.Data.Bot_info = v }
func (m *TLchannelFull) Getbot_info() []BotInfo                                    { return m.Data.Bot_info }
func (m *TLchannelFull) Setmigrated_from_chat_id(v int32)                          { m.Data.Migrated_from_chat_id = v }
func (m *TLchannelFull) Getmigrated_from_chat_id() int32                           { return m.Data.Migrated_from_chat_id }
func (m *TLchannelFull) Setmigrated_from_max_id(v int32)                           { m.Data.Migrated_from_max_id = v }
func (m *TLchannelFull) Getmigrated_from_max_id() int32                            { return m.Data.Migrated_from_max_id }
func (m *TLchannelFull) Setpinned_msg_id(v int32)                                  { m.Data.Pinned_msg_id = v }
func (m *TLchannelFull) Getpinned_msg_id() int32                                   { return m.Data.Pinned_msg_id }
func (m *TLchannelFull) Setstickerset(v StickerSet)                                { m.Data.Stickerset = v }
func (m *TLchannelFull) Getstickerset() StickerSet                                 { return m.Data.Stickerset }
func (m *TLchannelFull) Setavailable_min_id(v int32)                               { m.Data.Available_min_id = v }
func (m *TLchannelFull) Getavailable_min_id() int32                                { return m.Data.Available_min_id }
func (m *TLchannelFull) Setfolder_id(v int32)                                      { m.Data.Folder_id = v }
func (m *TLchannelFull) Getfolder_id() int32                                       { return m.Data.Folder_id }
func (m *TLchannelFull) Setlinked_chat_id(v int32)                                 { m.Data.Linked_chat_id = v }
func (m *TLchannelFull) Getlinked_chat_id() int32                                  { return m.Data.Linked_chat_id }
func (m *TLchannelFull) Setlocation(v ChannelLocation)                             { m.Data.Location = v }
func (m *TLchannelFull) Getlocation() ChannelLocation                              { return m.Data.Location }
func (m *TLchannelFull) Setslowmode_seconds(v int32)                               { m.Data.Slowmode_seconds = v }
func (m *TLchannelFull) Getslowmode_seconds() int32                                { return m.Data.Slowmode_seconds }
func (m *TLchannelFull) Setslowmode_next_send_date(v int32)                        { m.Data.Slowmode_next_send_date = v }
func (m *TLchannelFull) Getslowmode_next_send_date() int32                         { return m.Data.Slowmode_next_send_date }
func (m *TLchannelFull) Setstats_dc(v int32)                                       { m.Data.Stats_dc = v }
func (m *TLchannelFull) Getstats_dc() int32                                        { return m.Data.Stats_dc }
func (m *TLchannelFull) Setpts(v int32)                                            { m.Data.Pts = v }
func (m *TLchannelFull) Getpts() int32                                             { return m.Data.Pts }
func (m *TLauth_authorization) Settmp_sessions(v int32)                            { m.Data.Tmp_sessions = v }
func (m *TLauth_authorization) Gettmp_sessions() int32                             { return m.Data.Tmp_sessions }
func (m *TLauth_authorization) Setuser(v User)                                     { m.Data.User = v }
func (m *TLauth_authorization) Getuser() User                                      { return m.Data.User }
func (m *TLauth_authorizationSignUpRequired) Setterms_of_service(v Help_TermsOfService) {
	m.Data.Terms_of_service = v
}
func (m *TLauth_authorizationSignUpRequired) Getterms_of_service() Help_TermsOfService {
	return m.Data.Terms_of_service
}
func (m *TLlabeledPrice) Setlabel(v string)                               { m.Data.Label = v }
func (m *TLlabeledPrice) Getlabel() string                                { return m.Data.Label }
func (m *TLlabeledPrice) Setamount(v int64)                               { m.Data.Amount = v }
func (m *TLlabeledPrice) Getamount() int64                                { return m.Data.Amount }
func (m *TLsecureData) Setdata(v []uint8)                                 { m.Data.Data = v }
func (m *TLsecureData) Getdata() []uint8                                  { return m.Data.Data }
func (m *TLsecureData) Setdata_hash(v []uint8)                            { m.Data.Data_hash = v }
func (m *TLsecureData) Getdata_hash() []uint8                             { return m.Data.Data_hash }
func (m *TLsecureData) Setsecret(v []uint8)                               { m.Data.Secret = v }
func (m *TLsecureData) Getsecret() []uint8                                { return m.Data.Secret }
func (m *TLinputAppEvent) Settime(v float64)                              { m.Data.Time = v }
func (m *TLinputAppEvent) Gettime() float64                               { return m.Data.Time }
func (m *TLinputAppEvent) Settype(v string)                               { m.Data.Type = v }
func (m *TLinputAppEvent) Gettype() string                                { return m.Data.Type }
func (m *TLinputAppEvent) Setpeer(v int64)                                { m.Data.Peer = v }
func (m *TLinputAppEvent) Getpeer() int64                                 { return m.Data.Peer }
func (m *TLinputAppEvent) Setdata(v JSONValue)                            { m.Data.Data = v }
func (m *TLinputAppEvent) Getdata() JSONValue                             { return m.Data.Data }
func (m *TLmaskCoords) Setn(v int32)                                      { m.Data.N = v }
func (m *TLmaskCoords) Getn() int32                                       { return m.Data.N }
func (m *TLmaskCoords) Setx(v float64)                                    { m.Data.X = v }
func (m *TLmaskCoords) Getx() float64                                     { return m.Data.X }
func (m *TLmaskCoords) Sety(v float64)                                    { m.Data.Y = v }
func (m *TLmaskCoords) Gety() float64                                     { return m.Data.Y }
func (m *TLmaskCoords) Setzoom(v float64)                                 { m.Data.Zoom = v }
func (m *TLmaskCoords) Getzoom() float64                                  { return m.Data.Zoom }
func (m *TLpostAddress) Setstreet_line1(v string)                         { m.Data.Street_line1 = v }
func (m *TLpostAddress) Getstreet_line1() string                          { return m.Data.Street_line1 }
func (m *TLpostAddress) Setstreet_line2(v string)                         { m.Data.Street_line2 = v }
func (m *TLpostAddress) Getstreet_line2() string                          { return m.Data.Street_line2 }
func (m *TLpostAddress) Setcity(v string)                                 { m.Data.City = v }
func (m *TLpostAddress) Getcity() string                                  { return m.Data.City }
func (m *TLpostAddress) Setstate(v string)                                { m.Data.State = v }
func (m *TLpostAddress) Getstate() string                                 { return m.Data.State }
func (m *TLpostAddress) Setcountry_iso2(v string)                         { m.Data.Country_iso2 = v }
func (m *TLpostAddress) Getcountry_iso2() string                          { return m.Data.Country_iso2 }
func (m *TLpostAddress) Setpost_code(v string)                            { m.Data.Post_code = v }
func (m *TLpostAddress) Getpost_code() string                             { return m.Data.Post_code }
func (m *TLemojiKeywordsDifference) Setlang_code(v string)                { m.Data.Lang_code = v }
func (m *TLemojiKeywordsDifference) Getlang_code() string                 { return m.Data.Lang_code }
func (m *TLemojiKeywordsDifference) Setfrom_version(v int32)              { m.Data.From_version = v }
func (m *TLemojiKeywordsDifference) Getfrom_version() int32               { return m.Data.From_version }
func (m *TLemojiKeywordsDifference) Setversion(v int32)                   { m.Data.Version = v }
func (m *TLemojiKeywordsDifference) Getversion() int32                    { return m.Data.Version }
func (m *TLemojiKeywordsDifference) Setkeywords(v []EmojiKeyword)         { m.Data.Keywords = v }
func (m *TLemojiKeywordsDifference) Getkeywords() []EmojiKeyword          { return m.Data.Keywords }
func (m *TLstatsGroupTopInviter) Setuser_id(v int32)                      { m.Data.User_id = v }
func (m *TLstatsGroupTopInviter) Getuser_id() int32                       { return m.Data.User_id }
func (m *TLstatsGroupTopInviter) Setinvitations(v int32)                  { m.Data.Invitations = v }
func (m *TLstatsGroupTopInviter) Getinvitations() int32                   { return m.Data.Invitations }
func (m *TLbotCommand) Setcommand(v string)                               { m.Data.Command = v }
func (m *TLbotCommand) Getcommand() string                                { return m.Data.Command }
func (m *TLbotCommand) Setdescription(v string)                           { m.Data.Description = v }
func (m *TLbotCommand) Getdescription() string                            { return m.Data.Description }
func (m *TLpayments_savedInfo) Sethas_saved_credentials(v bool)           { m.Data.Has_saved_credentials = v }
func (m *TLpayments_savedInfo) Gethas_saved_credentials() bool            { return m.Data.Has_saved_credentials }
func (m *TLpayments_savedInfo) Setsaved_info(v PaymentRequestedInfo)      { m.Data.Saved_info = v }
func (m *TLpayments_savedInfo) Getsaved_info() PaymentRequestedInfo       { return m.Data.Saved_info }
func (m *TLmessages_sentEncryptedMessage) Setdate(v int32)                { m.Data.Date = v }
func (m *TLmessages_sentEncryptedMessage) Getdate() int32                 { return m.Data.Date }
func (m *TLmessages_sentEncryptedFile) Setdate(v int32)                   { m.Data.Date = v }
func (m *TLmessages_sentEncryptedFile) Getdate() int32                    { return m.Data.Date }
func (m *TLmessages_sentEncryptedFile) Setfile(v EncryptedFile)           { m.Data.File = v }
func (m *TLmessages_sentEncryptedFile) Getfile() EncryptedFile            { return m.Data.File }
func (m *TLhelp_country) Sethidden(v bool)                                { m.Data.Hidden = v }
func (m *TLhelp_country) Gethidden() bool                                 { return m.Data.Hidden }
func (m *TLhelp_country) Setiso2(v string)                                { m.Data.Iso2 = v }
func (m *TLhelp_country) Getiso2() string                                 { return m.Data.Iso2 }
func (m *TLhelp_country) Setdefault_name(v string)                        { m.Data.Default_name = v }
func (m *TLhelp_country) Getdefault_name() string                         { return m.Data.Default_name }
func (m *TLhelp_country) Setname(v string)                                { m.Data.Name = v }
func (m *TLhelp_country) Getname() string                                 { return m.Data.Name }
func (m *TLhelp_country) Setcountry_codes(v []Help_CountryCode)           { m.Data.Country_codes = v }
func (m *TLhelp_country) Getcountry_codes() []Help_CountryCode            { return m.Data.Country_codes }
func (m *TLmessages_botResults) Setgallery(v bool)                        { m.Data.Gallery = v }
func (m *TLmessages_botResults) Getgallery() bool                         { return m.Data.Gallery }
func (m *TLmessages_botResults) Setquery_id(v int64)                      { m.Data.Query_id = v }
func (m *TLmessages_botResults) Getquery_id() int64                       { return m.Data.Query_id }
func (m *TLmessages_botResults) Setnext_offset(v string)                  { m.Data.Next_offset = v }
func (m *TLmessages_botResults) Getnext_offset() string                   { return m.Data.Next_offset }
func (m *TLmessages_botResults) Setswitch_pm(v InlineBotSwitchPM)         { m.Data.Switch_pm = v }
func (m *TLmessages_botResults) Getswitch_pm() InlineBotSwitchPM          { return m.Data.Switch_pm }
func (m *TLmessages_botResults) Setresults(v []BotInlineResult)           { m.Data.Results = v }
func (m *TLmessages_botResults) Getresults() []BotInlineResult            { return m.Data.Results }
func (m *TLmessages_botResults) Setcache_time(v int32)                    { m.Data.Cache_time = v }
func (m *TLmessages_botResults) Getcache_time() int32                     { return m.Data.Cache_time }
func (m *TLmessages_botResults) Setusers(v []User)                        { m.Data.Users = v }
func (m *TLmessages_botResults) Getusers() []User                         { return m.Data.Users }
func (m *TLcontact) Setuser_id(v int32)                                   { m.Data.User_id = v }
func (m *TLcontact) Getuser_id() int32                                    { return m.Data.User_id }
func (m *TLcontact) Setmutual(v Bool)                                     { m.Data.Mutual = v }
func (m *TLcontact) Getmutual() Bool                                      { return m.Data.Mutual }
func (m *TLauth_exportedAuthorization) Setid(v int32)                     { m.Data.Id = v }
func (m *TLauth_exportedAuthorization) Getid() int32                      { return m.Data.Id }
func (m *TLauth_exportedAuthorization) Setbytes(v []uint8)                { m.Data.Bytes = v }
func (m *TLauth_exportedAuthorization) Getbytes() []uint8                 { return m.Data.Bytes }
func (m *TLlangPackString) Setkey_key(v string)                           { m.Data.Key_key = v }
func (m *TLlangPackString) Getkey_key() string                            { return m.Data.Key_key }
func (m *TLlangPackString) Setvalue(v string)                             { m.Data.Value = v }
func (m *TLlangPackString) Getvalue() string                              { return m.Data.Value }
func (m *TLlangPackStringPluralized) Setkey_key(v string)                 { m.Data.Key_key = v }
func (m *TLlangPackStringPluralized) Getkey_key() string                  { return m.Data.Key_key }
func (m *TLlangPackStringPluralized) Setzero_value(v string)              { m.Data.Zero_value = v }
func (m *TLlangPackStringPluralized) Getzero_value() string               { return m.Data.Zero_value }
func (m *TLlangPackStringPluralized) Setone_value(v string)               { m.Data.One_value = v }
func (m *TLlangPackStringPluralized) Getone_value() string                { return m.Data.One_value }
func (m *TLlangPackStringPluralized) Settwo_value(v string)               { m.Data.Two_value = v }
func (m *TLlangPackStringPluralized) Gettwo_value() string                { return m.Data.Two_value }
func (m *TLlangPackStringPluralized) Setfew_value(v string)               { m.Data.Few_value = v }
func (m *TLlangPackStringPluralized) Getfew_value() string                { return m.Data.Few_value }
func (m *TLlangPackStringPluralized) Setmany_value(v string)              { m.Data.Many_value = v }
func (m *TLlangPackStringPluralized) Getmany_value() string               { return m.Data.Many_value }
func (m *TLlangPackStringPluralized) Setother_value(v string)             { m.Data.Other_value = v }
func (m *TLlangPackStringPluralized) Getother_value() string              { return m.Data.Other_value }
func (m *TLlangPackStringDeleted) Setkey_key(v string)                    { m.Data.Key_key = v }
func (m *TLlangPackStringDeleted) Getkey_key() string                     { return m.Data.Key_key }
func (m *TLinputPrivacyValueAllowUsers) Setusers(v []InputUser)           { m.Data.Users = v }
func (m *TLinputPrivacyValueAllowUsers) Getusers() []InputUser            { return m.Data.Users }
func (m *TLinputPrivacyValueDisallowUsers) Setusers(v []InputUser)        { m.Data.Users = v }
func (m *TLinputPrivacyValueDisallowUsers) Getusers() []InputUser         { return m.Data.Users }
func (m *TLinputPrivacyValueAllowChatParticipants) Setchats(v []int32)    { m.Data.Chats = v }
func (m *TLinputPrivacyValueAllowChatParticipants) Getchats() []int32     { return m.Data.Chats }
func (m *TLinputPrivacyValueDisallowChatParticipants) Setchats(v []int32) { m.Data.Chats = v }
func (m *TLinputPrivacyValueDisallowChatParticipants) Getchats() []int32  { return m.Data.Chats }
func (m *TLupload_file) Settype(v Storage_FileType)                       { m.Data.Type = v }
func (m *TLupload_file) Gettype() Storage_FileType                        { return m.Data.Type }
func (m *TLupload_file) Setmtime(v int32)                                 { m.Data.Mtime = v }
func (m *TLupload_file) Getmtime() int32                                  { return m.Data.Mtime }
func (m *TLupload_file) Setbytes(v []uint8)                               { m.Data.Bytes = v }
func (m *TLupload_file) Getbytes() []uint8                                { return m.Data.Bytes }
func (m *TLupload_fileCdnRedirect) Setdc_id(v int32)                      { m.Data.Dc_id = v }
func (m *TLupload_fileCdnRedirect) Getdc_id() int32                       { return m.Data.Dc_id }
func (m *TLupload_fileCdnRedirect) Setfile_token(v []uint8)               { m.Data.File_token = v }
func (m *TLupload_fileCdnRedirect) Getfile_token() []uint8                { return m.Data.File_token }
func (m *TLupload_fileCdnRedirect) Setencryption_key(v []uint8)           { m.Data.Encryption_key = v }
func (m *TLupload_fileCdnRedirect) Getencryption_key() []uint8            { return m.Data.Encryption_key }
func (m *TLupload_fileCdnRedirect) Setencryption_iv(v []uint8)            { m.Data.Encryption_iv = v }
func (m *TLupload_fileCdnRedirect) Getencryption_iv() []uint8             { return m.Data.Encryption_iv }
func (m *TLupload_fileCdnRedirect) Setfile_hashes(v []FileHash)           { m.Data.File_hashes = v }
func (m *TLupload_fileCdnRedirect) Getfile_hashes() []FileHash            { return m.Data.File_hashes }
func (m *TLmessageEntityUnknown) Setoffset(v int32)                       { m.Data.Offset = v }
func (m *TLmessageEntityUnknown) Getoffset() int32                        { return m.Data.Offset }
func (m *TLmessageEntityUnknown) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLmessageEntityUnknown) Getlength() int32                        { return m.Data.Length }
func (m *TLmessageEntityMention) Setoffset(v int32)                       { m.Data.Offset = v }
func (m *TLmessageEntityMention) Getoffset() int32                        { return m.Data.Offset }
func (m *TLmessageEntityMention) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLmessageEntityMention) Getlength() int32                        { return m.Data.Length }
func (m *TLmessageEntityHashtag) Setoffset(v int32)                       { m.Data.Offset = v }
func (m *TLmessageEntityHashtag) Getoffset() int32                        { return m.Data.Offset }
func (m *TLmessageEntityHashtag) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLmessageEntityHashtag) Getlength() int32                        { return m.Data.Length }
func (m *TLmessageEntityBotCommand) Setoffset(v int32)                    { m.Data.Offset = v }
func (m *TLmessageEntityBotCommand) Getoffset() int32                     { return m.Data.Offset }
func (m *TLmessageEntityBotCommand) Setlength(v int32)                    { m.Data.Length = v }
func (m *TLmessageEntityBotCommand) Getlength() int32                     { return m.Data.Length }
func (m *TLmessageEntityUrl) Setoffset(v int32)                           { m.Data.Offset = v }
func (m *TLmessageEntityUrl) Getoffset() int32                            { return m.Data.Offset }
func (m *TLmessageEntityUrl) Setlength(v int32)                           { m.Data.Length = v }
func (m *TLmessageEntityUrl) Getlength() int32                            { return m.Data.Length }
func (m *TLmessageEntityEmail) Setoffset(v int32)                         { m.Data.Offset = v }
func (m *TLmessageEntityEmail) Getoffset() int32                          { return m.Data.Offset }
func (m *TLmessageEntityEmail) Setlength(v int32)                         { m.Data.Length = v }
func (m *TLmessageEntityEmail) Getlength() int32                          { return m.Data.Length }
func (m *TLmessageEntityBold) Setoffset(v int32)                          { m.Data.Offset = v }
func (m *TLmessageEntityBold) Getoffset() int32                           { return m.Data.Offset }
func (m *TLmessageEntityBold) Setlength(v int32)                          { m.Data.Length = v }
func (m *TLmessageEntityBold) Getlength() int32                           { return m.Data.Length }
func (m *TLmessageEntityItalic) Setoffset(v int32)                        { m.Data.Offset = v }
func (m *TLmessageEntityItalic) Getoffset() int32                         { return m.Data.Offset }
func (m *TLmessageEntityItalic) Setlength(v int32)                        { m.Data.Length = v }
func (m *TLmessageEntityItalic) Getlength() int32                         { return m.Data.Length }
func (m *TLmessageEntityCode) Setoffset(v int32)                          { m.Data.Offset = v }
func (m *TLmessageEntityCode) Getoffset() int32                           { return m.Data.Offset }
func (m *TLmessageEntityCode) Setlength(v int32)                          { m.Data.Length = v }
func (m *TLmessageEntityCode) Getlength() int32                           { return m.Data.Length }
func (m *TLmessageEntityPre) Setoffset(v int32)                           { m.Data.Offset = v }
func (m *TLmessageEntityPre) Getoffset() int32                            { return m.Data.Offset }
func (m *TLmessageEntityPre) Setlength(v int32)                           { m.Data.Length = v }
func (m *TLmessageEntityPre) Getlength() int32                            { return m.Data.Length }
func (m *TLmessageEntityPre) Setlanguage(v string)                        { m.Data.Language = v }
func (m *TLmessageEntityPre) Getlanguage() string                         { return m.Data.Language }
func (m *TLmessageEntityTextUrl) Setoffset(v int32)                       { m.Data.Offset = v }
func (m *TLmessageEntityTextUrl) Getoffset() int32                        { return m.Data.Offset }
func (m *TLmessageEntityTextUrl) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLmessageEntityTextUrl) Getlength() int32                        { return m.Data.Length }
func (m *TLmessageEntityTextUrl) Seturl(v string)                         { m.Data.Url = v }
func (m *TLmessageEntityTextUrl) Geturl() string                          { return m.Data.Url }
func (m *TLmessageEntityMentionName) Setoffset(v int32)                   { m.Data.Offset = v }
func (m *TLmessageEntityMentionName) Getoffset() int32                    { return m.Data.Offset }
func (m *TLmessageEntityMentionName) Setlength(v int32)                   { m.Data.Length = v }
func (m *TLmessageEntityMentionName) Getlength() int32                    { return m.Data.Length }
func (m *TLmessageEntityMentionName) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLmessageEntityMentionName) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLinputMessageEntityMentionName) Setoffset(v int32)              { m.Data.Offset = v }
func (m *TLinputMessageEntityMentionName) Getoffset() int32               { return m.Data.Offset }
func (m *TLinputMessageEntityMentionName) Setlength(v int32)              { m.Data.Length = v }
func (m *TLinputMessageEntityMentionName) Getlength() int32               { return m.Data.Length }
func (m *TLinputMessageEntityMentionName) Setuser_id_6(v InputUser)       { m.Data.User_id_6 = v }
func (m *TLinputMessageEntityMentionName) Getuser_id_6() InputUser        { return m.Data.User_id_6 }
func (m *TLmessageEntityPhone) Setoffset(v int32)                         { m.Data.Offset = v }
func (m *TLmessageEntityPhone) Getoffset() int32                          { return m.Data.Offset }
func (m *TLmessageEntityPhone) Setlength(v int32)                         { m.Data.Length = v }
func (m *TLmessageEntityPhone) Getlength() int32                          { return m.Data.Length }
func (m *TLmessageEntityCashtag) Setoffset(v int32)                       { m.Data.Offset = v }
func (m *TLmessageEntityCashtag) Getoffset() int32                        { return m.Data.Offset }
func (m *TLmessageEntityCashtag) Setlength(v int32)                       { m.Data.Length = v }
func (m *TLmessageEntityCashtag) Getlength() int32                        { return m.Data.Length }
func (m *TLmessageEntityUnderline) Setoffset(v int32)                     { m.Data.Offset = v }
func (m *TLmessageEntityUnderline) Getoffset() int32                      { return m.Data.Offset }
func (m *TLmessageEntityUnderline) Setlength(v int32)                     { m.Data.Length = v }
func (m *TLmessageEntityUnderline) Getlength() int32                      { return m.Data.Length }
func (m *TLmessageEntityStrike) Setoffset(v int32)                        { m.Data.Offset = v }
func (m *TLmessageEntityStrike) Getoffset() int32                         { return m.Data.Offset }
func (m *TLmessageEntityStrike) Setlength(v int32)                        { m.Data.Length = v }
func (m *TLmessageEntityStrike) Getlength() int32                         { return m.Data.Length }
func (m *TLmessageEntityBlockquote) Setoffset(v int32)                    { m.Data.Offset = v }
func (m *TLmessageEntityBlockquote) Getoffset() int32                     { return m.Data.Offset }
func (m *TLmessageEntityBlockquote) Setlength(v int32)                    { m.Data.Length = v }
func (m *TLmessageEntityBlockquote) Getlength() int32                     { return m.Data.Length }
func (m *TLmessageEntityBankCard) Setoffset(v int32)                      { m.Data.Offset = v }
func (m *TLmessageEntityBankCard) Getoffset() int32                       { return m.Data.Offset }
func (m *TLmessageEntityBankCard) Setlength(v int32)                      { m.Data.Length = v }
func (m *TLmessageEntityBankCard) Getlength() int32                       { return m.Data.Length }
func (m *TLpeerBlocked) Setpeer_id(v Peer)                                { m.Data.Peer_id = v }
func (m *TLpeerBlocked) Getpeer_id() Peer                                 { return m.Data.Peer_id }
func (m *TLpeerBlocked) Setdate(v int32)                                  { m.Data.Date = v }
func (m *TLpeerBlocked) Getdate() int32                                   { return m.Data.Date }
func (m *TLinputWebFileLocation) Seturl(v string)                         { m.Data.Url = v }
func (m *TLinputWebFileLocation) Geturl() string                          { return m.Data.Url }
func (m *TLinputWebFileLocation) Setaccess_hash(v int64)                  { m.Data.Access_hash = v }
func (m *TLinputWebFileLocation) Getaccess_hash() int64                   { return m.Data.Access_hash }
func (m *TLinputWebFileGeoPointLocation) Setgeo_point(v InputGeoPoint)    { m.Data.Geo_point = v }
func (m *TLinputWebFileGeoPointLocation) Getgeo_point() InputGeoPoint     { return m.Data.Geo_point }
func (m *TLinputWebFileGeoPointLocation) Setaccess_hash(v int64)          { m.Data.Access_hash = v }
func (m *TLinputWebFileGeoPointLocation) Getaccess_hash() int64           { return m.Data.Access_hash }
func (m *TLinputWebFileGeoPointLocation) Setw(v int32)                    { m.Data.W = v }
func (m *TLinputWebFileGeoPointLocation) Getw() int32                     { return m.Data.W }
func (m *TLinputWebFileGeoPointLocation) Seth(v int32)                    { m.Data.H = v }
func (m *TLinputWebFileGeoPointLocation) Geth() int32                     { return m.Data.H }
func (m *TLinputWebFileGeoPointLocation) Setzoom(v int32)                 { m.Data.Zoom = v }
func (m *TLinputWebFileGeoPointLocation) Getzoom() int32                  { return m.Data.Zoom }
func (m *TLinputWebFileGeoPointLocation) Setscale(v int32)                { m.Data.Scale = v }
func (m *TLinputWebFileGeoPointLocation) Getscale() int32                 { return m.Data.Scale }
func (m *TLinputSecureValue) Settype(v SecureValueType)                   { m.Data.Type = v }
func (m *TLinputSecureValue) Gettype() SecureValueType                    { return m.Data.Type }
func (m *TLinputSecureValue) Setdata(v SecureData)                        { m.Data.Data = v }
func (m *TLinputSecureValue) Getdata() SecureData                         { return m.Data.Data }
func (m *TLinputSecureValue) Setfront_side(v InputSecureFile)             { m.Data.Front_side = v }
func (m *TLinputSecureValue) Getfront_side() InputSecureFile              { return m.Data.Front_side }
func (m *TLinputSecureValue) Setreverse_side(v InputSecureFile)           { m.Data.Reverse_side = v }
func (m *TLinputSecureValue) Getreverse_side() InputSecureFile            { return m.Data.Reverse_side }
func (m *TLinputSecureValue) Setselfie(v InputSecureFile)                 { m.Data.Selfie = v }
func (m *TLinputSecureValue) Getselfie() InputSecureFile                  { return m.Data.Selfie }
func (m *TLinputSecureValue) Settranslation(v []InputSecureFile)          { m.Data.Translation = v }
func (m *TLinputSecureValue) Gettranslation() []InputSecureFile           { return m.Data.Translation }
func (m *TLinputSecureValue) Setfiles(v []InputSecureFile)                { m.Data.Files = v }
func (m *TLinputSecureValue) Getfiles() []InputSecureFile                 { return m.Data.Files }
func (m *TLinputSecureValue) Setplain_data(v SecurePlainData)             { m.Data.Plain_data = v }
func (m *TLinputSecureValue) Getplain_data() SecurePlainData              { return m.Data.Plain_data }
func (m *TLcdnConfig) Setpublic_keys(v []CdnPublicKey)                    { m.Data.Public_keys = v }
func (m *TLcdnConfig) Getpublic_keys() []CdnPublicKey                     { return m.Data.Public_keys }
func (m *TLhelp_termsOfService) Setpopup(v bool)                          { m.Data.Popup = v }
func (m *TLhelp_termsOfService) Getpopup() bool                           { return m.Data.Popup }
func (m *TLhelp_termsOfService) Setid(v DataJSON)                         { m.Data.Id = v }
func (m *TLhelp_termsOfService) Getid() DataJSON                          { return m.Data.Id }
func (m *TLhelp_termsOfService) Settext(v string)                         { m.Data.Text = v }
func (m *TLhelp_termsOfService) Gettext() string                          { return m.Data.Text }
func (m *TLhelp_termsOfService) Setentities(v []MessageEntity)            { m.Data.Entities = v }
func (m *TLhelp_termsOfService) Getentities() []MessageEntity             { return m.Data.Entities }
func (m *TLhelp_termsOfService) Setmin_age_confirm(v int32)               { m.Data.Min_age_confirm = v }
func (m *TLhelp_termsOfService) Getmin_age_confirm() int32                { return m.Data.Min_age_confirm }
func (m *TLinputChatUploadedPhoto) Setfile(v InputFile)                   { m.Data.File = v }
func (m *TLinputChatUploadedPhoto) Getfile() InputFile                    { return m.Data.File }
func (m *TLinputChatUploadedPhoto) Setvideo(v InputFile)                  { m.Data.Video = v }
func (m *TLinputChatUploadedPhoto) Getvideo() InputFile                   { return m.Data.Video }
func (m *TLinputChatUploadedPhoto) Setvideo_start_ts(v float64)           { m.Data.Video_start_ts = v }
func (m *TLinputChatUploadedPhoto) Getvideo_start_ts() float64            { return m.Data.Video_start_ts }
func (m *TLinputChatPhoto) Setid(v InputPhoto)                            { m.Data.Id = v }
func (m *TLinputChatPhoto) Getid() InputPhoto                             { return m.Data.Id }
func (m *TLbotInlineMessageMediaAuto) Setmessage(v string)                { m.Data.Message = v }
func (m *TLbotInlineMessageMediaAuto) Getmessage() string                 { return m.Data.Message }
func (m *TLbotInlineMessageMediaAuto) Setentities(v []MessageEntity)      { m.Data.Entities = v }
func (m *TLbotInlineMessageMediaAuto) Getentities() []MessageEntity       { return m.Data.Entities }
func (m *TLbotInlineMessageMediaAuto) Setreply_markup(v ReplyMarkup)      { m.Data.Reply_markup = v }
func (m *TLbotInlineMessageMediaAuto) Getreply_markup() ReplyMarkup       { return m.Data.Reply_markup }
func (m *TLbotInlineMessageText) Setno_webpage(v bool)                    { m.Data.No_webpage = v }
func (m *TLbotInlineMessageText) Getno_webpage() bool                     { return m.Data.No_webpage }
func (m *TLbotInlineMessageText) Setmessage(v string)                     { m.Data.Message = v }
func (m *TLbotInlineMessageText) Getmessage() string                      { return m.Data.Message }
func (m *TLbotInlineMessageText) Setentities(v []MessageEntity)           { m.Data.Entities = v }
func (m *TLbotInlineMessageText) Getentities() []MessageEntity            { return m.Data.Entities }
func (m *TLbotInlineMessageText) Setreply_markup(v ReplyMarkup)           { m.Data.Reply_markup = v }
func (m *TLbotInlineMessageText) Getreply_markup() ReplyMarkup            { return m.Data.Reply_markup }
func (m *TLbotInlineMessageMediaGeo) Setgeo(v GeoPoint)                   { m.Data.Geo = v }
func (m *TLbotInlineMessageMediaGeo) Getgeo() GeoPoint                    { return m.Data.Geo }
func (m *TLbotInlineMessageMediaGeo) Setheading(v int32)                  { m.Data.Heading = v }
func (m *TLbotInlineMessageMediaGeo) Getheading() int32                   { return m.Data.Heading }
func (m *TLbotInlineMessageMediaGeo) Setperiod(v int32)                   { m.Data.Period = v }
func (m *TLbotInlineMessageMediaGeo) Getperiod() int32                    { return m.Data.Period }
func (m *TLbotInlineMessageMediaGeo) Setproximity_notification_radius(v int32) {
	m.Data.Proximity_notification_radius = v
}
func (m *TLbotInlineMessageMediaGeo) Getproximity_notification_radius() int32 {
	return m.Data.Proximity_notification_radius
}
func (m *TLbotInlineMessageMediaGeo) Setreply_markup(v ReplyMarkup)     { m.Data.Reply_markup = v }
func (m *TLbotInlineMessageMediaGeo) Getreply_markup() ReplyMarkup      { return m.Data.Reply_markup }
func (m *TLbotInlineMessageMediaVenue) Setgeo(v GeoPoint)               { m.Data.Geo = v }
func (m *TLbotInlineMessageMediaVenue) Getgeo() GeoPoint                { return m.Data.Geo }
func (m *TLbotInlineMessageMediaVenue) Settitle(v string)               { m.Data.Title = v }
func (m *TLbotInlineMessageMediaVenue) Gettitle() string                { return m.Data.Title }
func (m *TLbotInlineMessageMediaVenue) Setaddress(v string)             { m.Data.Address = v }
func (m *TLbotInlineMessageMediaVenue) Getaddress() string              { return m.Data.Address }
func (m *TLbotInlineMessageMediaVenue) Setprovider(v string)            { m.Data.Provider = v }
func (m *TLbotInlineMessageMediaVenue) Getprovider() string             { return m.Data.Provider }
func (m *TLbotInlineMessageMediaVenue) Setvenue_id(v string)            { m.Data.Venue_id = v }
func (m *TLbotInlineMessageMediaVenue) Getvenue_id() string             { return m.Data.Venue_id }
func (m *TLbotInlineMessageMediaVenue) Setvenue_type(v string)          { m.Data.Venue_type = v }
func (m *TLbotInlineMessageMediaVenue) Getvenue_type() string           { return m.Data.Venue_type }
func (m *TLbotInlineMessageMediaVenue) Setreply_markup(v ReplyMarkup)   { m.Data.Reply_markup = v }
func (m *TLbotInlineMessageMediaVenue) Getreply_markup() ReplyMarkup    { return m.Data.Reply_markup }
func (m *TLbotInlineMessageMediaContact) Setphone_number(v string)      { m.Data.Phone_number = v }
func (m *TLbotInlineMessageMediaContact) Getphone_number() string       { return m.Data.Phone_number }
func (m *TLbotInlineMessageMediaContact) Setfirst_name(v string)        { m.Data.First_name = v }
func (m *TLbotInlineMessageMediaContact) Getfirst_name() string         { return m.Data.First_name }
func (m *TLbotInlineMessageMediaContact) Setlast_name(v string)         { m.Data.Last_name = v }
func (m *TLbotInlineMessageMediaContact) Getlast_name() string          { return m.Data.Last_name }
func (m *TLbotInlineMessageMediaContact) Setvcard(v string)             { m.Data.Vcard = v }
func (m *TLbotInlineMessageMediaContact) Getvcard() string              { return m.Data.Vcard }
func (m *TLbotInlineMessageMediaContact) Setreply_markup(v ReplyMarkup) { m.Data.Reply_markup = v }
func (m *TLbotInlineMessageMediaContact) Getreply_markup() ReplyMarkup  { return m.Data.Reply_markup }
func (m *TLmessages_stickerSet) Setset(v StickerSet)                    { m.Data.Set = v }
func (m *TLmessages_stickerSet) Getset() StickerSet                     { return m.Data.Set }
func (m *TLmessages_stickerSet) Setpacks(v []StickerPack)               { m.Data.Packs = v }
func (m *TLmessages_stickerSet) Getpacks() []StickerPack                { return m.Data.Packs }
func (m *TLmessages_stickerSet) Setdocuments(v []Document)              { m.Data.Documents = v }
func (m *TLmessages_stickerSet) Getdocuments() []Document               { return m.Data.Documents }
func (m *TLwebPageEmpty) Setid(v int64)                                 { m.Data.Id = v }
func (m *TLwebPageEmpty) Getid() int64                                  { return m.Data.Id }
func (m *TLwebPagePending) Setid(v int64)                               { m.Data.Id = v }
func (m *TLwebPagePending) Getid() int64                                { return m.Data.Id }
func (m *TLwebPagePending) Setdate(v int32)                             { m.Data.Date = v }
func (m *TLwebPagePending) Getdate() int32                              { return m.Data.Date }
func (m *TLwebPage) Setid(v int64)                                      { m.Data.Id = v }
func (m *TLwebPage) Getid() int64                                       { return m.Data.Id }
func (m *TLwebPage) Seturl(v string)                                    { m.Data.Url = v }
func (m *TLwebPage) Geturl() string                                     { return m.Data.Url }
func (m *TLwebPage) Setdisplay_url(v string)                            { m.Data.Display_url = v }
func (m *TLwebPage) Getdisplay_url() string                             { return m.Data.Display_url }
func (m *TLwebPage) Sethash(v int32)                                    { m.Data.Hash = v }
func (m *TLwebPage) Gethash() int32                                     { return m.Data.Hash }
func (m *TLwebPage) Settype(v string)                                   { m.Data.Type = v }
func (m *TLwebPage) Gettype() string                                    { return m.Data.Type }
func (m *TLwebPage) Setsite_name(v string)                              { m.Data.Site_name = v }
func (m *TLwebPage) Getsite_name() string                               { return m.Data.Site_name }
func (m *TLwebPage) Settitle(v string)                                  { m.Data.Title = v }
func (m *TLwebPage) Gettitle() string                                   { return m.Data.Title }
func (m *TLwebPage) Setdescription(v string)                            { m.Data.Description = v }
func (m *TLwebPage) Getdescription() string                             { return m.Data.Description }
func (m *TLwebPage) Setphoto(v Photo)                                   { m.Data.Photo = v }
func (m *TLwebPage) Getphoto() Photo                                    { return m.Data.Photo }
func (m *TLwebPage) Setembed_url(v string)                              { m.Data.Embed_url = v }
func (m *TLwebPage) Getembed_url() string                               { return m.Data.Embed_url }
func (m *TLwebPage) Setembed_type(v string)                             { m.Data.Embed_type = v }
func (m *TLwebPage) Getembed_type() string                              { return m.Data.Embed_type }
func (m *TLwebPage) Setembed_width(v int32)                             { m.Data.Embed_width = v }
func (m *TLwebPage) Getembed_width() int32                              { return m.Data.Embed_width }
func (m *TLwebPage) Setembed_height(v int32)                            { m.Data.Embed_height = v }
func (m *TLwebPage) Getembed_height() int32                             { return m.Data.Embed_height }
func (m *TLwebPage) Setduration(v int32)                                { m.Data.Duration = v }
func (m *TLwebPage) Getduration() int32                                 { return m.Data.Duration }
func (m *TLwebPage) Setauthor(v string)                                 { m.Data.Author = v }
func (m *TLwebPage) Getauthor() string                                  { return m.Data.Author }
func (m *TLwebPage) Setdocument(v Document)                             { m.Data.Document = v }
func (m *TLwebPage) Getdocument() Document                              { return m.Data.Document }
func (m *TLwebPage) Setcached_page(v Page)                              { m.Data.Cached_page = v }
func (m *TLwebPage) Getcached_page() Page                               { return m.Data.Cached_page }
func (m *TLwebPage) Setattributes(v []WebPageAttribute)                 { m.Data.Attributes = v }
func (m *TLwebPage) Getattributes() []WebPageAttribute                  { return m.Data.Attributes }
func (m *TLwebPageNotModified) Setcached_page_views(v int32)            { m.Data.Cached_page_views = v }
func (m *TLwebPageNotModified) Getcached_page_views() int32             { return m.Data.Cached_page_views }
func (m *TLnotifyPeer) Setpeer(v Peer)                                  { m.Data.Peer = v }
func (m *TLnotifyPeer) Getpeer() Peer                                   { return m.Data.Peer }
func (m *TLinputBotInlineMessageID) Setdc_id(v int32)                   { m.Data.Dc_id = v }
func (m *TLinputBotInlineMessageID) Getdc_id() int32                    { return m.Data.Dc_id }
func (m *TLinputBotInlineMessageID) Setid(v int64)                      { m.Data.Id = v }
func (m *TLinputBotInlineMessageID) Getid() int64                       { return m.Data.Id }
func (m *TLinputBotInlineMessageID) Setaccess_hash(v int64)             { m.Data.Access_hash = v }
func (m *TLinputBotInlineMessageID) Getaccess_hash() int64              { return m.Data.Access_hash }
func (m *TLmessages_recentStickers) Sethash(v int32)                    { m.Data.Hash = v }
func (m *TLmessages_recentStickers) Gethash() int32                     { return m.Data.Hash }
func (m *TLmessages_recentStickers) Setpacks(v []StickerPack)           { m.Data.Packs = v }
func (m *TLmessages_recentStickers) Getpacks() []StickerPack            { return m.Data.Packs }
func (m *TLmessages_recentStickers) Setstickers(v []Document)           { m.Data.Stickers = v }
func (m *TLmessages_recentStickers) Getstickers() []Document            { return m.Data.Stickers }
func (m *TLmessages_recentStickers) Setdates(v []int32)                 { m.Data.Dates = v }
func (m *TLmessages_recentStickers) Getdates() []int32                  { return m.Data.Dates }
func (m *TLfolderPeer) Setpeer(v Peer)                                  { m.Data.Peer = v }
func (m *TLfolderPeer) Getpeer() Peer                                   { return m.Data.Peer }
func (m *TLfolderPeer) Setfolder_id(v int32)                            { m.Data.Folder_id = v }
func (m *TLfolderPeer) Getfolder_id() int32                             { return m.Data.Folder_id }
func (m *TLmessages_highScores) Setscores(v []HighScore)                { m.Data.Scores = v }
func (m *TLmessages_highScores) Getscores() []HighScore                 { return m.Data.Scores }
func (m *TLmessages_highScores) Setusers(v []User)                      { m.Data.Users = v }
func (m *TLmessages_highScores) Getusers() []User                       { return m.Data.Users }
func (m *TLrecentMeUrlUnknown) Seturl(v string)                         { m.Data.Url = v }
func (m *TLrecentMeUrlUnknown) Geturl() string                          { return m.Data.Url }
func (m *TLrecentMeUrlUser) Seturl(v string)                            { m.Data.Url = v }
func (m *TLrecentMeUrlUser) Geturl() string                             { return m.Data.Url }
func (m *TLrecentMeUrlUser) Setuser_id(v int32)                         { m.Data.User_id = v }
func (m *TLrecentMeUrlUser) Getuser_id() int32                          { return m.Data.User_id }
func (m *TLrecentMeUrlChat) Seturl(v string)                            { m.Data.Url = v }
func (m *TLrecentMeUrlChat) Geturl() string                             { return m.Data.Url }
func (m *TLrecentMeUrlChat) Setchat_id(v int32)                         { m.Data.Chat_id = v }
func (m *TLrecentMeUrlChat) Getchat_id() int32                          { return m.Data.Chat_id }
func (m *TLrecentMeUrlChatInvite) Seturl(v string)                      { m.Data.Url = v }
func (m *TLrecentMeUrlChatInvite) Geturl() string                       { return m.Data.Url }
func (m *TLrecentMeUrlChatInvite) Setchat_invite(v ChatInvite)          { m.Data.Chat_invite = v }
func (m *TLrecentMeUrlChatInvite) Getchat_invite() ChatInvite           { return m.Data.Chat_invite }
func (m *TLrecentMeUrlStickerSet) Seturl(v string)                      { m.Data.Url = v }
func (m *TLrecentMeUrlStickerSet) Geturl() string                       { return m.Data.Url }
func (m *TLrecentMeUrlStickerSet) Setset(v StickerSetCovered)           { m.Data.Set = v }
func (m *TLrecentMeUrlStickerSet) Getset() StickerSetCovered            { return m.Data.Set }
func (m *TLdialogFilter) Setcontacts(v bool)                            { m.Data.Contacts = v }
func (m *TLdialogFilter) Getcontacts() bool                             { return m.Data.Contacts }
func (m *TLdialogFilter) Setnon_contacts(v bool)                        { m.Data.Non_contacts = v }
func (m *TLdialogFilter) Getnon_contacts() bool                         { return m.Data.Non_contacts }
func (m *TLdialogFilter) Setgroups(v bool)                              { m.Data.Groups = v }
func (m *TLdialogFilter) Getgroups() bool                               { return m.Data.Groups }
func (m *TLdialogFilter) Setbroadcasts(v bool)                          { m.Data.Broadcasts = v }
func (m *TLdialogFilter) Getbroadcasts() bool                           { return m.Data.Broadcasts }
func (m *TLdialogFilter) Setbots(v bool)                                { m.Data.Bots = v }
func (m *TLdialogFilter) Getbots() bool                                 { return m.Data.Bots }
func (m *TLdialogFilter) Setexclude_muted(v bool)                       { m.Data.Exclude_muted = v }
func (m *TLdialogFilter) Getexclude_muted() bool                        { return m.Data.Exclude_muted }
func (m *TLdialogFilter) Setexclude_read(v bool)                        { m.Data.Exclude_read = v }
func (m *TLdialogFilter) Getexclude_read() bool                         { return m.Data.Exclude_read }
func (m *TLdialogFilter) Setexclude_archived(v bool)                    { m.Data.Exclude_archived = v }
func (m *TLdialogFilter) Getexclude_archived() bool                     { return m.Data.Exclude_archived }
func (m *TLdialogFilter) Setid(v int32)                                 { m.Data.Id = v }
func (m *TLdialogFilter) Getid() int32                                  { return m.Data.Id }
func (m *TLdialogFilter) Settitle(v string)                             { m.Data.Title = v }
func (m *TLdialogFilter) Gettitle() string                              { return m.Data.Title }
func (m *TLdialogFilter) Setemoticon(v string)                          { m.Data.Emoticon = v }
func (m *TLdialogFilter) Getemoticon() string                           { return m.Data.Emoticon }
func (m *TLdialogFilter) Setpinned_peers(v []InputPeer)                 { m.Data.Pinned_peers = v }
func (m *TLdialogFilter) Getpinned_peers() []InputPeer                  { return m.Data.Pinned_peers }
func (m *TLdialogFilter) Setinclude_peers(v []InputPeer)                { m.Data.Include_peers = v }
func (m *TLdialogFilter) Getinclude_peers() []InputPeer                 { return m.Data.Include_peers }
func (m *TLdialogFilter) Setexclude_peers(v []InputPeer)                { m.Data.Exclude_peers = v }
func (m *TLdialogFilter) Getexclude_peers() []InputPeer                 { return m.Data.Exclude_peers }
func (m *TLprivacyValueAllowUsers) Setusers(v []int32)                  { m.Data.Users = v }
func (m *TLprivacyValueAllowUsers) Getusers() []int32                   { return m.Data.Users }
func (m *TLprivacyValueDisallowUsers) Setusers(v []int32)               { m.Data.Users = v }
func (m *TLprivacyValueDisallowUsers) Getusers() []int32                { return m.Data.Users }
func (m *TLprivacyValueAllowChatParticipants) Setchats(v []int32)       { m.Data.Chats = v }
func (m *TLprivacyValueAllowChatParticipants) Getchats() []int32        { return m.Data.Chats }
func (m *TLprivacyValueDisallowChatParticipants) Setchats(v []int32)    { m.Data.Chats = v }
func (m *TLprivacyValueDisallowChatParticipants) Getchats() []int32     { return m.Data.Chats }
func (m *TLpayments_paymentReceipt) Setdate(v int32)                    { m.Data.Date = v }
func (m *TLpayments_paymentReceipt) Getdate() int32                     { return m.Data.Date }
func (m *TLpayments_paymentReceipt) Setbot_id(v int32)                  { m.Data.Bot_id = v }
func (m *TLpayments_paymentReceipt) Getbot_id() int32                   { return m.Data.Bot_id }
func (m *TLpayments_paymentReceipt) Setinvoice(v Invoice)               { m.Data.Invoice = v }
func (m *TLpayments_paymentReceipt) Getinvoice() Invoice                { return m.Data.Invoice }
func (m *TLpayments_paymentReceipt) Setprovider_id(v int32)             { m.Data.Provider_id = v }
func (m *TLpayments_paymentReceipt) Getprovider_id() int32              { return m.Data.Provider_id }
func (m *TLpayments_paymentReceipt) Setinfo(v PaymentRequestedInfo)     { m.Data.Info = v }
func (m *TLpayments_paymentReceipt) Getinfo() PaymentRequestedInfo      { return m.Data.Info }
func (m *TLpayments_paymentReceipt) Setshipping(v ShippingOption)       { m.Data.Shipping = v }
func (m *TLpayments_paymentReceipt) Getshipping() ShippingOption        { return m.Data.Shipping }
func (m *TLpayments_paymentReceipt) Setcurrency(v string)               { m.Data.Currency = v }
func (m *TLpayments_paymentReceipt) Getcurrency() string                { return m.Data.Currency }
func (m *TLpayments_paymentReceipt) Settotal_amount(v int64)            { m.Data.Total_amount = v }
func (m *TLpayments_paymentReceipt) Gettotal_amount() int64             { return m.Data.Total_amount }
func (m *TLpayments_paymentReceipt) Setcredentials_title(v string)      { m.Data.Credentials_title = v }
func (m *TLpayments_paymentReceipt) Getcredentials_title() string       { return m.Data.Credentials_title }
func (m *TLpayments_paymentReceipt) Setusers(v []User)                  { m.Data.Users = v }
func (m *TLpayments_paymentReceipt) Getusers() []User                   { return m.Data.Users }
func (m *TLchatParticipant) Setuser_id(v int32)                         { m.Data.User_id = v }
func (m *TLchatParticipant) Getuser_id() int32                          { return m.Data.User_id }
func (m *TLchatParticipant) Setinviter_id(v int32)                      { m.Data.Inviter_id = v }
func (m *TLchatParticipant) Getinviter_id() int32                       { return m.Data.Inviter_id }
func (m *TLchatParticipant) Setdate(v int32)                            { m.Data.Date = v }
func (m *TLchatParticipant) Getdate() int32                             { return m.Data.Date }
func (m *TLchatParticipantCreator) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLchatParticipantCreator) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLchatParticipantAdmin) Setuser_id(v int32)                    { m.Data.User_id = v }
func (m *TLchatParticipantAdmin) Getuser_id() int32                     { return m.Data.User_id }
func (m *TLchatParticipantAdmin) Setinviter_id(v int32)                 { m.Data.Inviter_id = v }
func (m *TLchatParticipantAdmin) Getinviter_id() int32                  { return m.Data.Inviter_id }
func (m *TLchatParticipantAdmin) Setdate(v int32)                       { m.Data.Date = v }
func (m *TLchatParticipantAdmin) Getdate() int32                        { return m.Data.Date }
func (m *TLbankCardOpenUrl) Seturl(v string)                            { m.Data.Url = v }
func (m *TLbankCardOpenUrl) Geturl() string                             { return m.Data.Url }
func (m *TLbankCardOpenUrl) Setname(v string)                           { m.Data.Name = v }
func (m *TLbankCardOpenUrl) Getname() string                            { return m.Data.Name }
func (m *TLglobalPrivacySettings) Setarchive_and_mute_new_noncontact_peers(v Bool) {
	m.Data.Archive_and_mute_new_noncontact_peers = v
}
func (m *TLglobalPrivacySettings) Getarchive_and_mute_new_noncontact_peers() Bool {
	return m.Data.Archive_and_mute_new_noncontact_peers
}
func (m *TLmessageMediaPhoto) Setphoto(v Photo)           { m.Data.Photo = v }
func (m *TLmessageMediaPhoto) Getphoto() Photo            { return m.Data.Photo }
func (m *TLmessageMediaPhoto) Setttl_seconds(v int32)     { m.Data.Ttl_seconds = v }
func (m *TLmessageMediaPhoto) Getttl_seconds() int32      { return m.Data.Ttl_seconds }
func (m *TLmessageMediaGeo) Setgeo(v GeoPoint)            { m.Data.Geo = v }
func (m *TLmessageMediaGeo) Getgeo() GeoPoint             { return m.Data.Geo }
func (m *TLmessageMediaContact) Setphone_number(v string) { m.Data.Phone_number = v }
func (m *TLmessageMediaContact) Getphone_number() string  { return m.Data.Phone_number }
func (m *TLmessageMediaContact) Setfirst_name(v string)   { m.Data.First_name = v }
func (m *TLmessageMediaContact) Getfirst_name() string    { return m.Data.First_name }
func (m *TLmessageMediaContact) Setlast_name(v string)    { m.Data.Last_name = v }
func (m *TLmessageMediaContact) Getlast_name() string     { return m.Data.Last_name }
func (m *TLmessageMediaContact) Setvcard(v string)        { m.Data.Vcard = v }
func (m *TLmessageMediaContact) Getvcard() string         { return m.Data.Vcard }
func (m *TLmessageMediaContact) Setuser_id(v int32)       { m.Data.User_id = v }
func (m *TLmessageMediaContact) Getuser_id() int32        { return m.Data.User_id }
func (m *TLmessageMediaDocument) Setdocument(v Document)  { m.Data.Document = v }
func (m *TLmessageMediaDocument) Getdocument() Document   { return m.Data.Document }
func (m *TLmessageMediaDocument) Setttl_seconds(v int32)  { m.Data.Ttl_seconds = v }
func (m *TLmessageMediaDocument) Getttl_seconds() int32   { return m.Data.Ttl_seconds }
func (m *TLmessageMediaWebPage) Setwebpage(v WebPage)     { m.Data.Webpage = v }
func (m *TLmessageMediaWebPage) Getwebpage() WebPage      { return m.Data.Webpage }
func (m *TLmessageMediaVenue) Setgeo(v GeoPoint)          { m.Data.Geo = v }
func (m *TLmessageMediaVenue) Getgeo() GeoPoint           { return m.Data.Geo }
func (m *TLmessageMediaVenue) Settitle(v string)          { m.Data.Title = v }
func (m *TLmessageMediaVenue) Gettitle() string           { return m.Data.Title }
func (m *TLmessageMediaVenue) Setaddress(v string)        { m.Data.Address = v }
func (m *TLmessageMediaVenue) Getaddress() string         { return m.Data.Address }
func (m *TLmessageMediaVenue) Setprovider(v string)       { m.Data.Provider = v }
func (m *TLmessageMediaVenue) Getprovider() string        { return m.Data.Provider }
func (m *TLmessageMediaVenue) Setvenue_id(v string)       { m.Data.Venue_id = v }
func (m *TLmessageMediaVenue) Getvenue_id() string        { return m.Data.Venue_id }
func (m *TLmessageMediaVenue) Setvenue_type(v string)     { m.Data.Venue_type = v }
func (m *TLmessageMediaVenue) Getvenue_type() string      { return m.Data.Venue_type }
func (m *TLmessageMediaGame) Setgame(v Game)              { m.Data.Game = v }
func (m *TLmessageMediaGame) Getgame() Game               { return m.Data.Game }
func (m *TLmessageMediaInvoice) Setshipping_address_requested(v bool) {
	m.Data.Shipping_address_requested = v
}
func (m *TLmessageMediaInvoice) Getshipping_address_requested() bool {
	return m.Data.Shipping_address_requested
}
func (m *TLmessageMediaInvoice) Settest(v bool)            { m.Data.Test = v }
func (m *TLmessageMediaInvoice) Gettest() bool             { return m.Data.Test }
func (m *TLmessageMediaInvoice) Settitle(v string)         { m.Data.Title = v }
func (m *TLmessageMediaInvoice) Gettitle() string          { return m.Data.Title }
func (m *TLmessageMediaInvoice) Setdescription(v string)   { m.Data.Description = v }
func (m *TLmessageMediaInvoice) Getdescription() string    { return m.Data.Description }
func (m *TLmessageMediaInvoice) Setphoto_20(v WebDocument) { m.Data.Photo_20 = v }
func (m *TLmessageMediaInvoice) Getphoto_20() WebDocument  { return m.Data.Photo_20 }
func (m *TLmessageMediaInvoice) Setreceipt_msg_id(v int32) { m.Data.Receipt_msg_id = v }
func (m *TLmessageMediaInvoice) Getreceipt_msg_id() int32  { return m.Data.Receipt_msg_id }
func (m *TLmessageMediaInvoice) Setcurrency(v string)      { m.Data.Currency = v }
func (m *TLmessageMediaInvoice) Getcurrency() string       { return m.Data.Currency }
func (m *TLmessageMediaInvoice) Settotal_amount(v int64)   { m.Data.Total_amount = v }
func (m *TLmessageMediaInvoice) Gettotal_amount() int64    { return m.Data.Total_amount }
func (m *TLmessageMediaInvoice) Setstart_param(v string)   { m.Data.Start_param = v }
func (m *TLmessageMediaInvoice) Getstart_param() string    { return m.Data.Start_param }
func (m *TLmessageMediaGeoLive) Setgeo(v GeoPoint)         { m.Data.Geo = v }
func (m *TLmessageMediaGeoLive) Getgeo() GeoPoint          { return m.Data.Geo }
func (m *TLmessageMediaGeoLive) Setheading(v int32)        { m.Data.Heading = v }
func (m *TLmessageMediaGeoLive) Getheading() int32         { return m.Data.Heading }
func (m *TLmessageMediaGeoLive) Setperiod(v int32)         { m.Data.Period = v }
func (m *TLmessageMediaGeoLive) Getperiod() int32          { return m.Data.Period }
func (m *TLmessageMediaGeoLive) Setproximity_notification_radius(v int32) {
	m.Data.Proximity_notification_radius = v
}
func (m *TLmessageMediaGeoLive) Getproximity_notification_radius() int32 {
	return m.Data.Proximity_notification_radius
}
func (m *TLmessageMediaPoll) Setpoll(v Poll)                  { m.Data.Poll = v }
func (m *TLmessageMediaPoll) Getpoll() Poll                   { return m.Data.Poll }
func (m *TLmessageMediaPoll) Setresults(v PollResults)        { m.Data.Results = v }
func (m *TLmessageMediaPoll) Getresults() PollResults         { return m.Data.Results }
func (m *TLmessageMediaDice) Setvalue(v int32)                { m.Data.Value = v }
func (m *TLmessageMediaDice) Getvalue() int32                 { return m.Data.Value }
func (m *TLmessageMediaDice) Setemoticon(v string)            { m.Data.Emoticon = v }
func (m *TLmessageMediaDice) Getemoticon() string             { return m.Data.Emoticon }
func (m *TLinputStickerSetItem) Setdocument(v InputDocument)  { m.Data.Document = v }
func (m *TLinputStickerSetItem) Getdocument() InputDocument   { return m.Data.Document }
func (m *TLinputStickerSetItem) Setemoji(v string)            { m.Data.Emoji = v }
func (m *TLinputStickerSetItem) Getemoji() string             { return m.Data.Emoji }
func (m *TLinputStickerSetItem) Setmask_coords(v MaskCoords)  { m.Data.Mask_coords = v }
func (m *TLinputStickerSetItem) Getmask_coords() MaskCoords   { return m.Data.Mask_coords }
func (m *TLstatsGroupTopPoster) Setuser_id(v int32)           { m.Data.User_id = v }
func (m *TLstatsGroupTopPoster) Getuser_id() int32            { return m.Data.User_id }
func (m *TLstatsGroupTopPoster) Setmessages(v int32)          { m.Data.Messages = v }
func (m *TLstatsGroupTopPoster) Getmessages() int32           { return m.Data.Messages }
func (m *TLstatsGroupTopPoster) Setavg_chars(v int32)         { m.Data.Avg_chars = v }
func (m *TLstatsGroupTopPoster) Getavg_chars() int32          { return m.Data.Avg_chars }
func (m *TLdialog) Setpinned(v bool)                          { m.Data.Pinned = v }
func (m *TLdialog) Getpinned() bool                           { return m.Data.Pinned }
func (m *TLdialog) Setunread_mark(v bool)                     { m.Data.Unread_mark = v }
func (m *TLdialog) Getunread_mark() bool                      { return m.Data.Unread_mark }
func (m *TLdialog) Setpeer(v Peer)                            { m.Data.Peer = v }
func (m *TLdialog) Getpeer() Peer                             { return m.Data.Peer }
func (m *TLdialog) Settop_message(v int32)                    { m.Data.Top_message = v }
func (m *TLdialog) Gettop_message() int32                     { return m.Data.Top_message }
func (m *TLdialog) Setread_inbox_max_id(v int32)              { m.Data.Read_inbox_max_id = v }
func (m *TLdialog) Getread_inbox_max_id() int32               { return m.Data.Read_inbox_max_id }
func (m *TLdialog) Setread_outbox_max_id(v int32)             { m.Data.Read_outbox_max_id = v }
func (m *TLdialog) Getread_outbox_max_id() int32              { return m.Data.Read_outbox_max_id }
func (m *TLdialog) Setunread_count(v int32)                   { m.Data.Unread_count = v }
func (m *TLdialog) Getunread_count() int32                    { return m.Data.Unread_count }
func (m *TLdialog) Setunread_mentions_count(v int32)          { m.Data.Unread_mentions_count = v }
func (m *TLdialog) Getunread_mentions_count() int32           { return m.Data.Unread_mentions_count }
func (m *TLdialog) Setnotify_settings(v PeerNotifySettings)   { m.Data.Notify_settings = v }
func (m *TLdialog) Getnotify_settings() PeerNotifySettings    { return m.Data.Notify_settings }
func (m *TLdialog) Setpts(v int32)                            { m.Data.Pts = v }
func (m *TLdialog) Getpts() int32                             { return m.Data.Pts }
func (m *TLdialog) Setdraft(v DraftMessage)                   { m.Data.Draft = v }
func (m *TLdialog) Getdraft() DraftMessage                    { return m.Data.Draft }
func (m *TLdialog) Setfolder_id(v int32)                      { m.Data.Folder_id = v }
func (m *TLdialog) Getfolder_id() int32                       { return m.Data.Folder_id }
func (m *TLdialogFolder) Setpinned(v bool)                    { m.Data.Pinned = v }
func (m *TLdialogFolder) Getpinned() bool                     { return m.Data.Pinned }
func (m *TLdialogFolder) Setfolder(v Folder)                  { m.Data.Folder = v }
func (m *TLdialogFolder) Getfolder() Folder                   { return m.Data.Folder }
func (m *TLdialogFolder) Setpeer(v Peer)                      { m.Data.Peer = v }
func (m *TLdialogFolder) Getpeer() Peer                       { return m.Data.Peer }
func (m *TLdialogFolder) Settop_message(v int32)              { m.Data.Top_message = v }
func (m *TLdialogFolder) Gettop_message() int32               { return m.Data.Top_message }
func (m *TLdialogFolder) Setunread_muted_peers_count(v int32) { m.Data.Unread_muted_peers_count = v }
func (m *TLdialogFolder) Getunread_muted_peers_count() int32  { return m.Data.Unread_muted_peers_count }
func (m *TLdialogFolder) Setunread_unmuted_peers_count(v int32) {
	m.Data.Unread_unmuted_peers_count = v
}
func (m *TLdialogFolder) Getunread_unmuted_peers_count() int32 {
	return m.Data.Unread_unmuted_peers_count
}
func (m *TLdialogFolder) Setunread_muted_messages_count(v int32) {
	m.Data.Unread_muted_messages_count = v
}
func (m *TLdialogFolder) Getunread_muted_messages_count() int32 {
	return m.Data.Unread_muted_messages_count
}
func (m *TLdialogFolder) Setunread_unmuted_messages_count(v int32) {
	m.Data.Unread_unmuted_messages_count = v
}
func (m *TLdialogFolder) Getunread_unmuted_messages_count() int32 {
	return m.Data.Unread_unmuted_messages_count
}
func (m *TLchannelLocation) Setgeo_point(v GeoPoint)                    { m.Data.Geo_point = v }
func (m *TLchannelLocation) Getgeo_point() GeoPoint                     { return m.Data.Geo_point }
func (m *TLchannelLocation) Setaddress(v string)                        { m.Data.Address = v }
func (m *TLchannelLocation) Getaddress() string                         { return m.Data.Address }
func (m *TLchatInviteExported) Setlink(v string)                        { m.Data.Link = v }
func (m *TLchatInviteExported) Getlink() string                         { return m.Data.Link }
func (m *TLaccount_authorizations) Setauthorizations(v []Authorization) { m.Data.Authorizations = v }
func (m *TLaccount_authorizations) Getauthorizations() []Authorization  { return m.Data.Authorizations }
func (m *TLwebAuthorization) Sethash(v int64)                           { m.Data.Hash = v }
func (m *TLwebAuthorization) Gethash() int64                            { return m.Data.Hash }
func (m *TLwebAuthorization) Setbot_id(v int32)                         { m.Data.Bot_id = v }
func (m *TLwebAuthorization) Getbot_id() int32                          { return m.Data.Bot_id }
func (m *TLwebAuthorization) Setdomain(v string)                        { m.Data.Domain = v }
func (m *TLwebAuthorization) Getdomain() string                         { return m.Data.Domain }
func (m *TLwebAuthorization) Setbrowser(v string)                       { m.Data.Browser = v }
func (m *TLwebAuthorization) Getbrowser() string                        { return m.Data.Browser }
func (m *TLwebAuthorization) Setplatform(v string)                      { m.Data.Platform = v }
func (m *TLwebAuthorization) Getplatform() string                       { return m.Data.Platform }
func (m *TLwebAuthorization) Setdate_created(v int32)                   { m.Data.Date_created = v }
func (m *TLwebAuthorization) Getdate_created() int32                    { return m.Data.Date_created }
func (m *TLwebAuthorization) Setdate_active(v int32)                    { m.Data.Date_active = v }
func (m *TLwebAuthorization) Getdate_active() int32                     { return m.Data.Date_active }
func (m *TLwebAuthorization) Setip(v string)                            { m.Data.Ip = v }
func (m *TLwebAuthorization) Getip() string                             { return m.Data.Ip }
func (m *TLwebAuthorization) Setregion(v string)                        { m.Data.Region = v }
func (m *TLwebAuthorization) Getregion() string                         { return m.Data.Region }
func (m *TLhelp_inviteText) Setmessage(v string)                        { m.Data.Message = v }
func (m *TLhelp_inviteText) Getmessage() string                         { return m.Data.Message }
func (m *TLaccount_passwordSettings) Setemail(v string)                 { m.Data.Email = v }
func (m *TLaccount_passwordSettings) Getemail() string                  { return m.Data.Email }
func (m *TLaccount_passwordSettings) Setsecure_settings(v SecureSecretSettings) {
	m.Data.Secure_settings = v
}
func (m *TLaccount_passwordSettings) Getsecure_settings() SecureSecretSettings {
	return m.Data.Secure_settings
}
func (m *TLinlineBotSwitchPM) Settext(v string)                           { m.Data.Text = v }
func (m *TLinlineBotSwitchPM) Gettext() string                            { return m.Data.Text }
func (m *TLinlineBotSwitchPM) Setstart_param(v string)                    { m.Data.Start_param = v }
func (m *TLinlineBotSwitchPM) Getstart_param() string                     { return m.Data.Start_param }
func (m *TLaccount_tmpPassword) Settmp_password(v []uint8)                { m.Data.Tmp_password = v }
func (m *TLaccount_tmpPassword) Gettmp_password() []uint8                 { return m.Data.Tmp_password }
func (m *TLaccount_tmpPassword) Setvalid_until(v int32)                   { m.Data.Valid_until = v }
func (m *TLaccount_tmpPassword) Getvalid_until() int32                    { return m.Data.Valid_until }
func (m *TLwebPageAttributeTheme) Setdocuments(v []Document)              { m.Data.Documents = v }
func (m *TLwebPageAttributeTheme) Getdocuments() []Document               { return m.Data.Documents }
func (m *TLwebPageAttributeTheme) Setsettings(v ThemeSettings)            { m.Data.Settings = v }
func (m *TLwebPageAttributeTheme) Getsettings() ThemeSettings             { return m.Data.Settings }
func (m *TLkeyboardButtonRow) Setbuttons(v []KeyboardButton)              { m.Data.Buttons = v }
func (m *TLkeyboardButtonRow) Getbuttons() []KeyboardButton               { return m.Data.Buttons }
func (m *TLinputPeerChat) Setchat_id(v int32)                             { m.Data.Chat_id = v }
func (m *TLinputPeerChat) Getchat_id() int32                              { return m.Data.Chat_id }
func (m *TLinputPeerUser) Setuser_id(v int32)                             { m.Data.User_id = v }
func (m *TLinputPeerUser) Getuser_id() int32                              { return m.Data.User_id }
func (m *TLinputPeerUser) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLinputPeerUser) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLinputPeerChannel) Setchannel_id(v int32)                       { m.Data.Channel_id = v }
func (m *TLinputPeerChannel) Getchannel_id() int32                        { return m.Data.Channel_id }
func (m *TLinputPeerChannel) Setaccess_hash(v int64)                      { m.Data.Access_hash = v }
func (m *TLinputPeerChannel) Getaccess_hash() int64                       { return m.Data.Access_hash }
func (m *TLinputPeerUserFromMessage) Setpeer(v InputPeer)                 { m.Data.Peer = v }
func (m *TLinputPeerUserFromMessage) Getpeer() InputPeer                  { return m.Data.Peer }
func (m *TLinputPeerUserFromMessage) Setmsg_id(v int32)                   { m.Data.Msg_id = v }
func (m *TLinputPeerUserFromMessage) Getmsg_id() int32                    { return m.Data.Msg_id }
func (m *TLinputPeerUserFromMessage) Setuser_id(v int32)                  { m.Data.User_id = v }
func (m *TLinputPeerUserFromMessage) Getuser_id() int32                   { return m.Data.User_id }
func (m *TLinputPeerChannelFromMessage) Setpeer(v InputPeer)              { m.Data.Peer = v }
func (m *TLinputPeerChannelFromMessage) Getpeer() InputPeer               { return m.Data.Peer }
func (m *TLinputPeerChannelFromMessage) Setmsg_id(v int32)                { m.Data.Msg_id = v }
func (m *TLinputPeerChannelFromMessage) Getmsg_id() int32                 { return m.Data.Msg_id }
func (m *TLinputPeerChannelFromMessage) Setchannel_id(v int32)            { m.Data.Channel_id = v }
func (m *TLinputPeerChannelFromMessage) Getchannel_id() int32             { return m.Data.Channel_id }
func (m *TLstatsDateRangeDays) Setmin_date(v int32)                       { m.Data.Min_date = v }
func (m *TLstatsDateRangeDays) Getmin_date() int32                        { return m.Data.Min_date }
func (m *TLstatsDateRangeDays) Setmax_date(v int32)                       { m.Data.Max_date = v }
func (m *TLstatsDateRangeDays) Getmax_date() int32                        { return m.Data.Max_date }
func (m *TLreplyKeyboardHide) Setselective(v bool)                        { m.Data.Selective = v }
func (m *TLreplyKeyboardHide) Getselective() bool                         { return m.Data.Selective }
func (m *TLreplyKeyboardForceReply) Setsingle_use(v bool)                 { m.Data.Single_use = v }
func (m *TLreplyKeyboardForceReply) Getsingle_use() bool                  { return m.Data.Single_use }
func (m *TLreplyKeyboardForceReply) Setselective(v bool)                  { m.Data.Selective = v }
func (m *TLreplyKeyboardForceReply) Getselective() bool                   { return m.Data.Selective }
func (m *TLreplyKeyboardMarkup) Setresize(v bool)                         { m.Data.Resize = v }
func (m *TLreplyKeyboardMarkup) Getresize() bool                          { return m.Data.Resize }
func (m *TLreplyKeyboardMarkup) Setsingle_use(v bool)                     { m.Data.Single_use = v }
func (m *TLreplyKeyboardMarkup) Getsingle_use() bool                      { return m.Data.Single_use }
func (m *TLreplyKeyboardMarkup) Setselective(v bool)                      { m.Data.Selective = v }
func (m *TLreplyKeyboardMarkup) Getselective() bool                       { return m.Data.Selective }
func (m *TLreplyKeyboardMarkup) Setrows(v []KeyboardButtonRow)            { m.Data.Rows = v }
func (m *TLreplyKeyboardMarkup) Getrows() []KeyboardButtonRow             { return m.Data.Rows }
func (m *TLreplyInlineMarkup) Setrows(v []KeyboardButtonRow)              { m.Data.Rows = v }
func (m *TLreplyInlineMarkup) Getrows() []KeyboardButtonRow               { return m.Data.Rows }
func (m *TLinputStickerSetID) Setid(v int64)                              { m.Data.Id = v }
func (m *TLinputStickerSetID) Getid() int64                               { return m.Data.Id }
func (m *TLinputStickerSetID) Setaccess_hash(v int64)                     { m.Data.Access_hash = v }
func (m *TLinputStickerSetID) Getaccess_hash() int64                      { return m.Data.Access_hash }
func (m *TLinputStickerSetShortName) Setshort_name(v string)              { m.Data.Short_name = v }
func (m *TLinputStickerSetShortName) Getshort_name() string               { return m.Data.Short_name }
func (m *TLinputStickerSetDice) Setemoticon(v string)                     { m.Data.Emoticon = v }
func (m *TLinputStickerSetDice) Getemoticon() string                      { return m.Data.Emoticon }
func (m *TLwebDocument) Seturl(v string)                                  { m.Data.Url = v }
func (m *TLwebDocument) Geturl() string                                   { return m.Data.Url }
func (m *TLwebDocument) Setaccess_hash(v int64)                           { m.Data.Access_hash = v }
func (m *TLwebDocument) Getaccess_hash() int64                            { return m.Data.Access_hash }
func (m *TLwebDocument) Setsize(v int32)                                  { m.Data.Size = v }
func (m *TLwebDocument) Getsize() int32                                   { return m.Data.Size }
func (m *TLwebDocument) Setmime_type(v string)                            { m.Data.Mime_type = v }
func (m *TLwebDocument) Getmime_type() string                             { return m.Data.Mime_type }
func (m *TLwebDocument) Setattributes(v []DocumentAttribute)              { m.Data.Attributes = v }
func (m *TLwebDocument) Getattributes() []DocumentAttribute               { return m.Data.Attributes }
func (m *TLwebDocumentNoProxy) Seturl(v string)                           { m.Data.Url = v }
func (m *TLwebDocumentNoProxy) Geturl() string                            { return m.Data.Url }
func (m *TLwebDocumentNoProxy) Setsize(v int32)                           { m.Data.Size = v }
func (m *TLwebDocumentNoProxy) Getsize() int32                            { return m.Data.Size }
func (m *TLwebDocumentNoProxy) Setmime_type(v string)                     { m.Data.Mime_type = v }
func (m *TLwebDocumentNoProxy) Getmime_type() string                      { return m.Data.Mime_type }
func (m *TLwebDocumentNoProxy) Setattributes(v []DocumentAttribute)       { m.Data.Attributes = v }
func (m *TLwebDocumentNoProxy) Getattributes() []DocumentAttribute        { return m.Data.Attributes }
func (m *TLtopPeerCategoryPeers) Setcategory(v TopPeerCategory)           { m.Data.Category = v }
func (m *TLtopPeerCategoryPeers) Getcategory() TopPeerCategory            { return m.Data.Category }
func (m *TLtopPeerCategoryPeers) Setcount(v int32)                        { m.Data.Count = v }
func (m *TLtopPeerCategoryPeers) Getcount() int32                         { return m.Data.Count }
func (m *TLtopPeerCategoryPeers) Setpeers(v []TopPeer)                    { m.Data.Peers = v }
func (m *TLtopPeerCategoryPeers) Getpeers() []TopPeer                     { return m.Data.Peers }
func (m *TLinputBotInlineMessageMediaAuto) Setmessage(v string)           { m.Data.Message = v }
func (m *TLinputBotInlineMessageMediaAuto) Getmessage() string            { return m.Data.Message }
func (m *TLinputBotInlineMessageMediaAuto) Setentities(v []MessageEntity) { m.Data.Entities = v }
func (m *TLinputBotInlineMessageMediaAuto) Getentities() []MessageEntity  { return m.Data.Entities }
func (m *TLinputBotInlineMessageMediaAuto) Setreply_markup(v ReplyMarkup) { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageMediaAuto) Getreply_markup() ReplyMarkup  { return m.Data.Reply_markup }
func (m *TLinputBotInlineMessageText) Setno_webpage(v bool)               { m.Data.No_webpage = v }
func (m *TLinputBotInlineMessageText) Getno_webpage() bool                { return m.Data.No_webpage }
func (m *TLinputBotInlineMessageText) Setmessage(v string)                { m.Data.Message = v }
func (m *TLinputBotInlineMessageText) Getmessage() string                 { return m.Data.Message }
func (m *TLinputBotInlineMessageText) Setentities(v []MessageEntity)      { m.Data.Entities = v }
func (m *TLinputBotInlineMessageText) Getentities() []MessageEntity       { return m.Data.Entities }
func (m *TLinputBotInlineMessageText) Setreply_markup(v ReplyMarkup)      { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageText) Getreply_markup() ReplyMarkup       { return m.Data.Reply_markup }
func (m *TLinputBotInlineMessageMediaGeo) Setgeo_point(v InputGeoPoint)   { m.Data.Geo_point = v }
func (m *TLinputBotInlineMessageMediaGeo) Getgeo_point() InputGeoPoint    { return m.Data.Geo_point }
func (m *TLinputBotInlineMessageMediaGeo) Setheading(v int32)             { m.Data.Heading = v }
func (m *TLinputBotInlineMessageMediaGeo) Getheading() int32              { return m.Data.Heading }
func (m *TLinputBotInlineMessageMediaGeo) Setperiod(v int32)              { m.Data.Period = v }
func (m *TLinputBotInlineMessageMediaGeo) Getperiod() int32               { return m.Data.Period }
func (m *TLinputBotInlineMessageMediaGeo) Setproximity_notification_radius(v int32) {
	m.Data.Proximity_notification_radius = v
}
func (m *TLinputBotInlineMessageMediaGeo) Getproximity_notification_radius() int32 {
	return m.Data.Proximity_notification_radius
}
func (m *TLinputBotInlineMessageMediaGeo) Setreply_markup(v ReplyMarkup)     { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageMediaGeo) Getreply_markup() ReplyMarkup      { return m.Data.Reply_markup }
func (m *TLinputBotInlineMessageMediaVenue) Setgeo_point(v InputGeoPoint)    { m.Data.Geo_point = v }
func (m *TLinputBotInlineMessageMediaVenue) Getgeo_point() InputGeoPoint     { return m.Data.Geo_point }
func (m *TLinputBotInlineMessageMediaVenue) Settitle(v string)               { m.Data.Title = v }
func (m *TLinputBotInlineMessageMediaVenue) Gettitle() string                { return m.Data.Title }
func (m *TLinputBotInlineMessageMediaVenue) Setaddress(v string)             { m.Data.Address = v }
func (m *TLinputBotInlineMessageMediaVenue) Getaddress() string              { return m.Data.Address }
func (m *TLinputBotInlineMessageMediaVenue) Setprovider(v string)            { m.Data.Provider = v }
func (m *TLinputBotInlineMessageMediaVenue) Getprovider() string             { return m.Data.Provider }
func (m *TLinputBotInlineMessageMediaVenue) Setvenue_id(v string)            { m.Data.Venue_id = v }
func (m *TLinputBotInlineMessageMediaVenue) Getvenue_id() string             { return m.Data.Venue_id }
func (m *TLinputBotInlineMessageMediaVenue) Setvenue_type(v string)          { m.Data.Venue_type = v }
func (m *TLinputBotInlineMessageMediaVenue) Getvenue_type() string           { return m.Data.Venue_type }
func (m *TLinputBotInlineMessageMediaVenue) Setreply_markup(v ReplyMarkup)   { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageMediaVenue) Getreply_markup() ReplyMarkup    { return m.Data.Reply_markup }
func (m *TLinputBotInlineMessageMediaContact) Setphone_number(v string)      { m.Data.Phone_number = v }
func (m *TLinputBotInlineMessageMediaContact) Getphone_number() string       { return m.Data.Phone_number }
func (m *TLinputBotInlineMessageMediaContact) Setfirst_name(v string)        { m.Data.First_name = v }
func (m *TLinputBotInlineMessageMediaContact) Getfirst_name() string         { return m.Data.First_name }
func (m *TLinputBotInlineMessageMediaContact) Setlast_name(v string)         { m.Data.Last_name = v }
func (m *TLinputBotInlineMessageMediaContact) Getlast_name() string          { return m.Data.Last_name }
func (m *TLinputBotInlineMessageMediaContact) Setvcard(v string)             { m.Data.Vcard = v }
func (m *TLinputBotInlineMessageMediaContact) Getvcard() string              { return m.Data.Vcard }
func (m *TLinputBotInlineMessageMediaContact) Setreply_markup(v ReplyMarkup) { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageMediaContact) Getreply_markup() ReplyMarkup {
	return m.Data.Reply_markup
}
func (m *TLinputBotInlineMessageGame) Setreply_markup(v ReplyMarkup)   { m.Data.Reply_markup = v }
func (m *TLinputBotInlineMessageGame) Getreply_markup() ReplyMarkup    { return m.Data.Reply_markup }
func (m *TLmessages_dhConfigNotModified) Setrandom(v []uint8)          { m.Data.Random = v }
func (m *TLmessages_dhConfigNotModified) Getrandom() []uint8           { return m.Data.Random }
func (m *TLmessages_dhConfig) Setg(v int32)                            { m.Data.G = v }
func (m *TLmessages_dhConfig) Getg() int32                             { return m.Data.G }
func (m *TLmessages_dhConfig) Setp(v []uint8)                          { m.Data.P = v }
func (m *TLmessages_dhConfig) Getp() []uint8                           { return m.Data.P }
func (m *TLmessages_dhConfig) Setversion(v int32)                      { m.Data.Version = v }
func (m *TLmessages_dhConfig) Getversion() int32                       { return m.Data.Version }
func (m *TLmessages_dhConfig) Setrandom(v []uint8)                     { m.Data.Random = v }
func (m *TLmessages_dhConfig) Getrandom() []uint8                      { return m.Data.Random }
func (m *TLvideoSize) Settype(v string)                                { m.Data.Type = v }
func (m *TLvideoSize) Gettype() string                                 { return m.Data.Type }
func (m *TLvideoSize) Setlocation(v FileLocation)                      { m.Data.Location = v }
func (m *TLvideoSize) Getlocation() FileLocation                       { return m.Data.Location }
func (m *TLvideoSize) Setw(v int32)                                    { m.Data.W = v }
func (m *TLvideoSize) Getw() int32                                     { return m.Data.W }
func (m *TLvideoSize) Seth(v int32)                                    { m.Data.H = v }
func (m *TLvideoSize) Geth() int32                                     { return m.Data.H }
func (m *TLvideoSize) Setsize(v int32)                                 { m.Data.Size = v }
func (m *TLvideoSize) Getsize() int32                                  { return m.Data.Size }
func (m *TLvideoSize) Setvideo_start_ts(v float64)                     { m.Data.Video_start_ts = v }
func (m *TLvideoSize) Getvideo_start_ts() float64                      { return m.Data.Video_start_ts }
func (m *TLinputTheme) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLinputTheme) Getid() int64                                   { return m.Data.Id }
func (m *TLinputTheme) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLinputTheme) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLinputThemeSlug) Setslug(v string)                           { m.Data.Slug = v }
func (m *TLinputThemeSlug) Getslug() string                            { return m.Data.Slug }
func (m *TLinputPeerNotifySettings) Setshow_previews(v Bool)           { m.Data.Show_previews = v }
func (m *TLinputPeerNotifySettings) Getshow_previews() Bool            { return m.Data.Show_previews }
func (m *TLinputPeerNotifySettings) Setsilent(v Bool)                  { m.Data.Silent = v }
func (m *TLinputPeerNotifySettings) Getsilent() Bool                   { return m.Data.Silent }
func (m *TLinputPeerNotifySettings) Setmute_until(v int32)             { m.Data.Mute_until = v }
func (m *TLinputPeerNotifySettings) Getmute_until() int32              { return m.Data.Mute_until }
func (m *TLinputPeerNotifySettings) Setsound(v string)                 { m.Data.Sound = v }
func (m *TLinputPeerNotifySettings) Getsound() string                  { return m.Data.Sound }
func (m *TLdialogFilterSuggested) Setfilter(v DialogFilter)            { m.Data.Filter = v }
func (m *TLdialogFilterSuggested) Getfilter() DialogFilter             { return m.Data.Filter }
func (m *TLdialogFilterSuggested) Setdescription(v string)             { m.Data.Description = v }
func (m *TLdialogFilterSuggested) Getdescription() string              { return m.Data.Description }
func (m *TLmessages_archivedStickers) Setcount(v int32)                { m.Data.Count = v }
func (m *TLmessages_archivedStickers) Getcount() int32                 { return m.Data.Count }
func (m *TLmessages_archivedStickers) Setsets(v []StickerSetCovered)   { m.Data.Sets = v }
func (m *TLmessages_archivedStickers) Getsets() []StickerSetCovered    { return m.Data.Sets }
func (m *TLinputPhoto) Setid(v int64)                                  { m.Data.Id = v }
func (m *TLinputPhoto) Getid() int64                                   { return m.Data.Id }
func (m *TLinputPhoto) Setaccess_hash(v int64)                         { m.Data.Access_hash = v }
func (m *TLinputPhoto) Getaccess_hash() int64                          { return m.Data.Access_hash }
func (m *TLinputPhoto) Setfile_reference(v []uint8)                    { m.Data.File_reference = v }
func (m *TLinputPhoto) Getfile_reference() []uint8                     { return m.Data.File_reference }
func (m *TLmessages_favedStickers) Sethash(v int32)                    { m.Data.Hash = v }
func (m *TLmessages_favedStickers) Gethash() int32                     { return m.Data.Hash }
func (m *TLmessages_favedStickers) Setpacks(v []StickerPack)           { m.Data.Packs = v }
func (m *TLmessages_favedStickers) Getpacks() []StickerPack            { return m.Data.Packs }
func (m *TLmessages_favedStickers) Setstickers(v []Document)           { m.Data.Stickers = v }
func (m *TLmessages_favedStickers) Getstickers() []Document            { return m.Data.Stickers }
func (m *TLhelp_promoDataEmpty) Setexpires(v int32)                    { m.Data.Expires = v }
func (m *TLhelp_promoDataEmpty) Getexpires() int32                     { return m.Data.Expires }
func (m *TLhelp_promoData) Setproxy(v bool)                            { m.Data.Proxy = v }
func (m *TLhelp_promoData) Getproxy() bool                             { return m.Data.Proxy }
func (m *TLhelp_promoData) Setexpires(v int32)                         { m.Data.Expires = v }
func (m *TLhelp_promoData) Getexpires() int32                          { return m.Data.Expires }
func (m *TLhelp_promoData) Setpeer(v Peer)                             { m.Data.Peer = v }
func (m *TLhelp_promoData) Getpeer() Peer                              { return m.Data.Peer }
func (m *TLhelp_promoData) Setchats(v []Chat)                          { m.Data.Chats = v }
func (m *TLhelp_promoData) Getchats() []Chat                           { return m.Data.Chats }
func (m *TLhelp_promoData) Setusers(v []User)                          { m.Data.Users = v }
func (m *TLhelp_promoData) Getusers() []User                           { return m.Data.Users }
func (m *TLhelp_promoData) Setpsa_type(v string)                       { m.Data.Psa_type = v }
func (m *TLhelp_promoData) Getpsa_type() string                        { return m.Data.Psa_type }
func (m *TLhelp_promoData) Setpsa_message(v string)                    { m.Data.Psa_message = v }
func (m *TLhelp_promoData) Getpsa_message() string                     { return m.Data.Psa_message }
func (m *TLmessageActionChatCreate) Settitle(v string)                 { m.Data.Title = v }
func (m *TLmessageActionChatCreate) Gettitle() string                  { return m.Data.Title }
func (m *TLmessageActionChatCreate) Setusers(v []int32)                { m.Data.Users = v }
func (m *TLmessageActionChatCreate) Getusers() []int32                 { return m.Data.Users }
func (m *TLmessageActionChatEditTitle) Settitle(v string)              { m.Data.Title = v }
func (m *TLmessageActionChatEditTitle) Gettitle() string               { return m.Data.Title }
func (m *TLmessageActionChatEditPhoto) Setphoto(v Photo)               { m.Data.Photo = v }
func (m *TLmessageActionChatEditPhoto) Getphoto() Photo                { return m.Data.Photo }
func (m *TLmessageActionChatAddUser) Setusers(v []int32)               { m.Data.Users = v }
func (m *TLmessageActionChatAddUser) Getusers() []int32                { return m.Data.Users }
func (m *TLmessageActionChatDeleteUser) Setuser_id(v int32)            { m.Data.User_id = v }
func (m *TLmessageActionChatDeleteUser) Getuser_id() int32             { return m.Data.User_id }
func (m *TLmessageActionChatJoinedByLink) Setinviter_id(v int32)       { m.Data.Inviter_id = v }
func (m *TLmessageActionChatJoinedByLink) Getinviter_id() int32        { return m.Data.Inviter_id }
func (m *TLmessageActionChannelCreate) Settitle(v string)              { m.Data.Title = v }
func (m *TLmessageActionChannelCreate) Gettitle() string               { return m.Data.Title }
func (m *TLmessageActionChatMigrateTo) Setchannel_id(v int32)          { m.Data.Channel_id = v }
func (m *TLmessageActionChatMigrateTo) Getchannel_id() int32           { return m.Data.Channel_id }
func (m *TLmessageActionChannelMigrateFrom) Settitle(v string)         { m.Data.Title = v }
func (m *TLmessageActionChannelMigrateFrom) Gettitle() string          { return m.Data.Title }
func (m *TLmessageActionChannelMigrateFrom) Setchat_id(v int32)        { m.Data.Chat_id = v }
func (m *TLmessageActionChannelMigrateFrom) Getchat_id() int32         { return m.Data.Chat_id }
func (m *TLmessageActionGameScore) Setgame_id(v int64)                 { m.Data.Game_id = v }
func (m *TLmessageActionGameScore) Getgame_id() int64                  { return m.Data.Game_id }
func (m *TLmessageActionGameScore) Setscore(v int32)                   { m.Data.Score = v }
func (m *TLmessageActionGameScore) Getscore() int32                    { return m.Data.Score }
func (m *TLmessageActionPaymentSentMe) Setcurrency(v string)           { m.Data.Currency = v }
func (m *TLmessageActionPaymentSentMe) Getcurrency() string            { return m.Data.Currency }
func (m *TLmessageActionPaymentSentMe) Settotal_amount(v int64)        { m.Data.Total_amount = v }
func (m *TLmessageActionPaymentSentMe) Gettotal_amount() int64         { return m.Data.Total_amount }
func (m *TLmessageActionPaymentSentMe) Setpayload(v []uint8)           { m.Data.Payload = v }
func (m *TLmessageActionPaymentSentMe) Getpayload() []uint8            { return m.Data.Payload }
func (m *TLmessageActionPaymentSentMe) Setinfo(v PaymentRequestedInfo) { m.Data.Info = v }
func (m *TLmessageActionPaymentSentMe) Getinfo() PaymentRequestedInfo  { return m.Data.Info }
func (m *TLmessageActionPaymentSentMe) Setshipping_option_id(v string) { m.Data.Shipping_option_id = v }
func (m *TLmessageActionPaymentSentMe) Getshipping_option_id() string {
	return m.Data.Shipping_option_id
}
func (m *TLmessageActionPaymentSentMe) Setcharge(v PaymentCharge)      { m.Data.Charge = v }
func (m *TLmessageActionPaymentSentMe) Getcharge() PaymentCharge       { return m.Data.Charge }
func (m *TLmessageActionPaymentSent) Setcurrency(v string)             { m.Data.Currency = v }
func (m *TLmessageActionPaymentSent) Getcurrency() string              { return m.Data.Currency }
func (m *TLmessageActionPaymentSent) Settotal_amount(v int64)          { m.Data.Total_amount = v }
func (m *TLmessageActionPaymentSent) Gettotal_amount() int64           { return m.Data.Total_amount }
func (m *TLmessageActionPhoneCall) Setvideo(v bool)                    { m.Data.Video = v }
func (m *TLmessageActionPhoneCall) Getvideo() bool                     { return m.Data.Video }
func (m *TLmessageActionPhoneCall) Setcall_id(v int64)                 { m.Data.Call_id = v }
func (m *TLmessageActionPhoneCall) Getcall_id() int64                  { return m.Data.Call_id }
func (m *TLmessageActionPhoneCall) Setreason(v PhoneCallDiscardReason) { m.Data.Reason = v }
func (m *TLmessageActionPhoneCall) Getreason() PhoneCallDiscardReason  { return m.Data.Reason }
func (m *TLmessageActionPhoneCall) Setduration(v int32)                { m.Data.Duration = v }
func (m *TLmessageActionPhoneCall) Getduration() int32                 { return m.Data.Duration }
func (m *TLmessageActionCustomAction) Setmessage(v string)             { m.Data.Message = v }
func (m *TLmessageActionCustomAction) Getmessage() string              { return m.Data.Message }
func (m *TLmessageActionBotAllowed) Setdomain(v string)                { m.Data.Domain = v }
func (m *TLmessageActionBotAllowed) Getdomain() string                 { return m.Data.Domain }
func (m *TLmessageActionSecureValuesSentMe) Setvalues(v []SecureValue) { m.Data.Values = v }
func (m *TLmessageActionSecureValuesSentMe) Getvalues() []SecureValue  { return m.Data.Values }
func (m *TLmessageActionSecureValuesSentMe) Setcredentials(v SecureCredentialsEncrypted) {
	m.Data.Credentials = v
}
func (m *TLmessageActionSecureValuesSentMe) Getcredentials() SecureCredentialsEncrypted {
	return m.Data.Credentials
}
func (m *TLmessageActionSecureValuesSent) Settypes(v []SecureValueType)       { m.Data.Types = v }
func (m *TLmessageActionSecureValuesSent) Gettypes() []SecureValueType        { return m.Data.Types }
func (m *TLmessageActionGeoProximityReached) Setfrom_id(v Peer)               { m.Data.From_id = v }
func (m *TLmessageActionGeoProximityReached) Getfrom_id() Peer                { return m.Data.From_id }
func (m *TLmessageActionGeoProximityReached) Setto_id(v Peer)                 { m.Data.To_id = v }
func (m *TLmessageActionGeoProximityReached) Getto_id() Peer                  { return m.Data.To_id }
func (m *TLmessageActionGeoProximityReached) Setdistance(v int32)             { m.Data.Distance = v }
func (m *TLmessageActionGeoProximityReached) Getdistance() int32              { return m.Data.Distance }
func (m *TLpayments_paymentResult) Setupdates(v Updates)                      { m.Data.Updates = v }
func (m *TLpayments_paymentResult) Getupdates() Updates                       { return m.Data.Updates }
func (m *TLpayments_paymentVerificationNeeded) Seturl(v string)               { m.Data.Url = v }
func (m *TLpayments_paymentVerificationNeeded) Geturl() string                { return m.Data.Url }
func (m *TLpaymentSavedCredentialsCard) Setid(v string)                       { m.Data.Id = v }
func (m *TLpaymentSavedCredentialsCard) Getid() string                        { return m.Data.Id }
func (m *TLpaymentSavedCredentialsCard) Settitle(v string)                    { m.Data.Title = v }
func (m *TLpaymentSavedCredentialsCard) Gettitle() string                     { return m.Data.Title }
func (m *TLinputNotifyPeer) Setpeer(v InputPeer)                              { m.Data.Peer = v }
func (m *TLinputNotifyPeer) Getpeer() InputPeer                               { return m.Data.Peer }
func (m *TLchannels_adminLogResults) Setevents(v []ChannelAdminLogEvent)      { m.Data.Events = v }
func (m *TLchannels_adminLogResults) Getevents() []ChannelAdminLogEvent       { return m.Data.Events }
func (m *TLchannels_adminLogResults) Setchats(v []Chat)                       { m.Data.Chats = v }
func (m *TLchannels_adminLogResults) Getchats() []Chat                        { return m.Data.Chats }
func (m *TLchannels_adminLogResults) Setusers(v []User)                       { m.Data.Users = v }
func (m *TLchannels_adminLogResults) Getusers() []User                        { return m.Data.Users }
func (m *TLmessages_inactiveChats) Setdates(v []int32)                        { m.Data.Dates = v }
func (m *TLmessages_inactiveChats) Getdates() []int32                         { return m.Data.Dates }
func (m *TLmessages_inactiveChats) Setchats(v []Chat)                         { m.Data.Chats = v }
func (m *TLmessages_inactiveChats) Getchats() []Chat                          { return m.Data.Chats }
func (m *TLmessages_inactiveChats) Setusers(v []User)                         { m.Data.Users = v }
func (m *TLmessages_inactiveChats) Getusers() []User                          { return m.Data.Users }
func (m *TLstickerSetCovered) Setset(v StickerSet)                            { m.Data.Set = v }
func (m *TLstickerSetCovered) Getset() StickerSet                             { return m.Data.Set }
func (m *TLstickerSetCovered) Setcover(v Document)                            { m.Data.Cover = v }
func (m *TLstickerSetCovered) Getcover() Document                             { return m.Data.Cover }
func (m *TLstickerSetMultiCovered) Setset(v StickerSet)                       { m.Data.Set = v }
func (m *TLstickerSetMultiCovered) Getset() StickerSet                        { return m.Data.Set }
func (m *TLstickerSetMultiCovered) Setcovers(v []Document)                    { m.Data.Covers = v }
func (m *TLstickerSetMultiCovered) Getcovers() []Document                     { return m.Data.Covers }
func (m *TLhelp_deepLinkInfo) Setupdate_app(v bool)                           { m.Data.Update_app = v }
func (m *TLhelp_deepLinkInfo) Getupdate_app() bool                            { return m.Data.Update_app }
func (m *TLhelp_deepLinkInfo) Setmessage(v string)                            { m.Data.Message = v }
func (m *TLhelp_deepLinkInfo) Getmessage() string                             { return m.Data.Message }
func (m *TLhelp_deepLinkInfo) Setentities(v []MessageEntity)                  { m.Data.Entities = v }
func (m *TLhelp_deepLinkInfo) Getentities() []MessageEntity                   { return m.Data.Entities }
func (m *TLmessages_votesList) Setcount(v int32)                              { m.Data.Count = v }
func (m *TLmessages_votesList) Getcount() int32                               { return m.Data.Count }
func (m *TLmessages_votesList) Setvotes(v []MessageUserVote)                  { m.Data.Votes = v }
func (m *TLmessages_votesList) Getvotes() []MessageUserVote                   { return m.Data.Votes }
func (m *TLmessages_votesList) Setusers(v []User)                             { m.Data.Users = v }
func (m *TLmessages_votesList) Getusers() []User                              { return m.Data.Users }
func (m *TLmessages_votesList) Setnext_offset(v string)                       { m.Data.Next_offset = v }
func (m *TLmessages_votesList) Getnext_offset() string                        { return m.Data.Next_offset }
func (m *TLaccountDaysTTL) Setdays(v int32)                                   { m.Data.Days = v }
func (m *TLaccountDaysTTL) Getdays() int32                                    { return m.Data.Days }
func (m *TLjsonObjectValue) Setkey_key(v string)                              { m.Data.Key_key = v }
func (m *TLjsonObjectValue) Getkey_key() string                               { return m.Data.Key_key }
func (m *TLjsonObjectValue) Setvalue(v JSONValue)                             { m.Data.Value = v }
func (m *TLjsonObjectValue) Getvalue() JSONValue                              { return m.Data.Value }
func (m *TLaccount_takeout) Setid(v int64)                                    { m.Data.Id = v }
func (m *TLaccount_takeout) Getid() int64                                     { return m.Data.Id }
func (m *TLstickerPack) Setemoticon(v string)                                 { m.Data.Emoticon = v }
func (m *TLstickerPack) Getemoticon() string                                  { return m.Data.Emoticon }
func (m *TLstickerPack) Setdocuments(v []Long)                                { m.Data.Documents = v }
func (m *TLstickerPack) Getdocuments() []Long                                 { return m.Data.Documents }
func (m *TLhelp_support) Setphone_number(v string)                            { m.Data.Phone_number = v }
func (m *TLhelp_support) Getphone_number() string                             { return m.Data.Phone_number }
func (m *TLhelp_support) Setuser(v User)                                      { m.Data.User = v }
func (m *TLhelp_support) Getuser() User                                       { return m.Data.User }
func (m *TLauthorization) Setcurrent(v bool)                                  { m.Data.Current = v }
func (m *TLauthorization) Getcurrent() bool                                   { return m.Data.Current }
func (m *TLauthorization) Setofficial_app(v bool)                             { m.Data.Official_app = v }
func (m *TLauthorization) Getofficial_app() bool                              { return m.Data.Official_app }
func (m *TLauthorization) Setpassword_pending(v bool)                         { m.Data.Password_pending = v }
func (m *TLauthorization) Getpassword_pending() bool                          { return m.Data.Password_pending }
func (m *TLauthorization) Sethash(v int64)                                    { m.Data.Hash = v }
func (m *TLauthorization) Gethash() int64                                     { return m.Data.Hash }
func (m *TLauthorization) Setdevice_model(v string)                           { m.Data.Device_model = v }
func (m *TLauthorization) Getdevice_model() string                            { return m.Data.Device_model }
func (m *TLauthorization) Setplatform(v string)                               { m.Data.Platform = v }
func (m *TLauthorization) Getplatform() string                                { return m.Data.Platform }
func (m *TLauthorization) Setsystem_version(v string)                         { m.Data.System_version = v }
func (m *TLauthorization) Getsystem_version() string                          { return m.Data.System_version }
func (m *TLauthorization) Setapi_id(v int32)                                  { m.Data.Api_id = v }
func (m *TLauthorization) Getapi_id() int32                                   { return m.Data.Api_id }
func (m *TLauthorization) Setapp_name(v string)                               { m.Data.App_name = v }
func (m *TLauthorization) Getapp_name() string                                { return m.Data.App_name }
func (m *TLauthorization) Setapp_version(v string)                            { m.Data.App_version = v }
func (m *TLauthorization) Getapp_version() string                             { return m.Data.App_version }
func (m *TLauthorization) Setdate_created(v int32)                            { m.Data.Date_created = v }
func (m *TLauthorization) Getdate_created() int32                             { return m.Data.Date_created }
func (m *TLauthorization) Setdate_active(v int32)                             { m.Data.Date_active = v }
func (m *TLauthorization) Getdate_active() int32                              { return m.Data.Date_active }
func (m *TLauthorization) Setip(v string)                                     { m.Data.Ip = v }
func (m *TLauthorization) Getip() string                                      { return m.Data.Ip }
func (m *TLauthorization) Setcountry(v string)                                { m.Data.Country = v }
func (m *TLauthorization) Getcountry() string                                 { return m.Data.Country }
func (m *TLauthorization) Setregion(v string)                                 { m.Data.Region = v }
func (m *TLauthorization) Getregion() string                                  { return m.Data.Region }
func (m *TLwallPaper) Setid(v int64)                                          { m.Data.Id = v }
func (m *TLwallPaper) Getid() int64                                           { return m.Data.Id }
func (m *TLwallPaper) Setcreator(v bool)                                      { m.Data.Creator = v }
func (m *TLwallPaper) Getcreator() bool                                       { return m.Data.Creator }
func (m *TLwallPaper) Setdefault(v bool)                                      { m.Data.Default = v }
func (m *TLwallPaper) Getdefault() bool                                       { return m.Data.Default }
func (m *TLwallPaper) Setpattern(v bool)                                      { m.Data.Pattern = v }
func (m *TLwallPaper) Getpattern() bool                                       { return m.Data.Pattern }
func (m *TLwallPaper) Setdark(v bool)                                         { m.Data.Dark = v }
func (m *TLwallPaper) Getdark() bool                                          { return m.Data.Dark }
func (m *TLwallPaper) Setaccess_hash(v int64)                                 { m.Data.Access_hash = v }
func (m *TLwallPaper) Getaccess_hash() int64                                  { return m.Data.Access_hash }
func (m *TLwallPaper) Setslug(v string)                                       { m.Data.Slug = v }
func (m *TLwallPaper) Getslug() string                                        { return m.Data.Slug }
func (m *TLwallPaper) Setdocument(v Document)                                 { m.Data.Document = v }
func (m *TLwallPaper) Getdocument() Document                                  { return m.Data.Document }
func (m *TLwallPaper) Setsettings(v WallPaperSettings)                        { m.Data.Settings = v }
func (m *TLwallPaper) Getsettings() WallPaperSettings                         { return m.Data.Settings }
func (m *TLwallPaperNoFile) Setdefault(v bool)                                { m.Data.Default = v }
func (m *TLwallPaperNoFile) Getdefault() bool                                 { return m.Data.Default }
func (m *TLwallPaperNoFile) Setdark(v bool)                                   { m.Data.Dark = v }
func (m *TLwallPaperNoFile) Getdark() bool                                    { return m.Data.Dark }
func (m *TLwallPaperNoFile) Setsettings(v WallPaperSettings)                  { m.Data.Settings = v }
func (m *TLwallPaperNoFile) Getsettings() WallPaperSettings                   { return m.Data.Settings }
func (m *TLhelp_recentMeUrls) Seturls(v []RecentMeUrl)                        { m.Data.Urls = v }
func (m *TLhelp_recentMeUrls) Geturls() []RecentMeUrl                         { return m.Data.Urls }
func (m *TLhelp_recentMeUrls) Setchats(v []Chat)                              { m.Data.Chats = v }
func (m *TLhelp_recentMeUrls) Getchats() []Chat                               { return m.Data.Chats }
func (m *TLhelp_recentMeUrls) Setusers(v []User)                              { m.Data.Users = v }
func (m *TLhelp_recentMeUrls) Getusers() []User                               { return m.Data.Users }
func (m *TLcodeSettings) Setallow_flashcall(v bool)                           { m.Data.Allow_flashcall = v }
func (m *TLcodeSettings) Getallow_flashcall() bool                            { return m.Data.Allow_flashcall }
func (m *TLcodeSettings) Setcurrent_number(v bool)                            { m.Data.Current_number = v }
func (m *TLcodeSettings) Getcurrent_number() bool                             { return m.Data.Current_number }
func (m *TLcodeSettings) Setallow_app_hash(v bool)                            { m.Data.Allow_app_hash = v }
func (m *TLcodeSettings) Getallow_app_hash() bool                             { return m.Data.Allow_app_hash }
func (m *TLhighScore) Setpos(v int32)                                         { m.Data.Pos = v }
func (m *TLhighScore) Getpos() int32                                          { return m.Data.Pos }
func (m *TLhighScore) Setuser_id(v int32)                                     { m.Data.User_id = v }
func (m *TLhighScore) Getuser_id() int32                                      { return m.Data.User_id }
func (m *TLhighScore) Setscore(v int32)                                       { m.Data.Score = v }
func (m *TLhighScore) Getscore() int32                                        { return m.Data.Score }
func (m *TLmessages_savedGifs) Sethash(v int32)                               { m.Data.Hash = v }
func (m *TLmessages_savedGifs) Gethash() int32                                { return m.Data.Hash }
func (m *TLmessages_savedGifs) Setgifs(v []Document)                          { m.Data.Gifs = v }
func (m *TLmessages_savedGifs) Getgifs() []Document                           { return m.Data.Gifs }
func (m *TLchannelAdminLogEventActionChangeTitle) Setprev_value(v string)     { m.Data.Prev_value = v }
func (m *TLchannelAdminLogEventActionChangeTitle) Getprev_value() string      { return m.Data.Prev_value }
func (m *TLchannelAdminLogEventActionChangeTitle) Setnew_value(v string)      { m.Data.New_value = v }
func (m *TLchannelAdminLogEventActionChangeTitle) Getnew_value() string       { return m.Data.New_value }
func (m *TLchannelAdminLogEventActionChangeAbout) Setprev_value(v string)     { m.Data.Prev_value = v }
func (m *TLchannelAdminLogEventActionChangeAbout) Getprev_value() string      { return m.Data.Prev_value }
func (m *TLchannelAdminLogEventActionChangeAbout) Setnew_value(v string)      { m.Data.New_value = v }
func (m *TLchannelAdminLogEventActionChangeAbout) Getnew_value() string       { return m.Data.New_value }
func (m *TLchannelAdminLogEventActionChangeUsername) Setprev_value(v string)  { m.Data.Prev_value = v }
func (m *TLchannelAdminLogEventActionChangeUsername) Getprev_value() string   { return m.Data.Prev_value }
func (m *TLchannelAdminLogEventActionChangeUsername) Setnew_value(v string)   { m.Data.New_value = v }
func (m *TLchannelAdminLogEventActionChangeUsername) Getnew_value() string    { return m.Data.New_value }
func (m *TLchannelAdminLogEventActionChangePhoto) Setprev_photo(v Photo)      { m.Data.Prev_photo = v }
func (m *TLchannelAdminLogEventActionChangePhoto) Getprev_photo() Photo       { return m.Data.Prev_photo }
func (m *TLchannelAdminLogEventActionChangePhoto) Setnew_photo(v Photo)       { m.Data.New_photo = v }
func (m *TLchannelAdminLogEventActionChangePhoto) Getnew_photo() Photo        { return m.Data.New_photo }
func (m *TLchannelAdminLogEventActionToggleInvites) Setnew_value_5(v Bool)    { m.Data.New_value_5 = v }
func (m *TLchannelAdminLogEventActionToggleInvites) Getnew_value_5() Bool     { return m.Data.New_value_5 }
func (m *TLchannelAdminLogEventActionToggleSignatures) Setnew_value_5(v Bool) { m.Data.New_value_5 = v }
func (m *TLchannelAdminLogEventActionToggleSignatures) Getnew_value_5() Bool {
	return m.Data.New_value_5
}
func (m *TLchannelAdminLogEventActionUpdatePinned) Setmessage(v Message)     { m.Data.Message = v }
func (m *TLchannelAdminLogEventActionUpdatePinned) Getmessage() Message      { return m.Data.Message }
func (m *TLchannelAdminLogEventActionEditMessage) Setprev_message(v Message) { m.Data.Prev_message = v }
func (m *TLchannelAdminLogEventActionEditMessage) Getprev_message() Message {
	return m.Data.Prev_message
}
func (m *TLchannelAdminLogEventActionEditMessage) Setnew_message(v Message) { m.Data.New_message = v }
func (m *TLchannelAdminLogEventActionEditMessage) Getnew_message() Message  { return m.Data.New_message }
func (m *TLchannelAdminLogEventActionDeleteMessage) Setmessage(v Message)   { m.Data.Message = v }
func (m *TLchannelAdminLogEventActionDeleteMessage) Getmessage() Message    { return m.Data.Message }
func (m *TLchannelAdminLogEventActionParticipantInvite) Setparticipant(v ChannelParticipant) {
	m.Data.Participant = v
}
func (m *TLchannelAdminLogEventActionParticipantInvite) Getparticipant() ChannelParticipant {
	return m.Data.Participant
}
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Setprev_participant(v ChannelParticipant) {
	m.Data.Prev_participant = v
}
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Getprev_participant() ChannelParticipant {
	return m.Data.Prev_participant
}
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Setnew_participant(v ChannelParticipant) {
	m.Data.New_participant = v
}
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Getnew_participant() ChannelParticipant {
	return m.Data.New_participant
}
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Setprev_participant(v ChannelParticipant) {
	m.Data.Prev_participant = v
}
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Getprev_participant() ChannelParticipant {
	return m.Data.Prev_participant
}
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Setnew_participant(v ChannelParticipant) {
	m.Data.New_participant = v
}
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Getnew_participant() ChannelParticipant {
	return m.Data.New_participant
}
func (m *TLchannelAdminLogEventActionChangeStickerSet) Setprev_stickerset(v InputStickerSet) {
	m.Data.Prev_stickerset = v
}
func (m *TLchannelAdminLogEventActionChangeStickerSet) Getprev_stickerset() InputStickerSet {
	return m.Data.Prev_stickerset
}
func (m *TLchannelAdminLogEventActionChangeStickerSet) Setnew_stickerset(v InputStickerSet) {
	m.Data.New_stickerset = v
}
func (m *TLchannelAdminLogEventActionChangeStickerSet) Getnew_stickerset() InputStickerSet {
	return m.Data.New_stickerset
}
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Setnew_value_5(v Bool) {
	m.Data.New_value_5 = v
}
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Getnew_value_5() Bool {
	return m.Data.New_value_5
}
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Setprev_banned_rights(v ChatBannedRights) {
	m.Data.Prev_banned_rights = v
}
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Getprev_banned_rights() ChatBannedRights {
	return m.Data.Prev_banned_rights
}
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Setnew_banned_rights(v ChatBannedRights) {
	m.Data.New_banned_rights = v
}
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Getnew_banned_rights() ChatBannedRights {
	return m.Data.New_banned_rights
}
func (m *TLchannelAdminLogEventActionStopPoll) Setmessage(v Message) { m.Data.Message = v }
func (m *TLchannelAdminLogEventActionStopPoll) Getmessage() Message  { return m.Data.Message }
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Setprev_value_16(v int32) {
	m.Data.Prev_value_16 = v
}
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Getprev_value_16() int32 {
	return m.Data.Prev_value_16
}
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Setnew_value_17(v int32) {
	m.Data.New_value_17 = v
}
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Getnew_value_17() int32 {
	return m.Data.New_value_17
}
func (m *TLchannelAdminLogEventActionChangeLocation) Setprev_value_18(v ChannelLocation) {
	m.Data.Prev_value_18 = v
}
func (m *TLchannelAdminLogEventActionChangeLocation) Getprev_value_18() ChannelLocation {
	return m.Data.Prev_value_18
}
func (m *TLchannelAdminLogEventActionChangeLocation) Setnew_value_19(v ChannelLocation) {
	m.Data.New_value_19 = v
}
func (m *TLchannelAdminLogEventActionChangeLocation) Getnew_value_19() ChannelLocation {
	return m.Data.New_value_19
}
func (m *TLchannelAdminLogEventActionToggleSlowMode) Setprev_value_16(v int32) {
	m.Data.Prev_value_16 = v
}
func (m *TLchannelAdminLogEventActionToggleSlowMode) Getprev_value_16() int32 {
	return m.Data.Prev_value_16
}
func (m *TLchannelAdminLogEventActionToggleSlowMode) Setnew_value_17(v int32) {
	m.Data.New_value_17 = v
}
func (m *TLchannelAdminLogEventActionToggleSlowMode) Getnew_value_17() int32 {
	return m.Data.New_value_17
}
func (m *TLlangPackLanguage) Setofficial(v bool)                                  { m.Data.Official = v }
func (m *TLlangPackLanguage) Getofficial() bool                                   { return m.Data.Official }
func (m *TLlangPackLanguage) Setrtl(v bool)                                       { m.Data.Rtl = v }
func (m *TLlangPackLanguage) Getrtl() bool                                        { return m.Data.Rtl }
func (m *TLlangPackLanguage) Setbeta(v bool)                                      { m.Data.Beta = v }
func (m *TLlangPackLanguage) Getbeta() bool                                       { return m.Data.Beta }
func (m *TLlangPackLanguage) Setname(v string)                                    { m.Data.Name = v }
func (m *TLlangPackLanguage) Getname() string                                     { return m.Data.Name }
func (m *TLlangPackLanguage) Setnative_name(v string)                             { m.Data.Native_name = v }
func (m *TLlangPackLanguage) Getnative_name() string                              { return m.Data.Native_name }
func (m *TLlangPackLanguage) Setlang_code(v string)                               { m.Data.Lang_code = v }
func (m *TLlangPackLanguage) Getlang_code() string                                { return m.Data.Lang_code }
func (m *TLlangPackLanguage) Setbase_lang_code(v string)                          { m.Data.Base_lang_code = v }
func (m *TLlangPackLanguage) Getbase_lang_code() string                           { return m.Data.Base_lang_code }
func (m *TLlangPackLanguage) Setplural_code(v string)                             { m.Data.Plural_code = v }
func (m *TLlangPackLanguage) Getplural_code() string                              { return m.Data.Plural_code }
func (m *TLlangPackLanguage) Setstrings_count(v int32)                            { m.Data.Strings_count = v }
func (m *TLlangPackLanguage) Getstrings_count() int32                             { return m.Data.Strings_count }
func (m *TLlangPackLanguage) Settranslated_count(v int32)                         { m.Data.Translated_count = v }
func (m *TLlangPackLanguage) Gettranslated_count() int32                          { return m.Data.Translated_count }
func (m *TLlangPackLanguage) Settranslations_url(v string)                        { m.Data.Translations_url = v }
func (m *TLlangPackLanguage) Gettranslations_url() string                         { return m.Data.Translations_url }
func (m *TLcontactStatus) Setuser_id(v int32)                                     { m.Data.User_id = v }
func (m *TLcontactStatus) Getuser_id() int32                                      { return m.Data.User_id }
func (m *TLcontactStatus) Setstatus(v UserStatus)                                 { m.Data.Status = v }
func (m *TLcontactStatus) Getstatus() UserStatus                                  { return m.Data.Status }
func (m *TLinputUser) Setuser_id(v int32)                                         { m.Data.User_id = v }
func (m *TLinputUser) Getuser_id() int32                                          { return m.Data.User_id }
func (m *TLinputUser) Setaccess_hash(v int64)                                     { m.Data.Access_hash = v }
func (m *TLinputUser) Getaccess_hash() int64                                      { return m.Data.Access_hash }
func (m *TLinputUserFromMessage) Setpeer(v InputPeer)                             { m.Data.Peer = v }
func (m *TLinputUserFromMessage) Getpeer() InputPeer                              { return m.Data.Peer }
func (m *TLinputUserFromMessage) Setmsg_id(v int32)                               { m.Data.Msg_id = v }
func (m *TLinputUserFromMessage) Getmsg_id() int32                                { return m.Data.Msg_id }
func (m *TLinputUserFromMessage) Setuser_id(v int32)                              { m.Data.User_id = v }
func (m *TLinputUserFromMessage) Getuser_id() int32                               { return m.Data.User_id }
func (m *TLchannelMessagesFilter) Setexclude_new_messages(v bool)                 { m.Data.Exclude_new_messages = v }
func (m *TLchannelMessagesFilter) Getexclude_new_messages() bool                  { return m.Data.Exclude_new_messages }
func (m *TLchannelMessagesFilter) Setranges(v []MessageRange)                     { m.Data.Ranges = v }
func (m *TLchannelMessagesFilter) Getranges() []MessageRange                      { return m.Data.Ranges }
func (m *TLinputFolderPeer) Setpeer(v InputPeer)                                  { m.Data.Peer = v }
func (m *TLinputFolderPeer) Getpeer() InputPeer                                   { return m.Data.Peer }
func (m *TLinputFolderPeer) Setfolder_id(v int32)                                 { m.Data.Folder_id = v }
func (m *TLinputFolderPeer) Getfolder_id() int32                                  { return m.Data.Folder_id }
func (m *TLinputFile) Setid(v int64)                                              { m.Data.Id = v }
func (m *TLinputFile) Getid() int64                                               { return m.Data.Id }
func (m *TLinputFile) Setparts(v int32)                                           { m.Data.Parts = v }
func (m *TLinputFile) Getparts() int32                                            { return m.Data.Parts }
func (m *TLinputFile) Setname(v string)                                           { m.Data.Name = v }
func (m *TLinputFile) Getname() string                                            { return m.Data.Name }
func (m *TLinputFile) Setmd5_checksum(v string)                                   { m.Data.Md5_checksum = v }
func (m *TLinputFile) Getmd5_checksum() string                                    { return m.Data.Md5_checksum }
func (m *TLinputFileBig) Setid(v int64)                                           { m.Data.Id = v }
func (m *TLinputFileBig) Getid() int64                                            { return m.Data.Id }
func (m *TLinputFileBig) Setparts(v int32)                                        { m.Data.Parts = v }
func (m *TLinputFileBig) Getparts() int32                                         { return m.Data.Parts }
func (m *TLinputFileBig) Setname(v string)                                        { m.Data.Name = v }
func (m *TLinputFileBig) Getname() string                                         { return m.Data.Name }
func (m *TLinputMessagesFilterPhoneCalls) Setmissed(v bool)                       { m.Data.Missed = v }
func (m *TLinputMessagesFilterPhoneCalls) Getmissed() bool                        { return m.Data.Missed }
func (m *TLpageBlockTitle) Settext(v RichText)                                    { m.Data.Text = v }
func (m *TLpageBlockTitle) Gettext() RichText                                     { return m.Data.Text }
func (m *TLpageBlockSubtitle) Settext(v RichText)                                 { m.Data.Text = v }
func (m *TLpageBlockSubtitle) Gettext() RichText                                  { return m.Data.Text }
func (m *TLpageBlockAuthorDate) Setauthor(v RichText)                             { m.Data.Author = v }
func (m *TLpageBlockAuthorDate) Getauthor() RichText                              { return m.Data.Author }
func (m *TLpageBlockAuthorDate) Setpublished_date(v int32)                        { m.Data.Published_date = v }
func (m *TLpageBlockAuthorDate) Getpublished_date() int32                         { return m.Data.Published_date }
func (m *TLpageBlockHeader) Settext(v RichText)                                   { m.Data.Text = v }
func (m *TLpageBlockHeader) Gettext() RichText                                    { return m.Data.Text }
func (m *TLpageBlockSubheader) Settext(v RichText)                                { m.Data.Text = v }
func (m *TLpageBlockSubheader) Gettext() RichText                                 { return m.Data.Text }
func (m *TLpageBlockParagraph) Settext(v RichText)                                { m.Data.Text = v }
func (m *TLpageBlockParagraph) Gettext() RichText                                 { return m.Data.Text }
func (m *TLpageBlockPreformatted) Settext(v RichText)                             { m.Data.Text = v }
func (m *TLpageBlockPreformatted) Gettext() RichText                              { return m.Data.Text }
func (m *TLpageBlockPreformatted) Setlanguage(v string)                           { m.Data.Language = v }
func (m *TLpageBlockPreformatted) Getlanguage() string                            { return m.Data.Language }
func (m *TLpageBlockFooter) Settext(v RichText)                                   { m.Data.Text = v }
func (m *TLpageBlockFooter) Gettext() RichText                                    { return m.Data.Text }
func (m *TLpageBlockAnchor) Setname(v string)                                     { m.Data.Name = v }
func (m *TLpageBlockAnchor) Getname() string                                      { return m.Data.Name }
func (m *TLpageBlockList) Setitems(v []PageListItem)                              { m.Data.Items = v }
func (m *TLpageBlockList) Getitems() []PageListItem                               { return m.Data.Items }
func (m *TLpageBlockBlockquote) Settext(v RichText)                               { m.Data.Text = v }
func (m *TLpageBlockBlockquote) Gettext() RichText                                { return m.Data.Text }
func (m *TLpageBlockBlockquote) Setcaption(v RichText)                            { m.Data.Caption = v }
func (m *TLpageBlockBlockquote) Getcaption() RichText                             { return m.Data.Caption }
func (m *TLpageBlockPullquote) Settext(v RichText)                                { m.Data.Text = v }
func (m *TLpageBlockPullquote) Gettext() RichText                                 { return m.Data.Text }
func (m *TLpageBlockPullquote) Setcaption(v RichText)                             { m.Data.Caption = v }
func (m *TLpageBlockPullquote) Getcaption() RichText                              { return m.Data.Caption }
func (m *TLpageBlockPhoto) Setphoto_id(v int64)                                   { m.Data.Photo_id = v }
func (m *TLpageBlockPhoto) Getphoto_id() int64                                    { return m.Data.Photo_id }
func (m *TLpageBlockPhoto) Setcaption_9(v PageCaption)                            { m.Data.Caption_9 = v }
func (m *TLpageBlockPhoto) Getcaption_9() PageCaption                             { return m.Data.Caption_9 }
func (m *TLpageBlockPhoto) Seturl(v string)                                       { m.Data.Url = v }
func (m *TLpageBlockPhoto) Geturl() string                                        { return m.Data.Url }
func (m *TLpageBlockPhoto) Setwebpage_id(v int64)                                 { m.Data.Webpage_id = v }
func (m *TLpageBlockPhoto) Getwebpage_id() int64                                  { return m.Data.Webpage_id }
func (m *TLpageBlockVideo) Setautoplay(v bool)                                    { m.Data.Autoplay = v }
func (m *TLpageBlockVideo) Getautoplay() bool                                     { return m.Data.Autoplay }
func (m *TLpageBlockVideo) Setloop(v bool)                                        { m.Data.Loop = v }
func (m *TLpageBlockVideo) Getloop() bool                                         { return m.Data.Loop }
func (m *TLpageBlockVideo) Setvideo_id(v int64)                                   { m.Data.Video_id = v }
func (m *TLpageBlockVideo) Getvideo_id() int64                                    { return m.Data.Video_id }
func (m *TLpageBlockVideo) Setcaption_9(v PageCaption)                            { m.Data.Caption_9 = v }
func (m *TLpageBlockVideo) Getcaption_9() PageCaption                             { return m.Data.Caption_9 }
func (m *TLpageBlockCover) Setcover(v PageBlock)                                  { m.Data.Cover = v }
func (m *TLpageBlockCover) Getcover() PageBlock                                   { return m.Data.Cover }
func (m *TLpageBlockEmbed) Setfull_width(v bool)                                  { m.Data.Full_width = v }
func (m *TLpageBlockEmbed) Getfull_width() bool                                   { return m.Data.Full_width }
func (m *TLpageBlockEmbed) Setallow_scrolling(v bool)                             { m.Data.Allow_scrolling = v }
func (m *TLpageBlockEmbed) Getallow_scrolling() bool                              { return m.Data.Allow_scrolling }
func (m *TLpageBlockEmbed) Seturl(v string)                                       { m.Data.Url = v }
func (m *TLpageBlockEmbed) Geturl() string                                        { return m.Data.Url }
func (m *TLpageBlockEmbed) Sethtml(v string)                                      { m.Data.Html = v }
func (m *TLpageBlockEmbed) Gethtml() string                                       { return m.Data.Html }
func (m *TLpageBlockEmbed) Setposter_photo_id(v int64)                            { m.Data.Poster_photo_id = v }
func (m *TLpageBlockEmbed) Getposter_photo_id() int64                             { return m.Data.Poster_photo_id }
func (m *TLpageBlockEmbed) Setw(v int32)                                          { m.Data.W = v }
func (m *TLpageBlockEmbed) Getw() int32                                           { return m.Data.W }
func (m *TLpageBlockEmbed) Seth(v int32)                                          { m.Data.H = v }
func (m *TLpageBlockEmbed) Geth() int32                                           { return m.Data.H }
func (m *TLpageBlockEmbed) Setcaption_9(v PageCaption)                            { m.Data.Caption_9 = v }
func (m *TLpageBlockEmbed) Getcaption_9() PageCaption                             { return m.Data.Caption_9 }
func (m *TLpageBlockEmbedPost) Seturl(v string)                                   { m.Data.Url = v }
func (m *TLpageBlockEmbedPost) Geturl() string                                    { return m.Data.Url }
func (m *TLpageBlockEmbedPost) Setwebpage_id(v int64)                             { m.Data.Webpage_id = v }
func (m *TLpageBlockEmbedPost) Getwebpage_id() int64                              { return m.Data.Webpage_id }
func (m *TLpageBlockEmbedPost) Setauthor_photo_id(v int64)                        { m.Data.Author_photo_id = v }
func (m *TLpageBlockEmbedPost) Getauthor_photo_id() int64                         { return m.Data.Author_photo_id }
func (m *TLpageBlockEmbedPost) Setauthor_23(v string)                             { m.Data.Author_23 = v }
func (m *TLpageBlockEmbedPost) Getauthor_23() string                              { return m.Data.Author_23 }
func (m *TLpageBlockEmbedPost) Setdate(v int32)                                   { m.Data.Date = v }
func (m *TLpageBlockEmbedPost) Getdate() int32                                    { return m.Data.Date }
func (m *TLpageBlockEmbedPost) Setblocks(v []PageBlock)                           { m.Data.Blocks = v }
func (m *TLpageBlockEmbedPost) Getblocks() []PageBlock                            { return m.Data.Blocks }
func (m *TLpageBlockEmbedPost) Setcaption_9(v PageCaption)                        { m.Data.Caption_9 = v }
func (m *TLpageBlockEmbedPost) Getcaption_9() PageCaption                         { return m.Data.Caption_9 }
func (m *TLpageBlockCollage) Setitems_26(v []PageBlock)                           { m.Data.Items_26 = v }
func (m *TLpageBlockCollage) Getitems_26() []PageBlock                            { return m.Data.Items_26 }
func (m *TLpageBlockCollage) Setcaption_9(v PageCaption)                          { m.Data.Caption_9 = v }
func (m *TLpageBlockCollage) Getcaption_9() PageCaption                           { return m.Data.Caption_9 }
func (m *TLpageBlockSlideshow) Setitems_26(v []PageBlock)                         { m.Data.Items_26 = v }
func (m *TLpageBlockSlideshow) Getitems_26() []PageBlock                          { return m.Data.Items_26 }
func (m *TLpageBlockSlideshow) Setcaption_9(v PageCaption)                        { m.Data.Caption_9 = v }
func (m *TLpageBlockSlideshow) Getcaption_9() PageCaption                         { return m.Data.Caption_9 }
func (m *TLpageBlockChannel) Setchannel(v Chat)                                   { m.Data.Channel = v }
func (m *TLpageBlockChannel) Getchannel() Chat                                    { return m.Data.Channel }
func (m *TLpageBlockAudio) Setaudio_id(v int64)                                   { m.Data.Audio_id = v }
func (m *TLpageBlockAudio) Getaudio_id() int64                                    { return m.Data.Audio_id }
func (m *TLpageBlockAudio) Setcaption_9(v PageCaption)                            { m.Data.Caption_9 = v }
func (m *TLpageBlockAudio) Getcaption_9() PageCaption                             { return m.Data.Caption_9 }
func (m *TLpageBlockKicker) Settext(v RichText)                                   { m.Data.Text = v }
func (m *TLpageBlockKicker) Gettext() RichText                                    { return m.Data.Text }
func (m *TLpageBlockTable) Setbordered(v bool)                                    { m.Data.Bordered = v }
func (m *TLpageBlockTable) Getbordered() bool                                     { return m.Data.Bordered }
func (m *TLpageBlockTable) Setstriped(v bool)                                     { m.Data.Striped = v }
func (m *TLpageBlockTable) Getstriped() bool                                      { return m.Data.Striped }
func (m *TLpageBlockTable) Settitle(v RichText)                                   { m.Data.Title = v }
func (m *TLpageBlockTable) Gettitle() RichText                                    { return m.Data.Title }
func (m *TLpageBlockTable) Setrows(v []PageTableRow)                              { m.Data.Rows = v }
func (m *TLpageBlockTable) Getrows() []PageTableRow                               { return m.Data.Rows }
func (m *TLpageBlockOrderedList) Setitems_33(v []PageListOrderedItem)             { m.Data.Items_33 = v }
func (m *TLpageBlockOrderedList) Getitems_33() []PageListOrderedItem              { return m.Data.Items_33 }
func (m *TLpageBlockDetails) Setopen(v bool)                                      { m.Data.Open = v }
func (m *TLpageBlockDetails) Getopen() bool                                       { return m.Data.Open }
func (m *TLpageBlockDetails) Setblocks(v []PageBlock)                             { m.Data.Blocks = v }
func (m *TLpageBlockDetails) Getblocks() []PageBlock                              { return m.Data.Blocks }
func (m *TLpageBlockDetails) Settitle(v RichText)                                 { m.Data.Title = v }
func (m *TLpageBlockDetails) Gettitle() RichText                                  { return m.Data.Title }
func (m *TLpageBlockRelatedArticles) Settitle(v RichText)                         { m.Data.Title = v }
func (m *TLpageBlockRelatedArticles) Gettitle() RichText                          { return m.Data.Title }
func (m *TLpageBlockRelatedArticles) Setarticles(v []PageRelatedArticle)          { m.Data.Articles = v }
func (m *TLpageBlockRelatedArticles) Getarticles() []PageRelatedArticle           { return m.Data.Articles }
func (m *TLpageBlockMap) Setgeo(v GeoPoint)                                       { m.Data.Geo = v }
func (m *TLpageBlockMap) Getgeo() GeoPoint                                        { return m.Data.Geo }
func (m *TLpageBlockMap) Setzoom(v int32)                                         { m.Data.Zoom = v }
func (m *TLpageBlockMap) Getzoom() int32                                          { return m.Data.Zoom }
func (m *TLpageBlockMap) Setw(v int32)                                            { m.Data.W = v }
func (m *TLpageBlockMap) Getw() int32                                             { return m.Data.W }
func (m *TLpageBlockMap) Seth(v int32)                                            { m.Data.H = v }
func (m *TLpageBlockMap) Geth() int32                                             { return m.Data.H }
func (m *TLpageBlockMap) Setcaption_9(v PageCaption)                              { m.Data.Caption_9 = v }
func (m *TLpageBlockMap) Getcaption_9() PageCaption                               { return m.Data.Caption_9 }
func (m *TLstatsGraphAsync) Settoken(v string)                                    { m.Data.Token = v }
func (m *TLstatsGraphAsync) Gettoken() string                                     { return m.Data.Token }
func (m *TLstatsGraphError) Seterror(v string)                                    { m.Data.Error = v }
func (m *TLstatsGraphError) Geterror() string                                     { return m.Data.Error }
func (m *TLstatsGraph) Setjson(v DataJSON)                                        { m.Data.Json = v }
func (m *TLstatsGraph) Getjson() DataJSON                                         { return m.Data.Json }
func (m *TLstatsGraph) Setzoom_token(v string)                                    { m.Data.Zoom_token = v }
func (m *TLstatsGraph) Getzoom_token() string                                     { return m.Data.Zoom_token }
func (m *TLstats_messageStats) Setviews_graph(v StatsGraph)                       { m.Data.Views_graph = v }
func (m *TLstats_messageStats) Getviews_graph() StatsGraph                        { return m.Data.Views_graph }
func (m *TLusers_getUsers) Setid(v []InputUser)                                   { m.Id = v }
func (m *TLusers_getUsers) Getid() []InputUser                                    { return m.Id }
func (m *TLchannels_exportMessageLink) Setgrouped(v bool)                         { m.Grouped = v }
func (m *TLchannels_exportMessageLink) Getgrouped() bool                          { return m.Grouped }
func (m *TLchannels_exportMessageLink) Setthread(v bool)                          { m.Thread = v }
func (m *TLchannels_exportMessageLink) Getthread() bool                           { return m.Thread }
func (m *TLchannels_exportMessageLink) Setchannel(v InputChannel)                 { m.Channel = v }
func (m *TLchannels_exportMessageLink) Getchannel() InputChannel                  { return m.Channel }
func (m *TLchannels_exportMessageLink) Setid(v int32)                             { m.Id = v }
func (m *TLchannels_exportMessageLink) Getid() int32                              { return m.Id }
func (m *TLstats_getMegagroupStats) Setdark(v bool)                               { m.Dark = v }
func (m *TLstats_getMegagroupStats) Getdark() bool                                { return m.Dark }
func (m *TLstats_getMegagroupStats) Setchannel(v InputChannel)                    { m.Channel = v }
func (m *TLstats_getMegagroupStats) Getchannel() InputChannel                     { return m.Channel }
func (m *TLpayments_getPaymentReceipt) Setmsg_id(v int32)                         { m.Msg_id = v }
func (m *TLpayments_getPaymentReceipt) Getmsg_id() int32                          { return m.Msg_id }
func (m *TLmessages_getStickerSet) Setstickerset(v InputStickerSet)               { m.Stickerset = v }
func (m *TLmessages_getStickerSet) Getstickerset() InputStickerSet                { return m.Stickerset }
func (m *TLstickers_createStickerSet) Setmasks(v bool)                            { m.Masks = v }
func (m *TLstickers_createStickerSet) Getmasks() bool                             { return m.Masks }
func (m *TLstickers_createStickerSet) Setanimated(v bool)                         { m.Animated = v }
func (m *TLstickers_createStickerSet) Getanimated() bool                          { return m.Animated }
func (m *TLstickers_createStickerSet) Setuser_id(v InputUser)                     { m.User_id = v }
func (m *TLstickers_createStickerSet) Getuser_id() InputUser                      { return m.User_id }
func (m *TLstickers_createStickerSet) Settitle(v string)                          { m.Title = v }
func (m *TLstickers_createStickerSet) Gettitle() string                           { return m.Title }
func (m *TLstickers_createStickerSet) Setshort_name(v string)                     { m.Short_name = v }
func (m *TLstickers_createStickerSet) Getshort_name() string                      { return m.Short_name }
func (m *TLstickers_createStickerSet) Setthumb(v InputDocument)                   { m.Thumb = v }
func (m *TLstickers_createStickerSet) Getthumb() InputDocument                    { return m.Thumb }
func (m *TLstickers_createStickerSet) Setstickers(v []InputStickerSetItem)        { m.Stickers = v }
func (m *TLstickers_createStickerSet) Getstickers() []InputStickerSetItem         { return m.Stickers }
func (m *TLstickers_removeStickerFromSet) Setsticker(v InputDocument)             { m.Sticker = v }
func (m *TLstickers_removeStickerFromSet) Getsticker() InputDocument              { return m.Sticker }
func (m *TLstickers_changeStickerPosition) Setsticker(v InputDocument)            { m.Sticker = v }
func (m *TLstickers_changeStickerPosition) Getsticker() InputDocument             { return m.Sticker }
func (m *TLstickers_changeStickerPosition) Setposition(v int32)                   { m.Position = v }
func (m *TLstickers_changeStickerPosition) Getposition() int32                    { return m.Position }
func (m *TLstickers_addStickerToSet) Setstickerset(v InputStickerSet)             { m.Stickerset = v }
func (m *TLstickers_addStickerToSet) Getstickerset() InputStickerSet              { return m.Stickerset }
func (m *TLstickers_addStickerToSet) Setsticker(v InputStickerSetItem)            { m.Sticker = v }
func (m *TLstickers_addStickerToSet) Getsticker() InputStickerSetItem             { return m.Sticker }
func (m *TLstickers_setStickerSetThumb) Setstickerset(v InputStickerSet)          { m.Stickerset = v }
func (m *TLstickers_setStickerSetThumb) Getstickerset() InputStickerSet           { return m.Stickerset }
func (m *TLstickers_setStickerSetThumb) Setthumb(v InputDocument)                 { m.Thumb = v }
func (m *TLstickers_setStickerSetThumb) Getthumb() InputDocument                  { return m.Thumb }
func (m *TLphotos_deletePhotos) Setid(v []InputPhoto)                             { m.Id = v }
func (m *TLphotos_deletePhotos) Getid() []InputPhoto                              { return m.Id }
func (m *TLmessages_receivedQueue) Setmax_qts(v int32)                            { m.Max_qts = v }
func (m *TLmessages_receivedQueue) Getmax_qts() int32                             { return m.Max_qts }
func (m *TLhelp_getRecentMeUrls) Setreferer(v string)                             { m.Referer = v }
func (m *TLhelp_getRecentMeUrls) Getreferer() string                              { return m.Referer }
func (m *TLmessages_sendEncrypted) Setsilent(v bool)                              { m.Silent = v }
func (m *TLmessages_sendEncrypted) Getsilent() bool                               { return m.Silent }
func (m *TLmessages_sendEncrypted) Setpeer(v InputEncryptedChat)                  { m.Peer = v }
func (m *TLmessages_sendEncrypted) Getpeer() InputEncryptedChat                   { return m.Peer }
func (m *TLmessages_sendEncrypted) Setrandom_id(v int64)                          { m.Random_id = v }
func (m *TLmessages_sendEncrypted) Getrandom_id() int64                           { return m.Random_id }
func (m *TLmessages_sendEncrypted) Setdata(v []uint8)                             { m.Data = v }
func (m *TLmessages_sendEncrypted) Getdata() []uint8                              { return m.Data }
func (m *TLmessages_sendEncryptedFile) Setsilent(v bool)                          { m.Silent = v }
func (m *TLmessages_sendEncryptedFile) Getsilent() bool                           { return m.Silent }
func (m *TLmessages_sendEncryptedFile) Setpeer(v InputEncryptedChat)              { m.Peer = v }
func (m *TLmessages_sendEncryptedFile) Getpeer() InputEncryptedChat               { return m.Peer }
func (m *TLmessages_sendEncryptedFile) Setrandom_id(v int64)                      { m.Random_id = v }
func (m *TLmessages_sendEncryptedFile) Getrandom_id() int64                       { return m.Random_id }
func (m *TLmessages_sendEncryptedFile) Setdata(v []uint8)                         { m.Data = v }
func (m *TLmessages_sendEncryptedFile) Getdata() []uint8                          { return m.Data }
func (m *TLmessages_sendEncryptedFile) Setfile(v InputEncryptedFile)              { m.File = v }
func (m *TLmessages_sendEncryptedFile) Getfile() InputEncryptedFile               { return m.File }
func (m *TLmessages_sendEncryptedService) Setpeer(v InputEncryptedChat)           { m.Peer = v }
func (m *TLmessages_sendEncryptedService) Getpeer() InputEncryptedChat            { return m.Peer }
func (m *TLmessages_sendEncryptedService) Setrandom_id(v int64)                   { m.Random_id = v }
func (m *TLmessages_sendEncryptedService) Getrandom_id() int64                    { return m.Random_id }
func (m *TLmessages_sendEncryptedService) Setdata(v []uint8)                      { m.Data = v }
func (m *TLmessages_sendEncryptedService) Getdata() []uint8                       { return m.Data }
func (m *TLphone_requestCall) Setvideo(v bool)                                    { m.Video = v }
func (m *TLphone_requestCall) Getvideo() bool                                     { return m.Video }
func (m *TLphone_requestCall) Setuser_id(v InputUser)                             { m.User_id = v }
func (m *TLphone_requestCall) Getuser_id() InputUser                              { return m.User_id }
func (m *TLphone_requestCall) Setrandom_id(v int32)                               { m.Random_id = v }
func (m *TLphone_requestCall) Getrandom_id() int32                                { return m.Random_id }
func (m *TLphone_requestCall) Setg_a_hash(v []uint8)                              { m.G_a_hash = v }
func (m *TLphone_requestCall) Getg_a_hash() []uint8                               { return m.G_a_hash }
func (m *TLphone_requestCall) Setprotocol(v PhoneCallProtocol)                    { m.Protocol = v }
func (m *TLphone_requestCall) Getprotocol() PhoneCallProtocol                     { return m.Protocol }
func (m *TLphone_acceptCall) Setpeer(v InputPhoneCall)                            { m.Peer = v }
func (m *TLphone_acceptCall) Getpeer() InputPhoneCall                             { return m.Peer }
func (m *TLphone_acceptCall) Setg_b(v []uint8)                                    { m.G_b = v }
func (m *TLphone_acceptCall) Getg_b() []uint8                                     { return m.G_b }
func (m *TLphone_acceptCall) Setprotocol(v PhoneCallProtocol)                     { m.Protocol = v }
func (m *TLphone_acceptCall) Getprotocol() PhoneCallProtocol                      { return m.Protocol }
func (m *TLphone_confirmCall) Setpeer(v InputPhoneCall)                           { m.Peer = v }
func (m *TLphone_confirmCall) Getpeer() InputPhoneCall                            { return m.Peer }
func (m *TLphone_confirmCall) Setg_a(v []uint8)                                   { m.G_a = v }
func (m *TLphone_confirmCall) Getg_a() []uint8                                    { return m.G_a }
func (m *TLphone_confirmCall) Setkey_fingerprint(v int64)                         { m.Key_fingerprint = v }
func (m *TLphone_confirmCall) Getkey_fingerprint() int64                          { return m.Key_fingerprint }
func (m *TLphone_confirmCall) Setprotocol(v PhoneCallProtocol)                    { m.Protocol = v }
func (m *TLphone_confirmCall) Getprotocol() PhoneCallProtocol                     { return m.Protocol }
func (m *TLpayments_sendPaymentForm) Setmsg_id(v int32)                           { m.Msg_id = v }
func (m *TLpayments_sendPaymentForm) Getmsg_id() int32                            { return m.Msg_id }
func (m *TLpayments_sendPaymentForm) Setrequested_info_id(v string)               { m.Requested_info_id = v }
func (m *TLpayments_sendPaymentForm) Getrequested_info_id() string                { return m.Requested_info_id }
func (m *TLpayments_sendPaymentForm) Setshipping_option_id(v string)              { m.Shipping_option_id = v }
func (m *TLpayments_sendPaymentForm) Getshipping_option_id() string               { return m.Shipping_option_id }
func (m *TLpayments_sendPaymentForm) Setcredentials(v InputPaymentCredentials)    { m.Credentials = v }
func (m *TLpayments_sendPaymentForm) Getcredentials() InputPaymentCredentials     { return m.Credentials }
func (m *TLmessages_uploadEncryptedFile) Setpeer(v InputEncryptedChat)            { m.Peer = v }
func (m *TLmessages_uploadEncryptedFile) Getpeer() InputEncryptedChat             { return m.Peer }
func (m *TLmessages_uploadEncryptedFile) Setfile(v InputEncryptedFile)            { m.File = v }
func (m *TLmessages_uploadEncryptedFile) Getfile() InputEncryptedFile             { return m.File }
func (m *TLmessages_getStatsURL) Setdark(v bool)                                  { m.Dark = v }
func (m *TLmessages_getStatsURL) Getdark() bool                                   { return m.Dark }
func (m *TLmessages_getStatsURL) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_getStatsURL) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_getStatsURL) Setparams(v string)                              { m.Params = v }
func (m *TLmessages_getStatsURL) Getparams() string                               { return m.Params }
func (m *TLhelp_getDeepLinkInfo) Setpath(v string)                                { m.Path = v }
func (m *TLhelp_getDeepLinkInfo) Getpath() string                                 { return m.Path }
func (m *TLauth_acceptLoginToken) Settoken(v []uint8)                             { m.Token = v }
func (m *TLauth_acceptLoginToken) Gettoken() []uint8                              { return m.Token }
func (m *TLaccount_initTakeoutSession) Setcontacts(v bool)                        { m.Contacts = v }
func (m *TLaccount_initTakeoutSession) Getcontacts() bool                         { return m.Contacts }
func (m *TLaccount_initTakeoutSession) Setmessage_users(v bool)                   { m.Message_users = v }
func (m *TLaccount_initTakeoutSession) Getmessage_users() bool                    { return m.Message_users }
func (m *TLaccount_initTakeoutSession) Setmessage_chats(v bool)                   { m.Message_chats = v }
func (m *TLaccount_initTakeoutSession) Getmessage_chats() bool                    { return m.Message_chats }
func (m *TLaccount_initTakeoutSession) Setmessage_megagroups(v bool)              { m.Message_megagroups = v }
func (m *TLaccount_initTakeoutSession) Getmessage_megagroups() bool               { return m.Message_megagroups }
func (m *TLaccount_initTakeoutSession) Setmessage_channels(v bool)                { m.Message_channels = v }
func (m *TLaccount_initTakeoutSession) Getmessage_channels() bool                 { return m.Message_channels }
func (m *TLaccount_initTakeoutSession) Setfiles(v bool)                           { m.Files = v }
func (m *TLaccount_initTakeoutSession) Getfiles() bool                            { return m.Files }
func (m *TLaccount_initTakeoutSession) Setfile_max_size(v int32)                  { m.File_max_size = v }
func (m *TLaccount_initTakeoutSession) Getfile_max_size() int32                   { return m.File_max_size }
func (m *TLchannels_getParticipants) Setchannel(v InputChannel)                   { m.Channel = v }
func (m *TLchannels_getParticipants) Getchannel() InputChannel                    { return m.Channel }
func (m *TLchannels_getParticipants) Setfilter(v ChannelParticipantsFilter)       { m.Filter = v }
func (m *TLchannels_getParticipants) Getfilter() ChannelParticipantsFilter        { return m.Filter }
func (m *TLchannels_getParticipants) Setoffset(v int32)                           { m.Offset = v }
func (m *TLchannels_getParticipants) Getoffset() int32                            { return m.Offset }
func (m *TLchannels_getParticipants) Setlimit(v int32)                            { m.Limit = v }
func (m *TLchannels_getParticipants) Getlimit() int32                             { return m.Limit }
func (m *TLchannels_getParticipants) Sethash(v int32)                             { m.Hash = v }
func (m *TLchannels_getParticipants) Gethash() int32                              { return m.Hash }
func (m *TLmessages_readHistory) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_readHistory) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_readHistory) Setmax_id(v int32)                               { m.Max_id = v }
func (m *TLmessages_readHistory) Getmax_id() int32                                { return m.Max_id }
func (m *TLmessages_deleteMessages) Setrevoke(v bool)                             { m.Revoke = v }
func (m *TLmessages_deleteMessages) Getrevoke() bool                              { return m.Revoke }
func (m *TLmessages_deleteMessages) Setid(v []int32)                              { m.Id = v }
func (m *TLmessages_deleteMessages) Getid() []int32                               { return m.Id }
func (m *TLmessages_readMessageContents) Setid(v []int32)                         { m.Id = v }
func (m *TLmessages_readMessageContents) Getid() []int32                          { return m.Id }
func (m *TLchannels_deleteMessages) Setchannel(v InputChannel)                    { m.Channel = v }
func (m *TLchannels_deleteMessages) Getchannel() InputChannel                     { return m.Channel }
func (m *TLchannels_deleteMessages) Setid(v []int32)                              { m.Id = v }
func (m *TLchannels_deleteMessages) Getid() []int32                               { return m.Id }
func (m *TLstats_getBroadcastStats) Setdark(v bool)                               { m.Dark = v }
func (m *TLstats_getBroadcastStats) Getdark() bool                                { return m.Dark }
func (m *TLstats_getBroadcastStats) Setchannel(v InputChannel)                    { m.Channel = v }
func (m *TLstats_getBroadcastStats) Getchannel() InputChannel                     { return m.Channel }
func (m *TLaccount_getWallPapers) Sethash(v int32)                                { m.Hash = v }
func (m *TLaccount_getWallPapers) Gethash() int32                                 { return m.Hash }
func (m *TLmessages_getInlineBotResults) Setbot(v InputUser)                      { m.Bot = v }
func (m *TLmessages_getInlineBotResults) Getbot() InputUser                       { return m.Bot }
func (m *TLmessages_getInlineBotResults) Setpeer(v InputPeer)                     { m.Peer = v }
func (m *TLmessages_getInlineBotResults) Getpeer() InputPeer                      { return m.Peer }
func (m *TLmessages_getInlineBotResults) Setgeo_point(v InputGeoPoint)            { m.Geo_point = v }
func (m *TLmessages_getInlineBotResults) Getgeo_point() InputGeoPoint             { return m.Geo_point }
func (m *TLmessages_getInlineBotResults) Setquery(v string)                       { m.Query = v }
func (m *TLmessages_getInlineBotResults) Getquery() string                        { return m.Query }
func (m *TLmessages_getInlineBotResults) Setoffset(v string)                      { m.Offset = v }
func (m *TLmessages_getInlineBotResults) Getoffset() string                       { return m.Offset }
func (m *TLmessages_getPollVotes) Setpeer(v InputPeer)                            { m.Peer = v }
func (m *TLmessages_getPollVotes) Getpeer() InputPeer                             { return m.Peer }
func (m *TLmessages_getPollVotes) Setid(v int32)                                  { m.Id = v }
func (m *TLmessages_getPollVotes) Getid() int32                                   { return m.Id }
func (m *TLmessages_getPollVotes) Setoption(v []uint8)                            { m.Option = v }
func (m *TLmessages_getPollVotes) Getoption() []uint8                             { return m.Option }
func (m *TLmessages_getPollVotes) Setoffset(v string)                             { m.Offset = v }
func (m *TLmessages_getPollVotes) Getoffset() string                              { return m.Offset }
func (m *TLmessages_getPollVotes) Setlimit(v int32)                               { m.Limit = v }
func (m *TLmessages_getPollVotes) Getlimit() int32                                { return m.Limit }
func (m *TLpayments_getBankCardData) Setnumber(v string)                          { m.Number = v }
func (m *TLpayments_getBankCardData) Getnumber() string                           { return m.Number }
func (m *TLlangpack_getLangPack) Setlang_pack(v string)                           { m.Lang_pack = v }
func (m *TLlangpack_getLangPack) Getlang_pack() string                            { return m.Lang_pack }
func (m *TLlangpack_getLangPack) Setlang_code(v string)                           { m.Lang_code = v }
func (m *TLlangpack_getLangPack) Getlang_code() string                            { return m.Lang_code }
func (m *TLlangpack_getDifference) Setlang_pack(v string)                         { m.Lang_pack = v }
func (m *TLlangpack_getDifference) Getlang_pack() string                          { return m.Lang_pack }
func (m *TLlangpack_getDifference) Setlang_code(v string)                         { m.Lang_code = v }
func (m *TLlangpack_getDifference) Getlang_code() string                          { return m.Lang_code }
func (m *TLlangpack_getDifference) Setfrom_version(v int32)                       { m.From_version = v }
func (m *TLlangpack_getDifference) Getfrom_version() int32                        { return m.From_version }
func (m *TLmessages_getDhConfig) Setversion(v int32)                              { m.Version = v }
func (m *TLmessages_getDhConfig) Getversion() int32                               { return m.Version }
func (m *TLmessages_getDhConfig) Setrandom_length(v int32)                        { m.Random_length = v }
func (m *TLmessages_getDhConfig) Getrandom_length() int32                         { return m.Random_length }
func (m *TLaccount_updateProfile) Setfirst_name(v string)                         { m.First_name = v }
func (m *TLaccount_updateProfile) Getfirst_name() string                          { return m.First_name }
func (m *TLaccount_updateProfile) Setlast_name(v string)                          { m.Last_name = v }
func (m *TLaccount_updateProfile) Getlast_name() string                           { return m.Last_name }
func (m *TLaccount_updateProfile) Setabout(v string)                              { m.About = v }
func (m *TLaccount_updateProfile) Getabout() string                               { return m.About }
func (m *TLaccount_updateUsername) Setusername(v string)                          { m.Username = v }
func (m *TLaccount_updateUsername) Getusername() string                           { return m.Username }
func (m *TLaccount_changePhone) Setphone_number(v string)                         { m.Phone_number = v }
func (m *TLaccount_changePhone) Getphone_number() string                          { return m.Phone_number }
func (m *TLaccount_changePhone) Setphone_code_hash(v string)                      { m.Phone_code_hash = v }
func (m *TLaccount_changePhone) Getphone_code_hash() string                       { return m.Phone_code_hash }
func (m *TLaccount_changePhone) Setphone_code(v string)                           { m.Phone_code = v }
func (m *TLaccount_changePhone) Getphone_code() string                            { return m.Phone_code }
func (m *TLlangpack_getLanguages) Setlang_pack(v string)                          { m.Lang_pack = v }
func (m *TLlangpack_getLanguages) Getlang_pack() string                           { return m.Lang_pack }
func (m *TLhelp_getAppUpdate) Setsource(v string)                                 { m.Source = v }
func (m *TLhelp_getAppUpdate) Getsource() string                                  { return m.Source }
func (m *TLmessages_requestUrlAuth) Setpeer(v InputPeer)                          { m.Peer = v }
func (m *TLmessages_requestUrlAuth) Getpeer() InputPeer                           { return m.Peer }
func (m *TLmessages_requestUrlAuth) Setmsg_id(v int32)                            { m.Msg_id = v }
func (m *TLmessages_requestUrlAuth) Getmsg_id() int32                             { return m.Msg_id }
func (m *TLmessages_requestUrlAuth) Setbutton_id(v int32)                         { m.Button_id = v }
func (m *TLmessages_requestUrlAuth) Getbutton_id() int32                          { return m.Button_id }
func (m *TLmessages_acceptUrlAuth) Setwrite_allowed(v bool)                       { m.Write_allowed = v }
func (m *TLmessages_acceptUrlAuth) Getwrite_allowed() bool                        { return m.Write_allowed }
func (m *TLmessages_acceptUrlAuth) Setpeer(v InputPeer)                           { m.Peer = v }
func (m *TLmessages_acceptUrlAuth) Getpeer() InputPeer                            { return m.Peer }
func (m *TLmessages_acceptUrlAuth) Setmsg_id(v int32)                             { m.Msg_id = v }
func (m *TLmessages_acceptUrlAuth) Getmsg_id() int32                              { return m.Msg_id }
func (m *TLmessages_acceptUrlAuth) Setbutton_id(v int32)                          { m.Button_id = v }
func (m *TLmessages_acceptUrlAuth) Getbutton_id() int32                           { return m.Button_id }
func (m *TLmessages_getPeerDialogs) Setpeers(v []InputDialogPeer)                 { m.Peers = v }
func (m *TLmessages_getPeerDialogs) Getpeers() []InputDialogPeer                  { return m.Peers }
func (m *TLmessages_getPinnedDialogs) Setfolder_id(v int32)                       { m.Folder_id = v }
func (m *TLmessages_getPinnedDialogs) Getfolder_id() int32                        { return m.Folder_id }
func (m *TLupload_getFile) Setprecise(v bool)                                     { m.Precise = v }
func (m *TLupload_getFile) Getprecise() bool                                      { return m.Precise }
func (m *TLupload_getFile) Setcdn_supported(v bool)                               { m.Cdn_supported = v }
func (m *TLupload_getFile) Getcdn_supported() bool                                { return m.Cdn_supported }
func (m *TLupload_getFile) Setlocation(v InputFileLocation)                       { m.Location = v }
func (m *TLupload_getFile) Getlocation() InputFileLocation                        { return m.Location }
func (m *TLupload_getFile) Setoffset(v int32)                                     { m.Offset = v }
func (m *TLupload_getFile) Getoffset() int32                                      { return m.Offset }
func (m *TLupload_getFile) Setlimit(v int32)                                      { m.Limit = v }
func (m *TLupload_getFile) Getlimit() int32                                       { return m.Limit }
func (m *TLstats_loadAsyncGraph) Settoken(v string)                               { m.Token = v }
func (m *TLstats_loadAsyncGraph) Gettoken() string                                { return m.Token }
func (m *TLstats_loadAsyncGraph) Setx(v int64)                                    { m.X = v }
func (m *TLstats_loadAsyncGraph) Getx() int64                                     { return m.X }
func (m *TLauth_sendCode) Setphone_number(v string)                               { m.Phone_number = v }
func (m *TLauth_sendCode) Getphone_number() string                                { return m.Phone_number }
func (m *TLauth_sendCode) Setapi_id(v int32)                                      { m.Api_id = v }
func (m *TLauth_sendCode) Getapi_id() int32                                       { return m.Api_id }
func (m *TLauth_sendCode) Setapi_hash(v string)                                   { m.Api_hash = v }
func (m *TLauth_sendCode) Getapi_hash() string                                    { return m.Api_hash }
func (m *TLauth_sendCode) Setsettings(v CodeSettings)                             { m.Settings = v }
func (m *TLauth_sendCode) Getsettings() CodeSettings                              { return m.Settings }
func (m *TLaccount_sendChangePhoneCode) Setphone_number(v string)                 { m.Phone_number = v }
func (m *TLaccount_sendChangePhoneCode) Getphone_number() string                  { return m.Phone_number }
func (m *TLaccount_sendChangePhoneCode) Setsettings(v CodeSettings)               { m.Settings = v }
func (m *TLaccount_sendChangePhoneCode) Getsettings() CodeSettings                { return m.Settings }
func (m *TLauth_resendCode) Setphone_number(v string)                             { m.Phone_number = v }
func (m *TLauth_resendCode) Getphone_number() string                              { return m.Phone_number }
func (m *TLauth_resendCode) Setphone_code_hash(v string)                          { m.Phone_code_hash = v }
func (m *TLauth_resendCode) Getphone_code_hash() string                           { return m.Phone_code_hash }
func (m *TLaccount_sendConfirmPhoneCode) Sethash(v string)                        { m.Hash = v }
func (m *TLaccount_sendConfirmPhoneCode) Gethash() string                         { return m.Hash }
func (m *TLaccount_sendConfirmPhoneCode) Setsettings(v CodeSettings)              { m.Settings = v }
func (m *TLaccount_sendConfirmPhoneCode) Getsettings() CodeSettings               { return m.Settings }
func (m *TLaccount_sendVerifyPhoneCode) Setphone_number(v string)                 { m.Phone_number = v }
func (m *TLaccount_sendVerifyPhoneCode) Getphone_number() string                  { return m.Phone_number }
func (m *TLaccount_sendVerifyPhoneCode) Setsettings(v CodeSettings)               { m.Settings = v }
func (m *TLaccount_sendVerifyPhoneCode) Getsettings() CodeSettings                { return m.Settings }
func (m *TLauth_exportAuthorization) Setdc_id(v int32)                            { m.Dc_id = v }
func (m *TLauth_exportAuthorization) Getdc_id() int32                             { return m.Dc_id }
func (m *TLmessages_getWebPage) Seturl(v string)                                  { m.Url = v }
func (m *TLmessages_getWebPage) Geturl() string                                   { return m.Url }
func (m *TLmessages_getWebPage) Sethash(v int32)                                  { m.Hash = v }
func (m *TLmessages_getWebPage) Gethash() int32                                   { return m.Hash }
func (m *TLchannels_getParticipant) Setchannel(v InputChannel)                    { m.Channel = v }
func (m *TLchannels_getParticipant) Getchannel() InputChannel                     { return m.Channel }
func (m *TLchannels_getParticipant) Setuser_id(v InputUser)                       { m.User_id = v }
func (m *TLchannels_getParticipant) Getuser_id() InputUser                        { return m.User_id }
func (m *TLupdates_getDifference) Setpts(v int32)                                 { m.Pts = v }
func (m *TLupdates_getDifference) Getpts() int32                                  { return m.Pts }
func (m *TLupdates_getDifference) Setpts_total_limit(v int32)                     { m.Pts_total_limit = v }
func (m *TLupdates_getDifference) Getpts_total_limit() int32                      { return m.Pts_total_limit }
func (m *TLupdates_getDifference) Setdate(v int32)                                { m.Date = v }
func (m *TLupdates_getDifference) Getdate() int32                                 { return m.Date }
func (m *TLupdates_getDifference) Setqts(v int32)                                 { m.Qts = v }
func (m *TLupdates_getDifference) Getqts() int32                                  { return m.Qts }
func (m *TLcontacts_importContacts) Setcontacts(v []InputContact)                 { m.Contacts = v }
func (m *TLcontacts_importContacts) Getcontacts() []InputContact                  { return m.Contacts }
func (m *TLmessages_getDiscussionMessage) Setpeer(v InputPeer)                    { m.Peer = v }
func (m *TLmessages_getDiscussionMessage) Getpeer() InputPeer                     { return m.Peer }
func (m *TLmessages_getDiscussionMessage) Setmsg_id(v int32)                      { m.Msg_id = v }
func (m *TLmessages_getDiscussionMessage) Getmsg_id() int32                       { return m.Msg_id }
func (m *TLmessages_getBotCallbackAnswer) Setgame(v bool)                         { m.Game = v }
func (m *TLmessages_getBotCallbackAnswer) Getgame() bool                          { return m.Game }
func (m *TLmessages_getBotCallbackAnswer) Setpeer(v InputPeer)                    { m.Peer = v }
func (m *TLmessages_getBotCallbackAnswer) Getpeer() InputPeer                     { return m.Peer }
func (m *TLmessages_getBotCallbackAnswer) Setmsg_id(v int32)                      { m.Msg_id = v }
func (m *TLmessages_getBotCallbackAnswer) Getmsg_id() int32                       { return m.Msg_id }
func (m *TLmessages_getBotCallbackAnswer) Setdata(v []uint8)                      { m.Data = v }
func (m *TLmessages_getBotCallbackAnswer) Getdata() []uint8                       { return m.Data }
func (m *TLmessages_getBotCallbackAnswer) Setpassword(v InputCheckPasswordSRP)    { m.Password = v }
func (m *TLmessages_getBotCallbackAnswer) Getpassword() InputCheckPasswordSRP     { return m.Password }
func (m *TLmessages_getArchivedStickers) Setmasks(v bool)                         { m.Masks = v }
func (m *TLmessages_getArchivedStickers) Getmasks() bool                          { return m.Masks }
func (m *TLmessages_getArchivedStickers) Setoffset_id(v int64)                    { m.Offset_id = v }
func (m *TLmessages_getArchivedStickers) Getoffset_id() int64                     { return m.Offset_id }
func (m *TLmessages_getArchivedStickers) Setlimit(v int32)                        { m.Limit = v }
func (m *TLmessages_getArchivedStickers) Getlimit() int32                         { return m.Limit }
func (m *TLmessages_searchStickerSets) Setexclude_featured(v bool)                { m.Exclude_featured = v }
func (m *TLmessages_searchStickerSets) Getexclude_featured() bool                 { return m.Exclude_featured }
func (m *TLmessages_searchStickerSets) Setq(v string)                             { m.Q = v }
func (m *TLmessages_searchStickerSets) Getq() string                              { return m.Q }
func (m *TLmessages_searchStickerSets) Sethash(v int32)                           { m.Hash = v }
func (m *TLmessages_searchStickerSets) Gethash() int32                            { return m.Hash }
func (m *TLstats_getMessageStats) Setdark(v bool)                                 { m.Dark = v }
func (m *TLstats_getMessageStats) Getdark() bool                                  { return m.Dark }
func (m *TLstats_getMessageStats) Setchannel(v InputChannel)                      { m.Channel = v }
func (m *TLstats_getMessageStats) Getchannel() InputChannel                       { return m.Channel }
func (m *TLstats_getMessageStats) Setmsg_id(v int32)                              { m.Msg_id = v }
func (m *TLstats_getMessageStats) Getmsg_id() int32                               { return m.Msg_id }
func (m *TLmessages_getEmojiKeywordsLanguages) Setlang_codes(v []String)          { m.Lang_codes = v }
func (m *TLmessages_getEmojiKeywordsLanguages) Getlang_codes() []String           { return m.Lang_codes }
func (m *TLaccount_getWallPaper) Setwallpaper(v InputWallPaper)                   { m.Wallpaper = v }
func (m *TLaccount_getWallPaper) Getwallpaper() InputWallPaper                    { return m.Wallpaper }
func (m *TLaccount_uploadWallPaper) Setfile(v InputFile)                          { m.File = v }
func (m *TLaccount_uploadWallPaper) Getfile() InputFile                           { return m.File }
func (m *TLaccount_uploadWallPaper) Setmime_type(v string)                        { m.Mime_type = v }
func (m *TLaccount_uploadWallPaper) Getmime_type() string                         { return m.Mime_type }
func (m *TLaccount_uploadWallPaper) Setsettings(v WallPaperSettings)              { m.Settings = v }
func (m *TLaccount_uploadWallPaper) Getsettings() WallPaperSettings               { return m.Settings }
func (m *TLmessages_getSavedGifs) Sethash(v int32)                                { m.Hash = v }
func (m *TLmessages_getSavedGifs) Gethash() int32                                 { return m.Hash }
func (m *TLaccount_getTmpPassword) Setpassword(v InputCheckPasswordSRP)           { m.Password = v }
func (m *TLaccount_getTmpPassword) Getpassword() InputCheckPasswordSRP            { return m.Password }
func (m *TLaccount_getTmpPassword) Setperiod(v int32)                             { m.Period = v }
func (m *TLaccount_getTmpPassword) Getperiod() int32                              { return m.Period }
func (m *TLmessages_getGameHighScores) Setpeer(v InputPeer)                       { m.Peer = v }
func (m *TLmessages_getGameHighScores) Getpeer() InputPeer                        { return m.Peer }
func (m *TLmessages_getGameHighScores) Setid(v int32)                             { m.Id = v }
func (m *TLmessages_getGameHighScores) Getid() int32                              { return m.Id }
func (m *TLmessages_getGameHighScores) Setuser_id(v InputUser)                    { m.User_id = v }
func (m *TLmessages_getGameHighScores) Getuser_id() InputUser                     { return m.User_id }
func (m *TLmessages_getInlineGameHighScores) Setid(v InputBotInlineMessageID)     { m.Id = v }
func (m *TLmessages_getInlineGameHighScores) Getid() InputBotInlineMessageID      { return m.Id }
func (m *TLmessages_getInlineGameHighScores) Setuser_id(v InputUser)              { m.User_id = v }
func (m *TLmessages_getInlineGameHighScores) Getuser_id() InputUser               { return m.User_id }
func (m *TLcontacts_resolveUsername) Setusername(v string)                        { m.Username = v }
func (m *TLcontacts_resolveUsername) Getusername() string                         { return m.Username }
func (m *TLaccount_getNotifySettings) Setpeer(v InputNotifyPeer)                  { m.Peer = v }
func (m *TLaccount_getNotifySettings) Getpeer() InputNotifyPeer                   { return m.Peer }
func (m *TLmessages_getMessages) Setid(v []InputMessage)                          { m.Id = v }
func (m *TLmessages_getMessages) Getid() []InputMessage                           { return m.Id }
func (m *TLmessages_getHistory) Setpeer(v InputPeer)                              { m.Peer = v }
func (m *TLmessages_getHistory) Getpeer() InputPeer                               { return m.Peer }
func (m *TLmessages_getHistory) Setoffset_id(v int32)                             { m.Offset_id = v }
func (m *TLmessages_getHistory) Getoffset_id() int32                              { return m.Offset_id }
func (m *TLmessages_getHistory) Setoffset_date(v int32)                           { m.Offset_date = v }
func (m *TLmessages_getHistory) Getoffset_date() int32                            { return m.Offset_date }
func (m *TLmessages_getHistory) Setadd_offset(v int32)                            { m.Add_offset = v }
func (m *TLmessages_getHistory) Getadd_offset() int32                             { return m.Add_offset }
func (m *TLmessages_getHistory) Setlimit(v int32)                                 { m.Limit = v }
func (m *TLmessages_getHistory) Getlimit() int32                                  { return m.Limit }
func (m *TLmessages_getHistory) Setmax_id(v int32)                                { m.Max_id = v }
func (m *TLmessages_getHistory) Getmax_id() int32                                 { return m.Max_id }
func (m *TLmessages_getHistory) Setmin_id(v int32)                                { m.Min_id = v }
func (m *TLmessages_getHistory) Getmin_id() int32                                 { return m.Min_id }
func (m *TLmessages_getHistory) Sethash(v int32)                                  { m.Hash = v }
func (m *TLmessages_getHistory) Gethash() int32                                   { return m.Hash }
func (m *TLmessages_search) Setpeer(v InputPeer)                                  { m.Peer = v }
func (m *TLmessages_search) Getpeer() InputPeer                                   { return m.Peer }
func (m *TLmessages_search) Setq(v string)                                        { m.Q = v }
func (m *TLmessages_search) Getq() string                                         { return m.Q }
func (m *TLmessages_search) Setfrom_id(v InputPeer)                               { m.From_id = v }
func (m *TLmessages_search) Getfrom_id() InputPeer                                { return m.From_id }
func (m *TLmessages_search) Settop_msg_id(v int32)                                { m.Top_msg_id = v }
func (m *TLmessages_search) Gettop_msg_id() int32                                 { return m.Top_msg_id }
func (m *TLmessages_search) Setfilter(v MessagesFilter)                           { m.Filter = v }
func (m *TLmessages_search) Getfilter() MessagesFilter                            { return m.Filter }
func (m *TLmessages_search) Setmin_date(v int32)                                  { m.Min_date = v }
func (m *TLmessages_search) Getmin_date() int32                                   { return m.Min_date }
func (m *TLmessages_search) Setmax_date(v int32)                                  { m.Max_date = v }
func (m *TLmessages_search) Getmax_date() int32                                   { return m.Max_date }
func (m *TLmessages_search) Setoffset_id(v int32)                                 { m.Offset_id = v }
func (m *TLmessages_search) Getoffset_id() int32                                  { return m.Offset_id }
func (m *TLmessages_search) Setadd_offset(v int32)                                { m.Add_offset = v }
func (m *TLmessages_search) Getadd_offset() int32                                 { return m.Add_offset }
func (m *TLmessages_search) Setlimit(v int32)                                     { m.Limit = v }
func (m *TLmessages_search) Getlimit() int32                                      { return m.Limit }
func (m *TLmessages_search) Setmax_id(v int32)                                    { m.Max_id = v }
func (m *TLmessages_search) Getmax_id() int32                                     { return m.Max_id }
func (m *TLmessages_search) Setmin_id(v int32)                                    { m.Min_id = v }
func (m *TLmessages_search) Getmin_id() int32                                     { return m.Min_id }
func (m *TLmessages_search) Sethash(v int32)                                      { m.Hash = v }
func (m *TLmessages_search) Gethash() int32                                       { return m.Hash }
func (m *TLchannels_getMessages) Setchannel(v InputChannel)                       { m.Channel = v }
func (m *TLchannels_getMessages) Getchannel() InputChannel                        { return m.Channel }
func (m *TLchannels_getMessages) Setid(v []InputMessage)                          { m.Id = v }
func (m *TLchannels_getMessages) Getid() []InputMessage                           { return m.Id }
func (m *TLmessages_searchGlobal) Setfolder_id(v int32)                           { m.Folder_id = v }
func (m *TLmessages_searchGlobal) Getfolder_id() int32                            { return m.Folder_id }
func (m *TLmessages_searchGlobal) Setq(v string)                                  { m.Q = v }
func (m *TLmessages_searchGlobal) Getq() string                                   { return m.Q }
func (m *TLmessages_searchGlobal) Setfilter(v MessagesFilter)                     { m.Filter = v }
func (m *TLmessages_searchGlobal) Getfilter() MessagesFilter                      { return m.Filter }
func (m *TLmessages_searchGlobal) Setmin_date(v int32)                            { m.Min_date = v }
func (m *TLmessages_searchGlobal) Getmin_date() int32                             { return m.Min_date }
func (m *TLmessages_searchGlobal) Setmax_date(v int32)                            { m.Max_date = v }
func (m *TLmessages_searchGlobal) Getmax_date() int32                             { return m.Max_date }
func (m *TLmessages_searchGlobal) Setoffset_rate(v int32)                         { m.Offset_rate = v }
func (m *TLmessages_searchGlobal) Getoffset_rate() int32                          { return m.Offset_rate }
func (m *TLmessages_searchGlobal) Setoffset_peer(v InputPeer)                     { m.Offset_peer = v }
func (m *TLmessages_searchGlobal) Getoffset_peer() InputPeer                      { return m.Offset_peer }
func (m *TLmessages_searchGlobal) Setoffset_id(v int32)                           { m.Offset_id = v }
func (m *TLmessages_searchGlobal) Getoffset_id() int32                            { return m.Offset_id }
func (m *TLmessages_searchGlobal) Setlimit(v int32)                               { m.Limit = v }
func (m *TLmessages_searchGlobal) Getlimit() int32                                { return m.Limit }
func (m *TLmessages_getUnreadMentions) Setpeer(v InputPeer)                       { m.Peer = v }
func (m *TLmessages_getUnreadMentions) Getpeer() InputPeer                        { return m.Peer }
func (m *TLmessages_getUnreadMentions) Setoffset_id(v int32)                      { m.Offset_id = v }
func (m *TLmessages_getUnreadMentions) Getoffset_id() int32                       { return m.Offset_id }
func (m *TLmessages_getUnreadMentions) Setadd_offset(v int32)                     { m.Add_offset = v }
func (m *TLmessages_getUnreadMentions) Getadd_offset() int32                      { return m.Add_offset }
func (m *TLmessages_getUnreadMentions) Setlimit(v int32)                          { m.Limit = v }
func (m *TLmessages_getUnreadMentions) Getlimit() int32                           { return m.Limit }
func (m *TLmessages_getUnreadMentions) Setmax_id(v int32)                         { m.Max_id = v }
func (m *TLmessages_getUnreadMentions) Getmax_id() int32                          { return m.Max_id }
func (m *TLmessages_getUnreadMentions) Setmin_id(v int32)                         { m.Min_id = v }
func (m *TLmessages_getUnreadMentions) Getmin_id() int32                          { return m.Min_id }
func (m *TLmessages_getRecentLocations) Setpeer(v InputPeer)                      { m.Peer = v }
func (m *TLmessages_getRecentLocations) Getpeer() InputPeer                       { return m.Peer }
func (m *TLmessages_getRecentLocations) Setlimit(v int32)                         { m.Limit = v }
func (m *TLmessages_getRecentLocations) Getlimit() int32                          { return m.Limit }
func (m *TLmessages_getRecentLocations) Sethash(v int32)                          { m.Hash = v }
func (m *TLmessages_getRecentLocations) Gethash() int32                           { return m.Hash }
func (m *TLmessages_getScheduledHistory) Setpeer(v InputPeer)                     { m.Peer = v }
func (m *TLmessages_getScheduledHistory) Getpeer() InputPeer                      { return m.Peer }
func (m *TLmessages_getScheduledHistory) Sethash(v int32)                         { m.Hash = v }
func (m *TLmessages_getScheduledHistory) Gethash() int32                          { return m.Hash }
func (m *TLmessages_getScheduledMessages) Setpeer(v InputPeer)                    { m.Peer = v }
func (m *TLmessages_getScheduledMessages) Getpeer() InputPeer                     { return m.Peer }
func (m *TLmessages_getScheduledMessages) Setid(v []int32)                        { m.Id = v }
func (m *TLmessages_getScheduledMessages) Getid() []int32                         { return m.Id }
func (m *TLmessages_getReplies) Setpeer(v InputPeer)                              { m.Peer = v }
func (m *TLmessages_getReplies) Getpeer() InputPeer                               { return m.Peer }
func (m *TLmessages_getReplies) Setmsg_id(v int32)                                { m.Msg_id = v }
func (m *TLmessages_getReplies) Getmsg_id() int32                                 { return m.Msg_id }
func (m *TLmessages_getReplies) Setoffset_id(v int32)                             { m.Offset_id = v }
func (m *TLmessages_getReplies) Getoffset_id() int32                              { return m.Offset_id }
func (m *TLmessages_getReplies) Setoffset_date(v int32)                           { m.Offset_date = v }
func (m *TLmessages_getReplies) Getoffset_date() int32                            { return m.Offset_date }
func (m *TLmessages_getReplies) Setadd_offset(v int32)                            { m.Add_offset = v }
func (m *TLmessages_getReplies) Getadd_offset() int32                             { return m.Add_offset }
func (m *TLmessages_getReplies) Setlimit(v int32)                                 { m.Limit = v }
func (m *TLmessages_getReplies) Getlimit() int32                                  { return m.Limit }
func (m *TLmessages_getReplies) Setmax_id(v int32)                                { m.Max_id = v }
func (m *TLmessages_getReplies) Getmax_id() int32                                 { return m.Max_id }
func (m *TLmessages_getReplies) Setmin_id(v int32)                                { m.Min_id = v }
func (m *TLmessages_getReplies) Getmin_id() int32                                 { return m.Min_id }
func (m *TLmessages_getReplies) Sethash(v int32)                                  { m.Hash = v }
func (m *TLmessages_getReplies) Gethash() int32                                   { return m.Hash }
func (m *TLstats_getMessagePublicForwards) Setchannel(v InputChannel)             { m.Channel = v }
func (m *TLstats_getMessagePublicForwards) Getchannel() InputChannel              { return m.Channel }
func (m *TLstats_getMessagePublicForwards) Setmsg_id(v int32)                     { m.Msg_id = v }
func (m *TLstats_getMessagePublicForwards) Getmsg_id() int32                      { return m.Msg_id }
func (m *TLstats_getMessagePublicForwards) Setoffset_rate(v int32)                { m.Offset_rate = v }
func (m *TLstats_getMessagePublicForwards) Getoffset_rate() int32                 { return m.Offset_rate }
func (m *TLstats_getMessagePublicForwards) Setoffset_peer(v InputPeer)            { m.Offset_peer = v }
func (m *TLstats_getMessagePublicForwards) Getoffset_peer() InputPeer             { return m.Offset_peer }
func (m *TLstats_getMessagePublicForwards) Setoffset_id(v int32)                  { m.Offset_id = v }
func (m *TLstats_getMessagePublicForwards) Getoffset_id() int32                   { return m.Offset_id }
func (m *TLstats_getMessagePublicForwards) Setlimit(v int32)                      { m.Limit = v }
func (m *TLstats_getMessagePublicForwards) Getlimit() int32                       { return m.Limit }
func (m *TLupload_reuploadCdnFile) Setfile_token(v []uint8)                       { m.File_token = v }
func (m *TLupload_reuploadCdnFile) Getfile_token() []uint8                        { return m.File_token }
func (m *TLupload_reuploadCdnFile) Setrequest_token(v []uint8)                    { m.Request_token = v }
func (m *TLupload_reuploadCdnFile) Getrequest_token() []uint8                     { return m.Request_token }
func (m *TLupload_getCdnFileHashes) Setfile_token(v []uint8)                      { m.File_token = v }
func (m *TLupload_getCdnFileHashes) Getfile_token() []uint8                       { return m.File_token }
func (m *TLupload_getCdnFileHashes) Setoffset(v int32)                            { m.Offset = v }
func (m *TLupload_getCdnFileHashes) Getoffset() int32                             { return m.Offset }
func (m *TLupload_getFileHashes) Setlocation(v InputFileLocation)                 { m.Location = v }
func (m *TLupload_getFileHashes) Getlocation() InputFileLocation                  { return m.Location }
func (m *TLupload_getFileHashes) Setoffset(v int32)                               { m.Offset = v }
func (m *TLupload_getFileHashes) Getoffset() int32                                { return m.Offset }
func (m *TLmessages_getDialogs) Setexclude_pinned(v bool)                         { m.Exclude_pinned = v }
func (m *TLmessages_getDialogs) Getexclude_pinned() bool                          { return m.Exclude_pinned }
func (m *TLmessages_getDialogs) Setfolder_id(v int32)                             { m.Folder_id = v }
func (m *TLmessages_getDialogs) Getfolder_id() int32                              { return m.Folder_id }
func (m *TLmessages_getDialogs) Setoffset_date(v int32)                           { m.Offset_date = v }
func (m *TLmessages_getDialogs) Getoffset_date() int32                            { return m.Offset_date }
func (m *TLmessages_getDialogs) Setoffset_id(v int32)                             { m.Offset_id = v }
func (m *TLmessages_getDialogs) Getoffset_id() int32                              { return m.Offset_id }
func (m *TLmessages_getDialogs) Setoffset_peer(v InputPeer)                       { m.Offset_peer = v }
func (m *TLmessages_getDialogs) Getoffset_peer() InputPeer                        { return m.Offset_peer }
func (m *TLmessages_getDialogs) Setlimit(v int32)                                 { m.Limit = v }
func (m *TLmessages_getDialogs) Getlimit() int32                                  { return m.Limit }
func (m *TLmessages_getDialogs) Sethash(v int32)                                  { m.Hash = v }
func (m *TLmessages_getDialogs) Gethash() int32                                   { return m.Hash }
func (m *TLlangpack_getLanguage) Setlang_pack(v string)                           { m.Lang_pack = v }
func (m *TLlangpack_getLanguage) Getlang_pack() string                            { return m.Lang_pack }
func (m *TLlangpack_getLanguage) Setlang_code(v string)                           { m.Lang_code = v }
func (m *TLlangpack_getLanguage) Getlang_code() string                            { return m.Lang_code }
func (m *TLupdates_getChannelDifference) Setforce(v bool)                         { m.Force = v }
func (m *TLupdates_getChannelDifference) Getforce() bool                          { return m.Force }
func (m *TLupdates_getChannelDifference) Setchannel(v InputChannel)               { m.Channel = v }
func (m *TLupdates_getChannelDifference) Getchannel() InputChannel                { return m.Channel }
func (m *TLupdates_getChannelDifference) Setfilter(v ChannelMessagesFilter)       { m.Filter = v }
func (m *TLupdates_getChannelDifference) Getfilter() ChannelMessagesFilter        { return m.Filter }
func (m *TLupdates_getChannelDifference) Setpts(v int32)                          { m.Pts = v }
func (m *TLupdates_getChannelDifference) Getpts() int32                           { return m.Pts }
func (m *TLupdates_getChannelDifference) Setlimit(v int32)                        { m.Limit = v }
func (m *TLupdates_getChannelDifference) Getlimit() int32                         { return m.Limit }
func (m *TLauth_exportLoginToken) Setapi_id(v int32)                              { m.Api_id = v }
func (m *TLauth_exportLoginToken) Getapi_id() int32                               { return m.Api_id }
func (m *TLauth_exportLoginToken) Setapi_hash(v string)                           { m.Api_hash = v }
func (m *TLauth_exportLoginToken) Getapi_hash() string                            { return m.Api_hash }
func (m *TLauth_exportLoginToken) Setexcept_ids(v []int32)                        { m.Except_ids = v }
func (m *TLauth_exportLoginToken) Getexcept_ids() []int32                         { return m.Except_ids }
func (m *TLauth_importLoginToken) Settoken(v []uint8)                             { m.Token = v }
func (m *TLauth_importLoginToken) Gettoken() []uint8                              { return m.Token }
func (m *TLaccount_setGlobalPrivacySettings) Setsettings(v GlobalPrivacySettings) { m.Settings = v }
func (m *TLaccount_setGlobalPrivacySettings) Getsettings() GlobalPrivacySettings  { return m.Settings }
func (m *TLmessages_getWebPagePreview) Setmessage(v string)                       { m.Message = v }
func (m *TLmessages_getWebPagePreview) Getmessage() string                        { return m.Message }
func (m *TLmessages_getWebPagePreview) Setentities(v []MessageEntity)             { m.Entities = v }
func (m *TLmessages_getWebPagePreview) Getentities() []MessageEntity              { return m.Entities }
func (m *TLmessages_uploadMedia) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_uploadMedia) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_uploadMedia) Setmedia(v InputMedia)                           { m.Media = v }
func (m *TLmessages_uploadMedia) Getmedia() InputMedia                            { return m.Media }
func (m *TLmessages_deleteHistory) Setjust_clear(v bool)                          { m.Just_clear = v }
func (m *TLmessages_deleteHistory) Getjust_clear() bool                           { return m.Just_clear }
func (m *TLmessages_deleteHistory) Setrevoke(v bool)                              { m.Revoke = v }
func (m *TLmessages_deleteHistory) Getrevoke() bool                               { return m.Revoke }
func (m *TLmessages_deleteHistory) Setpeer(v InputPeer)                           { m.Peer = v }
func (m *TLmessages_deleteHistory) Getpeer() InputPeer                            { return m.Peer }
func (m *TLmessages_deleteHistory) Setmax_id(v int32)                             { m.Max_id = v }
func (m *TLmessages_deleteHistory) Getmax_id() int32                              { return m.Max_id }
func (m *TLchannels_deleteUserHistory) Setchannel(v InputChannel)                 { m.Channel = v }
func (m *TLchannels_deleteUserHistory) Getchannel() InputChannel                  { return m.Channel }
func (m *TLchannels_deleteUserHistory) Setuser_id(v InputUser)                    { m.User_id = v }
func (m *TLchannels_deleteUserHistory) Getuser_id() InputUser                     { return m.User_id }
func (m *TLmessages_readMentions) Setpeer(v InputPeer)                            { m.Peer = v }
func (m *TLmessages_readMentions) Getpeer() InputPeer                             { return m.Peer }
func (m *TLmessages_unpinAllMessages) Setpeer(v InputPeer)                        { m.Peer = v }
func (m *TLmessages_unpinAllMessages) Getpeer() InputPeer                         { return m.Peer }
func (m *TLmessages_installStickerSet) Setstickerset(v InputStickerSet)           { m.Stickerset = v }
func (m *TLmessages_installStickerSet) Getstickerset() InputStickerSet            { return m.Stickerset }
func (m *TLmessages_installStickerSet) Setarchived(v Bool)                        { m.Archived = v }
func (m *TLmessages_installStickerSet) Getarchived() Bool                         { return m.Archived }
func (m *TLcontacts_getTopPeers) Setcorrespondents(v bool)                        { m.Correspondents = v }
func (m *TLcontacts_getTopPeers) Getcorrespondents() bool                         { return m.Correspondents }
func (m *TLcontacts_getTopPeers) Setbots_pm(v bool)                               { m.Bots_pm = v }
func (m *TLcontacts_getTopPeers) Getbots_pm() bool                                { return m.Bots_pm }
func (m *TLcontacts_getTopPeers) Setbots_inline(v bool)                           { m.Bots_inline = v }
func (m *TLcontacts_getTopPeers) Getbots_inline() bool                            { return m.Bots_inline }
func (m *TLcontacts_getTopPeers) Setphone_calls(v bool)                           { m.Phone_calls = v }
func (m *TLcontacts_getTopPeers) Getphone_calls() bool                            { return m.Phone_calls }
func (m *TLcontacts_getTopPeers) Setforward_users(v bool)                         { m.Forward_users = v }
func (m *TLcontacts_getTopPeers) Getforward_users() bool                          { return m.Forward_users }
func (m *TLcontacts_getTopPeers) Setforward_chats(v bool)                         { m.Forward_chats = v }
func (m *TLcontacts_getTopPeers) Getforward_chats() bool                          { return m.Forward_chats }
func (m *TLcontacts_getTopPeers) Setgroups(v bool)                                { m.Groups = v }
func (m *TLcontacts_getTopPeers) Getgroups() bool                                 { return m.Groups }
func (m *TLcontacts_getTopPeers) Setchannels(v bool)                              { m.Channels = v }
func (m *TLcontacts_getTopPeers) Getchannels() bool                               { return m.Channels }
func (m *TLcontacts_getTopPeers) Setoffset(v int32)                               { m.Offset = v }
func (m *TLcontacts_getTopPeers) Getoffset() int32                                { return m.Offset }
func (m *TLcontacts_getTopPeers) Setlimit(v int32)                                { m.Limit = v }
func (m *TLcontacts_getTopPeers) Getlimit() int32                                 { return m.Limit }
func (m *TLcontacts_getTopPeers) Sethash(v int32)                                 { m.Hash = v }
func (m *TLcontacts_getTopPeers) Gethash() int32                                  { return m.Hash }
func (m *TLaccount_sendVerifyEmailCode) Setemail(v string)                        { m.Email = v }
func (m *TLaccount_sendVerifyEmailCode) Getemail() string                         { return m.Email }
func (m *TLmessages_getStickers) Setemoticon(v string)                            { m.Emoticon = v }
func (m *TLmessages_getStickers) Getemoticon() string                             { return m.Emoticon }
func (m *TLmessages_getStickers) Sethash(v int32)                                 { m.Hash = v }
func (m *TLmessages_getStickers) Gethash() int32                                  { return m.Hash }
func (m *TLaccount_getThemes) Setformat(v string)                                 { m.Format = v }
func (m *TLaccount_getThemes) Getformat() string                                  { return m.Format }
func (m *TLaccount_getThemes) Sethash(v int32)                                    { m.Hash = v }
func (m *TLaccount_getThemes) Gethash() int32                                     { return m.Hash }
func (m *TLmessages_getEmojiKeywords) Setlang_code(v string)                      { m.Lang_code = v }
func (m *TLmessages_getEmojiKeywords) Getlang_code() string                       { return m.Lang_code }
func (m *TLmessages_getEmojiKeywordsDifference) Setlang_code(v string)            { m.Lang_code = v }
func (m *TLmessages_getEmojiKeywordsDifference) Getlang_code() string             { return m.Lang_code }
func (m *TLmessages_getEmojiKeywordsDifference) Setfrom_version(v int32)          { m.From_version = v }
func (m *TLmessages_getEmojiKeywordsDifference) Getfrom_version() int32           { return m.From_version }
func (m *TLhelp_getCountriesList) Setlang_code(v string)                          { m.Lang_code = v }
func (m *TLhelp_getCountriesList) Getlang_code() string                           { return m.Lang_code }
func (m *TLhelp_getCountriesList) Sethash(v int32)                                { m.Hash = v }
func (m *TLhelp_getCountriesList) Gethash() int32                                 { return m.Hash }
func (m *TLhelp_getPassportConfig) Sethash(v int32)                               { m.Hash = v }
func (m *TLhelp_getPassportConfig) Gethash() int32                                { return m.Hash }
func (m *TLmessages_getChats) Setid(v []int32)                                    { m.Id = v }
func (m *TLmessages_getChats) Getid() []int32                                     { return m.Id }
func (m *TLchannels_getChannels) Setid(v []InputChannel)                          { m.Id = v }
func (m *TLchannels_getChannels) Getid() []InputChannel                           { return m.Id }
func (m *TLchannels_getAdminedPublicChannels) Setby_location(v bool)              { m.By_location = v }
func (m *TLchannels_getAdminedPublicChannels) Getby_location() bool               { return m.By_location }
func (m *TLchannels_getAdminedPublicChannels) Setcheck_limit(v bool)              { m.Check_limit = v }
func (m *TLchannels_getAdminedPublicChannels) Getcheck_limit() bool               { return m.Check_limit }
func (m *TLmessages_getCommonChats) Setuser_id(v InputUser)                       { m.User_id = v }
func (m *TLmessages_getCommonChats) Getuser_id() InputUser                        { return m.User_id }
func (m *TLmessages_getCommonChats) Setmax_id(v int32)                            { m.Max_id = v }
func (m *TLmessages_getCommonChats) Getmax_id() int32                             { return m.Max_id }
func (m *TLmessages_getCommonChats) Setlimit(v int32)                             { m.Limit = v }
func (m *TLmessages_getCommonChats) Getlimit() int32                              { return m.Limit }
func (m *TLmessages_getAllChats) Setexcept_ids(v []int32)                         { m.Except_ids = v }
func (m *TLmessages_getAllChats) Getexcept_ids() []int32                          { return m.Except_ids }
func (m *TLchannels_getLeftChannels) Setoffset(v int32)                           { m.Offset = v }
func (m *TLchannels_getLeftChannels) Getoffset() int32                            { return m.Offset }
func (m *TLcontacts_getContactIDs) Sethash(v int32)                               { m.Hash = v }
func (m *TLcontacts_getContactIDs) Gethash() int32                                { return m.Hash }
func (m *TLcontacts_getBlocked) Setoffset(v int32)                                { m.Offset = v }
func (m *TLcontacts_getBlocked) Getoffset() int32                                 { return m.Offset }
func (m *TLcontacts_getBlocked) Setlimit(v int32)                                 { m.Limit = v }
func (m *TLcontacts_getBlocked) Getlimit() int32                                  { return m.Limit }
func (m *TLupload_getCdnFile) Setfile_token(v []uint8)                            { m.File_token = v }
func (m *TLupload_getCdnFile) Getfile_token() []uint8                             { return m.File_token }
func (m *TLupload_getCdnFile) Setoffset(v int32)                                  { m.Offset = v }
func (m *TLupload_getCdnFile) Getoffset() int32                                   { return m.Offset }
func (m *TLupload_getCdnFile) Setlimit(v int32)                                   { m.Limit = v }
func (m *TLupload_getCdnFile) Getlimit() int32                                    { return m.Limit }
func (m *TLaccount_createTheme) Setslug(v string)                                 { m.Slug = v }
func (m *TLaccount_createTheme) Getslug() string                                  { return m.Slug }
func (m *TLaccount_createTheme) Settitle(v string)                                { m.Title = v }
func (m *TLaccount_createTheme) Gettitle() string                                 { return m.Title }
func (m *TLaccount_createTheme) Setdocument(v InputDocument)                      { m.Document = v }
func (m *TLaccount_createTheme) Getdocument() InputDocument                       { return m.Document }
func (m *TLaccount_createTheme) Setsettings(v InputThemeSettings)                 { m.Settings = v }
func (m *TLaccount_createTheme) Getsettings() InputThemeSettings                  { return m.Settings }
func (m *TLaccount_updateTheme) Setformat(v string)                               { m.Format = v }
func (m *TLaccount_updateTheme) Getformat() string                                { return m.Format }
func (m *TLaccount_updateTheme) Settheme(v InputTheme)                            { m.Theme = v }
func (m *TLaccount_updateTheme) Gettheme() InputTheme                             { return m.Theme }
func (m *TLaccount_updateTheme) Setslug(v string)                                 { m.Slug = v }
func (m *TLaccount_updateTheme) Getslug() string                                  { return m.Slug }
func (m *TLaccount_updateTheme) Settitle(v string)                                { m.Title = v }
func (m *TLaccount_updateTheme) Gettitle() string                                 { return m.Title }
func (m *TLaccount_updateTheme) Setdocument(v InputDocument)                      { m.Document = v }
func (m *TLaccount_updateTheme) Getdocument() InputDocument                       { return m.Document }
func (m *TLaccount_updateTheme) Setsettings(v InputThemeSettings)                 { m.Settings = v }
func (m *TLaccount_updateTheme) Getsettings() InputThemeSettings                  { return m.Settings }
func (m *TLaccount_getTheme) Setformat(v string)                                  { m.Format = v }
func (m *TLaccount_getTheme) Getformat() string                                   { return m.Format }
func (m *TLaccount_getTheme) Settheme(v InputTheme)                               { m.Theme = v }
func (m *TLaccount_getTheme) Gettheme() InputTheme                                { return m.Theme }
func (m *TLaccount_getTheme) Setdocument_id(v int64)                              { m.Document_id = v }
func (m *TLaccount_getTheme) Getdocument_id() int64                               { return m.Document_id }
func (m *TLphotos_getUserPhotos) Setuser_id(v InputUser)                          { m.User_id = v }
func (m *TLphotos_getUserPhotos) Getuser_id() InputUser                           { return m.User_id }
func (m *TLphotos_getUserPhotos) Setoffset(v int32)                               { m.Offset = v }
func (m *TLphotos_getUserPhotos) Getoffset() int32                                { return m.Offset }
func (m *TLphotos_getUserPhotos) Setmax_id(v int64)                               { m.Max_id = v }
func (m *TLphotos_getUserPhotos) Getmax_id() int64                                { return m.Max_id }
func (m *TLphotos_getUserPhotos) Setlimit(v int32)                                { m.Limit = v }
func (m *TLphotos_getUserPhotos) Getlimit() int32                                 { return m.Limit }
func (m *TLmessages_getOnlines) Setpeer(v InputPeer)                              { m.Peer = v }
func (m *TLmessages_getOnlines) Getpeer() InputPeer                               { return m.Peer }
func (m *TLaccount_saveSecureValue) Setvalue(v InputSecureValue)                  { m.Value = v }
func (m *TLaccount_saveSecureValue) Getvalue() InputSecureValue                   { return m.Value }
func (m *TLaccount_saveSecureValue) Setsecure_secret_id(v int64)                  { m.Secure_secret_id = v }
func (m *TLaccount_saveSecureValue) Getsecure_secret_id() int64                   { return m.Secure_secret_id }
func (m *TLinvokeAfterMsg) Setmsg_id(v int64)                                     { m.Msg_id = v }
func (m *TLinvokeAfterMsg) Getmsg_id() int64                                      { return m.Msg_id }
func (m *TLinvokeAfterMsg) Setquery(v []uint8)                                    { m.Query = v }
func (m *TLinvokeAfterMsg) Getquery() []uint8                                     { return m.Query }
func (m *TLinvokeAfterMsgs) Setmsg_ids(v []Long)                                  { m.Msg_ids = v }
func (m *TLinvokeAfterMsgs) Getmsg_ids() []Long                                   { return m.Msg_ids }
func (m *TLinvokeAfterMsgs) Setquery(v []uint8)                                   { m.Query = v }
func (m *TLinvokeAfterMsgs) Getquery() []uint8                                    { return m.Query }
func (m *TLinitConnection) Setapi_id(v int32)                                     { m.Api_id = v }
func (m *TLinitConnection) Getapi_id() int32                                      { return m.Api_id }
func (m *TLinitConnection) Setdevice_model(v string)                              { m.Device_model = v }
func (m *TLinitConnection) Getdevice_model() string                               { return m.Device_model }
func (m *TLinitConnection) Setsystem_version(v string)                            { m.System_version = v }
func (m *TLinitConnection) Getsystem_version() string                             { return m.System_version }
func (m *TLinitConnection) Setapp_version(v string)                               { m.App_version = v }
func (m *TLinitConnection) Getapp_version() string                                { return m.App_version }
func (m *TLinitConnection) Setsystem_lang_code(v string)                          { m.System_lang_code = v }
func (m *TLinitConnection) Getsystem_lang_code() string                           { return m.System_lang_code }
func (m *TLinitConnection) Setlang_pack(v string)                                 { m.Lang_pack = v }
func (m *TLinitConnection) Getlang_pack() string                                  { return m.Lang_pack }
func (m *TLinitConnection) Setlang_code(v string)                                 { m.Lang_code = v }
func (m *TLinitConnection) Getlang_code() string                                  { return m.Lang_code }
func (m *TLinitConnection) Setproxy(v InputClientProxy)                           { m.Proxy = v }
func (m *TLinitConnection) Getproxy() InputClientProxy                            { return m.Proxy }
func (m *TLinitConnection) Setparams(v JSONValue)                                 { m.Params = v }
func (m *TLinitConnection) Getparams() JSONValue                                  { return m.Params }
func (m *TLinitConnection) Setquery(v []uint8)                                    { m.Query = v }
func (m *TLinitConnection) Getquery() []uint8                                     { return m.Query }
func (m *TLinvokeWithLayer) Setlayer(v int32)                                     { m.Layer = v }
func (m *TLinvokeWithLayer) Getlayer() int32                                      { return m.Layer }
func (m *TLinvokeWithLayer) Setquery(v []uint8)                                   { m.Query = v }
func (m *TLinvokeWithLayer) Getquery() []uint8                                    { return m.Query }
func (m *TLinvokeWithoutUpdates) Setquery(v []uint8)                              { m.Query = v }
func (m *TLinvokeWithoutUpdates) Getquery() []uint8                               { return m.Query }
func (m *TLinvokeWithMessagesRange) Setrange(v MessageRange)                      { m.Range = v }
func (m *TLinvokeWithMessagesRange) Getrange() MessageRange                       { return m.Range }
func (m *TLinvokeWithMessagesRange) Setquery(v []uint8)                           { m.Query = v }
func (m *TLinvokeWithMessagesRange) Getquery() []uint8                            { return m.Query }
func (m *TLinvokeWithTakeout) Settakeout_id(v int64)                              { m.Takeout_id = v }
func (m *TLinvokeWithTakeout) Gettakeout_id() int64                               { return m.Takeout_id }
func (m *TLinvokeWithTakeout) Setquery(v []uint8)                                 { m.Query = v }
func (m *TLinvokeWithTakeout) Getquery() []uint8                                  { return m.Query }
func (m *TLmessages_getEmojiURL) Setlang_code(v string)                           { m.Lang_code = v }
func (m *TLmessages_getEmojiURL) Getlang_code() string                            { return m.Lang_code }
func (m *TLmessages_getPeerSettings) Setpeer(v InputPeer)                         { m.Peer = v }
func (m *TLmessages_getPeerSettings) Getpeer() InputPeer                          { return m.Peer }
func (m *TLhelp_getUserInfo) Setuser_id(v InputUser)                              { m.User_id = v }
func (m *TLhelp_getUserInfo) Getuser_id() InputUser                               { return m.User_id }
func (m *TLhelp_editUserInfo) Setuser_id(v InputUser)                             { m.User_id = v }
func (m *TLhelp_editUserInfo) Getuser_id() InputUser                              { return m.User_id }
func (m *TLhelp_editUserInfo) Setmessage(v string)                                { m.Message = v }
func (m *TLhelp_editUserInfo) Getmessage() string                                 { return m.Message }
func (m *TLhelp_editUserInfo) Setentities(v []MessageEntity)                      { m.Entities = v }
func (m *TLhelp_editUserInfo) Getentities() []MessageEntity                       { return m.Entities }
func (m *TLaccount_getSecureValue) Settypes(v []SecureValueType)                  { m.Types = v }
func (m *TLaccount_getSecureValue) Gettypes() []SecureValueType                   { return m.Types }
func (m *TLmessages_getRecentStickers) Setattached(v bool)                        { m.Attached = v }
func (m *TLmessages_getRecentStickers) Getattached() bool                         { return m.Attached }
func (m *TLmessages_getRecentStickers) Sethash(v int32)                           { m.Hash = v }
func (m *TLmessages_getRecentStickers) Gethash() int32                            { return m.Hash }
func (m *TLcontacts_getContacts) Sethash(v int32)                                 { m.Hash = v }
func (m *TLcontacts_getContacts) Gethash() int32                                  { return m.Hash }
func (m *TLcontacts_search) Setq(v string)                                        { m.Q = v }
func (m *TLcontacts_search) Getq() string                                         { return m.Q }
func (m *TLcontacts_search) Setlimit(v int32)                                     { m.Limit = v }
func (m *TLcontacts_search) Getlimit() int32                                      { return m.Limit }
func (m *TLaccount_getMultiWallPapers) Setwallpapers(v []InputWallPaper)          { m.Wallpapers = v }
func (m *TLaccount_getMultiWallPapers) Getwallpapers() []InputWallPaper           { return m.Wallpapers }
func (m *TLmessages_requestEncryption) Setuser_id(v InputUser)                    { m.User_id = v }
func (m *TLmessages_requestEncryption) Getuser_id() InputUser                     { return m.User_id }
func (m *TLmessages_requestEncryption) Setrandom_id(v int32)                      { m.Random_id = v }
func (m *TLmessages_requestEncryption) Getrandom_id() int32                       { return m.Random_id }
func (m *TLmessages_requestEncryption) Setg_a(v []uint8)                          { m.G_a = v }
func (m *TLmessages_requestEncryption) Getg_a() []uint8                           { return m.G_a }
func (m *TLmessages_acceptEncryption) Setpeer(v InputEncryptedChat)               { m.Peer = v }
func (m *TLmessages_acceptEncryption) Getpeer() InputEncryptedChat                { return m.Peer }
func (m *TLmessages_acceptEncryption) Setg_b(v []uint8)                           { m.G_b = v }
func (m *TLmessages_acceptEncryption) Getg_b() []uint8                            { return m.G_b }
func (m *TLmessages_acceptEncryption) Setkey_fingerprint(v int64)                 { m.Key_fingerprint = v }
func (m *TLmessages_acceptEncryption) Getkey_fingerprint() int64                  { return m.Key_fingerprint }
func (m *TLmessages_receivedMessages) Setmax_id(v int32)                          { m.Max_id = v }
func (m *TLmessages_receivedMessages) Getmax_id() int32                           { return m.Max_id }
func (m *TLmessages_getSearchCounters) Setpeer(v InputPeer)                       { m.Peer = v }
func (m *TLmessages_getSearchCounters) Getpeer() InputPeer                        { return m.Peer }
func (m *TLmessages_getSearchCounters) Setfilters(v []MessagesFilter)             { m.Filters = v }
func (m *TLmessages_getSearchCounters) Getfilters() []MessagesFilter              { return m.Filters }
func (m *TLmessages_getAttachedStickers) Setmedia(v InputStickeredMedia)          { m.Media = v }
func (m *TLmessages_getAttachedStickers) Getmedia() InputStickeredMedia           { return m.Media }
func (m *TLcontacts_deleteContacts) Setid(v []InputUser)                          { m.Id = v }
func (m *TLcontacts_deleteContacts) Getid() []InputUser                           { return m.Id }
func (m *TLmessages_sendMessage) Setno_webpage(v bool)                            { m.No_webpage = v }
func (m *TLmessages_sendMessage) Getno_webpage() bool                             { return m.No_webpage }
func (m *TLmessages_sendMessage) Setsilent(v bool)                                { m.Silent = v }
func (m *TLmessages_sendMessage) Getsilent() bool                                 { return m.Silent }
func (m *TLmessages_sendMessage) Setbackground(v bool)                            { m.Background = v }
func (m *TLmessages_sendMessage) Getbackground() bool                             { return m.Background }
func (m *TLmessages_sendMessage) Setclear_draft(v bool)                           { m.Clear_draft = v }
func (m *TLmessages_sendMessage) Getclear_draft() bool                            { return m.Clear_draft }
func (m *TLmessages_sendMessage) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_sendMessage) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_sendMessage) Setreply_to_msg_id(v int32)                      { m.Reply_to_msg_id = v }
func (m *TLmessages_sendMessage) Getreply_to_msg_id() int32                       { return m.Reply_to_msg_id }
func (m *TLmessages_sendMessage) Setmessage(v string)                             { m.Message = v }
func (m *TLmessages_sendMessage) Getmessage() string                              { return m.Message }
func (m *TLmessages_sendMessage) Setrandom_id(v int64)                            { m.Random_id = v }
func (m *TLmessages_sendMessage) Getrandom_id() int64                             { return m.Random_id }
func (m *TLmessages_sendMessage) Setreply_markup(v ReplyMarkup)                   { m.Reply_markup = v }
func (m *TLmessages_sendMessage) Getreply_markup() ReplyMarkup                    { return m.Reply_markup }
func (m *TLmessages_sendMessage) Setentities(v []MessageEntity)                   { m.Entities = v }
func (m *TLmessages_sendMessage) Getentities() []MessageEntity                    { return m.Entities }
func (m *TLmessages_sendMessage) Setschedule_date(v int32)                        { m.Schedule_date = v }
func (m *TLmessages_sendMessage) Getschedule_date() int32                         { return m.Schedule_date }
func (m *TLmessages_sendMedia) Setsilent(v bool)                                  { m.Silent = v }
func (m *TLmessages_sendMedia) Getsilent() bool                                   { return m.Silent }
func (m *TLmessages_sendMedia) Setbackground(v bool)                              { m.Background = v }
func (m *TLmessages_sendMedia) Getbackground() bool                               { return m.Background }
func (m *TLmessages_sendMedia) Setclear_draft(v bool)                             { m.Clear_draft = v }
func (m *TLmessages_sendMedia) Getclear_draft() bool                              { return m.Clear_draft }
func (m *TLmessages_sendMedia) Setpeer(v InputPeer)                               { m.Peer = v }
func (m *TLmessages_sendMedia) Getpeer() InputPeer                                { return m.Peer }
func (m *TLmessages_sendMedia) Setreply_to_msg_id(v int32)                        { m.Reply_to_msg_id = v }
func (m *TLmessages_sendMedia) Getreply_to_msg_id() int32                         { return m.Reply_to_msg_id }
func (m *TLmessages_sendMedia) Setmedia(v InputMedia)                             { m.Media = v }
func (m *TLmessages_sendMedia) Getmedia() InputMedia                              { return m.Media }
func (m *TLmessages_sendMedia) Setmessage(v string)                               { m.Message = v }
func (m *TLmessages_sendMedia) Getmessage() string                                { return m.Message }
func (m *TLmessages_sendMedia) Setrandom_id(v int64)                              { m.Random_id = v }
func (m *TLmessages_sendMedia) Getrandom_id() int64                               { return m.Random_id }
func (m *TLmessages_sendMedia) Setreply_markup(v ReplyMarkup)                     { m.Reply_markup = v }
func (m *TLmessages_sendMedia) Getreply_markup() ReplyMarkup                      { return m.Reply_markup }
func (m *TLmessages_sendMedia) Setentities(v []MessageEntity)                     { m.Entities = v }
func (m *TLmessages_sendMedia) Getentities() []MessageEntity                      { return m.Entities }
func (m *TLmessages_sendMedia) Setschedule_date(v int32)                          { m.Schedule_date = v }
func (m *TLmessages_sendMedia) Getschedule_date() int32                           { return m.Schedule_date }
func (m *TLmessages_forwardMessages) Setsilent(v bool)                            { m.Silent = v }
func (m *TLmessages_forwardMessages) Getsilent() bool                             { return m.Silent }
func (m *TLmessages_forwardMessages) Setbackground(v bool)                        { m.Background = v }
func (m *TLmessages_forwardMessages) Getbackground() bool                         { return m.Background }
func (m *TLmessages_forwardMessages) Setwith_my_score(v bool)                     { m.With_my_score = v }
func (m *TLmessages_forwardMessages) Getwith_my_score() bool                      { return m.With_my_score }
func (m *TLmessages_forwardMessages) Setfrom_peer(v InputPeer)                    { m.From_peer = v }
func (m *TLmessages_forwardMessages) Getfrom_peer() InputPeer                     { return m.From_peer }
func (m *TLmessages_forwardMessages) Setid(v []int32)                             { m.Id = v }
func (m *TLmessages_forwardMessages) Getid() []int32                              { return m.Id }
func (m *TLmessages_forwardMessages) Setrandom_id(v []Long)                       { m.Random_id = v }
func (m *TLmessages_forwardMessages) Getrandom_id() []Long                        { return m.Random_id }
func (m *TLmessages_forwardMessages) Setto_peer(v InputPeer)                      { m.To_peer = v }
func (m *TLmessages_forwardMessages) Getto_peer() InputPeer                       { return m.To_peer }
func (m *TLmessages_forwardMessages) Setschedule_date(v int32)                    { m.Schedule_date = v }
func (m *TLmessages_forwardMessages) Getschedule_date() int32                     { return m.Schedule_date }
func (m *TLmessages_editChatTitle) Setchat_id(v int32)                            { m.Chat_id = v }
func (m *TLmessages_editChatTitle) Getchat_id() int32                             { return m.Chat_id }
func (m *TLmessages_editChatTitle) Settitle(v string)                             { m.Title = v }
func (m *TLmessages_editChatTitle) Gettitle() string                              { return m.Title }
func (m *TLmessages_editChatPhoto) Setchat_id(v int32)                            { m.Chat_id = v }
func (m *TLmessages_editChatPhoto) Getchat_id() int32                             { return m.Chat_id }
func (m *TLmessages_editChatPhoto) Setphoto(v InputChatPhoto)                     { m.Photo = v }
func (m *TLmessages_editChatPhoto) Getphoto() InputChatPhoto                      { return m.Photo }
func (m *TLmessages_addChatUser) Setchat_id(v int32)                              { m.Chat_id = v }
func (m *TLmessages_addChatUser) Getchat_id() int32                               { return m.Chat_id }
func (m *TLmessages_addChatUser) Setuser_id(v InputUser)                          { m.User_id = v }
func (m *TLmessages_addChatUser) Getuser_id() InputUser                           { return m.User_id }
func (m *TLmessages_addChatUser) Setfwd_limit(v int32)                            { m.Fwd_limit = v }
func (m *TLmessages_addChatUser) Getfwd_limit() int32                             { return m.Fwd_limit }
func (m *TLmessages_deleteChatUser) Setchat_id(v int32)                           { m.Chat_id = v }
func (m *TLmessages_deleteChatUser) Getchat_id() int32                            { return m.Chat_id }
func (m *TLmessages_deleteChatUser) Setuser_id(v InputUser)                       { m.User_id = v }
func (m *TLmessages_deleteChatUser) Getuser_id() InputUser                        { return m.User_id }
func (m *TLmessages_createChat) Setusers(v []InputUser)                           { m.Users = v }
func (m *TLmessages_createChat) Getusers() []InputUser                            { return m.Users }
func (m *TLmessages_createChat) Settitle(v string)                                { m.Title = v }
func (m *TLmessages_createChat) Gettitle() string                                 { return m.Title }
func (m *TLmessages_importChatInvite) Sethash(v string)                           { m.Hash = v }
func (m *TLmessages_importChatInvite) Gethash() string                            { return m.Hash }
func (m *TLmessages_startBot) Setbot(v InputUser)                                 { m.Bot = v }
func (m *TLmessages_startBot) Getbot() InputUser                                  { return m.Bot }
func (m *TLmessages_startBot) Setpeer(v InputPeer)                                { m.Peer = v }
func (m *TLmessages_startBot) Getpeer() InputPeer                                 { return m.Peer }
func (m *TLmessages_startBot) Setrandom_id(v int64)                               { m.Random_id = v }
func (m *TLmessages_startBot) Getrandom_id() int64                                { return m.Random_id }
func (m *TLmessages_startBot) Setstart_param(v string)                            { m.Start_param = v }
func (m *TLmessages_startBot) Getstart_param() string                             { return m.Start_param }
func (m *TLhelp_getAppChangelog) Setprev_app_version(v string)                    { m.Prev_app_version = v }
func (m *TLhelp_getAppChangelog) Getprev_app_version() string                     { return m.Prev_app_version }
func (m *TLchannels_createChannel) Setbroadcast(v bool)                           { m.Broadcast = v }
func (m *TLchannels_createChannel) Getbroadcast() bool                            { return m.Broadcast }
func (m *TLchannels_createChannel) Setmegagroup(v bool)                           { m.Megagroup = v }
func (m *TLchannels_createChannel) Getmegagroup() bool                            { return m.Megagroup }
func (m *TLchannels_createChannel) Settitle(v string)                             { m.Title = v }
func (m *TLchannels_createChannel) Gettitle() string                              { return m.Title }
func (m *TLchannels_createChannel) Setabout(v string)                             { m.About = v }
func (m *TLchannels_createChannel) Getabout() string                              { return m.About }
func (m *TLchannels_createChannel) Setgeo_point(v InputGeoPoint)                  { m.Geo_point = v }
func (m *TLchannels_createChannel) Getgeo_point() InputGeoPoint                   { return m.Geo_point }
func (m *TLchannels_createChannel) Setaddress(v string)                           { m.Address = v }
func (m *TLchannels_createChannel) Getaddress() string                            { return m.Address }
func (m *TLchannels_editAdmin) Setchannel(v InputChannel)                         { m.Channel = v }
func (m *TLchannels_editAdmin) Getchannel() InputChannel                          { return m.Channel }
func (m *TLchannels_editAdmin) Setuser_id(v InputUser)                            { m.User_id = v }
func (m *TLchannels_editAdmin) Getuser_id() InputUser                             { return m.User_id }
func (m *TLchannels_editAdmin) Setadmin_rights(v ChatAdminRights)                 { m.Admin_rights = v }
func (m *TLchannels_editAdmin) Getadmin_rights() ChatAdminRights                  { return m.Admin_rights }
func (m *TLchannels_editAdmin) Setrank(v string)                                  { m.Rank = v }
func (m *TLchannels_editAdmin) Getrank() string                                   { return m.Rank }
func (m *TLchannels_editTitle) Setchannel(v InputChannel)                         { m.Channel = v }
func (m *TLchannels_editTitle) Getchannel() InputChannel                          { return m.Channel }
func (m *TLchannels_editTitle) Settitle(v string)                                 { m.Title = v }
func (m *TLchannels_editTitle) Gettitle() string                                  { return m.Title }
func (m *TLchannels_editPhoto) Setchannel(v InputChannel)                         { m.Channel = v }
func (m *TLchannels_editPhoto) Getchannel() InputChannel                          { return m.Channel }
func (m *TLchannels_editPhoto) Setphoto(v InputChatPhoto)                         { m.Photo = v }
func (m *TLchannels_editPhoto) Getphoto() InputChatPhoto                          { return m.Photo }
func (m *TLchannels_joinChannel) Setchannel(v InputChannel)                       { m.Channel = v }
func (m *TLchannels_joinChannel) Getchannel() InputChannel                        { return m.Channel }
func (m *TLchannels_leaveChannel) Setchannel(v InputChannel)                      { m.Channel = v }
func (m *TLchannels_leaveChannel) Getchannel() InputChannel                       { return m.Channel }
func (m *TLchannels_inviteToChannel) Setchannel(v InputChannel)                   { m.Channel = v }
func (m *TLchannels_inviteToChannel) Getchannel() InputChannel                    { return m.Channel }
func (m *TLchannels_inviteToChannel) Setusers(v []InputUser)                      { m.Users = v }
func (m *TLchannels_inviteToChannel) Getusers() []InputUser                       { return m.Users }
func (m *TLchannels_deleteChannel) Setchannel(v InputChannel)                     { m.Channel = v }
func (m *TLchannels_deleteChannel) Getchannel() InputChannel                      { return m.Channel }
func (m *TLmessages_migrateChat) Setchat_id(v int32)                              { m.Chat_id = v }
func (m *TLmessages_migrateChat) Getchat_id() int32                               { return m.Chat_id }
func (m *TLmessages_sendInlineBotResult) Setsilent(v bool)                        { m.Silent = v }
func (m *TLmessages_sendInlineBotResult) Getsilent() bool                         { return m.Silent }
func (m *TLmessages_sendInlineBotResult) Setbackground(v bool)                    { m.Background = v }
func (m *TLmessages_sendInlineBotResult) Getbackground() bool                     { return m.Background }
func (m *TLmessages_sendInlineBotResult) Setclear_draft(v bool)                   { m.Clear_draft = v }
func (m *TLmessages_sendInlineBotResult) Getclear_draft() bool                    { return m.Clear_draft }
func (m *TLmessages_sendInlineBotResult) Sethide_via(v bool)                      { m.Hide_via = v }
func (m *TLmessages_sendInlineBotResult) Gethide_via() bool                       { return m.Hide_via }
func (m *TLmessages_sendInlineBotResult) Setpeer(v InputPeer)                     { m.Peer = v }
func (m *TLmessages_sendInlineBotResult) Getpeer() InputPeer                      { return m.Peer }
func (m *TLmessages_sendInlineBotResult) Setreply_to_msg_id(v int32)              { m.Reply_to_msg_id = v }
func (m *TLmessages_sendInlineBotResult) Getreply_to_msg_id() int32               { return m.Reply_to_msg_id }
func (m *TLmessages_sendInlineBotResult) Setrandom_id(v int64)                    { m.Random_id = v }
func (m *TLmessages_sendInlineBotResult) Getrandom_id() int64                     { return m.Random_id }
func (m *TLmessages_sendInlineBotResult) Setquery_id(v int64)                     { m.Query_id = v }
func (m *TLmessages_sendInlineBotResult) Getquery_id() int64                      { return m.Query_id }
func (m *TLmessages_sendInlineBotResult) Setid(v string)                          { m.Id = v }
func (m *TLmessages_sendInlineBotResult) Getid() string                           { return m.Id }
func (m *TLmessages_sendInlineBotResult) Setschedule_date(v int32)                { m.Schedule_date = v }
func (m *TLmessages_sendInlineBotResult) Getschedule_date() int32                 { return m.Schedule_date }
func (m *TLchannels_toggleSignatures) Setchannel(v InputChannel)                  { m.Channel = v }
func (m *TLchannels_toggleSignatures) Getchannel() InputChannel                   { return m.Channel }
func (m *TLchannels_toggleSignatures) Setenabled(v Bool)                          { m.Enabled = v }
func (m *TLchannels_toggleSignatures) Getenabled() Bool                           { return m.Enabled }
func (m *TLmessages_editMessage) Setno_webpage(v bool)                            { m.No_webpage = v }
func (m *TLmessages_editMessage) Getno_webpage() bool                             { return m.No_webpage }
func (m *TLmessages_editMessage) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_editMessage) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_editMessage) Setid(v int32)                                   { m.Id = v }
func (m *TLmessages_editMessage) Getid() int32                                    { return m.Id }
func (m *TLmessages_editMessage) Setmessage(v string)                             { m.Message = v }
func (m *TLmessages_editMessage) Getmessage() string                              { return m.Message }
func (m *TLmessages_editMessage) Setmedia(v InputMedia)                           { m.Media = v }
func (m *TLmessages_editMessage) Getmedia() InputMedia                            { return m.Media }
func (m *TLmessages_editMessage) Setreply_markup(v ReplyMarkup)                   { m.Reply_markup = v }
func (m *TLmessages_editMessage) Getreply_markup() ReplyMarkup                    { return m.Reply_markup }
func (m *TLmessages_editMessage) Setentities(v []MessageEntity)                   { m.Entities = v }
func (m *TLmessages_editMessage) Getentities() []MessageEntity                    { return m.Entities }
func (m *TLmessages_editMessage) Setschedule_date(v int32)                        { m.Schedule_date = v }
func (m *TLmessages_editMessage) Getschedule_date() int32                         { return m.Schedule_date }
func (m *TLmessages_setGameScore) Setedit_message(v bool)                         { m.Edit_message = v }
func (m *TLmessages_setGameScore) Getedit_message() bool                          { return m.Edit_message }
func (m *TLmessages_setGameScore) Setforce(v bool)                                { m.Force = v }
func (m *TLmessages_setGameScore) Getforce() bool                                 { return m.Force }
func (m *TLmessages_setGameScore) Setpeer(v InputPeer)                            { m.Peer = v }
func (m *TLmessages_setGameScore) Getpeer() InputPeer                             { return m.Peer }
func (m *TLmessages_setGameScore) Setid(v int32)                                  { m.Id = v }
func (m *TLmessages_setGameScore) Getid() int32                                   { return m.Id }
func (m *TLmessages_setGameScore) Setuser_id(v InputUser)                         { m.User_id = v }
func (m *TLmessages_setGameScore) Getuser_id() InputUser                          { return m.User_id }
func (m *TLmessages_setGameScore) Setscore(v int32)                               { m.Score = v }
func (m *TLmessages_setGameScore) Getscore() int32                                { return m.Score }
func (m *TLphone_discardCall) Setvideo(v bool)                                    { m.Video = v }
func (m *TLphone_discardCall) Getvideo() bool                                     { return m.Video }
func (m *TLphone_discardCall) Setpeer(v InputPhoneCall)                           { m.Peer = v }
func (m *TLphone_discardCall) Getpeer() InputPhoneCall                            { return m.Peer }
func (m *TLphone_discardCall) Setduration(v int32)                                { m.Duration = v }
func (m *TLphone_discardCall) Getduration() int32                                 { return m.Duration }
func (m *TLphone_discardCall) Setreason(v PhoneCallDiscardReason)                 { m.Reason = v }
func (m *TLphone_discardCall) Getreason() PhoneCallDiscardReason                  { return m.Reason }
func (m *TLphone_discardCall) Setconnection_id(v int64)                           { m.Connection_id = v }
func (m *TLphone_discardCall) Getconnection_id() int64                            { return m.Connection_id }
func (m *TLphone_setCallRating) Setuser_initiative(v bool)                        { m.User_initiative = v }
func (m *TLphone_setCallRating) Getuser_initiative() bool                         { return m.User_initiative }
func (m *TLphone_setCallRating) Setpeer(v InputPhoneCall)                         { m.Peer = v }
func (m *TLphone_setCallRating) Getpeer() InputPhoneCall                          { return m.Peer }
func (m *TLphone_setCallRating) Setrating(v int32)                                { m.Rating = v }
func (m *TLphone_setCallRating) Getrating() int32                                 { return m.Rating }
func (m *TLphone_setCallRating) Setcomment(v string)                              { m.Comment = v }
func (m *TLphone_setCallRating) Getcomment() string                               { return m.Comment }
func (m *TLchannels_editBanned) Setchannel(v InputChannel)                        { m.Channel = v }
func (m *TLchannels_editBanned) Getchannel() InputChannel                         { return m.Channel }
func (m *TLchannels_editBanned) Setuser_id(v InputUser)                           { m.User_id = v }
func (m *TLchannels_editBanned) Getuser_id() InputUser                            { return m.User_id }
func (m *TLchannels_editBanned) Setbanned_rights(v ChatBannedRights)              { m.Banned_rights = v }
func (m *TLchannels_editBanned) Getbanned_rights() ChatBannedRights               { return m.Banned_rights }
func (m *TLmessages_sendScreenshotNotification) Setpeer(v InputPeer)              { m.Peer = v }
func (m *TLmessages_sendScreenshotNotification) Getpeer() InputPeer               { return m.Peer }
func (m *TLmessages_sendScreenshotNotification) Setreply_to_msg_id(v int32)       { m.Reply_to_msg_id = v }
func (m *TLmessages_sendScreenshotNotification) Getreply_to_msg_id() int32        { return m.Reply_to_msg_id }
func (m *TLmessages_sendScreenshotNotification) Setrandom_id(v int64)             { m.Random_id = v }
func (m *TLmessages_sendScreenshotNotification) Getrandom_id() int64              { return m.Random_id }
func (m *TLchannels_togglePreHistoryHidden) Setchannel(v InputChannel)            { m.Channel = v }
func (m *TLchannels_togglePreHistoryHidden) Getchannel() InputChannel             { return m.Channel }
func (m *TLchannels_togglePreHistoryHidden) Setenabled(v Bool)                    { m.Enabled = v }
func (m *TLchannels_togglePreHistoryHidden) Getenabled() Bool                     { return m.Enabled }
func (m *TLmessages_sendMultiMedia) Setsilent(v bool)                             { m.Silent = v }
func (m *TLmessages_sendMultiMedia) Getsilent() bool                              { return m.Silent }
func (m *TLmessages_sendMultiMedia) Setbackground(v bool)                         { m.Background = v }
func (m *TLmessages_sendMultiMedia) Getbackground() bool                          { return m.Background }
func (m *TLmessages_sendMultiMedia) Setclear_draft(v bool)                        { m.Clear_draft = v }
func (m *TLmessages_sendMultiMedia) Getclear_draft() bool                         { return m.Clear_draft }
func (m *TLmessages_sendMultiMedia) Setpeer(v InputPeer)                          { m.Peer = v }
func (m *TLmessages_sendMultiMedia) Getpeer() InputPeer                           { return m.Peer }
func (m *TLmessages_sendMultiMedia) Setreply_to_msg_id(v int32)                   { m.Reply_to_msg_id = v }
func (m *TLmessages_sendMultiMedia) Getreply_to_msg_id() int32                    { return m.Reply_to_msg_id }
func (m *TLmessages_sendMultiMedia) Setmulti_media(v []InputSingleMedia)          { m.Multi_media = v }
func (m *TLmessages_sendMultiMedia) Getmulti_media() []InputSingleMedia           { return m.Multi_media }
func (m *TLmessages_sendMultiMedia) Setschedule_date(v int32)                     { m.Schedule_date = v }
func (m *TLmessages_sendMultiMedia) Getschedule_date() int32                      { return m.Schedule_date }
func (m *TLmessages_updatePinnedMessage) Setsilent(v bool)                        { m.Silent = v }
func (m *TLmessages_updatePinnedMessage) Getsilent() bool                         { return m.Silent }
func (m *TLmessages_updatePinnedMessage) Setunpin(v bool)                         { m.Unpin = v }
func (m *TLmessages_updatePinnedMessage) Getunpin() bool                          { return m.Unpin }
func (m *TLmessages_updatePinnedMessage) Setpm_oneside(v bool)                    { m.Pm_oneside = v }
func (m *TLmessages_updatePinnedMessage) Getpm_oneside() bool                     { return m.Pm_oneside }
func (m *TLmessages_updatePinnedMessage) Setpeer(v InputPeer)                     { m.Peer = v }
func (m *TLmessages_updatePinnedMessage) Getpeer() InputPeer                      { return m.Peer }
func (m *TLmessages_updatePinnedMessage) Setid(v int32)                           { m.Id = v }
func (m *TLmessages_updatePinnedMessage) Getid() int32                            { return m.Id }
func (m *TLaccount_getNotifyExceptions) Setcompare_sound(v bool)                  { m.Compare_sound = v }
func (m *TLaccount_getNotifyExceptions) Getcompare_sound() bool                   { return m.Compare_sound }
func (m *TLaccount_getNotifyExceptions) Setpeer(v InputNotifyPeer)                { m.Peer = v }
func (m *TLaccount_getNotifyExceptions) Getpeer() InputNotifyPeer                 { return m.Peer }
func (m *TLmessages_sendVote) Setpeer(v InputPeer)                                { m.Peer = v }
func (m *TLmessages_sendVote) Getpeer() InputPeer                                 { return m.Peer }
func (m *TLmessages_sendVote) Setmsg_id(v int32)                                  { m.Msg_id = v }
func (m *TLmessages_sendVote) Getmsg_id() int32                                   { return m.Msg_id }
func (m *TLmessages_sendVote) Setoptions(v [][]uint8)                             { m.Options = v }
func (m *TLmessages_sendVote) Getoptions() [][]uint8                              { return m.Options }
func (m *TLmessages_getPollResults) Setpeer(v InputPeer)                          { m.Peer = v }
func (m *TLmessages_getPollResults) Getpeer() InputPeer                           { return m.Peer }
func (m *TLmessages_getPollResults) Setmsg_id(v int32)                            { m.Msg_id = v }
func (m *TLmessages_getPollResults) Getmsg_id() int32                             { return m.Msg_id }
func (m *TLmessages_editChatDefaultBannedRights) Setpeer(v InputPeer)             { m.Peer = v }
func (m *TLmessages_editChatDefaultBannedRights) Getpeer() InputPeer              { return m.Peer }
func (m *TLmessages_editChatDefaultBannedRights) Setbanned_rights(v ChatBannedRights) {
	m.Banned_rights = v
}
func (m *TLmessages_editChatDefaultBannedRights) Getbanned_rights() ChatBannedRights {
	return m.Banned_rights
}
func (m *TLfolders_editPeerFolders) Setfolder_peers(v []InputFolderPeer) { m.Folder_peers = v }
func (m *TLfolders_editPeerFolders) Getfolder_peers() []InputFolderPeer  { return m.Folder_peers }
func (m *TLfolders_deleteFolder) Setfolder_id(v int32)                   { m.Folder_id = v }
func (m *TLfolders_deleteFolder) Getfolder_id() int32                    { return m.Folder_id }
func (m *TLcontacts_addContact) Setadd_phone_privacy_exception(v bool) {
	m.Add_phone_privacy_exception = v
}
func (m *TLcontacts_addContact) Getadd_phone_privacy_exception() bool {
	return m.Add_phone_privacy_exception
}
func (m *TLcontacts_addContact) Setid(v InputUser)                               { m.Id = v }
func (m *TLcontacts_addContact) Getid() InputUser                                { return m.Id }
func (m *TLcontacts_addContact) Setfirst_name(v string)                          { m.First_name = v }
func (m *TLcontacts_addContact) Getfirst_name() string                           { return m.First_name }
func (m *TLcontacts_addContact) Setlast_name(v string)                           { m.Last_name = v }
func (m *TLcontacts_addContact) Getlast_name() string                            { return m.Last_name }
func (m *TLcontacts_addContact) Setphone(v string)                               { m.Phone = v }
func (m *TLcontacts_addContact) Getphone() string                                { return m.Phone }
func (m *TLcontacts_acceptContact) Setid(v InputUser)                            { m.Id = v }
func (m *TLcontacts_acceptContact) Getid() InputUser                             { return m.Id }
func (m *TLchannels_editCreator) Setchannel(v InputChannel)                      { m.Channel = v }
func (m *TLchannels_editCreator) Getchannel() InputChannel                       { return m.Channel }
func (m *TLchannels_editCreator) Setuser_id(v InputUser)                         { m.User_id = v }
func (m *TLchannels_editCreator) Getuser_id() InputUser                          { return m.User_id }
func (m *TLchannels_editCreator) Setpassword(v InputCheckPasswordSRP)            { m.Password = v }
func (m *TLchannels_editCreator) Getpassword() InputCheckPasswordSRP             { return m.Password }
func (m *TLcontacts_getLocated) Setbackground(v bool)                            { m.Background = v }
func (m *TLcontacts_getLocated) Getbackground() bool                             { return m.Background }
func (m *TLcontacts_getLocated) Setgeo_point(v InputGeoPoint)                    { m.Geo_point = v }
func (m *TLcontacts_getLocated) Getgeo_point() InputGeoPoint                     { return m.Geo_point }
func (m *TLcontacts_getLocated) Setself_expires(v int32)                         { m.Self_expires = v }
func (m *TLcontacts_getLocated) Getself_expires() int32                          { return m.Self_expires }
func (m *TLchannels_toggleSlowMode) Setchannel(v InputChannel)                   { m.Channel = v }
func (m *TLchannels_toggleSlowMode) Getchannel() InputChannel                    { return m.Channel }
func (m *TLchannels_toggleSlowMode) Setseconds(v int32)                          { m.Seconds = v }
func (m *TLchannels_toggleSlowMode) Getseconds() int32                           { return m.Seconds }
func (m *TLmessages_sendScheduledMessages) Setpeer(v InputPeer)                  { m.Peer = v }
func (m *TLmessages_sendScheduledMessages) Getpeer() InputPeer                   { return m.Peer }
func (m *TLmessages_sendScheduledMessages) Setid(v []int32)                      { m.Id = v }
func (m *TLmessages_sendScheduledMessages) Getid() []int32                       { return m.Id }
func (m *TLmessages_deleteScheduledMessages) Setpeer(v InputPeer)                { m.Peer = v }
func (m *TLmessages_deleteScheduledMessages) Getpeer() InputPeer                 { return m.Peer }
func (m *TLmessages_deleteScheduledMessages) Setid(v []int32)                    { m.Id = v }
func (m *TLmessages_deleteScheduledMessages) Getid() []int32                     { return m.Id }
func (m *TLcontacts_blockFromReplies) Setdelete_message(v bool)                  { m.Delete_message = v }
func (m *TLcontacts_blockFromReplies) Getdelete_message() bool                   { return m.Delete_message }
func (m *TLcontacts_blockFromReplies) Setdelete_history(v bool)                  { m.Delete_history = v }
func (m *TLcontacts_blockFromReplies) Getdelete_history() bool                   { return m.Delete_history }
func (m *TLcontacts_blockFromReplies) Setreport_spam(v bool)                     { m.Report_spam = v }
func (m *TLcontacts_blockFromReplies) Getreport_spam() bool                      { return m.Report_spam }
func (m *TLcontacts_blockFromReplies) Setmsg_id(v int32)                         { m.Msg_id = v }
func (m *TLcontacts_blockFromReplies) Getmsg_id() int32                          { return m.Msg_id }
func (m *TLmessages_exportChatInvite) Setpeer(v InputPeer)                       { m.Peer = v }
func (m *TLmessages_exportChatInvite) Getpeer() InputPeer                        { return m.Peer }
func (m *TLmessages_getFeaturedStickers) Sethash(v int32)                        { m.Hash = v }
func (m *TLmessages_getFeaturedStickers) Gethash() int32                         { return m.Hash }
func (m *TLmessages_getOldFeaturedStickers) Setoffset(v int32)                   { m.Offset = v }
func (m *TLmessages_getOldFeaturedStickers) Getoffset() int32                    { return m.Offset }
func (m *TLmessages_getOldFeaturedStickers) Setlimit(v int32)                    { m.Limit = v }
func (m *TLmessages_getOldFeaturedStickers) Getlimit() int32                     { return m.Limit }
func (m *TLmessages_getOldFeaturedStickers) Sethash(v int32)                     { m.Hash = v }
func (m *TLmessages_getOldFeaturedStickers) Gethash() int32                      { return m.Hash }
func (m *TLmessages_getAllStickers) Sethash(v int32)                             { m.Hash = v }
func (m *TLmessages_getAllStickers) Gethash() int32                              { return m.Hash }
func (m *TLmessages_getMaskStickers) Sethash(v int32)                            { m.Hash = v }
func (m *TLmessages_getMaskStickers) Gethash() int32                             { return m.Hash }
func (m *TLmessages_getMessagesViews) Setpeer(v InputPeer)                       { m.Peer = v }
func (m *TLmessages_getMessagesViews) Getpeer() InputPeer                        { return m.Peer }
func (m *TLmessages_getMessagesViews) Setid(v []int32)                           { m.Id = v }
func (m *TLmessages_getMessagesViews) Getid() []int32                            { return m.Id }
func (m *TLmessages_getMessagesViews) Setincrement(v Bool)                       { m.Increment = v }
func (m *TLmessages_getMessagesViews) Getincrement() Bool                        { return m.Increment }
func (m *TLlangpack_getStrings) Setlang_pack(v string)                           { m.Lang_pack = v }
func (m *TLlangpack_getStrings) Getlang_pack() string                            { return m.Lang_pack }
func (m *TLlangpack_getStrings) Setlang_code(v string)                           { m.Lang_code = v }
func (m *TLlangpack_getStrings) Getlang_code() string                            { return m.Lang_code }
func (m *TLlangpack_getStrings) Setkeys(v []String)                              { m.Keys = v }
func (m *TLlangpack_getStrings) Getkeys() []String                               { return m.Keys }
func (m *TLmessages_getFullChat) Setchat_id(v int32)                             { m.Chat_id = v }
func (m *TLmessages_getFullChat) Getchat_id() int32                              { return m.Chat_id }
func (m *TLchannels_getFullChannel) Setchannel(v InputChannel)                   { m.Channel = v }
func (m *TLchannels_getFullChannel) Getchannel() InputChannel                    { return m.Channel }
func (m *TLchannels_getAdminLog) Setchannel(v InputChannel)                      { m.Channel = v }
func (m *TLchannels_getAdminLog) Getchannel() InputChannel                       { return m.Channel }
func (m *TLchannels_getAdminLog) Setq(v string)                                  { m.Q = v }
func (m *TLchannels_getAdminLog) Getq() string                                   { return m.Q }
func (m *TLchannels_getAdminLog) Setevents_filter(v ChannelAdminLogEventsFilter) { m.Events_filter = v }
func (m *TLchannels_getAdminLog) Getevents_filter() ChannelAdminLogEventsFilter {
	return m.Events_filter
}
func (m *TLchannels_getAdminLog) Setadmins(v []InputUser)                       { m.Admins = v }
func (m *TLchannels_getAdminLog) Getadmins() []InputUser                        { return m.Admins }
func (m *TLchannels_getAdminLog) Setmax_id(v int64)                             { m.Max_id = v }
func (m *TLchannels_getAdminLog) Getmax_id() int64                              { return m.Max_id }
func (m *TLchannels_getAdminLog) Setmin_id(v int64)                             { m.Min_id = v }
func (m *TLchannels_getAdminLog) Getmin_id() int64                              { return m.Min_id }
func (m *TLchannels_getAdminLog) Setlimit(v int32)                              { m.Limit = v }
func (m *TLchannels_getAdminLog) Getlimit() int32                               { return m.Limit }
func (m *TLauth_signUp) Setphone_number(v string)                               { m.Phone_number = v }
func (m *TLauth_signUp) Getphone_number() string                                { return m.Phone_number }
func (m *TLauth_signUp) Setphone_code_hash(v string)                            { m.Phone_code_hash = v }
func (m *TLauth_signUp) Getphone_code_hash() string                             { return m.Phone_code_hash }
func (m *TLauth_signUp) Setfirst_name(v string)                                 { m.First_name = v }
func (m *TLauth_signUp) Getfirst_name() string                                  { return m.First_name }
func (m *TLauth_signUp) Setlast_name(v string)                                  { m.Last_name = v }
func (m *TLauth_signUp) Getlast_name() string                                   { return m.Last_name }
func (m *TLauth_signIn) Setphone_number(v string)                               { m.Phone_number = v }
func (m *TLauth_signIn) Getphone_number() string                                { return m.Phone_number }
func (m *TLauth_signIn) Setphone_code_hash(v string)                            { m.Phone_code_hash = v }
func (m *TLauth_signIn) Getphone_code_hash() string                             { return m.Phone_code_hash }
func (m *TLauth_signIn) Setphone_code(v string)                                 { m.Phone_code = v }
func (m *TLauth_signIn) Getphone_code() string                                  { return m.Phone_code }
func (m *TLauth_importAuthorization) Setid(v int32)                             { m.Id = v }
func (m *TLauth_importAuthorization) Getid() int32                              { return m.Id }
func (m *TLauth_importAuthorization) Setbytes(v []uint8)                        { m.Bytes = v }
func (m *TLauth_importAuthorization) Getbytes() []uint8                         { return m.Bytes }
func (m *TLauth_importBotAuthorization) Setflags(v int32)                       { m.Flags = v }
func (m *TLauth_importBotAuthorization) Getflags() int32                        { return m.Flags }
func (m *TLauth_importBotAuthorization) Setapi_id(v int32)                      { m.Api_id = v }
func (m *TLauth_importBotAuthorization) Getapi_id() int32                       { return m.Api_id }
func (m *TLauth_importBotAuthorization) Setapi_hash(v string)                   { m.Api_hash = v }
func (m *TLauth_importBotAuthorization) Getapi_hash() string                    { return m.Api_hash }
func (m *TLauth_importBotAuthorization) Setbot_auth_token(v string)             { m.Bot_auth_token = v }
func (m *TLauth_importBotAuthorization) Getbot_auth_token() string              { return m.Bot_auth_token }
func (m *TLauth_checkPassword) Setpassword(v InputCheckPasswordSRP)             { m.Password = v }
func (m *TLauth_checkPassword) Getpassword() InputCheckPasswordSRP              { return m.Password }
func (m *TLauth_recoverPassword) Setcode(v string)                              { m.Code = v }
func (m *TLauth_recoverPassword) Getcode() string                               { return m.Code }
func (m *TLmessages_getFavedStickers) Sethash(v int32)                          { m.Hash = v }
func (m *TLmessages_getFavedStickers) Gethash() int32                           { return m.Hash }
func (m *TLaccount_getPasswordSettings) Setpassword(v InputCheckPasswordSRP)    { m.Password = v }
func (m *TLaccount_getPasswordSettings) Getpassword() InputCheckPasswordSRP     { return m.Password }
func (m *TLaccount_getPrivacy) Setkey_key(v InputPrivacyKey)                    { m.Key_key = v }
func (m *TLaccount_getPrivacy) Getkey_key() InputPrivacyKey                     { return m.Key_key }
func (m *TLaccount_setPrivacy) Setkey_key(v InputPrivacyKey)                    { m.Key_key = v }
func (m *TLaccount_setPrivacy) Getkey_key() InputPrivacyKey                     { return m.Key_key }
func (m *TLaccount_setPrivacy) Setrules(v []InputPrivacyRule)                   { m.Rules = v }
func (m *TLaccount_setPrivacy) Getrules() []InputPrivacyRule                    { return m.Rules }
func (m *TLpayments_getPaymentForm) Setmsg_id(v int32)                          { m.Msg_id = v }
func (m *TLpayments_getPaymentForm) Getmsg_id() int32                           { return m.Msg_id }
func (m *TLphotos_updateProfilePhoto) Setid(v InputPhoto)                       { m.Id = v }
func (m *TLphotos_updateProfilePhoto) Getid() InputPhoto                        { return m.Id }
func (m *TLphotos_uploadProfilePhoto) Setfile(v InputFile)                      { m.File = v }
func (m *TLphotos_uploadProfilePhoto) Getfile() InputFile                       { return m.File }
func (m *TLphotos_uploadProfilePhoto) Setvideo(v InputFile)                     { m.Video = v }
func (m *TLphotos_uploadProfilePhoto) Getvideo() InputFile                      { return m.Video }
func (m *TLphotos_uploadProfilePhoto) Setvideo_start_ts(v float64)              { m.Video_start_ts = v }
func (m *TLphotos_uploadProfilePhoto) Getvideo_start_ts() float64               { return m.Video_start_ts }
func (m *TLmessages_getDocumentByHash) Setsha256(v []uint8)                     { m.Sha256 = v }
func (m *TLmessages_getDocumentByHash) Getsha256() []uint8                      { return m.Sha256 }
func (m *TLmessages_getDocumentByHash) Setsize(v int32)                         { m.Size = v }
func (m *TLmessages_getDocumentByHash) Getsize() int32                          { return m.Size }
func (m *TLmessages_getDocumentByHash) Setmime_type(v string)                   { m.Mime_type = v }
func (m *TLmessages_getDocumentByHash) Getmime_type() string                    { return m.Mime_type }
func (m *TLaccount_uploadTheme) Setfile(v InputFile)                            { m.File = v }
func (m *TLaccount_uploadTheme) Getfile() InputFile                             { return m.File }
func (m *TLaccount_uploadTheme) Setthumb(v InputFile)                           { m.Thumb = v }
func (m *TLaccount_uploadTheme) Getthumb() InputFile                            { return m.Thumb }
func (m *TLaccount_uploadTheme) Setfile_name(v string)                          { m.File_name = v }
func (m *TLaccount_uploadTheme) Getfile_name() string                           { return m.File_name }
func (m *TLaccount_uploadTheme) Setmime_type(v string)                          { m.Mime_type = v }
func (m *TLaccount_uploadTheme) Getmime_type() string                           { return m.Mime_type }
func (m *TLbots_sendCustomRequest) Setcustom_method(v string)                   { m.Custom_method = v }
func (m *TLbots_sendCustomRequest) Getcustom_method() string                    { return m.Custom_method }
func (m *TLbots_sendCustomRequest) Setparams(v DataJSON)                        { m.Params = v }
func (m *TLbots_sendCustomRequest) Getparams() DataJSON                         { return m.Params }
func (m *TLpayments_validateRequestedInfo) Setsave(v bool)                      { m.Save = v }
func (m *TLpayments_validateRequestedInfo) Getsave() bool                       { return m.Save }
func (m *TLpayments_validateRequestedInfo) Setmsg_id(v int32)                   { m.Msg_id = v }
func (m *TLpayments_validateRequestedInfo) Getmsg_id() int32                    { return m.Msg_id }
func (m *TLpayments_validateRequestedInfo) Setinfo(v PaymentRequestedInfo)      { m.Info = v }
func (m *TLpayments_validateRequestedInfo) Getinfo() PaymentRequestedInfo       { return m.Info }
func (m *TLauth_bindTempAuthKey) Setperm_auth_key_id(v int64)                   { m.Perm_auth_key_id = v }
func (m *TLauth_bindTempAuthKey) Getperm_auth_key_id() int64                    { return m.Perm_auth_key_id }
func (m *TLauth_bindTempAuthKey) Setnonce(v int64)                              { m.Nonce = v }
func (m *TLauth_bindTempAuthKey) Getnonce() int64                               { return m.Nonce }
func (m *TLauth_bindTempAuthKey) Setexpires_at(v int32)                         { m.Expires_at = v }
func (m *TLauth_bindTempAuthKey) Getexpires_at() int32                          { return m.Expires_at }
func (m *TLauth_bindTempAuthKey) Setencrypted_message(v []uint8)                { m.Encrypted_message = v }
func (m *TLauth_bindTempAuthKey) Getencrypted_message() []uint8                 { return m.Encrypted_message }
func (m *TLaccount_registerDevice) Setno_muted(v bool)                          { m.No_muted = v }
func (m *TLaccount_registerDevice) Getno_muted() bool                           { return m.No_muted }
func (m *TLaccount_registerDevice) Settoken_type(v int32)                       { m.Token_type = v }
func (m *TLaccount_registerDevice) Gettoken_type() int32                        { return m.Token_type }
func (m *TLaccount_registerDevice) Settoken(v string)                           { m.Token = v }
func (m *TLaccount_registerDevice) Gettoken() string                            { return m.Token }
func (m *TLaccount_registerDevice) Setapp_sandbox(v Bool)                       { m.App_sandbox = v }
func (m *TLaccount_registerDevice) Getapp_sandbox() Bool                        { return m.App_sandbox }
func (m *TLaccount_registerDevice) Setsecret(v []uint8)                         { m.Secret = v }
func (m *TLaccount_registerDevice) Getsecret() []uint8                          { return m.Secret }
func (m *TLaccount_registerDevice) Setother_uids(v []int32)                     { m.Other_uids = v }
func (m *TLaccount_registerDevice) Getother_uids() []int32                      { return m.Other_uids }
func (m *TLaccount_unregisterDevice) Settoken_type(v int32)                     { m.Token_type = v }
func (m *TLaccount_unregisterDevice) Gettoken_type() int32                      { return m.Token_type }
func (m *TLaccount_unregisterDevice) Settoken(v string)                         { m.Token = v }
func (m *TLaccount_unregisterDevice) Gettoken() string                          { return m.Token }
func (m *TLaccount_unregisterDevice) Setother_uids(v []int32)                   { m.Other_uids = v }
func (m *TLaccount_unregisterDevice) Getother_uids() []int32                    { return m.Other_uids }
func (m *TLaccount_updateNotifySettings) Setpeer(v InputNotifyPeer)             { m.Peer = v }
func (m *TLaccount_updateNotifySettings) Getpeer() InputNotifyPeer              { return m.Peer }
func (m *TLaccount_updateNotifySettings) Setsettings(v InputPeerNotifySettings) { m.Settings = v }
func (m *TLaccount_updateNotifySettings) Getsettings() InputPeerNotifySettings  { return m.Settings }
func (m *TLaccount_updateStatus) Setoffline(v Bool)                             { m.Offline = v }
func (m *TLaccount_updateStatus) Getoffline() Bool                              { return m.Offline }
func (m *TLaccount_reportPeer) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLaccount_reportPeer) Getpeer() InputPeer                              { return m.Peer }
func (m *TLaccount_reportPeer) Setreason(v ReportReason)                        { m.Reason = v }
func (m *TLaccount_reportPeer) Getreason() ReportReason                         { return m.Reason }
func (m *TLcontacts_deleteByPhones) Setphones(v []String)                       { m.Phones = v }
func (m *TLcontacts_deleteByPhones) Getphones() []String                        { return m.Phones }
func (m *TLcontacts_block) Setid(v InputPeer)                                   { m.Id = v }
func (m *TLcontacts_block) Getid() InputPeer                                    { return m.Id }
func (m *TLcontacts_unblock) Setid(v InputPeer)                                 { m.Id = v }
func (m *TLcontacts_unblock) Getid() InputPeer                                  { return m.Id }
func (m *TLmessages_setTyping) Setpeer(v InputPeer)                             { m.Peer = v }
func (m *TLmessages_setTyping) Getpeer() InputPeer                              { return m.Peer }
func (m *TLmessages_setTyping) Settop_msg_id(v int32)                           { m.Top_msg_id = v }
func (m *TLmessages_setTyping) Gettop_msg_id() int32                            { return m.Top_msg_id }
func (m *TLmessages_setTyping) Setaction(v SendMessageAction)                   { m.Action = v }
func (m *TLmessages_setTyping) Getaction() SendMessageAction                    { return m.Action }
func (m *TLmessages_reportSpam) Setpeer(v InputPeer)                            { m.Peer = v }
func (m *TLmessages_reportSpam) Getpeer() InputPeer                             { return m.Peer }
func (m *TLmessages_report) Setpeer(v InputPeer)                                { m.Peer = v }
func (m *TLmessages_report) Getpeer() InputPeer                                 { return m.Peer }
func (m *TLmessages_report) Setid(v []int32)                                    { m.Id = v }
func (m *TLmessages_report) Getid() []int32                                     { return m.Id }
func (m *TLmessages_report) Setreason(v ReportReason)                           { m.Reason = v }
func (m *TLmessages_report) Getreason() ReportReason                            { return m.Reason }
func (m *TLupload_saveFilePart) Setfile_id(v int64)                             { m.File_id = v }
func (m *TLupload_saveFilePart) Getfile_id() int64                              { return m.File_id }
func (m *TLupload_saveFilePart) Setfile_part(v int32)                           { m.File_part = v }
func (m *TLupload_saveFilePart) Getfile_part() int32                            { return m.File_part }
func (m *TLupload_saveFilePart) Setbytes(v []uint8)                             { m.Bytes = v }
func (m *TLupload_saveFilePart) Getbytes() []uint8                              { return m.Bytes }
func (m *TLmessages_discardEncryption) Setchat_id(v int32)                      { m.Chat_id = v }
func (m *TLmessages_discardEncryption) Getchat_id() int32                       { return m.Chat_id }
func (m *TLmessages_setEncryptedTyping) Setpeer(v InputEncryptedChat)           { m.Peer = v }
func (m *TLmessages_setEncryptedTyping) Getpeer() InputEncryptedChat            { return m.Peer }
func (m *TLmessages_setEncryptedTyping) Settyping(v Bool)                       { m.Typing = v }
func (m *TLmessages_setEncryptedTyping) Gettyping() Bool                        { return m.Typing }
func (m *TLmessages_readEncryptedHistory) Setpeer(v InputEncryptedChat)         { m.Peer = v }
func (m *TLmessages_readEncryptedHistory) Getpeer() InputEncryptedChat          { return m.Peer }
func (m *TLmessages_readEncryptedHistory) Setmax_date(v int32)                  { m.Max_date = v }
func (m *TLmessages_readEncryptedHistory) Getmax_date() int32                   { return m.Max_date }
func (m *TLmessages_reportEncryptedSpam) Setpeer(v InputEncryptedChat)          { m.Peer = v }
func (m *TLmessages_reportEncryptedSpam) Getpeer() InputEncryptedChat           { return m.Peer }
func (m *TLupload_saveBigFilePart) Setfile_id(v int64)                          { m.File_id = v }
func (m *TLupload_saveBigFilePart) Getfile_id() int64                           { return m.File_id }
func (m *TLupload_saveBigFilePart) Setfile_part(v int32)                        { m.File_part = v }
func (m *TLupload_saveBigFilePart) Getfile_part() int32                         { return m.File_part }
func (m *TLupload_saveBigFilePart) Setfile_total_parts(v int32)                 { m.File_total_parts = v }
func (m *TLupload_saveBigFilePart) Getfile_total_parts() int32                  { return m.File_total_parts }
func (m *TLupload_saveBigFilePart) Setbytes(v []uint8)                          { m.Bytes = v }
func (m *TLupload_saveBigFilePart) Getbytes() []uint8                           { return m.Bytes }
func (m *TLaccount_checkUsername) Setusername(v string)                         { m.Username = v }
func (m *TLaccount_checkUsername) Getusername() string                          { return m.Username }
func (m *TLaccount_deleteAccount) Setreason(v string)                           { m.Reason = v }
func (m *TLaccount_deleteAccount) Getreason() string                            { return m.Reason }
func (m *TLaccount_setAccountTTL) Setttl(v AccountDaysTTL)                      { m.Ttl = v }
func (m *TLaccount_setAccountTTL) Getttl() AccountDaysTTL                       { return m.Ttl }
func (m *TLaccount_updateDeviceLocked) Setperiod(v int32)                       { m.Period = v }
func (m *TLaccount_updateDeviceLocked) Getperiod() int32                        { return m.Period }
func (m *TLaccount_resetAuthorization) Sethash(v int64)                         { m.Hash = v }
func (m *TLaccount_resetAuthorization) Gethash() int64                          { return m.Hash }
func (m *TLaccount_updatePasswordSettings) Setpassword(v InputCheckPasswordSRP) { m.Password = v }
func (m *TLaccount_updatePasswordSettings) Getpassword() InputCheckPasswordSRP  { return m.Password }
func (m *TLaccount_updatePasswordSettings) Setnew_settings(v Account_PasswordInputSettings) {
	m.New_settings = v
}
func (m *TLaccount_updatePasswordSettings) Getnew_settings() Account_PasswordInputSettings {
	return m.New_settings
}
func (m *TLmessages_uninstallStickerSet) Setstickerset(v InputStickerSet)     { m.Stickerset = v }
func (m *TLmessages_uninstallStickerSet) Getstickerset() InputStickerSet      { return m.Stickerset }
func (m *TLchannels_readHistory) Setchannel(v InputChannel)                   { m.Channel = v }
func (m *TLchannels_readHistory) Getchannel() InputChannel                    { return m.Channel }
func (m *TLchannels_readHistory) Setmax_id(v int32)                           { m.Max_id = v }
func (m *TLchannels_readHistory) Getmax_id() int32                            { return m.Max_id }
func (m *TLchannels_reportSpam) Setchannel(v InputChannel)                    { m.Channel = v }
func (m *TLchannels_reportSpam) Getchannel() InputChannel                     { return m.Channel }
func (m *TLchannels_reportSpam) Setuser_id(v InputUser)                       { m.User_id = v }
func (m *TLchannels_reportSpam) Getuser_id() InputUser                        { return m.User_id }
func (m *TLchannels_reportSpam) Setid(v []int32)                              { m.Id = v }
func (m *TLchannels_reportSpam) Getid() []int32                               { return m.Id }
func (m *TLchannels_checkUsername) Setchannel(v InputChannel)                 { m.Channel = v }
func (m *TLchannels_checkUsername) Getchannel() InputChannel                  { return m.Channel }
func (m *TLchannels_checkUsername) Setusername(v string)                      { m.Username = v }
func (m *TLchannels_checkUsername) Getusername() string                       { return m.Username }
func (m *TLchannels_updateUsername) Setchannel(v InputChannel)                { m.Channel = v }
func (m *TLchannels_updateUsername) Getchannel() InputChannel                 { return m.Channel }
func (m *TLchannels_updateUsername) Setusername(v string)                     { m.Username = v }
func (m *TLchannels_updateUsername) Getusername() string                      { return m.Username }
func (m *TLmessages_editChatAdmin) Setchat_id(v int32)                        { m.Chat_id = v }
func (m *TLmessages_editChatAdmin) Getchat_id() int32                         { return m.Chat_id }
func (m *TLmessages_editChatAdmin) Setuser_id(v InputUser)                    { m.User_id = v }
func (m *TLmessages_editChatAdmin) Getuser_id() InputUser                     { return m.User_id }
func (m *TLmessages_editChatAdmin) Setis_admin(v Bool)                        { m.Is_admin = v }
func (m *TLmessages_editChatAdmin) Getis_admin() Bool                         { return m.Is_admin }
func (m *TLmessages_reorderStickerSets) Setmasks(v bool)                      { m.Masks = v }
func (m *TLmessages_reorderStickerSets) Getmasks() bool                       { return m.Masks }
func (m *TLmessages_reorderStickerSets) Setorder(v []Long)                    { m.Order = v }
func (m *TLmessages_reorderStickerSets) Getorder() []Long                     { return m.Order }
func (m *TLmessages_saveGif) Setid(v InputDocument)                           { m.Id = v }
func (m *TLmessages_saveGif) Getid() InputDocument                            { return m.Id }
func (m *TLmessages_saveGif) Setunsave(v Bool)                                { m.Unsave = v }
func (m *TLmessages_saveGif) Getunsave() Bool                                 { return m.Unsave }
func (m *TLmessages_setInlineBotResults) Setgallery(v bool)                   { m.Gallery = v }
func (m *TLmessages_setInlineBotResults) Getgallery() bool                    { return m.Gallery }
func (m *TLmessages_setInlineBotResults) Setprivate(v bool)                   { m.Private = v }
func (m *TLmessages_setInlineBotResults) Getprivate() bool                    { return m.Private }
func (m *TLmessages_setInlineBotResults) Setquery_id(v int64)                 { m.Query_id = v }
func (m *TLmessages_setInlineBotResults) Getquery_id() int64                  { return m.Query_id }
func (m *TLmessages_setInlineBotResults) Setresults(v []InputBotInlineResult) { m.Results = v }
func (m *TLmessages_setInlineBotResults) Getresults() []InputBotInlineResult  { return m.Results }
func (m *TLmessages_setInlineBotResults) Setcache_time(v int32)               { m.Cache_time = v }
func (m *TLmessages_setInlineBotResults) Getcache_time() int32                { return m.Cache_time }
func (m *TLmessages_setInlineBotResults) Setnext_offset(v string)             { m.Next_offset = v }
func (m *TLmessages_setInlineBotResults) Getnext_offset() string              { return m.Next_offset }
func (m *TLmessages_setInlineBotResults) Setswitch_pm(v InlineBotSwitchPM)    { m.Switch_pm = v }
func (m *TLmessages_setInlineBotResults) Getswitch_pm() InlineBotSwitchPM     { return m.Switch_pm }
func (m *TLauth_cancelCode) Setphone_number(v string)                         { m.Phone_number = v }
func (m *TLauth_cancelCode) Getphone_number() string                          { return m.Phone_number }
func (m *TLauth_cancelCode) Setphone_code_hash(v string)                      { m.Phone_code_hash = v }
func (m *TLauth_cancelCode) Getphone_code_hash() string                       { return m.Phone_code_hash }
func (m *TLmessages_editInlineBotMessage) Setno_webpage(v bool)               { m.No_webpage = v }
func (m *TLmessages_editInlineBotMessage) Getno_webpage() bool                { return m.No_webpage }
func (m *TLmessages_editInlineBotMessage) Setid(v InputBotInlineMessageID)    { m.Id = v }
func (m *TLmessages_editInlineBotMessage) Getid() InputBotInlineMessageID     { return m.Id }
func (m *TLmessages_editInlineBotMessage) Setmessage(v string)                { m.Message = v }
func (m *TLmessages_editInlineBotMessage) Getmessage() string                 { return m.Message }
func (m *TLmessages_editInlineBotMessage) Setmedia(v InputMedia)              { m.Media = v }
func (m *TLmessages_editInlineBotMessage) Getmedia() InputMedia               { return m.Media }
func (m *TLmessages_editInlineBotMessage) Setreply_markup(v ReplyMarkup)      { m.Reply_markup = v }
func (m *TLmessages_editInlineBotMessage) Getreply_markup() ReplyMarkup       { return m.Reply_markup }
func (m *TLmessages_editInlineBotMessage) Setentities(v []MessageEntity)      { m.Entities = v }
func (m *TLmessages_editInlineBotMessage) Getentities() []MessageEntity       { return m.Entities }
func (m *TLmessages_setBotCallbackAnswer) Setalert(v bool)                    { m.Alert = v }
func (m *TLmessages_setBotCallbackAnswer) Getalert() bool                     { return m.Alert }
func (m *TLmessages_setBotCallbackAnswer) Setquery_id(v int64)                { m.Query_id = v }
func (m *TLmessages_setBotCallbackAnswer) Getquery_id() int64                 { return m.Query_id }
func (m *TLmessages_setBotCallbackAnswer) Setmessage(v string)                { m.Message = v }
func (m *TLmessages_setBotCallbackAnswer) Getmessage() string                 { return m.Message }
func (m *TLmessages_setBotCallbackAnswer) Seturl(v string)                    { m.Url = v }
func (m *TLmessages_setBotCallbackAnswer) Geturl() string                     { return m.Url }
func (m *TLmessages_setBotCallbackAnswer) Setcache_time(v int32)              { m.Cache_time = v }
func (m *TLmessages_setBotCallbackAnswer) Getcache_time() int32               { return m.Cache_time }
func (m *TLcontacts_resetTopPeerRating) Setcategory(v TopPeerCategory)        { m.Category = v }
func (m *TLcontacts_resetTopPeerRating) Getcategory() TopPeerCategory         { return m.Category }
func (m *TLcontacts_resetTopPeerRating) Setpeer(v InputPeer)                  { m.Peer = v }
func (m *TLcontacts_resetTopPeerRating) Getpeer() InputPeer                   { return m.Peer }
func (m *TLmessages_saveDraft) Setno_webpage(v bool)                          { m.No_webpage = v }
func (m *TLmessages_saveDraft) Getno_webpage() bool                           { return m.No_webpage }
func (m *TLmessages_saveDraft) Setreply_to_msg_id(v int32)                    { m.Reply_to_msg_id = v }
func (m *TLmessages_saveDraft) Getreply_to_msg_id() int32                     { return m.Reply_to_msg_id }
func (m *TLmessages_saveDraft) Setpeer(v InputPeer)                           { m.Peer = v }
func (m *TLmessages_saveDraft) Getpeer() InputPeer                            { return m.Peer }
func (m *TLmessages_saveDraft) Setmessage(v string)                           { m.Message = v }
func (m *TLmessages_saveDraft) Getmessage() string                            { return m.Message }
func (m *TLmessages_saveDraft) Setentities(v []MessageEntity)                 { m.Entities = v }
func (m *TLmessages_saveDraft) Getentities() []MessageEntity                  { return m.Entities }
func (m *TLmessages_readFeaturedStickers) Setid(v []Long)                     { m.Id = v }
func (m *TLmessages_readFeaturedStickers) Getid() []Long                      { return m.Id }
func (m *TLmessages_saveRecentSticker) Setattached(v bool)                    { m.Attached = v }
func (m *TLmessages_saveRecentSticker) Getattached() bool                     { return m.Attached }
func (m *TLmessages_saveRecentSticker) Setid(v InputDocument)                 { m.Id = v }
func (m *TLmessages_saveRecentSticker) Getid() InputDocument                  { return m.Id }
func (m *TLmessages_saveRecentSticker) Setunsave(v Bool)                      { m.Unsave = v }
func (m *TLmessages_saveRecentSticker) Getunsave() Bool                       { return m.Unsave }
func (m *TLmessages_clearRecentStickers) Setattached(v bool)                  { m.Attached = v }
func (m *TLmessages_clearRecentStickers) Getattached() bool                   { return m.Attached }
func (m *TLaccount_confirmPhone) Setphone_code_hash(v string)                 { m.Phone_code_hash = v }
func (m *TLaccount_confirmPhone) Getphone_code_hash() string                  { return m.Phone_code_hash }
func (m *TLaccount_confirmPhone) Setphone_code(v string)                      { m.Phone_code = v }
func (m *TLaccount_confirmPhone) Getphone_code() string                       { return m.Phone_code }
func (m *TLauth_dropTempAuthKeys) Setexcept_auth_keys(v []Long)               { m.Except_auth_keys = v }
func (m *TLauth_dropTempAuthKeys) Getexcept_auth_keys() []Long                { return m.Except_auth_keys }
func (m *TLmessages_setInlineGameScore) Setedit_message(v bool)               { m.Edit_message = v }
func (m *TLmessages_setInlineGameScore) Getedit_message() bool                { return m.Edit_message }
func (m *TLmessages_setInlineGameScore) Setforce(v bool)                      { m.Force = v }
func (m *TLmessages_setInlineGameScore) Getforce() bool                       { return m.Force }
func (m *TLmessages_setInlineGameScore) Setid(v InputBotInlineMessageID)      { m.Id = v }
func (m *TLmessages_setInlineGameScore) Getid() InputBotInlineMessageID       { return m.Id }
func (m *TLmessages_setInlineGameScore) Setuser_id(v InputUser)               { m.User_id = v }
func (m *TLmessages_setInlineGameScore) Getuser_id() InputUser                { return m.User_id }
func (m *TLmessages_setInlineGameScore) Setscore(v int32)                     { m.Score = v }
func (m *TLmessages_setInlineGameScore) Getscore() int32                      { return m.Score }
func (m *TLhelp_setBotUpdatesStatus) Setpending_updates_count(v int32)        { m.Pending_updates_count = v }
func (m *TLhelp_setBotUpdatesStatus) Getpending_updates_count() int32         { return m.Pending_updates_count }
func (m *TLhelp_setBotUpdatesStatus) Setmessage(v string)                     { m.Message = v }
func (m *TLhelp_setBotUpdatesStatus) Getmessage() string                      { return m.Message }
func (m *TLmessages_toggleDialogPin) Setpinned(v bool)                        { m.Pinned = v }
func (m *TLmessages_toggleDialogPin) Getpinned() bool                         { return m.Pinned }
func (m *TLmessages_toggleDialogPin) Setpeer(v InputDialogPeer)               { m.Peer = v }
func (m *TLmessages_toggleDialogPin) Getpeer() InputDialogPeer                { return m.Peer }
func (m *TLmessages_reorderPinnedDialogs) Setforce(v bool)                    { m.Force = v }
func (m *TLmessages_reorderPinnedDialogs) Getforce() bool                     { return m.Force }
func (m *TLmessages_reorderPinnedDialogs) Setfolder_id(v int32)               { m.Folder_id = v }
func (m *TLmessages_reorderPinnedDialogs) Getfolder_id() int32                { return m.Folder_id }
func (m *TLmessages_reorderPinnedDialogs) Setorder(v []InputDialogPeer)       { m.Order = v }
func (m *TLmessages_reorderPinnedDialogs) Getorder() []InputDialogPeer        { return m.Order }
func (m *TLbots_answerWebhookJSONQuery) Setquery_id(v int64)                  { m.Query_id = v }
func (m *TLbots_answerWebhookJSONQuery) Getquery_id() int64                   { return m.Query_id }
func (m *TLbots_answerWebhookJSONQuery) Setdata(v DataJSON)                   { m.Data = v }
func (m *TLbots_answerWebhookJSONQuery) Getdata() DataJSON                    { return m.Data }
func (m *TLpayments_clearSavedInfo) Setcredentials(v bool)                    { m.Credentials = v }
func (m *TLpayments_clearSavedInfo) Getcredentials() bool                     { return m.Credentials }
func (m *TLpayments_clearSavedInfo) Setinfo(v bool)                           { m.Info = v }
func (m *TLpayments_clearSavedInfo) Getinfo() bool                            { return m.Info }
func (m *TLmessages_setBotShippingResults) Setquery_id(v int64)               { m.Query_id = v }
func (m *TLmessages_setBotShippingResults) Getquery_id() int64                { return m.Query_id }
func (m *TLmessages_setBotShippingResults) Seterror(v string)                 { m.Error = v }
func (m *TLmessages_setBotShippingResults) Geterror() string                  { return m.Error }
func (m *TLmessages_setBotShippingResults) Setshipping_options(v []ShippingOption) {
	m.Shipping_options = v
}
func (m *TLmessages_setBotShippingResults) Getshipping_options() []ShippingOption {
	return m.Shipping_options
}
func (m *TLmessages_setBotPrecheckoutResults) Setsuccess(v bool)             { m.Success = v }
func (m *TLmessages_setBotPrecheckoutResults) Getsuccess() bool              { return m.Success }
func (m *TLmessages_setBotPrecheckoutResults) Setquery_id(v int64)           { m.Query_id = v }
func (m *TLmessages_setBotPrecheckoutResults) Getquery_id() int64            { return m.Query_id }
func (m *TLmessages_setBotPrecheckoutResults) Seterror(v string)             { m.Error = v }
func (m *TLmessages_setBotPrecheckoutResults) Geterror() string              { return m.Error }
func (m *TLphone_receivedCall) Setpeer(v InputPhoneCall)                     { m.Peer = v }
func (m *TLphone_receivedCall) Getpeer() InputPhoneCall                      { return m.Peer }
func (m *TLphone_saveCallDebug) Setpeer(v InputPhoneCall)                    { m.Peer = v }
func (m *TLphone_saveCallDebug) Getpeer() InputPhoneCall                     { return m.Peer }
func (m *TLphone_saveCallDebug) Setdebug(v DataJSON)                         { m.Debug = v }
func (m *TLphone_saveCallDebug) Getdebug() DataJSON                          { return m.Debug }
func (m *TLchannels_setStickers) Setchannel(v InputChannel)                  { m.Channel = v }
func (m *TLchannels_setStickers) Getchannel() InputChannel                   { return m.Channel }
func (m *TLchannels_setStickers) Setstickerset(v InputStickerSet)            { m.Stickerset = v }
func (m *TLchannels_setStickers) Getstickerset() InputStickerSet             { return m.Stickerset }
func (m *TLmessages_faveSticker) Setid(v InputDocument)                      { m.Id = v }
func (m *TLmessages_faveSticker) Getid() InputDocument                       { return m.Id }
func (m *TLmessages_faveSticker) Setunfave(v Bool)                           { m.Unfave = v }
func (m *TLmessages_faveSticker) Getunfave() Bool                            { return m.Unfave }
func (m *TLchannels_readMessageContents) Setchannel(v InputChannel)          { m.Channel = v }
func (m *TLchannels_readMessageContents) Getchannel() InputChannel           { return m.Channel }
func (m *TLchannels_readMessageContents) Setid(v []int32)                    { m.Id = v }
func (m *TLchannels_readMessageContents) Getid() []int32                     { return m.Id }
func (m *TLchannels_deleteHistory) Setchannel(v InputChannel)                { m.Channel = v }
func (m *TLchannels_deleteHistory) Getchannel() InputChannel                 { return m.Channel }
func (m *TLchannels_deleteHistory) Setmax_id(v int32)                        { m.Max_id = v }
func (m *TLchannels_deleteHistory) Getmax_id() int32                         { return m.Max_id }
func (m *TLaccount_resetWebAuthorization) Sethash(v int64)                   { m.Hash = v }
func (m *TLaccount_resetWebAuthorization) Gethash() int64                    { return m.Hash }
func (m *TLhelp_acceptTermsOfService) Setid(v DataJSON)                      { m.Id = v }
func (m *TLhelp_acceptTermsOfService) Getid() DataJSON                       { return m.Id }
func (m *TLaccount_deleteSecureValue) Settypes(v []SecureValueType)          { m.Types = v }
func (m *TLaccount_deleteSecureValue) Gettypes() []SecureValueType           { return m.Types }
func (m *TLusers_setSecureValueErrors) Setid(v InputUser)                    { m.Id = v }
func (m *TLusers_setSecureValueErrors) Getid() InputUser                     { return m.Id }
func (m *TLusers_setSecureValueErrors) Seterrors(v []SecureValueError)       { m.Errors = v }
func (m *TLusers_setSecureValueErrors) Geterrors() []SecureValueError        { return m.Errors }
func (m *TLaccount_acceptAuthorization) Setbot_id(v int32)                   { m.Bot_id = v }
func (m *TLaccount_acceptAuthorization) Getbot_id() int32                    { return m.Bot_id }
func (m *TLaccount_acceptAuthorization) Setscope(v string)                   { m.Scope = v }
func (m *TLaccount_acceptAuthorization) Getscope() string                    { return m.Scope }
func (m *TLaccount_acceptAuthorization) Setpublic_key(v string)              { m.Public_key = v }
func (m *TLaccount_acceptAuthorization) Getpublic_key() string               { return m.Public_key }
func (m *TLaccount_acceptAuthorization) Setvalue_hashes(v []SecureValueHash) { m.Value_hashes = v }
func (m *TLaccount_acceptAuthorization) Getvalue_hashes() []SecureValueHash  { return m.Value_hashes }
func (m *TLaccount_acceptAuthorization) Setcredentials(v SecureCredentialsEncrypted) {
	m.Credentials = v
}
func (m *TLaccount_acceptAuthorization) Getcredentials() SecureCredentialsEncrypted {
	return m.Credentials
}
func (m *TLaccount_verifyPhone) Setphone_number(v string)                        { m.Phone_number = v }
func (m *TLaccount_verifyPhone) Getphone_number() string                         { return m.Phone_number }
func (m *TLaccount_verifyPhone) Setphone_code_hash(v string)                     { m.Phone_code_hash = v }
func (m *TLaccount_verifyPhone) Getphone_code_hash() string                      { return m.Phone_code_hash }
func (m *TLaccount_verifyPhone) Setphone_code(v string)                          { m.Phone_code = v }
func (m *TLaccount_verifyPhone) Getphone_code() string                           { return m.Phone_code }
func (m *TLaccount_verifyEmail) Setemail(v string)                               { m.Email = v }
func (m *TLaccount_verifyEmail) Getemail() string                                { return m.Email }
func (m *TLaccount_verifyEmail) Setcode(v string)                                { m.Code = v }
func (m *TLaccount_verifyEmail) Getcode() string                                 { return m.Code }
func (m *TLaccount_finishTakeoutSession) Setsuccess(v bool)                      { m.Success = v }
func (m *TLaccount_finishTakeoutSession) Getsuccess() bool                       { return m.Success }
func (m *TLmessages_markDialogUnread) Setunread(v bool)                          { m.Unread = v }
func (m *TLmessages_markDialogUnread) Getunread() bool                           { return m.Unread }
func (m *TLmessages_markDialogUnread) Setpeer(v InputDialogPeer)                 { m.Peer = v }
func (m *TLmessages_markDialogUnread) Getpeer() InputDialogPeer                  { return m.Peer }
func (m *TLcontacts_toggleTopPeers) Setenabled(v Bool)                           { m.Enabled = v }
func (m *TLcontacts_toggleTopPeers) Getenabled() Bool                            { return m.Enabled }
func (m *TLhelp_saveAppLog) Setevents(v []InputAppEvent)                         { m.Events = v }
func (m *TLhelp_saveAppLog) Getevents() []InputAppEvent                          { return m.Events }
func (m *TLaccount_confirmPasswordEmail) Setcode(v string)                       { m.Code = v }
func (m *TLaccount_confirmPasswordEmail) Getcode() string                        { return m.Code }
func (m *TLaccount_setContactSignUpNotification) Setsilent(v Bool)               { m.Silent = v }
func (m *TLaccount_setContactSignUpNotification) Getsilent() Bool                { return m.Silent }
func (m *TLmessages_editChatAbout) Setpeer(v InputPeer)                          { m.Peer = v }
func (m *TLmessages_editChatAbout) Getpeer() InputPeer                           { return m.Peer }
func (m *TLmessages_editChatAbout) Setabout(v string)                            { m.About = v }
func (m *TLmessages_editChatAbout) Getabout() string                             { return m.About }
func (m *TLaccount_saveWallPaper) Setwallpaper(v InputWallPaper)                 { m.Wallpaper = v }
func (m *TLaccount_saveWallPaper) Getwallpaper() InputWallPaper                  { return m.Wallpaper }
func (m *TLaccount_saveWallPaper) Setunsave(v Bool)                              { m.Unsave = v }
func (m *TLaccount_saveWallPaper) Getunsave() Bool                               { return m.Unsave }
func (m *TLaccount_saveWallPaper) Setsettings(v WallPaperSettings)               { m.Settings = v }
func (m *TLaccount_saveWallPaper) Getsettings() WallPaperSettings                { return m.Settings }
func (m *TLaccount_installWallPaper) Setwallpaper(v InputWallPaper)              { m.Wallpaper = v }
func (m *TLaccount_installWallPaper) Getwallpaper() InputWallPaper               { return m.Wallpaper }
func (m *TLaccount_installWallPaper) Setsettings(v WallPaperSettings)            { m.Settings = v }
func (m *TLaccount_installWallPaper) Getsettings() WallPaperSettings             { return m.Settings }
func (m *TLaccount_saveAutoDownloadSettings) Setlow(v bool)                      { m.Low = v }
func (m *TLaccount_saveAutoDownloadSettings) Getlow() bool                       { return m.Low }
func (m *TLaccount_saveAutoDownloadSettings) Sethigh(v bool)                     { m.High = v }
func (m *TLaccount_saveAutoDownloadSettings) Gethigh() bool                      { return m.High }
func (m *TLaccount_saveAutoDownloadSettings) Setsettings(v AutoDownloadSettings) { m.Settings = v }
func (m *TLaccount_saveAutoDownloadSettings) Getsettings() AutoDownloadSettings  { return m.Settings }
func (m *TLchannels_setDiscussionGroup) Setbroadcast(v InputChannel)             { m.Broadcast = v }
func (m *TLchannels_setDiscussionGroup) Getbroadcast() InputChannel              { return m.Broadcast }
func (m *TLchannels_setDiscussionGroup) Setgroup(v InputChannel)                 { m.Group = v }
func (m *TLchannels_setDiscussionGroup) Getgroup() InputChannel                  { return m.Group }
func (m *TLmessages_hidePeerSettingsBar) Setpeer(v InputPeer)                    { m.Peer = v }
func (m *TLmessages_hidePeerSettingsBar) Getpeer() InputPeer                     { return m.Peer }
func (m *TLchannels_editLocation) Setchannel(v InputChannel)                     { m.Channel = v }
func (m *TLchannels_editLocation) Getchannel() InputChannel                      { return m.Channel }
func (m *TLchannels_editLocation) Setgeo_point(v InputGeoPoint)                  { m.Geo_point = v }
func (m *TLchannels_editLocation) Getgeo_point() InputGeoPoint                   { return m.Geo_point }
func (m *TLchannels_editLocation) Setaddress(v string)                           { m.Address = v }
func (m *TLchannels_editLocation) Getaddress() string                            { return m.Address }
func (m *TLaccount_saveTheme) Settheme(v InputTheme)                             { m.Theme = v }
func (m *TLaccount_saveTheme) Gettheme() InputTheme                              { return m.Theme }
func (m *TLaccount_saveTheme) Setunsave(v Bool)                                  { m.Unsave = v }
func (m *TLaccount_saveTheme) Getunsave() Bool                                   { return m.Unsave }
func (m *TLaccount_installTheme) Setdark(v bool)                                 { m.Dark = v }
func (m *TLaccount_installTheme) Getdark() bool                                  { return m.Dark }
func (m *TLaccount_installTheme) Setformat(v string)                             { m.Format = v }
func (m *TLaccount_installTheme) Getformat() string                              { return m.Format }
func (m *TLaccount_installTheme) Settheme(v InputTheme)                          { m.Theme = v }
func (m *TLaccount_installTheme) Gettheme() InputTheme                           { return m.Theme }
func (m *TLaccount_setContentSettings) Setsensitive_enabled(v bool)              { m.Sensitive_enabled = v }
func (m *TLaccount_setContentSettings) Getsensitive_enabled() bool               { return m.Sensitive_enabled }
func (m *TLmessages_toggleStickerSets) Setuninstall(v bool)                      { m.Uninstall = v }
func (m *TLmessages_toggleStickerSets) Getuninstall() bool                       { return m.Uninstall }
func (m *TLmessages_toggleStickerSets) Setarchive(v bool)                        { m.Archive = v }
func (m *TLmessages_toggleStickerSets) Getarchive() bool                         { return m.Archive }
func (m *TLmessages_toggleStickerSets) Setunarchive(v bool)                      { m.Unarchive = v }
func (m *TLmessages_toggleStickerSets) Getunarchive() bool                       { return m.Unarchive }
func (m *TLmessages_toggleStickerSets) Setstickersets(v []InputStickerSet)       { m.Stickersets = v }
func (m *TLmessages_toggleStickerSets) Getstickersets() []InputStickerSet        { return m.Stickersets }
func (m *TLmessages_updateDialogFilter) Setid(v int32)                           { m.Id = v }
func (m *TLmessages_updateDialogFilter) Getid() int32                            { return m.Id }
func (m *TLmessages_updateDialogFilter) Setfilter(v DialogFilter)                { m.Filter = v }
func (m *TLmessages_updateDialogFilter) Getfilter() DialogFilter                 { return m.Filter }
func (m *TLmessages_updateDialogFiltersOrder) Setorder(v []int32)                { m.Order = v }
func (m *TLmessages_updateDialogFiltersOrder) Getorder() []int32                 { return m.Order }
func (m *TLbots_setBotCommands) Setcommands(v []BotCommand)                      { m.Commands = v }
func (m *TLbots_setBotCommands) Getcommands() []BotCommand                       { return m.Commands }
func (m *TLhelp_hidePromoData) Setpeer(v InputPeer)                              { m.Peer = v }
func (m *TLhelp_hidePromoData) Getpeer() InputPeer                               { return m.Peer }
func (m *TLphone_sendSignalingData) Setpeer(v InputPhoneCall)                    { m.Peer = v }
func (m *TLphone_sendSignalingData) Getpeer() InputPhoneCall                     { return m.Peer }
func (m *TLphone_sendSignalingData) Setdata(v []uint8)                           { m.Data = v }
func (m *TLphone_sendSignalingData) Getdata() []uint8                            { return m.Data }
func (m *TLhelp_dismissSuggestion) Setsuggestion(v string)                       { m.Suggestion = v }
func (m *TLhelp_dismissSuggestion) Getsuggestion() string                        { return m.Suggestion }
func (m *TLmessages_readDiscussion) Setpeer(v InputPeer)                         { m.Peer = v }
func (m *TLmessages_readDiscussion) Getpeer() InputPeer                          { return m.Peer }
func (m *TLmessages_readDiscussion) Setmsg_id(v int32)                           { m.Msg_id = v }
func (m *TLmessages_readDiscussion) Getmsg_id() int32                            { return m.Msg_id }
func (m *TLmessages_readDiscussion) Setread_max_id(v int32)                      { m.Read_max_id = v }
func (m *TLmessages_readDiscussion) Getread_max_id() int32                       { return m.Read_max_id }
func (m *TLaccount_getAuthorizationForm) Setbot_id(v int32)                      { m.Bot_id = v }
func (m *TLaccount_getAuthorizationForm) Getbot_id() int32                       { return m.Bot_id }
func (m *TLaccount_getAuthorizationForm) Setscope(v string)                      { m.Scope = v }
func (m *TLaccount_getAuthorizationForm) Getscope() string                       { return m.Scope }
func (m *TLaccount_getAuthorizationForm) Setpublic_key(v string)                 { m.Public_key = v }
func (m *TLaccount_getAuthorizationForm) Getpublic_key() string                  { return m.Public_key }
func (m *TLmessages_getMessageEditData) Setpeer(v InputPeer)                     { m.Peer = v }
func (m *TLmessages_getMessageEditData) Getpeer() InputPeer                      { return m.Peer }
func (m *TLmessages_getMessageEditData) Setid(v int32)                           { m.Id = v }
func (m *TLmessages_getMessageEditData) Getid() int32                            { return m.Id }
func (m *TLupload_getWebFile) Setlocation(v InputWebFileLocation)                { m.Location = v }
func (m *TLupload_getWebFile) Getlocation() InputWebFileLocation                 { return m.Location }
func (m *TLupload_getWebFile) Setoffset(v int32)                                 { m.Offset = v }
func (m *TLupload_getWebFile) Getoffset() int32                                  { return m.Offset }
func (m *TLupload_getWebFile) Setlimit(v int32)                                  { m.Limit = v }
func (m *TLupload_getWebFile) Getlimit() int32                                   { return m.Limit }
func (m *TLmessages_checkChatInvite) Sethash(v string)                           { m.Hash = v }
func (m *TLmessages_checkChatInvite) Gethash() string                            { return m.Hash }
func (m *TLusers_getFullUser) Setid(v InputUser)                                 { m.Id = v }
func (m *TLusers_getFullUser) Getid() InputUser                                  { return m.Id }

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_searchStickerSets
//
func NewTLmessages_searchStickerSets() *TLmessages_searchStickerSets {
	return &TLmessages_searchStickerSets{}
}

// CodecEncode:messages_searchStickerSets
func (m *TLmessages_searchStickerSets) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1028140917)
	var flags uint32 = 0
	if m.Getexclude_featured() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.String(m.Getq())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_searchStickerSets
func (m *TLmessages_searchStickerSets) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setexclude_featured(true)
	}
	m.Setq(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getPassword
//
func NewTLaccount_getPassword() *TLaccount_getPassword {
	return &TLaccount_getPassword{}
}

// CodecEncode:account_getPassword
func (m *TLaccount_getPassword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1418342645)
	return x.Buf
}

// CodecDecode:account_getPassword
func (m *TLaccount_getPassword) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stats_getMessageStats
//
func NewTLstats_getMessageStats() *TLstats_getMessageStats {
	return &TLstats_getMessageStats{}
}

// CodecEncode:stats_getMessageStats
func (m *TLstats_getMessageStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1226791947)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:stats_getMessageStats
func (m *TLstats_getMessageStats) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDiscussionMessage
//
func NewTLmessages_getDiscussionMessage() *TLmessages_getDiscussionMessage {
	return &TLmessages_getDiscussionMessage{}
}

// CodecEncode:messages_getDiscussionMessage
func (m *TLmessages_getDiscussionMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1147761405)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:messages_getDiscussionMessage
func (m *TLmessages_getDiscussionMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getBotCallbackAnswer
//
func NewTLmessages_getBotCallbackAnswer() *TLmessages_getBotCallbackAnswer {
	return &TLmessages_getBotCallbackAnswer{}
}

// CodecEncode:messages_getBotCallbackAnswer
func (m *TLmessages_getBotCallbackAnswer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1824339449)
	var flags uint32 = 0
	if m.Getgame() != false {
		flags |= 1 << 0
	}
	if len(m.Getdata()) > 0 {
		flags |= 0 << 3
	}
	if m.Getpassword().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getpassword().Constructor != 0 {
		x.Bytes(m.Getpassword().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_getBotCallbackAnswer
func (m *TLmessages_getBotCallbackAnswer) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgame(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setmsg_id(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &InputCheckPasswordSRP{}
		m4.Decode(dbuf)
		m.Setpassword(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getArchivedStickers
//
func NewTLmessages_getArchivedStickers() *TLmessages_getArchivedStickers {
	return &TLmessages_getArchivedStickers{}
}

// CodecEncode:messages_getArchivedStickers
func (m *TLmessages_getArchivedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1475442322)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Long(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getArchivedStickers
func (m *TLmessages_getArchivedStickers) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setoffset_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getTmpPassword
//
func NewTLaccount_getTmpPassword() *TLaccount_getTmpPassword {
	return &TLaccount_getTmpPassword{}
}

// CodecEncode:account_getTmpPassword
func (m *TLaccount_getTmpPassword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1151208273)
	x.Bytes(m.Getpassword().Encode())
	x.Int(m.Getperiod())
	return x.Buf
}

// CodecDecode:account_getTmpPassword
func (m *TLaccount_getTmpPassword) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	m.Setperiod(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getGameHighScores
//
func NewTLmessages_getGameHighScores() *TLmessages_getGameHighScores {
	return &TLmessages_getGameHighScores{}
}

// CodecEncode:messages_getGameHighScores
func (m *TLmessages_getGameHighScores) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-400399203)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_getGameHighScores
func (m *TLmessages_getGameHighScores) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getInlineGameHighScores
//
func NewTLmessages_getInlineGameHighScores() *TLmessages_getInlineGameHighScores {
	return &TLmessages_getInlineGameHighScores{}
}

// CodecEncode:messages_getInlineGameHighScores
func (m *TLmessages_getInlineGameHighScores) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(258170395)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_getInlineGameHighScores
func (m *TLmessages_getInlineGameHighScores) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputBotInlineMessageID{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_resolveUsername
//
func NewTLcontacts_resolveUsername() *TLcontacts_resolveUsername {
	return &TLcontacts_resolveUsername{}
}

// CodecEncode:contacts_resolveUsername
func (m *TLcontacts_resolveUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-113456221)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:contacts_resolveUsername
func (m *TLcontacts_resolveUsername) Decode(dbuf *code.DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_getSavedInfo
//
func NewTLpayments_getSavedInfo() *TLpayments_getSavedInfo {
	return &TLpayments_getSavedInfo{}
}

// CodecEncode:payments_getSavedInfo
func (m *TLpayments_getSavedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(578650699)
	return x.Buf
}

// CodecDecode:payments_getSavedInfo
func (m *TLpayments_getSavedInfo) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getEmojiKeywordsLanguages
//
func NewTLmessages_getEmojiKeywordsLanguages() *TLmessages_getEmojiKeywordsLanguages {
	return &TLmessages_getEmojiKeywordsLanguages{}
}

// CodecEncode:messages_getEmojiKeywordsLanguages
func (m *TLmessages_getEmojiKeywordsLanguages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1318675378)
	x.Int(481674261)
	x.Int(int32(len(m.Getlang_codes())))
	for _, v := range m.Getlang_codes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywordsLanguages
func (m *TLmessages_getEmojiKeywordsLanguages) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_codes(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getWallPaper
//
func NewTLaccount_getWallPaper() *TLaccount_getWallPaper {
	return &TLaccount_getWallPaper{}
}

// CodecEncode:account_getWallPaper
func (m *TLaccount_getWallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-57811990)
	x.Bytes(m.Getwallpaper().Encode())
	return x.Buf
}

// CodecDecode:account_getWallPaper
func (m *TLaccount_getWallPaper) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_uploadWallPaper
//
func NewTLaccount_uploadWallPaper() *TLaccount_uploadWallPaper {
	return &TLaccount_uploadWallPaper{}
}

// CodecEncode:account_uploadWallPaper
func (m *TLaccount_uploadWallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-578472351)
	x.Bytes(m.Getfile().Encode())
	x.String(m.Getmime_type())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_uploadWallPaper
func (m *TLaccount_uploadWallPaper) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	m.Setmime_type(dbuf.String())
	m2 := &WallPaperSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getSavedGifs
//
func NewTLmessages_getSavedGifs() *TLmessages_getSavedGifs {
	return &TLmessages_getSavedGifs{}
}

// CodecEncode:messages_getSavedGifs
func (m *TLmessages_getSavedGifs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2084618926)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getSavedGifs
func (m *TLmessages_getSavedGifs) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getNotifySettings
//
func NewTLaccount_getNotifySettings() *TLaccount_getNotifySettings {
	return &TLaccount_getNotifySettings{}
}

// CodecEncode:account_getNotifySettings
func (m *TLaccount_getNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(313765169)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:account_getNotifySettings
func (m *TLaccount_getNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputNotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDialogFilters
//
func NewTLmessages_getDialogFilters() *TLmessages_getDialogFilters {
	return &TLmessages_getDialogFilters{}
}

// CodecEncode:messages_getDialogFilters
func (m *TLmessages_getDialogFilters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-241247891)
	return x.Buf
}

// CodecDecode:messages_getDialogFilters
func (m *TLmessages_getDialogFilters) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:langpack_getLanguage
//
func NewTLlangpack_getLanguage() *TLlangpack_getLanguage {
	return &TLlangpack_getLanguage{}
}

// CodecEncode:langpack_getLanguage
func (m *TLlangpack_getLanguage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1784243458)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:langpack_getLanguage
func (m *TLlangpack_getLanguage) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:updates_getChannelDifference
//
func NewTLupdates_getChannelDifference() *TLupdates_getChannelDifference {
	return &TLupdates_getChannelDifference{}
}

// CodecEncode:updates_getChannelDifference
func (m *TLupdates_getChannelDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(51854712)
	var flags uint32 = 0
	if m.Getforce() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:updates_getChannelDifference
func (m *TLupdates_getChannelDifference) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setforce(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	m2 := &ChannelMessagesFilter{}
	m2.Decode(dbuf)
	m.Setfilter(m2)
	m.Setpts(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getMessages
//
func NewTLmessages_getMessages() *TLmessages_getMessages {
	return &TLmessages_getMessages{}
}

// CodecEncode:messages_getMessages
func (m *TLmessages_getMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1673946374)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getMessages
func (m *TLmessages_getMessages) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputMessage, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputMessage{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getHistory
//
func NewTLmessages_getHistory() *TLmessages_getHistory {
	return &TLmessages_getHistory{}
}

// CodecEncode:messages_getHistory
func (m *TLmessages_getHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-591691168)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getoffset_date())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getHistory
func (m *TLmessages_getHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setoffset_id(dbuf.Int())
	m.Setoffset_date(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_search
//
func NewTLmessages_search() *TLmessages_search {
	return &TLmessages_search{}
}

// CodecEncode:messages_search
func (m *TLmessages_search) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(204812012)
	var flags uint32 = 0
	if m.Getfrom_id().Constructor != 0 {
		flags |= 0 << 2
	}
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getq())
	if m.Getfrom_id().Constructor != 0 {
		x.Bytes(m.Getfrom_id().Encode())
	}
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	x.Int(m.Getoffset_id())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_search
func (m *TLmessages_search) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setq(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &InputPeer{}
		m2.Decode(dbuf)
		m.Setfrom_id(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m4 := &MessagesFilter{}
	m4.Decode(dbuf)
	m.Setfilter(m4)
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getMessages
//
func NewTLchannels_getMessages() *TLchannels_getMessages {
	return &TLchannels_getMessages{}
}

// CodecEncode:channels_getMessages
func (m *TLchannels_getMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1383294429)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_getMessages
func (m *TLchannels_getMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]InputMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = InputMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setid(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_searchGlobal
//
func NewTLmessages_searchGlobal() *TLmessages_searchGlobal {
	return &TLmessages_searchGlobal{}
}

// CodecEncode:messages_searchGlobal
func (m *TLmessages_searchGlobal) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1271290010)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.String(m.Getq())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	x.Int(m.Getoffset_rate())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_searchGlobal
func (m *TLmessages_searchGlobal) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setq(dbuf.String())
	m2 := &MessagesFilter{}
	m2.Decode(dbuf)
	m.Setfilter(m2)
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setoffset_rate(dbuf.Int())
	m6 := &InputPeer{}
	m6.Decode(dbuf)
	m.Setoffset_peer(m6)
	m.Setoffset_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getUnreadMentions
//
func NewTLmessages_getUnreadMentions() *TLmessages_getUnreadMentions {
	return &TLmessages_getUnreadMentions{}
}

// CodecEncode:messages_getUnreadMentions
func (m *TLmessages_getUnreadMentions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1180140658)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	return x.Buf
}

// CodecDecode:messages_getUnreadMentions
func (m *TLmessages_getUnreadMentions) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setoffset_id(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getRecentLocations
//
func NewTLmessages_getRecentLocations() *TLmessages_getRecentLocations {
	return &TLmessages_getRecentLocations{}
}

// CodecEncode:messages_getRecentLocations
func (m *TLmessages_getRecentLocations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1144759543)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getRecentLocations
func (m *TLmessages_getRecentLocations) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getScheduledHistory
//
func NewTLmessages_getScheduledHistory() *TLmessages_getScheduledHistory {
	return &TLmessages_getScheduledHistory{}
}

// CodecEncode:messages_getScheduledHistory
func (m *TLmessages_getScheduledHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-490575781)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getScheduledHistory
func (m *TLmessages_getScheduledHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getScheduledMessages
//
func NewTLmessages_getScheduledMessages() *TLmessages_getScheduledMessages {
	return &TLmessages_getScheduledMessages{}
}

// CodecEncode:messages_getScheduledMessages
func (m *TLmessages_getScheduledMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1111817116)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getScheduledMessages
func (m *TLmessages_getScheduledMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getReplies
//
func NewTLmessages_getReplies() *TLmessages_getReplies {
	return &TLmessages_getReplies{}
}

// CodecEncode:messages_getReplies
func (m *TLmessages_getReplies) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(615875002)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getoffset_id())
	x.Int(m.Getoffset_date())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getReplies
func (m *TLmessages_getReplies) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m.Setoffset_date(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stats_getMessagePublicForwards
//
func NewTLstats_getMessagePublicForwards() *TLstats_getMessagePublicForwards {
	return &TLstats_getMessagePublicForwards{}
}

// CodecEncode:stats_getMessagePublicForwards
func (m *TLstats_getMessagePublicForwards) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1445996571)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getoffset_rate())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:stats_getMessagePublicForwards
func (m *TLstats_getMessagePublicForwards) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setoffset_rate(dbuf.Int())
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setoffset_peer(m3)
	m.Setoffset_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_reuploadCdnFile
//
func NewTLupload_reuploadCdnFile() *TLupload_reuploadCdnFile {
	return &TLupload_reuploadCdnFile{}
}

// CodecEncode:upload_reuploadCdnFile
func (m *TLupload_reuploadCdnFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1691921240)
	x.Bytes(m.Getfile_token())
	x.Bytes(m.Getrequest_token())
	return x.Buf
}

// CodecDecode:upload_reuploadCdnFile
func (m *TLupload_reuploadCdnFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setrequest_token(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_getCdnFileHashes
//
func NewTLupload_getCdnFileHashes() *TLupload_getCdnFileHashes {
	return &TLupload_getCdnFileHashes{}
}

// CodecEncode:upload_getCdnFileHashes
func (m *TLupload_getCdnFileHashes) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1302676017)
	x.Bytes(m.Getfile_token())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:upload_getCdnFileHashes
func (m *TLupload_getCdnFileHashes) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_getFileHashes
//
func NewTLupload_getFileHashes() *TLupload_getFileHashes {
	return &TLupload_getFileHashes{}
}

// CodecEncode:upload_getFileHashes
func (m *TLupload_getFileHashes) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-956147407)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:upload_getFileHashes
func (m *TLupload_getFileHashes) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputFileLocation{}
	m0.Decode(dbuf)
	m.Setlocation(m0)
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDialogs
//
func NewTLmessages_getDialogs() *TLmessages_getDialogs {
	return &TLmessages_getDialogs{}
}

// CodecEncode:messages_getDialogs
func (m *TLmessages_getDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1594999949)
	var flags uint32 = 0
	if m.Getexclude_pinned() != false {
		flags |= 0 << 0
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getoffset_date())
	x.Int(m.Getoffset_id())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getDialogs
func (m *TLmessages_getDialogs) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setexclude_pinned(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setoffset_date(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setoffset_peer(m4)
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getTopPeers
//
func NewTLcontacts_getTopPeers() *TLcontacts_getTopPeers {
	return &TLcontacts_getTopPeers{}
}

// CodecEncode:contacts_getTopPeers
func (m *TLcontacts_getTopPeers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-728224331)
	var flags uint32 = 0
	if m.Getcorrespondents() != false {
		flags |= 0 << 0
	}
	if m.Getbots_pm() != false {
		flags |= 1 << 1
	}
	if m.Getbots_inline() != false {
		flags |= 2 << 2
	}
	if m.Getphone_calls() != false {
		flags |= 3 << 3
	}
	if m.Getforward_users() != false {
		flags |= 4 << 4
	}
	if m.Getforward_chats() != false {
		flags |= 5 << 5
	}
	if m.Getgroups() != false {
		flags |= 10 << 6
	}
	if m.Getchannels() != false {
		flags |= 15 << 7
	}
	x.UInt(flags)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getTopPeers
func (m *TLcontacts_getTopPeers) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcorrespondents(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbots_pm(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbots_inline(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setphone_calls(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setforward_users(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setforward_chats(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setgroups(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setchannels(true)
	}
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_sendVerifyEmailCode
//
func NewTLaccount_sendVerifyEmailCode() *TLaccount_sendVerifyEmailCode {
	return &TLaccount_sendVerifyEmailCode{}
}

// CodecEncode:account_sendVerifyEmailCode
func (m *TLaccount_sendVerifyEmailCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1880182943)
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:account_sendVerifyEmailCode
func (m *TLaccount_sendVerifyEmailCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setemail(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDialogUnreadMarks
//
func NewTLmessages_getDialogUnreadMarks() *TLmessages_getDialogUnreadMarks {
	return &TLmessages_getDialogUnreadMarks{}
}

// CodecEncode:messages_getDialogUnreadMarks
func (m *TLmessages_getDialogUnreadMarks) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(585256482)
	return x.Buf
}

// CodecDecode:messages_getDialogUnreadMarks
func (m *TLmessages_getDialogUnreadMarks) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_exportLoginToken
//
func NewTLauth_exportLoginToken() *TLauth_exportLoginToken {
	return &TLauth_exportLoginToken{}
}

// CodecEncode:auth_exportLoginToken
func (m *TLauth_exportLoginToken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1313598185)
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.Int(481674261)
	x.Int(int32(len(m.Getexcept_ids())))
	for _, v := range m.Getexcept_ids() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:auth_exportLoginToken
func (m *TLauth_exportLoginToken) Decode(dbuf *code.DecodeBuf) error {
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m.Setexcept_ids(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_importLoginToken
//
func NewTLauth_importLoginToken() *TLauth_importLoginToken {
	return &TLauth_importLoginToken{}
}

// CodecEncode:auth_importLoginToken
func (m *TLauth_importLoginToken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1783866140)
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_importLoginToken
func (m *TLauth_importLoginToken) Decode(dbuf *code.DecodeBuf) error {
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getGlobalPrivacySettings
//
func NewTLaccount_getGlobalPrivacySettings() *TLaccount_getGlobalPrivacySettings {
	return &TLaccount_getGlobalPrivacySettings{}
}

// CodecEncode:account_getGlobalPrivacySettings
func (m *TLaccount_getGlobalPrivacySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-349483786)
	return x.Buf
}

// CodecDecode:account_getGlobalPrivacySettings
func (m *TLaccount_getGlobalPrivacySettings) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_setGlobalPrivacySettings
//
func NewTLaccount_setGlobalPrivacySettings() *TLaccount_setGlobalPrivacySettings {
	return &TLaccount_setGlobalPrivacySettings{}
}

// CodecEncode:account_setGlobalPrivacySettings
func (m *TLaccount_setGlobalPrivacySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(517647042)
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_setGlobalPrivacySettings
func (m *TLaccount_setGlobalPrivacySettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &GlobalPrivacySettings{}
	m0.Decode(dbuf)
	m.Setsettings(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getWebPagePreview
//
func NewTLmessages_getWebPagePreview() *TLmessages_getWebPagePreview {
	return &TLmessages_getWebPagePreview{}
}

// CodecEncode:messages_getWebPagePreview
func (m *TLmessages_getWebPagePreview) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1956073268)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 3 << 1
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_getWebPagePreview
func (m *TLmessages_getWebPagePreview) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_uploadMedia
//
func NewTLmessages_uploadMedia() *TLmessages_uploadMedia {
	return &TLmessages_uploadMedia{}
}

// CodecEncode:messages_uploadMedia
func (m *TLmessages_uploadMedia) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1369162417)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getmedia().Encode())
	return x.Buf
}

// CodecDecode:messages_uploadMedia
func (m *TLmessages_uploadMedia) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputMedia{}
	m1.Decode(dbuf)
	m.Setmedia(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_deleteHistory
//
func NewTLmessages_deleteHistory() *TLmessages_deleteHistory {
	return &TLmessages_deleteHistory{}
}

// CodecEncode:messages_deleteHistory
func (m *TLmessages_deleteHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(469850889)
	var flags uint32 = 0
	if m.Getjust_clear() != false {
		flags |= 0 << 0
	}
	if m.Getrevoke() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_deleteHistory
func (m *TLmessages_deleteHistory) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setjust_clear(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setrevoke(true)
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_deleteUserHistory
//
func NewTLchannels_deleteUserHistory() *TLchannels_deleteUserHistory {
	return &TLchannels_deleteUserHistory{}
}

// CodecEncode:channels_deleteUserHistory
func (m *TLchannels_deleteUserHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-787622117)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:channels_deleteUserHistory
func (m *TLchannels_deleteUserHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readMentions
//
func NewTLmessages_readMentions() *TLmessages_readMentions {
	return &TLmessages_readMentions{}
}

// CodecEncode:messages_readMentions
func (m *TLmessages_readMentions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(251759059)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_readMentions
func (m *TLmessages_readMentions) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_unpinAllMessages
//
func NewTLmessages_unpinAllMessages() *TLmessages_unpinAllMessages {
	return &TLmessages_unpinAllMessages{}
}

// CodecEncode:messages_unpinAllMessages
func (m *TLmessages_unpinAllMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-265962357)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_unpinAllMessages
func (m *TLmessages_unpinAllMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_installStickerSet
//
func NewTLmessages_installStickerSet() *TLmessages_installStickerSet {
	return &TLmessages_installStickerSet{}
}

// CodecEncode:messages_installStickerSet
func (m *TLmessages_installStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-946871200)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getarchived().Encode())
	return x.Buf
}

// CodecDecode:messages_installStickerSet
func (m *TLmessages_installStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setarchived(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getStickers
//
func NewTLmessages_getStickers() *TLmessages_getStickers {
	return &TLmessages_getStickers{}
}

// CodecEncode:messages_getStickers
func (m *TLmessages_getStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(71126828)
	x.String(m.Getemoticon())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getStickers
func (m *TLmessages_getStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getCountriesList
//
func NewTLhelp_getCountriesList() *TLhelp_getCountriesList {
	return &TLhelp_getCountriesList{}
}

// CodecEncode:help_getCountriesList
func (m *TLhelp_getCountriesList) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1935116200)
	x.String(m.Getlang_code())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_getCountriesList
func (m *TLhelp_getCountriesList) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getPassportConfig
//
func NewTLhelp_getPassportConfig() *TLhelp_getPassportConfig {
	return &TLhelp_getPassportConfig{}
}

// CodecEncode:help_getPassportConfig
func (m *TLhelp_getPassportConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-966677240)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_getPassportConfig
func (m *TLhelp_getPassportConfig) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getThemes
//
func NewTLaccount_getThemes() *TLaccount_getThemes {
	return &TLaccount_getThemes{}
}

// CodecEncode:account_getThemes
func (m *TLaccount_getThemes) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(676939512)
	x.String(m.Getformat())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:account_getThemes
func (m *TLaccount_getThemes) Decode(dbuf *code.DecodeBuf) error {
	m.Setformat(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getEmojiKeywords
//
func NewTLmessages_getEmojiKeywords() *TLmessages_getEmojiKeywords {
	return &TLmessages_getEmojiKeywords{}
}

// CodecEncode:messages_getEmojiKeywords
func (m *TLmessages_getEmojiKeywords) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(899735650)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywords
func (m *TLmessages_getEmojiKeywords) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getEmojiKeywordsDifference
//
func NewTLmessages_getEmojiKeywordsDifference() *TLmessages_getEmojiKeywordsDifference {
	return &TLmessages_getEmojiKeywordsDifference{}
}

// CodecEncode:messages_getEmojiKeywordsDifference
func (m *TLmessages_getEmojiKeywordsDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(352892591)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywordsDifference
func (m *TLmessages_getEmojiKeywordsDifference) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getChats
//
func NewTLmessages_getChats() *TLmessages_getChats {
	return &TLmessages_getChats{}
}

// CodecEncode:messages_getChats
func (m *TLmessages_getChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1013621127)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getChats
func (m *TLmessages_getChats) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getChannels
//
func NewTLchannels_getChannels() *TLchannels_getChannels {
	return &TLchannels_getChannels{}
}

// CodecEncode:channels_getChannels
func (m *TLchannels_getChannels) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(176122811)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_getChannels
func (m *TLchannels_getChannels) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputChannel, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputChannel{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getAdminedPublicChannels
//
func NewTLchannels_getAdminedPublicChannels() *TLchannels_getAdminedPublicChannels {
	return &TLchannels_getAdminedPublicChannels{}
}

// CodecEncode:channels_getAdminedPublicChannels
func (m *TLchannels_getAdminedPublicChannels) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-122669393)
	var flags uint32 = 0
	if m.Getby_location() != false {
		flags |= 0 << 0
	}
	if m.Getcheck_limit() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:channels_getAdminedPublicChannels
func (m *TLchannels_getAdminedPublicChannels) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setby_location(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcheck_limit(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getCommonChats
//
func NewTLmessages_getCommonChats() *TLmessages_getCommonChats {
	return &TLmessages_getCommonChats{}
}

// CodecEncode:messages_getCommonChats
func (m *TLmessages_getCommonChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(218777796)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getCommonChats
func (m *TLmessages_getCommonChats) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setmax_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getAllChats
//
func NewTLmessages_getAllChats() *TLmessages_getAllChats {
	return &TLmessages_getAllChats{}
}

// CodecEncode:messages_getAllChats
func (m *TLmessages_getAllChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-341307408)
	x.Int(481674261)
	x.Int(int32(len(m.Getexcept_ids())))
	for _, v := range m.Getexcept_ids() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getAllChats
func (m *TLmessages_getAllChats) Decode(dbuf *code.DecodeBuf) error {
	m.Setexcept_ids(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getLeftChannels
//
func NewTLchannels_getLeftChannels() *TLchannels_getLeftChannels {
	return &TLchannels_getLeftChannels{}
}

// CodecEncode:channels_getLeftChannels
func (m *TLchannels_getLeftChannels) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2092831552)
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:channels_getLeftChannels
func (m *TLchannels_getLeftChannels) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getGroupsForDiscussion
//
func NewTLchannels_getGroupsForDiscussion() *TLchannels_getGroupsForDiscussion {
	return &TLchannels_getGroupsForDiscussion{}
}

// CodecEncode:channels_getGroupsForDiscussion
func (m *TLchannels_getGroupsForDiscussion) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-170208392)
	return x.Buf
}

// CodecDecode:channels_getGroupsForDiscussion
func (m *TLchannels_getGroupsForDiscussion) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getConfig
//
func NewTLhelp_getConfig() *TLhelp_getConfig {
	return &TLhelp_getConfig{}
}

// CodecEncode:help_getConfig
func (m *TLhelp_getConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-990308245)
	return x.Buf
}

// CodecDecode:help_getConfig
func (m *TLhelp_getConfig) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getBlocked
//
func NewTLcontacts_getBlocked() *TLcontacts_getBlocked {
	return &TLcontacts_getBlocked{}
}

// CodecEncode:contacts_getBlocked
func (m *TLcontacts_getBlocked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-176409329)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:contacts_getBlocked
func (m *TLcontacts_getBlocked) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getNearestDc
//
func NewTLhelp_getNearestDc() *TLhelp_getNearestDc {
	return &TLhelp_getNearestDc{}
}

// CodecEncode:help_getNearestDc
func (m *TLhelp_getNearestDc) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(531836966)
	return x.Buf
}

// CodecDecode:help_getNearestDc
func (m *TLhelp_getNearestDc) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getContactIDs
//
func NewTLcontacts_getContactIDs() *TLcontacts_getContactIDs {
	return &TLcontacts_getContactIDs{}
}

// CodecEncode:contacts_getContactIDs
func (m *TLcontacts_getContactIDs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(749357634)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getContactIDs
func (m *TLcontacts_getContactIDs) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_createTheme
//
func NewTLaccount_createTheme() *TLaccount_createTheme {
	return &TLaccount_createTheme{}
}

// CodecEncode:account_createTheme
func (m *TLaccount_createTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2077048289)
	var flags uint32 = 0
	if m.Getdocument().Constructor != 0 {
		flags |= 2 << 2
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 3 << 3
	}
	x.UInt(flags)
	x.String(m.Getslug())
	x.String(m.Gettitle())
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_createTheme
func (m *TLaccount_createTheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setslug(dbuf.String())
	m.Settitle(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &InputDocument{}
		m2.Decode(dbuf)
		m.Setdocument(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &InputThemeSettings{}
		m3.Decode(dbuf)
		m.Setsettings(m3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateTheme
//
func NewTLaccount_updateTheme() *TLaccount_updateTheme {
	return &TLaccount_updateTheme{}
}

// CodecEncode:account_updateTheme
func (m *TLaccount_updateTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1555261397)
	var flags uint32 = 0
	if m.Getslug() != "" {
		flags |= 0 << 2
	}
	if m.Gettitle() != "" {
		flags |= 1 << 3
	}
	if m.Getdocument().Constructor != 0 {
		flags |= 2 << 4
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 3 << 5
	}
	x.UInt(flags)
	x.String(m.Getformat())
	x.Bytes(m.Gettheme().Encode())
	if m.Getslug() != "" {
		x.String(m.Getslug())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_updateTheme
func (m *TLaccount_updateTheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setformat(dbuf.String())
	m1 := &InputTheme{}
	m1.Decode(dbuf)
	m.Settheme(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setslug(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &InputDocument{}
		m4.Decode(dbuf)
		m.Setdocument(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &InputThemeSettings{}
		m5.Decode(dbuf)
		m.Setsettings(m5)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getTheme
//
func NewTLaccount_getTheme() *TLaccount_getTheme {
	return &TLaccount_getTheme{}
}

// CodecEncode:account_getTheme
func (m *TLaccount_getTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1919060949)
	x.String(m.Getformat())
	x.Bytes(m.Gettheme().Encode())
	x.Long(m.Getdocument_id())
	return x.Buf
}

// CodecDecode:account_getTheme
func (m *TLaccount_getTheme) Decode(dbuf *code.DecodeBuf) error {
	m.Setformat(dbuf.String())
	m1 := &InputTheme{}
	m1.Decode(dbuf)
	m.Settheme(m1)
	m.Setdocument_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:photos_getUserPhotos
//
func NewTLphotos_getUserPhotos() *TLphotos_getUserPhotos {
	return &TLphotos_getUserPhotos{}
}

// CodecEncode:photos_getUserPhotos
func (m *TLphotos_getUserPhotos) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1848823128)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getoffset())
	x.Long(m.Getmax_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:photos_getUserPhotos
func (m *TLphotos_getUserPhotos) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setoffset(dbuf.Int())
	m.Setmax_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getSupportName
//
func NewTLhelp_getSupportName() *TLhelp_getSupportName {
	return &TLhelp_getSupportName{}
}

// CodecEncode:help_getSupportName
func (m *TLhelp_getSupportName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-748624084)
	return x.Buf
}

// CodecDecode:help_getSupportName
func (m *TLhelp_getSupportName) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_getCdnFile
//
func NewTLupload_getCdnFile() *TLupload_getCdnFile {
	return &TLupload_getCdnFile{}
}

// CodecEncode:upload_getCdnFile
func (m *TLupload_getCdnFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(536919235)
	x.Bytes(m.Getfile_token())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getCdnFile
func (m *TLupload_getCdnFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeAfterMsg
//
func NewTLinvokeAfterMsg() *TLinvokeAfterMsg {
	return &TLinvokeAfterMsg{}
}

// CodecEncode:invokeAfterMsg
func (m *TLinvokeAfterMsg) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-878758099)
	x.Long(m.Getmsg_id())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeAfterMsg
func (m *TLinvokeAfterMsg) Decode(dbuf *code.DecodeBuf) error {
	m.Setmsg_id(dbuf.Long())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeAfterMsgs
//
func NewTLinvokeAfterMsgs() *TLinvokeAfterMsgs {
	return &TLinvokeAfterMsgs{}
}

// CodecEncode:invokeAfterMsgs
func (m *TLinvokeAfterMsgs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1036301552)
	x.Int(481674261)
	x.Int(int32(len(m.Getmsg_ids())))
	for _, v := range m.Getmsg_ids() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeAfterMsgs
func (m *TLinvokeAfterMsgs) Decode(dbuf *code.DecodeBuf) error {
	m.Setmsg_ids(dbuf.VectorLong())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:initConnection
//
func NewTLinitConnection() *TLinitConnection {
	return &TLinitConnection{}
}

// CodecEncode:initConnection
func (m *TLinitConnection) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1043505495)
	var flags uint32 = 0
	if m.Getproxy().Constructor != 0 {
		flags |= 0 << 7
	}
	if m.Getparams().Constructor != 0 {
		flags |= 1 << 8
	}
	x.UInt(flags)
	x.Int(m.Getapi_id())
	x.String(m.Getdevice_model())
	x.String(m.Getsystem_version())
	x.String(m.Getapp_version())
	x.String(m.Getsystem_lang_code())
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	if m.Getproxy().Constructor != 0 {
		x.Bytes(m.Getproxy().Encode())
	}
	if m.Getparams().Constructor != 0 {
		x.Bytes(m.Getparams().Encode())
	}
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:initConnection
func (m *TLinitConnection) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setapi_id(dbuf.Int())
	m.Setdevice_model(dbuf.String())
	m.Setsystem_version(dbuf.String())
	m.Setapp_version(dbuf.String())
	m.Setsystem_lang_code(dbuf.String())
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	if (flags & (1 << 7)) != 0 {
		m7 := &InputClientProxy{}
		m7.Decode(dbuf)
		m.Setproxy(m7)
	}
	if (flags & (1 << 8)) != 0 {
		m8 := &JSONValue{}
		m8.Decode(dbuf)
		m.Setparams(m8)
	}
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeWithLayer
//
func NewTLinvokeWithLayer() *TLinvokeWithLayer {
	return &TLinvokeWithLayer{}
}

// CodecEncode:invokeWithLayer
func (m *TLinvokeWithLayer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-627372787)
	x.Int(m.Getlayer())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithLayer
func (m *TLinvokeWithLayer) Decode(dbuf *code.DecodeBuf) error {
	m.Setlayer(dbuf.Int())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeWithoutUpdates
//
func NewTLinvokeWithoutUpdates() *TLinvokeWithoutUpdates {
	return &TLinvokeWithoutUpdates{}
}

// CodecEncode:invokeWithoutUpdates
func (m *TLinvokeWithoutUpdates) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1080796745)
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithoutUpdates
func (m *TLinvokeWithoutUpdates) Decode(dbuf *code.DecodeBuf) error {
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeWithMessagesRange
//
func NewTLinvokeWithMessagesRange() *TLinvokeWithMessagesRange {
	return &TLinvokeWithMessagesRange{}
}

// CodecEncode:invokeWithMessagesRange
func (m *TLinvokeWithMessagesRange) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(911373810)
	x.Bytes(m.Getrange().Encode())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithMessagesRange
func (m *TLinvokeWithMessagesRange) Decode(dbuf *code.DecodeBuf) error {
	m0 := &MessageRange{}
	m0.Decode(dbuf)
	m.Setrange(m0)
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:invokeWithTakeout
//
func NewTLinvokeWithTakeout() *TLinvokeWithTakeout {
	return &TLinvokeWithTakeout{}
}

// CodecEncode:invokeWithTakeout
func (m *TLinvokeWithTakeout) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1398145746)
	x.Long(m.Gettakeout_id())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithTakeout
func (m *TLinvokeWithTakeout) Decode(dbuf *code.DecodeBuf) error {
	m.Settakeout_id(dbuf.Long())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getEmojiURL
//
func NewTLmessages_getEmojiURL() *TLmessages_getEmojiURL {
	return &TLmessages_getEmojiURL{}
}

// CodecEncode:messages_getEmojiURL
func (m *TLmessages_getEmojiURL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-709817306)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:messages_getEmojiURL
func (m *TLmessages_getEmojiURL) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getPeerSettings
//
func NewTLmessages_getPeerSettings() *TLmessages_getPeerSettings {
	return &TLmessages_getPeerSettings{}
}

// CodecEncode:messages_getPeerSettings
func (m *TLmessages_getPeerSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(913498268)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_getPeerSettings
func (m *TLmessages_getPeerSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getOnlines
//
func NewTLmessages_getOnlines() *TLmessages_getOnlines {
	return &TLmessages_getOnlines{}
}

// CodecEncode:messages_getOnlines
func (m *TLmessages_getOnlines) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1848369232)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_getOnlines
func (m *TLmessages_getOnlines) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_saveSecureValue
//
func NewTLaccount_saveSecureValue() *TLaccount_saveSecureValue {
	return &TLaccount_saveSecureValue{}
}

// CodecEncode:account_saveSecureValue
func (m *TLaccount_saveSecureValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1986010339)
	x.Bytes(m.Getvalue().Encode())
	x.Long(m.Getsecure_secret_id())
	return x.Buf
}

// CodecDecode:account_saveSecureValue
func (m *TLaccount_saveSecureValue) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputSecureValue{}
	m0.Decode(dbuf)
	m.Setvalue(m0)
	m.Setsecure_secret_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getRecentStickers
//
func NewTLmessages_getRecentStickers() *TLmessages_getRecentStickers {
	return &TLmessages_getRecentStickers{}
}

// CodecEncode:messages_getRecentStickers
func (m *TLmessages_getRecentStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1587647177)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getRecentStickers
func (m *TLmessages_getRecentStickers) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getContacts
//
func NewTLcontacts_getContacts() *TLcontacts_getContacts {
	return &TLcontacts_getContacts{}
}

// CodecEncode:contacts_getContacts
func (m *TLcontacts_getContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1071414113)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getContacts
func (m *TLcontacts_getContacts) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_search
//
func NewTLcontacts_search() *TLcontacts_search {
	return &TLcontacts_search{}
}

// CodecEncode:contacts_search
func (m *TLcontacts_search) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(301470424)
	x.String(m.Getq())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:contacts_search
func (m *TLcontacts_search) Decode(dbuf *code.DecodeBuf) error {
	m.Setq(dbuf.String())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getUserInfo
//
func NewTLhelp_getUserInfo() *TLhelp_getUserInfo {
	return &TLhelp_getUserInfo{}
}

// CodecEncode:help_getUserInfo
func (m *TLhelp_getUserInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(59377875)
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:help_getUserInfo
func (m *TLhelp_getUserInfo) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_editUserInfo
//
func NewTLhelp_editUserInfo() *TLhelp_editUserInfo {
	return &TLhelp_editUserInfo{}
}

// CodecEncode:help_editUserInfo
func (m *TLhelp_editUserInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1723407216)
	x.Bytes(m.Getuser_id().Encode())
	x.String(m.Getmessage())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_editUserInfo
func (m *TLhelp_editUserInfo) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setmessage(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]MessageEntity, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = MessageEntity{}
		v2[i].Decode(dbuf)
	}
	m.Setentities(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getAllSecureValues
//
func NewTLaccount_getAllSecureValues() *TLaccount_getAllSecureValues {
	return &TLaccount_getAllSecureValues{}
}

// CodecEncode:account_getAllSecureValues
func (m *TLaccount_getAllSecureValues) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1299661699)
	return x.Buf
}

// CodecDecode:account_getAllSecureValues
func (m *TLaccount_getAllSecureValues) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getSecureValue
//
func NewTLaccount_getSecureValue() *TLaccount_getSecureValue {
	return &TLaccount_getSecureValue{}
}

// CodecEncode:account_getSecureValue
func (m *TLaccount_getSecureValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1936088002)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_getSecureValue
func (m *TLaccount_getSecureValue) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_receivedMessages
//
func NewTLmessages_receivedMessages() *TLmessages_receivedMessages {
	return &TLmessages_receivedMessages{}
}

// CodecEncode:messages_receivedMessages
func (m *TLmessages_receivedMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(94983360)
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_receivedMessages
func (m *TLmessages_receivedMessages) Decode(dbuf *code.DecodeBuf) error {
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getInviteText
//
func NewTLhelp_getInviteText() *TLhelp_getInviteText {
	return &TLhelp_getInviteText{}
}

// CodecEncode:help_getInviteText
func (m *TLhelp_getInviteText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1295590211)
	return x.Buf
}

// CodecDecode:help_getInviteText
func (m *TLhelp_getInviteText) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getMultiWallPapers
//
func NewTLaccount_getMultiWallPapers() *TLaccount_getMultiWallPapers {
	return &TLaccount_getMultiWallPapers{}
}

// CodecEncode:account_getMultiWallPapers
func (m *TLaccount_getMultiWallPapers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1705865692)
	x.Int(481674261)
	x.Int(int32(len(m.Getwallpapers())))
	for _, v := range m.Getwallpapers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_getMultiWallPapers
func (m *TLaccount_getMultiWallPapers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputWallPaper, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputWallPaper{}
		v0[i].Decode(dbuf)
	}
	m.Setwallpapers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_requestEncryption
//
func NewTLmessages_requestEncryption() *TLmessages_requestEncryption {
	return &TLmessages_requestEncryption{}
}

// CodecEncode:messages_requestEncryption
func (m *TLmessages_requestEncryption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-162681021)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getrandom_id())
	x.Bytes(m.Getg_a())
	return x.Buf
}

// CodecDecode:messages_requestEncryption
func (m *TLmessages_requestEncryption) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setrandom_id(dbuf.Int())
	m.Setg_a(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_acceptEncryption
//
func NewTLmessages_acceptEncryption() *TLmessages_acceptEncryption {
	return &TLmessages_acceptEncryption{}
}

// CodecEncode:messages_acceptEncryption
func (m *TLmessages_acceptEncryption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1035731989)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_b())
	x.Long(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:messages_acceptEncryption
func (m *TLmessages_acceptEncryption) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getFeaturedStickers
//
func NewTLmessages_getFeaturedStickers() *TLmessages_getFeaturedStickers {
	return &TLmessages_getFeaturedStickers{}
}

// CodecEncode:messages_getFeaturedStickers
func (m *TLmessages_getFeaturedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(766298703)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getFeaturedStickers
func (m *TLmessages_getFeaturedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getOldFeaturedStickers
//
func NewTLmessages_getOldFeaturedStickers() *TLmessages_getOldFeaturedStickers {
	return &TLmessages_getOldFeaturedStickers{}
}

// CodecEncode:messages_getOldFeaturedStickers
func (m *TLmessages_getOldFeaturedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1608974939)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getOldFeaturedStickers
func (m *TLmessages_getOldFeaturedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getAppConfig
//
func NewTLhelp_getAppConfig() *TLhelp_getAppConfig {
	return &TLhelp_getAppConfig{}
}

// CodecEncode:help_getAppConfig
func (m *TLhelp_getAppConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1735311088)
	return x.Buf
}

// CodecDecode:help_getAppConfig
func (m *TLhelp_getAppConfig) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getAllStickers
//
func NewTLmessages_getAllStickers() *TLmessages_getAllStickers {
	return &TLmessages_getAllStickers{}
}

// CodecEncode:messages_getAllStickers
func (m *TLmessages_getAllStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(479598769)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getAllStickers
func (m *TLmessages_getAllStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getMaskStickers
//
func NewTLmessages_getMaskStickers() *TLmessages_getMaskStickers {
	return &TLmessages_getMaskStickers{}
}

// CodecEncode:messages_getMaskStickers
func (m *TLmessages_getMaskStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1706608543)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getMaskStickers
func (m *TLmessages_getMaskStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getSearchCounters
//
func NewTLmessages_getSearchCounters() *TLmessages_getSearchCounters {
	return &TLmessages_getSearchCounters{}
}

// CodecEncode:messages_getSearchCounters
func (m *TLmessages_getSearchCounters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1932455680)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfilters())))
	for _, v := range m.Getfilters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getSearchCounters
func (m *TLmessages_getSearchCounters) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]MessagesFilter, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = MessagesFilter{}
		v1[i].Decode(dbuf)
	}
	m.Setfilters(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getAttachedStickers
//
func NewTLmessages_getAttachedStickers() *TLmessages_getAttachedStickers {
	return &TLmessages_getAttachedStickers{}
}

// CodecEncode:messages_getAttachedStickers
func (m *TLmessages_getAttachedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-866424884)
	x.Bytes(m.Getmedia().Encode())
	return x.Buf
}

// CodecDecode:messages_getAttachedStickers
func (m *TLmessages_getAttachedStickers) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickeredMedia{}
	m0.Decode(dbuf)
	m.Setmedia(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_deleteContacts
//
func NewTLcontacts_deleteContacts() *TLcontacts_deleteContacts {
	return &TLcontacts_deleteContacts{}
}

// CodecEncode:contacts_deleteContacts
func (m *TLcontacts_deleteContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(157945344)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_deleteContacts
func (m *TLcontacts_deleteContacts) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendMessage
//
func NewTLmessages_sendMessage() *TLmessages_sendMessage {
	return &TLmessages_sendMessage{}
}

// CodecEncode:messages_sendMessage
func (m *TLmessages_sendMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1376532592)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if m.Getsilent() != false {
		flags |= 5 << 1
	}
	if m.Getbackground() != false {
		flags |= 6 << 2
	}
	if m.Getclear_draft() != false {
		flags |= 7 << 3
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 5
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 8
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 9
	}
	if m.Getschedule_date() != 0 {
		flags |= 10 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.String(m.Getmessage())
	x.Long(m.Getrandom_id())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMessage
func (m *TLmessages_sendMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setclear_draft(true)
	}
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setpeer(m4)
	if (flags & (1 << 5)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setmessage(dbuf.String())
	m.Setrandom_id(dbuf.Long())
	if (flags & (1 << 8)) != 0 {
		m8 := &ReplyMarkup{}
		m8.Decode(dbuf)
		m.Setreply_markup(m8)
	}
	if (flags & (1 << 9)) != 0 {
		c9 := dbuf.Int()
		if c9 != 481674261 {
			return dbuf.Err
		}
		l9 := dbuf.Int()
		v9 := make([]MessageEntity, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = MessageEntity{}
			v9[i].Decode(dbuf)
		}
		m.Setentities(v9)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendMedia
//
func NewTLmessages_sendMedia() *TLmessages_sendMedia {
	return &TLmessages_sendMedia{}
}

// CodecEncode:messages_sendMedia
func (m *TLmessages_sendMedia) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(881978281)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 5 << 0
	}
	if m.Getbackground() != false {
		flags |= 6 << 1
	}
	if m.Getclear_draft() != false {
		flags |= 7 << 2
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 4
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 8
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 9
	}
	if m.Getschedule_date() != 0 {
		flags |= 10 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Bytes(m.Getmedia().Encode())
	x.String(m.Getmessage())
	x.Long(m.Getrandom_id())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMedia
func (m *TLmessages_sendMedia) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setclear_draft(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	if (flags & (1 << 4)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m5 := &InputMedia{}
	m5.Decode(dbuf)
	m.Setmedia(m5)
	m.Setmessage(dbuf.String())
	m.Setrandom_id(dbuf.Long())
	if (flags & (1 << 8)) != 0 {
		m8 := &ReplyMarkup{}
		m8.Decode(dbuf)
		m.Setreply_markup(m8)
	}
	if (flags & (1 << 9)) != 0 {
		c9 := dbuf.Int()
		if c9 != 481674261 {
			return dbuf.Err
		}
		l9 := dbuf.Int()
		v9 := make([]MessageEntity, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = MessageEntity{}
			v9[i].Decode(dbuf)
		}
		m.Setentities(v9)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_forwardMessages
//
func NewTLmessages_forwardMessages() *TLmessages_forwardMessages {
	return &TLmessages_forwardMessages{}
}

// CodecEncode:messages_forwardMessages
func (m *TLmessages_forwardMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-637606386)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 5 << 0
	}
	if m.Getbackground() != false {
		flags |= 6 << 1
	}
	if m.Getwith_my_score() != false {
		flags |= 8 << 2
	}
	if m.Getschedule_date() != 0 {
		flags |= 10 << 7
	}
	x.UInt(flags)
	x.Bytes(m.Getfrom_peer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getrandom_id())))
	for _, v := range m.Getrandom_id() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getto_peer().Encode())
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_forwardMessages
func (m *TLmessages_forwardMessages) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setwith_my_score(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setfrom_peer(m3)
	m.Setid(dbuf.VectorInt())
	m.Setrandom_id(dbuf.VectorLong())
	m6 := &InputPeer{}
	m6.Decode(dbuf)
	m.Setto_peer(m6)
	if (flags & (1 << 7)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editChatTitle
//
func NewTLmessages_editChatTitle() *TLmessages_editChatTitle {
	return &TLmessages_editChatTitle{}
}

// CodecEncode:messages_editChatTitle
func (m *TLmessages_editChatTitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-599447467)
	x.Int(m.Getchat_id())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messages_editChatTitle
func (m *TLmessages_editChatTitle) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editChatPhoto
//
func NewTLmessages_editChatPhoto() *TLmessages_editChatPhoto {
	return &TLmessages_editChatPhoto{}
}

// CodecEncode:messages_editChatPhoto
func (m *TLmessages_editChatPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-900957736)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatPhoto
func (m *TLmessages_editChatPhoto) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputChatPhoto{}
	m1.Decode(dbuf)
	m.Setphoto(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_addChatUser
//
func NewTLmessages_addChatUser() *TLmessages_addChatUser {
	return &TLmessages_addChatUser{}
}

// CodecEncode:messages_addChatUser
func (m *TLmessages_addChatUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-106911223)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getfwd_limit())
	return x.Buf
}

// CodecDecode:messages_addChatUser
func (m *TLmessages_addChatUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setfwd_limit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_deleteChatUser
//
func NewTLmessages_deleteChatUser() *TLmessages_deleteChatUser {
	return &TLmessages_deleteChatUser{}
}

// CodecEncode:messages_deleteChatUser
func (m *TLmessages_deleteChatUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-530505962)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_deleteChatUser
func (m *TLmessages_deleteChatUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_createChat
//
func NewTLmessages_createChat() *TLmessages_createChat {
	return &TLmessages_createChat{}
}

// CodecEncode:messages_createChat
func (m *TLmessages_createChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(164303470)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messages_createChat
func (m *TLmessages_createChat) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_importChatInvite
//
func NewTLmessages_importChatInvite() *TLmessages_importChatInvite {
	return &TLmessages_importChatInvite{}
}

// CodecEncode:messages_importChatInvite
func (m *TLmessages_importChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1817183516)
	x.String(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_importChatInvite
func (m *TLmessages_importChatInvite) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_startBot
//
func NewTLmessages_startBot() *TLmessages_startBot {
	return &TLmessages_startBot{}
}

// CodecEncode:messages_startBot
func (m *TLmessages_startBot) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-421563528)
	x.Bytes(m.Getbot().Encode())
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:messages_startBot
func (m *TLmessages_startBot) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getAppChangelog
//
func NewTLhelp_getAppChangelog() *TLhelp_getAppChangelog {
	return &TLhelp_getAppChangelog{}
}

// CodecEncode:help_getAppChangelog
func (m *TLhelp_getAppChangelog) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1877938321)
	x.String(m.Getprev_app_version())
	return x.Buf
}

// CodecDecode:help_getAppChangelog
func (m *TLhelp_getAppChangelog) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_app_version(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_createChannel
//
func NewTLchannels_createChannel() *TLchannels_createChannel {
	return &TLchannels_createChannel{}
}

// CodecEncode:channels_createChannel
func (m *TLchannels_createChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1029681423)
	var flags uint32 = 0
	if m.Getbroadcast() != false {
		flags |= 0 << 0
	}
	if m.Getmegagroup() != false {
		flags |= 1 << 1
	}
	if m.Getgeo_point().Constructor != 0 {
		flags |= 2 << 4
	}
	if m.Getaddress() != "" {
		flags |= 2 << 5
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getabout())
	if m.Getgeo_point().Constructor != 0 {
		x.Bytes(m.Getgeo_point().Encode())
	}
	if m.Getaddress() != "" {
		x.String(m.Getaddress())
	}
	return x.Buf
}

// CodecDecode:channels_createChannel
func (m *TLchannels_createChannel) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmegagroup(true)
	}
	m.Settitle(dbuf.String())
	m.Setabout(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m4 := &InputGeoPoint{}
		m4.Decode(dbuf)
		m.Setgeo_point(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setaddress(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editAdmin
//
func NewTLchannels_editAdmin() *TLchannels_editAdmin {
	return &TLchannels_editAdmin{}
}

// CodecEncode:channels_editAdmin
func (m *TLchannels_editAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-751007486)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getadmin_rights().Encode())
	x.String(m.Getrank())
	return x.Buf
}

// CodecDecode:channels_editAdmin
func (m *TLchannels_editAdmin) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &ChatAdminRights{}
	m2.Decode(dbuf)
	m.Setadmin_rights(m2)
	m.Setrank(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editTitle
//
func NewTLchannels_editTitle() *TLchannels_editTitle {
	return &TLchannels_editTitle{}
}

// CodecEncode:channels_editTitle
func (m *TLchannels_editTitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1450044624)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:channels_editTitle
func (m *TLchannels_editTitle) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editPhoto
//
func NewTLchannels_editPhoto() *TLchannels_editPhoto {
	return &TLchannels_editPhoto{}
}

// CodecEncode:channels_editPhoto
func (m *TLchannels_editPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-248621111)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:channels_editPhoto
func (m *TLchannels_editPhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputChatPhoto{}
	m1.Decode(dbuf)
	m.Setphoto(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_joinChannel
//
func NewTLchannels_joinChannel() *TLchannels_joinChannel {
	return &TLchannels_joinChannel{}
}

// CodecEncode:channels_joinChannel
func (m *TLchannels_joinChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(615851205)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_joinChannel
func (m *TLchannels_joinChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_leaveChannel
//
func NewTLchannels_leaveChannel() *TLchannels_leaveChannel {
	return &TLchannels_leaveChannel{}
}

// CodecEncode:channels_leaveChannel
func (m *TLchannels_leaveChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-130635115)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_leaveChannel
func (m *TLchannels_leaveChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_inviteToChannel
//
func NewTLchannels_inviteToChannel() *TLchannels_inviteToChannel {
	return &TLchannels_inviteToChannel{}
}

// CodecEncode:channels_inviteToChannel
func (m *TLchannels_inviteToChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(429865580)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_inviteToChannel
func (m *TLchannels_inviteToChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]InputUser, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = InputUser{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_deleteChannel
//
func NewTLchannels_deleteChannel() *TLchannels_deleteChannel {
	return &TLchannels_deleteChannel{}
}

// CodecEncode:channels_deleteChannel
func (m *TLchannels_deleteChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1072619549)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_deleteChannel
func (m *TLchannels_deleteChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_migrateChat
//
func NewTLmessages_migrateChat() *TLmessages_migrateChat {
	return &TLmessages_migrateChat{}
}

// CodecEncode:messages_migrateChat
func (m *TLmessages_migrateChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(363051235)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_migrateChat
func (m *TLmessages_migrateChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendInlineBotResult
//
func NewTLmessages_sendInlineBotResult() *TLmessages_sendInlineBotResult {
	return &TLmessages_sendInlineBotResult{}
}

// CodecEncode:messages_sendInlineBotResult
func (m *TLmessages_sendInlineBotResult) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(570955184)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 5 << 0
	}
	if m.Getbackground() != false {
		flags |= 6 << 1
	}
	if m.Getclear_draft() != false {
		flags |= 7 << 2
	}
	if m.Gethide_via() != false {
		flags |= 11 << 3
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 5
	}
	if m.Getschedule_date() != 0 {
		flags |= 10 << 9
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Long(m.Getrandom_id())
	x.Long(m.Getquery_id())
	x.String(m.Getid())
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendInlineBotResult
func (m *TLmessages_sendInlineBotResult) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setclear_draft(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Sethide_via(true)
	}
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setpeer(m4)
	if (flags & (1 << 5)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setrandom_id(dbuf.Long())
	m.Setquery_id(dbuf.Long())
	m.Setid(dbuf.String())
	if (flags & (1 << 9)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_toggleSignatures
//
func NewTLchannels_toggleSignatures() *TLchannels_toggleSignatures {
	return &TLchannels_toggleSignatures{}
}

// CodecEncode:channels_toggleSignatures
func (m *TLchannels_toggleSignatures) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(527021574)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:channels_toggleSignatures
func (m *TLchannels_toggleSignatures) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setenabled(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editMessage
//
func NewTLmessages_editMessage() *TLmessages_editMessage {
	return &TLmessages_editMessage{}
}

// CodecEncode:messages_editMessage
func (m *TLmessages_editMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1224152952)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if m.Getmessage() != "" {
		flags |= 11 << 3
	}
	if m.Getmedia().Constructor != 0 {
		flags |= 14 << 4
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 5
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 6
	}
	if m.Getschedule_date() != 0 {
		flags |= 15 << 7
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Getmedia().Constructor != 0 {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_editMessage
func (m *TLmessages_editMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setid(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &InputMedia{}
		m4.Decode(dbuf)
		m.Setmedia(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &ReplyMarkup{}
		m5.Decode(dbuf)
		m.Setreply_markup(m5)
	}
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]MessageEntity, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = MessageEntity{}
			v6[i].Decode(dbuf)
		}
		m.Setentities(v6)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getAllDrafts
//
func NewTLmessages_getAllDrafts() *TLmessages_getAllDrafts {
	return &TLmessages_getAllDrafts{}
}

// CodecEncode:messages_getAllDrafts
func (m *TLmessages_getAllDrafts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1782549861)
	return x.Buf
}

// CodecDecode:messages_getAllDrafts
func (m *TLmessages_getAllDrafts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setGameScore
//
func NewTLmessages_setGameScore() *TLmessages_setGameScore {
	return &TLmessages_setGameScore{}
}

// CodecEncode:messages_setGameScore
func (m *TLmessages_setGameScore) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1896289088)
	var flags uint32 = 0
	if m.Getedit_message() != false {
		flags |= 0 << 0
	}
	if m.Getforce() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messages_setGameScore
func (m *TLmessages_setGameScore) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setedit_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforce(true)
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setid(dbuf.Int())
	m4 := &InputUser{}
	m4.Decode(dbuf)
	m.Setuser_id(m4)
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_discardCall
//
func NewTLphone_discardCall() *TLphone_discardCall {
	return &TLphone_discardCall{}
}

// CodecEncode:phone_discardCall
func (m *TLphone_discardCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1295269440)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getduration())
	x.Bytes(m.Getreason().Encode())
	x.Long(m.Getconnection_id())
	return x.Buf
}

// CodecDecode:phone_discardCall
func (m *TLphone_discardCall) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m1 := &InputPhoneCall{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setduration(dbuf.Int())
	m3 := &PhoneCallDiscardReason{}
	m3.Decode(dbuf)
	m.Setreason(m3)
	m.Setconnection_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_setCallRating
//
func NewTLphone_setCallRating() *TLphone_setCallRating {
	return &TLphone_setCallRating{}
}

// CodecEncode:phone_setCallRating
func (m *TLphone_setCallRating) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1508562471)
	var flags uint32 = 0
	if m.Getuser_initiative() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getrating())
	x.String(m.Getcomment())
	return x.Buf
}

// CodecDecode:phone_setCallRating
func (m *TLphone_setCallRating) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setuser_initiative(true)
	}
	m1 := &InputPhoneCall{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrating(dbuf.Int())
	m.Setcomment(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editBanned
//
func NewTLchannels_editBanned() *TLchannels_editBanned {
	return &TLchannels_editBanned{}
}

// CodecEncode:channels_editBanned
func (m *TLchannels_editBanned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1920559378)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:channels_editBanned
func (m *TLchannels_editBanned) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &ChatBannedRights{}
	m2.Decode(dbuf)
	m.Setbanned_rights(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendScreenshotNotification
//
func NewTLmessages_sendScreenshotNotification() *TLmessages_sendScreenshotNotification {
	return &TLmessages_sendScreenshotNotification{}
}

// CodecEncode:messages_sendScreenshotNotification
func (m *TLmessages_sendScreenshotNotification) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-914493408)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getreply_to_msg_id())
	x.Long(m.Getrandom_id())
	return x.Buf
}

// CodecDecode:messages_sendScreenshotNotification
func (m *TLmessages_sendScreenshotNotification) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setreply_to_msg_id(dbuf.Int())
	m.Setrandom_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_togglePreHistoryHidden
//
func NewTLchannels_togglePreHistoryHidden() *TLchannels_togglePreHistoryHidden {
	return &TLchannels_togglePreHistoryHidden{}
}

// CodecEncode:channels_togglePreHistoryHidden
func (m *TLchannels_togglePreHistoryHidden) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-356796084)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:channels_togglePreHistoryHidden
func (m *TLchannels_togglePreHistoryHidden) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setenabled(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendMultiMedia
//
func NewTLmessages_sendMultiMedia() *TLmessages_sendMultiMedia {
	return &TLmessages_sendMultiMedia{}
}

// CodecEncode:messages_sendMultiMedia
func (m *TLmessages_sendMultiMedia) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-872345397)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 5 << 0
	}
	if m.Getbackground() != false {
		flags |= 6 << 1
	}
	if m.Getclear_draft() != false {
		flags |= 7 << 2
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 4
	}
	if m.Getschedule_date() != 0 {
		flags |= 10 << 6
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmulti_media())))
	for _, v := range m.Getmulti_media() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMultiMedia
func (m *TLmessages_sendMultiMedia) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setclear_draft(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	if (flags & (1 << 4)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]InputSingleMedia, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = InputSingleMedia{}
		v5[i].Decode(dbuf)
	}
	m.Setmulti_media(v5)
	if (flags & (1 << 6)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_updatePinnedMessage
//
func NewTLmessages_updatePinnedMessage() *TLmessages_updatePinnedMessage {
	return &TLmessages_updatePinnedMessage{}
}

// CodecEncode:messages_updatePinnedMessage
func (m *TLmessages_updatePinnedMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-760547348)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 0 << 0
	}
	if m.Getunpin() != false {
		flags |= 1 << 1
	}
	if m.Getpm_oneside() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messages_updatePinnedMessage
func (m *TLmessages_updatePinnedMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setunpin(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpm_oneside(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getNotifyExceptions
//
func NewTLaccount_getNotifyExceptions() *TLaccount_getNotifyExceptions {
	return &TLaccount_getNotifyExceptions{}
}

// CodecEncode:account_getNotifyExceptions
func (m *TLaccount_getNotifyExceptions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1398240377)
	var flags uint32 = 0
	if m.Getcompare_sound() != false {
		flags |= 1 << 0
	}
	if m.Getpeer().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	if m.Getpeer().Constructor != 0 {
		x.Bytes(m.Getpeer().Encode())
	}
	return x.Buf
}

// CodecDecode:account_getNotifyExceptions
func (m *TLaccount_getNotifyExceptions) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcompare_sound(true)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &InputNotifyPeer{}
		m1.Decode(dbuf)
		m.Setpeer(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendVote
//
func NewTLmessages_sendVote() *TLmessages_sendVote {
	return &TLmessages_sendVote{}
}

// CodecEncode:messages_sendVote
func (m *TLmessages_sendVote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(283795844)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	return x.Buf
}

// CodecDecode:messages_sendVote
func (m *TLmessages_sendVote) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]byte, l2)
	for i := int32(0); i < l2; i++ {
		v2[i].Bytes(dbuf)
	}
	m.Setoptions(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getPollResults
//
func NewTLmessages_getPollResults() *TLmessages_getPollResults {
	return &TLmessages_getPollResults{}
}

// CodecEncode:messages_getPollResults
func (m *TLmessages_getPollResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1941660731)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:messages_getPollResults
func (m *TLmessages_getPollResults) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editChatDefaultBannedRights
//
func NewTLmessages_editChatDefaultBannedRights() *TLmessages_editChatDefaultBannedRights {
	return &TLmessages_editChatDefaultBannedRights{}
}

// CodecEncode:messages_editChatDefaultBannedRights
func (m *TLmessages_editChatDefaultBannedRights) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1517917375)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatDefaultBannedRights
func (m *TLmessages_editChatDefaultBannedRights) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setbanned_rights(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:folders_editPeerFolders
//
func NewTLfolders_editPeerFolders() *TLfolders_editPeerFolders {
	return &TLfolders_editPeerFolders{}
}

// CodecEncode:folders_editPeerFolders
func (m *TLfolders_editPeerFolders) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1749536939)
	x.Int(481674261)
	x.Int(int32(len(m.Getfolder_peers())))
	for _, v := range m.Getfolder_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:folders_editPeerFolders
func (m *TLfolders_editPeerFolders) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputFolderPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputFolderPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setfolder_peers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:folders_deleteFolder
//
func NewTLfolders_deleteFolder() *TLfolders_deleteFolder {
	return &TLfolders_deleteFolder{}
}

// CodecEncode:folders_deleteFolder
func (m *TLfolders_deleteFolder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(472471681)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:folders_deleteFolder
func (m *TLfolders_deleteFolder) Decode(dbuf *code.DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_addContact
//
func NewTLcontacts_addContact() *TLcontacts_addContact {
	return &TLcontacts_addContact{}
}

// CodecEncode:contacts_addContact
func (m *TLcontacts_addContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-386636848)
	var flags uint32 = 0
	if m.Getadd_phone_privacy_exception() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:contacts_addContact
func (m *TLcontacts_addContact) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setadd_phone_privacy_exception(true)
	}
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setphone(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_acceptContact
//
func NewTLcontacts_acceptContact() *TLcontacts_acceptContact {
	return &TLcontacts_acceptContact{}
}

// CodecEncode:contacts_acceptContact
func (m *TLcontacts_acceptContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-130964977)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_acceptContact
func (m *TLcontacts_acceptContact) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editCreator
//
func NewTLchannels_editCreator() *TLchannels_editCreator {
	return &TLchannels_editCreator{}
}

// CodecEncode:channels_editCreator
func (m *TLchannels_editCreator) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1892102881)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:channels_editCreator
func (m *TLchannels_editCreator) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &InputCheckPasswordSRP{}
	m2.Decode(dbuf)
	m.Setpassword(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getLocated
//
func NewTLcontacts_getLocated() *TLcontacts_getLocated {
	return &TLcontacts_getLocated{}
}

// CodecEncode:contacts_getLocated
func (m *TLcontacts_getLocated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-750207932)
	var flags uint32 = 0
	if m.Getbackground() != false {
		flags |= 1 << 0
	}
	if m.Getself_expires() != 0 {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getself_expires() != 0 {
		x.Int(m.Getself_expires())
	}
	return x.Buf
}

// CodecDecode:contacts_getLocated
func (m *TLcontacts_getLocated) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbackground(true)
	}
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setself_expires(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_toggleSlowMode
//
func NewTLchannels_toggleSlowMode() *TLchannels_toggleSlowMode {
	return &TLchannels_toggleSlowMode{}
}

// CodecEncode:channels_toggleSlowMode
func (m *TLchannels_toggleSlowMode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-304832784)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getseconds())
	return x.Buf
}

// CodecDecode:channels_toggleSlowMode
func (m *TLchannels_toggleSlowMode) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setseconds(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendScheduledMessages
//
func NewTLmessages_sendScheduledMessages() *TLmessages_sendScheduledMessages {
	return &TLmessages_sendScheduledMessages{}
}

// CodecEncode:messages_sendScheduledMessages
func (m *TLmessages_sendScheduledMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1120369398)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_sendScheduledMessages
func (m *TLmessages_sendScheduledMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_deleteScheduledMessages
//
func NewTLmessages_deleteScheduledMessages() *TLmessages_deleteScheduledMessages {
	return &TLmessages_deleteScheduledMessages{}
}

// CodecEncode:messages_deleteScheduledMessages
func (m *TLmessages_deleteScheduledMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1504586518)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_deleteScheduledMessages
func (m *TLmessages_deleteScheduledMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_blockFromReplies
//
func NewTLcontacts_blockFromReplies() *TLcontacts_blockFromReplies {
	return &TLcontacts_blockFromReplies{}
}

// CodecEncode:contacts_blockFromReplies
func (m *TLcontacts_blockFromReplies) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(698914348)
	var flags uint32 = 0
	if m.Getdelete_message() != false {
		flags |= 0 << 0
	}
	if m.Getdelete_history() != false {
		flags |= 1 << 1
	}
	if m.Getreport_spam() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:contacts_blockFromReplies
func (m *TLcontacts_blockFromReplies) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdelete_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdelete_history(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setreport_spam(true)
	}
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_exportChatInvite
//
func NewTLmessages_exportChatInvite() *TLmessages_exportChatInvite {
	return &TLmessages_exportChatInvite{}
}

// CodecEncode:messages_exportChatInvite
func (m *TLmessages_exportChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(234312524)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_exportChatInvite
func (m *TLmessages_exportChatInvite) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:langpack_getStrings
//
func NewTLlangpack_getStrings() *TLlangpack_getStrings {
	return &TLlangpack_getStrings{}
}

// CodecEncode:langpack_getStrings
func (m *TLlangpack_getStrings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-269862909)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	x.Int(481674261)
	x.Int(int32(len(m.Getkeys())))
	for _, v := range m.Getkeys() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:langpack_getStrings
func (m *TLlangpack_getStrings) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	m.Setkeys(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getPromoData
//
func NewTLhelp_getPromoData() *TLhelp_getPromoData {
	return &TLhelp_getPromoData{}
}

// CodecEncode:help_getPromoData
func (m *TLhelp_getPromoData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1063816159)
	return x.Buf
}

// CodecDecode:help_getPromoData
func (m *TLhelp_getPromoData) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getMessagesViews
//
func NewTLmessages_getMessagesViews() *TLmessages_getMessagesViews {
	return &TLmessages_getMessagesViews{}
}

// CodecEncode:messages_getMessagesViews
func (m *TLmessages_getMessagesViews) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1468322785)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getincrement().Encode())
	return x.Buf
}

// CodecDecode:messages_getMessagesViews
func (m *TLmessages_getMessagesViews) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setincrement(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_signUp
//
func NewTLauth_signUp() *TLauth_signUp {
	return &TLauth_signUp{}
}

// CodecEncode:auth_signUp
func (m *TLauth_signUp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2131827673)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	return x.Buf
}

// CodecDecode:auth_signUp
func (m *TLauth_signUp) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_signIn
//
func NewTLauth_signIn() *TLauth_signIn {
	return &TLauth_signIn{}
}

// CodecEncode:auth_signIn
func (m *TLauth_signIn) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1126886015)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:auth_signIn
func (m *TLauth_signIn) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_importAuthorization
//
func NewTLauth_importAuthorization() *TLauth_importAuthorization {
	return &TLauth_importAuthorization{}
}

// CodecEncode:auth_importAuthorization
func (m *TLauth_importAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-470837741)
	x.Int(m.Getid())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:auth_importAuthorization
func (m *TLauth_importAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_importBotAuthorization
//
func NewTLauth_importBotAuthorization() *TLauth_importBotAuthorization {
	return &TLauth_importBotAuthorization{}
}

// CodecEncode:auth_importBotAuthorization
func (m *TLauth_importBotAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1738800940)
	x.Int(m.Getflags())
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.String(m.Getbot_auth_token())
	return x.Buf
}

// CodecDecode:auth_importBotAuthorization
func (m *TLauth_importBotAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Setflags(dbuf.Int())
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m.Setbot_auth_token(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_checkPassword
//
func NewTLauth_checkPassword() *TLauth_checkPassword {
	return &TLauth_checkPassword{}
}

// CodecEncode:auth_checkPassword
func (m *TLauth_checkPassword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-779399914)
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:auth_checkPassword
func (m *TLauth_checkPassword) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_recoverPassword
//
func NewTLauth_recoverPassword() *TLauth_recoverPassword {
	return &TLauth_recoverPassword{}
}

// CodecEncode:auth_recoverPassword
func (m *TLauth_recoverPassword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1319464594)
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:auth_recoverPassword
func (m *TLauth_recoverPassword) Decode(dbuf *code.DecodeBuf) error {
	m.Setcode(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getFavedStickers
//
func NewTLmessages_getFavedStickers() *TLmessages_getFavedStickers {
	return &TLmessages_getFavedStickers{}
}

// CodecEncode:messages_getFavedStickers
func (m *TLmessages_getFavedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(567151374)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getFavedStickers
func (m *TLmessages_getFavedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getPasswordSettings
//
func NewTLaccount_getPasswordSettings() *TLaccount_getPasswordSettings {
	return &TLaccount_getPasswordSettings{}
}

// CodecEncode:account_getPasswordSettings
func (m *TLaccount_getPasswordSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1663767815)
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:account_getPasswordSettings
func (m *TLaccount_getPasswordSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getFullChat
//
func NewTLmessages_getFullChat() *TLmessages_getFullChat {
	return &TLmessages_getFullChat{}
}

// CodecEncode:messages_getFullChat
func (m *TLmessages_getFullChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(998448230)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_getFullChat
func (m *TLmessages_getFullChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getFullChannel
//
func NewTLchannels_getFullChannel() *TLchannels_getFullChannel {
	return &TLchannels_getFullChannel{}
}

// CodecEncode:channels_getFullChannel
func (m *TLchannels_getFullChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(141781513)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_getFullChannel
func (m *TLchannels_getFullChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getAdminLog
//
func NewTLchannels_getAdminLog() *TLchannels_getAdminLog {
	return &TLchannels_getAdminLog{}
}

// CodecEncode:channels_getAdminLog
func (m *TLchannels_getAdminLog) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(870184064)
	var flags uint32 = 0
	if m.Getevents_filter().Constructor != 0 {
		flags |= 0 << 2
	}
	if len(m.Getadmins()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getq())
	if m.Getevents_filter().Constructor != 0 {
		x.Bytes(m.Getevents_filter().Encode())
	}
	if len(m.Getadmins()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getadmins())))
		for _, v := range m.Getadmins() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Long(m.Getmax_id())
	x.Long(m.Getmin_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:channels_getAdminLog
func (m *TLchannels_getAdminLog) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setq(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &ChannelAdminLogEventsFilter{}
		m2.Decode(dbuf)
		m.Setevents_filter(m2)
	}
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]InputUser, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = InputUser{}
			v3[i].Decode(dbuf)
		}
		m.Setadmins(v3)
	}
	m.Setmax_id(dbuf.Long())
	m.Setmin_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getAutoDownloadSettings
//
func NewTLaccount_getAutoDownloadSettings() *TLaccount_getAutoDownloadSettings {
	return &TLaccount_getAutoDownloadSettings{}
}

// CodecEncode:account_getAutoDownloadSettings
func (m *TLaccount_getAutoDownloadSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1457130303)
	return x.Buf
}

// CodecDecode:account_getAutoDownloadSettings
func (m *TLaccount_getAutoDownloadSettings) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getPrivacy
//
func NewTLaccount_getPrivacy() *TLaccount_getPrivacy {
	return &TLaccount_getPrivacy{}
}

// CodecEncode:account_getPrivacy
func (m *TLaccount_getPrivacy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-623130288)
	x.Bytes(m.Getkey_key().Encode())
	return x.Buf
}

// CodecDecode:account_getPrivacy
func (m *TLaccount_getPrivacy) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey_key(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_setPrivacy
//
func NewTLaccount_setPrivacy() *TLaccount_setPrivacy {
	return &TLaccount_setPrivacy{}
}

// CodecEncode:account_setPrivacy
func (m *TLaccount_setPrivacy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-906486552)
	x.Bytes(m.Getkey_key().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_setPrivacy
func (m *TLaccount_setPrivacy) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey_key(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]InputPrivacyRule, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = InputPrivacyRule{}
		v1[i].Decode(dbuf)
	}
	m.Setrules(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:photos_updateProfilePhoto
//
func NewTLphotos_updateProfilePhoto() *TLphotos_updateProfilePhoto {
	return &TLphotos_updateProfilePhoto{}
}

// CodecEncode:photos_updateProfilePhoto
func (m *TLphotos_updateProfilePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1926525996)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:photos_updateProfilePhoto
func (m *TLphotos_updateProfilePhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:photos_uploadProfilePhoto
//
func NewTLphotos_uploadProfilePhoto() *TLphotos_uploadProfilePhoto {
	return &TLphotos_uploadProfilePhoto{}
}

// CodecEncode:photos_uploadProfilePhoto
func (m *TLphotos_uploadProfilePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1980559511)
	var flags uint32 = 0
	if m.Getfile().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getvideo().Constructor != 0 {
		flags |= 1 << 1
	}
	if m.Getvideo_start_ts().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	if m.Getfile().Constructor != 0 {
		x.Bytes(m.Getfile().Encode())
	}
	if m.Getvideo().Constructor != 0 {
		x.Bytes(m.Getvideo().Encode())
	}
	if m.Getvideo_start_ts().Constructor != 0 {
		x.Bytes(m.Getvideo_start_ts().Encode())
	}
	return x.Buf
}

// CodecDecode:photos_uploadProfilePhoto
func (m *TLphotos_uploadProfilePhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &InputFile{}
		m0.Decode(dbuf)
		m.Setfile(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setvideo(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getStatuses
//
func NewTLcontacts_getStatuses() *TLcontacts_getStatuses {
	return &TLcontacts_getStatuses{}
}

// CodecEncode:contacts_getStatuses
func (m *TLcontacts_getStatuses) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-995929106)
	return x.Buf
}

// CodecDecode:contacts_getStatuses
func (m *TLcontacts_getStatuses) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getAuthorizations
//
func NewTLaccount_getAuthorizations() *TLaccount_getAuthorizations {
	return &TLaccount_getAuthorizations{}
}

// CodecEncode:account_getAuthorizations
func (m *TLaccount_getAuthorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-484392616)
	return x.Buf
}

// CodecDecode:account_getAuthorizations
func (m *TLaccount_getAuthorizations) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_getPaymentForm
//
func NewTLpayments_getPaymentForm() *TLpayments_getPaymentForm {
	return &TLpayments_getPaymentForm{}
}

// CodecEncode:payments_getPaymentForm
func (m *TLpayments_getPaymentForm) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1712285883)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:payments_getPaymentForm
func (m *TLpayments_getPaymentForm) Decode(dbuf *code.DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getCdnConfig
//
func NewTLhelp_getCdnConfig() *TLhelp_getCdnConfig {
	return &TLhelp_getCdnConfig{}
}

// CodecEncode:help_getCdnConfig
func (m *TLhelp_getCdnConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1375900482)
	return x.Buf
}

// CodecDecode:help_getCdnConfig
func (m *TLhelp_getCdnConfig) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDocumentByHash
//
func NewTLmessages_getDocumentByHash() *TLmessages_getDocumentByHash {
	return &TLmessages_getDocumentByHash{}
}

// CodecEncode:messages_getDocumentByHash
func (m *TLmessages_getDocumentByHash) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(864953444)
	x.Bytes(m.Getsha256())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	return x.Buf
}

// CodecDecode:messages_getDocumentByHash
func (m *TLmessages_getDocumentByHash) Decode(dbuf *code.DecodeBuf) error {
	m.Setsha256(dbuf.StringBytes())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_uploadTheme
//
func NewTLaccount_uploadTheme() *TLaccount_uploadTheme {
	return &TLaccount_uploadTheme{}
}

// CodecEncode:account_uploadTheme
func (m *TLaccount_uploadTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(473805619)
	var flags uint32 = 0
	if m.Getthumb().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	x.String(m.Getfile_name())
	x.String(m.Getmime_type())
	return x.Buf
}

// CodecDecode:account_uploadTheme
func (m *TLaccount_uploadTheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	if (flags & (1 << 1)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setthumb(m1)
	}
	m.Setfile_name(dbuf.String())
	m.Setmime_type(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getSuggestedDialogFilters
//
func NewTLmessages_getSuggestedDialogFilters() *TLmessages_getSuggestedDialogFilters {
	return &TLmessages_getSuggestedDialogFilters{}
}

// CodecEncode:messages_getSuggestedDialogFilters
func (m *TLmessages_getSuggestedDialogFilters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1566780372)
	return x.Buf
}

// CodecDecode:messages_getSuggestedDialogFilters
func (m *TLmessages_getSuggestedDialogFilters) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_logOut
//
func NewTLauth_logOut() *TLauth_logOut {
	return &TLauth_logOut{}
}

// CodecEncode:auth_logOut
func (m *TLauth_logOut) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1461180992)
	return x.Buf
}

// CodecDecode:auth_logOut
func (m *TLauth_logOut) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_resetAuthorizations
//
func NewTLauth_resetAuthorizations() *TLauth_resetAuthorizations {
	return &TLauth_resetAuthorizations{}
}

// CodecEncode:auth_resetAuthorizations
func (m *TLauth_resetAuthorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1616179942)
	return x.Buf
}

// CodecDecode:auth_resetAuthorizations
func (m *TLauth_resetAuthorizations) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_bindTempAuthKey
//
func NewTLauth_bindTempAuthKey() *TLauth_bindTempAuthKey {
	return &TLauth_bindTempAuthKey{}
}

// CodecEncode:auth_bindTempAuthKey
func (m *TLauth_bindTempAuthKey) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-841733627)
	x.Long(m.Getperm_auth_key_id())
	x.Long(m.Getnonce())
	x.Int(m.Getexpires_at())
	x.Bytes(m.Getencrypted_message())
	return x.Buf
}

// CodecDecode:auth_bindTempAuthKey
func (m *TLauth_bindTempAuthKey) Decode(dbuf *code.DecodeBuf) error {
	m.Setperm_auth_key_id(dbuf.Long())
	m.Setnonce(dbuf.Long())
	m.Setexpires_at(dbuf.Int())
	m.Setencrypted_message(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_registerDevice
//
func NewTLaccount_registerDevice() *TLaccount_registerDevice {
	return &TLaccount_registerDevice{}
}

// CodecEncode:account_registerDevice
func (m *TLaccount_registerDevice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1754754159)
	var flags uint32 = 0
	if m.Getno_muted() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Gettoken_type())
	x.String(m.Gettoken())
	x.Bytes(m.Getapp_sandbox().Encode())
	x.Bytes(m.Getsecret())
	x.Int(481674261)
	x.Int(int32(len(m.Getother_uids())))
	for _, v := range m.Getother_uids() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_registerDevice
func (m *TLaccount_registerDevice) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_muted(true)
	}
	m.Settoken_type(dbuf.Int())
	m.Settoken(dbuf.String())
	m3 := &Bool{}
	m3.Decode(dbuf)
	m.Setapp_sandbox(m3)
	m.Setsecret(dbuf.StringBytes())
	m.Setother_uids(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_unregisterDevice
//
func NewTLaccount_unregisterDevice() *TLaccount_unregisterDevice {
	return &TLaccount_unregisterDevice{}
}

// CodecEncode:account_unregisterDevice
func (m *TLaccount_unregisterDevice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(813089983)
	x.Int(m.Gettoken_type())
	x.String(m.Gettoken())
	x.Int(481674261)
	x.Int(int32(len(m.Getother_uids())))
	for _, v := range m.Getother_uids() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_unregisterDevice
func (m *TLaccount_unregisterDevice) Decode(dbuf *code.DecodeBuf) error {
	m.Settoken_type(dbuf.Int())
	m.Settoken(dbuf.String())
	m.Setother_uids(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateNotifySettings
//
func NewTLaccount_updateNotifySettings() *TLaccount_updateNotifySettings {
	return &TLaccount_updateNotifySettings{}
}

// CodecEncode:account_updateNotifySettings
func (m *TLaccount_updateNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2067899501)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_updateNotifySettings
func (m *TLaccount_updateNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputNotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputPeerNotifySettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resetNotifySettings
//
func NewTLaccount_resetNotifySettings() *TLaccount_resetNotifySettings {
	return &TLaccount_resetNotifySettings{}
}

// CodecEncode:account_resetNotifySettings
func (m *TLaccount_resetNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-612493497)
	return x.Buf
}

// CodecDecode:account_resetNotifySettings
func (m *TLaccount_resetNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateStatus
//
func NewTLaccount_updateStatus() *TLaccount_updateStatus {
	return &TLaccount_updateStatus{}
}

// CodecEncode:account_updateStatus
func (m *TLaccount_updateStatus) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1713919532)
	x.Bytes(m.Getoffline().Encode())
	return x.Buf
}

// CodecDecode:account_updateStatus
func (m *TLaccount_updateStatus) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setoffline(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_reportPeer
//
func NewTLaccount_reportPeer() *TLaccount_reportPeer {
	return &TLaccount_reportPeer{}
}

// CodecEncode:account_reportPeer
func (m *TLaccount_reportPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1374118561)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getreason().Encode())
	return x.Buf
}

// CodecDecode:account_reportPeer
func (m *TLaccount_reportPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &ReportReason{}
	m1.Decode(dbuf)
	m.Setreason(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_deleteByPhones
//
func NewTLcontacts_deleteByPhones() *TLcontacts_deleteByPhones {
	return &TLcontacts_deleteByPhones{}
}

// CodecEncode:contacts_deleteByPhones
func (m *TLcontacts_deleteByPhones) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(269745566)
	x.Int(481674261)
	x.Int(int32(len(m.Getphones())))
	for _, v := range m.Getphones() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_deleteByPhones
func (m *TLcontacts_deleteByPhones) Decode(dbuf *code.DecodeBuf) error {
	m.Setphones(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_block
//
func NewTLcontacts_block() *TLcontacts_block {
	return &TLcontacts_block{}
}

// CodecEncode:contacts_block
func (m *TLcontacts_block) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1758204945)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_block
func (m *TLcontacts_block) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_unblock
//
func NewTLcontacts_unblock() *TLcontacts_unblock {
	return &TLcontacts_unblock{}
}

// CodecEncode:contacts_unblock
func (m *TLcontacts_unblock) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1096393392)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_unblock
func (m *TLcontacts_unblock) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setTyping
//
func NewTLmessages_setTyping() *TLmessages_setTyping {
	return &TLmessages_setTyping{}
}

// CodecEncode:messages_setTyping
func (m *TLmessages_setTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1486110434)
	var flags uint32 = 0
	if m.Gettop_msg_id() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:messages_setTyping
func (m *TLmessages_setTyping) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	if (flags & (1 << 1)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m2 := &SendMessageAction{}
	m2.Decode(dbuf)
	m.Setaction(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_reportSpam
//
func NewTLmessages_reportSpam() *TLmessages_reportSpam {
	return &TLmessages_reportSpam{}
}

// CodecEncode:messages_reportSpam
func (m *TLmessages_reportSpam) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-820669733)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_reportSpam
func (m *TLmessages_reportSpam) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_report
//
func NewTLmessages_report() *TLmessages_report {
	return &TLmessages_report{}
}

// CodecEncode:messages_report
func (m *TLmessages_report) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1115507112)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getreason().Encode())
	return x.Buf
}

// CodecDecode:messages_report
func (m *TLmessages_report) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	m2 := &ReportReason{}
	m2.Decode(dbuf)
	m.Setreason(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_saveFilePart
//
func NewTLupload_saveFilePart() *TLupload_saveFilePart {
	return &TLupload_saveFilePart{}
}

// CodecEncode:upload_saveFilePart
func (m *TLupload_saveFilePart) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1291540959)
	x.Long(m.Getfile_id())
	x.Int(m.Getfile_part())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_saveFilePart
func (m *TLupload_saveFilePart) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_id(dbuf.Long())
	m.Setfile_part(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_discardEncryption
//
func NewTLmessages_discardEncryption() *TLmessages_discardEncryption {
	return &TLmessages_discardEncryption{}
}

// CodecEncode:messages_discardEncryption
func (m *TLmessages_discardEncryption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-304536635)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_discardEncryption
func (m *TLmessages_discardEncryption) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setEncryptedTyping
//
func NewTLmessages_setEncryptedTyping() *TLmessages_setEncryptedTyping {
	return &TLmessages_setEncryptedTyping{}
}

// CodecEncode:messages_setEncryptedTyping
func (m *TLmessages_setEncryptedTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2031374829)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Gettyping().Encode())
	return x.Buf
}

// CodecDecode:messages_setEncryptedTyping
func (m *TLmessages_setEncryptedTyping) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Settyping(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readEncryptedHistory
//
func NewTLmessages_readEncryptedHistory() *TLmessages_readEncryptedHistory {
	return &TLmessages_readEncryptedHistory{}
}

// CodecEncode:messages_readEncryptedHistory
func (m *TLmessages_readEncryptedHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2135648522)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_date())
	return x.Buf
}

// CodecDecode:messages_readEncryptedHistory
func (m *TLmessages_readEncryptedHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmax_date(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_reportEncryptedSpam
//
func NewTLmessages_reportEncryptedSpam() *TLmessages_reportEncryptedSpam {
	return &TLmessages_reportEncryptedSpam{}
}

// CodecEncode:messages_reportEncryptedSpam
func (m *TLmessages_reportEncryptedSpam) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1259113487)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_reportEncryptedSpam
func (m *TLmessages_reportEncryptedSpam) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_saveBigFilePart
//
func NewTLupload_saveBigFilePart() *TLupload_saveBigFilePart {
	return &TLupload_saveBigFilePart{}
}

// CodecEncode:upload_saveBigFilePart
func (m *TLupload_saveBigFilePart) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-562337987)
	x.Long(m.Getfile_id())
	x.Int(m.Getfile_part())
	x.Int(m.Getfile_total_parts())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_saveBigFilePart
func (m *TLupload_saveBigFilePart) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_id(dbuf.Long())
	m.Setfile_part(dbuf.Int())
	m.Setfile_total_parts(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_checkUsername
//
func NewTLaccount_checkUsername() *TLaccount_checkUsername {
	return &TLaccount_checkUsername{}
}

// CodecEncode:account_checkUsername
func (m *TLaccount_checkUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(655677548)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:account_checkUsername
func (m *TLaccount_checkUsername) Decode(dbuf *code.DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_deleteAccount
//
func NewTLaccount_deleteAccount() *TLaccount_deleteAccount {
	return &TLaccount_deleteAccount{}
}

// CodecEncode:account_deleteAccount
func (m *TLaccount_deleteAccount) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1099779595)
	x.String(m.Getreason())
	return x.Buf
}

// CodecDecode:account_deleteAccount
func (m *TLaccount_deleteAccount) Decode(dbuf *code.DecodeBuf) error {
	m.Setreason(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_setAccountTTL
//
func NewTLaccount_setAccountTTL() *TLaccount_setAccountTTL {
	return &TLaccount_setAccountTTL{}
}

// CodecEncode:account_setAccountTTL
func (m *TLaccount_setAccountTTL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(608323678)
	x.Bytes(m.Getttl().Encode())
	return x.Buf
}

// CodecDecode:account_setAccountTTL
func (m *TLaccount_setAccountTTL) Decode(dbuf *code.DecodeBuf) error {
	m0 := &AccountDaysTTL{}
	m0.Decode(dbuf)
	m.Setttl(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateDeviceLocked
//
func NewTLaccount_updateDeviceLocked() *TLaccount_updateDeviceLocked {
	return &TLaccount_updateDeviceLocked{}
}

// CodecEncode:account_updateDeviceLocked
func (m *TLaccount_updateDeviceLocked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(954152242)
	x.Int(m.Getperiod())
	return x.Buf
}

// CodecDecode:account_updateDeviceLocked
func (m *TLaccount_updateDeviceLocked) Decode(dbuf *code.DecodeBuf) error {
	m.Setperiod(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resetAuthorization
//
func NewTLaccount_resetAuthorization() *TLaccount_resetAuthorization {
	return &TLaccount_resetAuthorization{}
}

// CodecEncode:account_resetAuthorization
func (m *TLaccount_resetAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-545786948)
	x.Long(m.Gethash())
	return x.Buf
}

// CodecDecode:account_resetAuthorization
func (m *TLaccount_resetAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updatePasswordSettings
//
func NewTLaccount_updatePasswordSettings() *TLaccount_updatePasswordSettings {
	return &TLaccount_updatePasswordSettings{}
}

// CodecEncode:account_updatePasswordSettings
func (m *TLaccount_updatePasswordSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1516564433)
	x.Bytes(m.Getpassword().Encode())
	x.Bytes(m.Getnew_settings().Encode())
	return x.Buf
}

// CodecDecode:account_updatePasswordSettings
func (m *TLaccount_updatePasswordSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	m1 := &Account_PasswordInputSettings{}
	m1.Decode(dbuf)
	m.Setnew_settings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_uninstallStickerSet
//
func NewTLmessages_uninstallStickerSet() *TLmessages_uninstallStickerSet {
	return &TLmessages_uninstallStickerSet{}
}

// CodecEncode:messages_uninstallStickerSet
func (m *TLmessages_uninstallStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-110209570)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:messages_uninstallStickerSet
func (m *TLmessages_uninstallStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_readHistory
//
func NewTLchannels_readHistory() *TLchannels_readHistory {
	return &TLchannels_readHistory{}
}

// CodecEncode:channels_readHistory
func (m *TLchannels_readHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-871347913)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:channels_readHistory
func (m *TLchannels_readHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_reportSpam
//
func NewTLchannels_reportSpam() *TLchannels_reportSpam {
	return &TLchannels_reportSpam{}
}

// CodecEncode:channels_reportSpam
func (m *TLchannels_reportSpam) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-32999408)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_reportSpam
func (m *TLchannels_reportSpam) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_checkUsername
//
func NewTLchannels_checkUsername() *TLchannels_checkUsername {
	return &TLchannels_checkUsername{}
}

// CodecEncode:channels_checkUsername
func (m *TLchannels_checkUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(283557164)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:channels_checkUsername
func (m *TLchannels_checkUsername) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_updateUsername
//
func NewTLchannels_updateUsername() *TLchannels_updateUsername {
	return &TLchannels_updateUsername{}
}

// CodecEncode:channels_updateUsername
func (m *TLchannels_updateUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(890549214)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:channels_updateUsername
func (m *TLchannels_updateUsername) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editChatAdmin
//
func NewTLmessages_editChatAdmin() *TLmessages_editChatAdmin {
	return &TLmessages_editChatAdmin{}
}

// CodecEncode:messages_editChatAdmin
func (m *TLmessages_editChatAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1444503762)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getis_admin().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatAdmin
func (m *TLmessages_editChatAdmin) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setis_admin(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_reorderStickerSets
//
func NewTLmessages_reorderStickerSets() *TLmessages_reorderStickerSets {
	return &TLmessages_reorderStickerSets{}
}

// CodecEncode:messages_reorderStickerSets
func (m *TLmessages_reorderStickerSets) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2016638777)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getorder())))
	for _, v := range m.Getorder() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_reorderStickerSets
func (m *TLmessages_reorderStickerSets) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setorder(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_saveGif
//
func NewTLmessages_saveGif() *TLmessages_saveGif {
	return &TLmessages_saveGif{}
}

// CodecEncode:messages_saveGif
func (m *TLmessages_saveGif) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(846868683)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:messages_saveGif
func (m *TLmessages_saveGif) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setInlineBotResults
//
func NewTLmessages_setInlineBotResults() *TLmessages_setInlineBotResults {
	return &TLmessages_setInlineBotResults{}
}

// CodecEncode:messages_setInlineBotResults
func (m *TLmessages_setInlineBotResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-346119674)
	var flags uint32 = 0
	if m.Getgallery() != false {
		flags |= 0 << 0
	}
	if m.Getprivate() != false {
		flags |= 1 << 1
	}
	if m.Getnext_offset() != "" {
		flags |= 2 << 5
	}
	if m.Getswitch_pm().Constructor != 0 {
		flags |= 3 << 6
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getcache_time())
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	if m.Getswitch_pm().Constructor != 0 {
		x.Bytes(m.Getswitch_pm().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_setInlineBotResults
func (m *TLmessages_setInlineBotResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgallery(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setprivate(true)
	}
	m.Setquery_id(dbuf.Long())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]InputBotInlineResult, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = InputBotInlineResult{}
		v3[i].Decode(dbuf)
	}
	m.Setresults(v3)
	m.Setcache_time(dbuf.Int())
	if (flags & (1 << 5)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	if (flags & (1 << 6)) != 0 {
		m6 := &InlineBotSwitchPM{}
		m6.Decode(dbuf)
		m.Setswitch_pm(m6)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_cancelCode
//
func NewTLauth_cancelCode() *TLauth_cancelCode {
	return &TLauth_cancelCode{}
}

// CodecEncode:auth_cancelCode
func (m *TLauth_cancelCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(520357240)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	return x.Buf
}

// CodecDecode:auth_cancelCode
func (m *TLauth_cancelCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editInlineBotMessage
//
func NewTLmessages_editInlineBotMessage() *TLmessages_editInlineBotMessage {
	return &TLmessages_editInlineBotMessage{}
}

// CodecEncode:messages_editInlineBotMessage
func (m *TLmessages_editInlineBotMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2091549254)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if m.Getmessage() != "" {
		flags |= 11 << 2
	}
	if m.Getmedia().Constructor != 0 {
		flags |= 14 << 3
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 4
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 5
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Getmedia().Constructor != 0 {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_editInlineBotMessage
func (m *TLmessages_editInlineBotMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m1 := &InputBotInlineMessageID{}
	m1.Decode(dbuf)
	m.Setid(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &InputMedia{}
		m3.Decode(dbuf)
		m.Setmedia(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	if (flags & (1 << 5)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]MessageEntity, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = MessageEntity{}
			v5[i].Decode(dbuf)
		}
		m.Setentities(v5)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setBotCallbackAnswer
//
func NewTLmessages_setBotCallbackAnswer() *TLmessages_setBotCallbackAnswer {
	return &TLmessages_setBotCallbackAnswer{}
}

// CodecEncode:messages_setBotCallbackAnswer
func (m *TLmessages_setBotCallbackAnswer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-712043766)
	var flags uint32 = 0
	if m.Getalert() != false {
		flags |= 1 << 0
	}
	if m.Getmessage() != "" {
		flags |= 0 << 2
	}
	if m.Geturl() != "" {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	x.Int(m.Getcache_time())
	return x.Buf
}

// CodecDecode:messages_setBotCallbackAnswer
func (m *TLmessages_setBotCallbackAnswer) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setalert(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Seturl(dbuf.String())
	}
	m.Setcache_time(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_resetTopPeerRating
//
func NewTLcontacts_resetTopPeerRating() *TLcontacts_resetTopPeerRating {
	return &TLcontacts_resetTopPeerRating{}
}

// CodecEncode:contacts_resetTopPeerRating
func (m *TLcontacts_resetTopPeerRating) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(451113900)
	x.Bytes(m.Getcategory().Encode())
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:contacts_resetTopPeerRating
func (m *TLcontacts_resetTopPeerRating) Decode(dbuf *code.DecodeBuf) error {
	m0 := &TopPeerCategory{}
	m0.Decode(dbuf)
	m.Setcategory(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_saveDraft
//
func NewTLmessages_saveDraft() *TLmessages_saveDraft {
	return &TLmessages_saveDraft{}
}

// CodecEncode:messages_saveDraft
func (m *TLmessages_saveDraft) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1137057461)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 1
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 4
	}
	x.UInt(flags)
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_saveDraft
func (m *TLmessages_saveDraft) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setmessage(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		c4 := dbuf.Int()
		if c4 != 481674261 {
			return dbuf.Err
		}
		l4 := dbuf.Int()
		v4 := make([]MessageEntity, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = MessageEntity{}
			v4[i].Decode(dbuf)
		}
		m.Setentities(v4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readFeaturedStickers
//
func NewTLmessages_readFeaturedStickers() *TLmessages_readFeaturedStickers {
	return &TLmessages_readFeaturedStickers{}
}

// CodecEncode:messages_readFeaturedStickers
func (m *TLmessages_readFeaturedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1527873830)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_readFeaturedStickers
func (m *TLmessages_readFeaturedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_saveRecentSticker
//
func NewTLmessages_saveRecentSticker() *TLmessages_saveRecentSticker {
	return &TLmessages_saveRecentSticker{}
}

// CodecEncode:messages_saveRecentSticker
func (m *TLmessages_saveRecentSticker) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(958863608)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:messages_saveRecentSticker
func (m *TLmessages_saveRecentSticker) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	m1 := &InputDocument{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setunsave(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_clearRecentStickers
//
func NewTLmessages_clearRecentStickers() *TLmessages_clearRecentStickers {
	return &TLmessages_clearRecentStickers{}
}

// CodecEncode:messages_clearRecentStickers
func (m *TLmessages_clearRecentStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1986437075)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:messages_clearRecentStickers
func (m *TLmessages_clearRecentStickers) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_confirmPhone
//
func NewTLaccount_confirmPhone() *TLaccount_confirmPhone {
	return &TLaccount_confirmPhone{}
}

// CodecEncode:account_confirmPhone
func (m *TLaccount_confirmPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1596029123)
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_confirmPhone
func (m *TLaccount_confirmPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_dropTempAuthKeys
//
func NewTLauth_dropTempAuthKeys() *TLauth_dropTempAuthKeys {
	return &TLauth_dropTempAuthKeys{}
}

// CodecEncode:auth_dropTempAuthKeys
func (m *TLauth_dropTempAuthKeys) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1907842680)
	x.Int(481674261)
	x.Int(int32(len(m.Getexcept_auth_keys())))
	for _, v := range m.Getexcept_auth_keys() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:auth_dropTempAuthKeys
func (m *TLauth_dropTempAuthKeys) Decode(dbuf *code.DecodeBuf) error {
	m.Setexcept_auth_keys(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setInlineGameScore
//
func NewTLmessages_setInlineGameScore() *TLmessages_setInlineGameScore {
	return &TLmessages_setInlineGameScore{}
}

// CodecEncode:messages_setInlineGameScore
func (m *TLmessages_setInlineGameScore) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(363700068)
	var flags uint32 = 0
	if m.Getedit_message() != false {
		flags |= 0 << 0
	}
	if m.Getforce() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messages_setInlineGameScore
func (m *TLmessages_setInlineGameScore) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setedit_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforce(true)
	}
	m2 := &InputBotInlineMessageID{}
	m2.Decode(dbuf)
	m.Setid(m2)
	m3 := &InputUser{}
	m3.Decode(dbuf)
	m.Setuser_id(m3)
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_setBotUpdatesStatus
//
func NewTLhelp_setBotUpdatesStatus() *TLhelp_setBotUpdatesStatus {
	return &TLhelp_setBotUpdatesStatus{}
}

// CodecEncode:help_setBotUpdatesStatus
func (m *TLhelp_setBotUpdatesStatus) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-333262899)
	x.Int(m.Getpending_updates_count())
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:help_setBotUpdatesStatus
func (m *TLhelp_setBotUpdatesStatus) Decode(dbuf *code.DecodeBuf) error {
	m.Setpending_updates_count(dbuf.Int())
	m.Setmessage(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_toggleDialogPin
//
func NewTLmessages_toggleDialogPin() *TLmessages_toggleDialogPin {
	return &TLmessages_toggleDialogPin{}
}

// CodecEncode:messages_toggleDialogPin
func (m *TLmessages_toggleDialogPin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1489903017)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_toggleDialogPin
func (m *TLmessages_toggleDialogPin) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m1 := &InputDialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_reorderPinnedDialogs
//
func NewTLmessages_reorderPinnedDialogs() *TLmessages_reorderPinnedDialogs {
	return &TLmessages_reorderPinnedDialogs{}
}

// CodecEncode:messages_reorderPinnedDialogs
func (m *TLmessages_reorderPinnedDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(991616823)
	var flags uint32 = 0
	if m.Getforce() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Getfolder_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getorder())))
	for _, v := range m.Getorder() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_reorderPinnedDialogs
func (m *TLmessages_reorderPinnedDialogs) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setforce(true)
	}
	m.Setfolder_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]InputDialogPeer, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = InputDialogPeer{}
		v2[i].Decode(dbuf)
	}
	m.Setorder(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:bots_answerWebhookJSONQuery
//
func NewTLbots_answerWebhookJSONQuery() *TLbots_answerWebhookJSONQuery {
	return &TLbots_answerWebhookJSONQuery{}
}

// CodecEncode:bots_answerWebhookJSONQuery
func (m *TLbots_answerWebhookJSONQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-434028723)
	x.Long(m.Getquery_id())
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:bots_answerWebhookJSONQuery
func (m *TLbots_answerWebhookJSONQuery) Decode(dbuf *code.DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_clearSavedInfo
//
func NewTLpayments_clearSavedInfo() *TLpayments_clearSavedInfo {
	return &TLpayments_clearSavedInfo{}
}

// CodecEncode:payments_clearSavedInfo
func (m *TLpayments_clearSavedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-667062079)
	var flags uint32 = 0
	if m.Getcredentials() != false {
		flags |= 0 << 0
	}
	if m.Getinfo() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:payments_clearSavedInfo
func (m *TLpayments_clearSavedInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcredentials(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setinfo(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setBotShippingResults
//
func NewTLmessages_setBotShippingResults() *TLmessages_setBotShippingResults {
	return &TLmessages_setBotShippingResults{}
}

// CodecEncode:messages_setBotShippingResults
func (m *TLmessages_setBotShippingResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-436833542)
	var flags uint32 = 0
	if m.Geterror() != "" {
		flags |= 0 << 1
	}
	if len(m.Getshipping_options()) > 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Geterror() != "" {
		x.String(m.Geterror())
	}
	if len(m.Getshipping_options()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getshipping_options())))
		for _, v := range m.Getshipping_options() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_setBotShippingResults
func (m *TLmessages_setBotShippingResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 1)) != 0 {
		m.Seterror(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]ShippingOption, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = ShippingOption{}
			v2[i].Decode(dbuf)
		}
		m.Setshipping_options(v2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_setBotPrecheckoutResults
//
func NewTLmessages_setBotPrecheckoutResults() *TLmessages_setBotPrecheckoutResults {
	return &TLmessages_setBotPrecheckoutResults{}
}

// CodecEncode:messages_setBotPrecheckoutResults
func (m *TLmessages_setBotPrecheckoutResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(163765653)
	var flags uint32 = 0
	if m.Getsuccess() != false {
		flags |= 1 << 0
	}
	if m.Geterror() != "" {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Geterror() != "" {
		x.String(m.Geterror())
	}
	return x.Buf
}

// CodecDecode:messages_setBotPrecheckoutResults
func (m *TLmessages_setBotPrecheckoutResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsuccess(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m.Seterror(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_receivedCall
//
func NewTLphone_receivedCall() *TLphone_receivedCall {
	return &TLphone_receivedCall{}
}

// CodecEncode:phone_receivedCall
func (m *TLphone_receivedCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(399855457)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:phone_receivedCall
func (m *TLphone_receivedCall) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_saveCallDebug
//
func NewTLphone_saveCallDebug() *TLphone_saveCallDebug {
	return &TLphone_saveCallDebug{}
}

// CodecEncode:phone_saveCallDebug
func (m *TLphone_saveCallDebug) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(662363518)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getdebug().Encode())
	return x.Buf
}

// CodecDecode:phone_saveCallDebug
func (m *TLphone_saveCallDebug) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdebug(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_setStickers
//
func NewTLchannels_setStickers() *TLchannels_setStickers {
	return &TLchannels_setStickers{}
}

// CodecEncode:channels_setStickers
func (m *TLchannels_setStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-359881479)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:channels_setStickers
func (m *TLchannels_setStickers) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputStickerSet{}
	m1.Decode(dbuf)
	m.Setstickerset(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_faveSticker
//
func NewTLmessages_faveSticker() *TLmessages_faveSticker {
	return &TLmessages_faveSticker{}
}

// CodecEncode:messages_faveSticker
func (m *TLmessages_faveSticker) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1174420133)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunfave().Encode())
	return x.Buf
}

// CodecDecode:messages_faveSticker
func (m *TLmessages_faveSticker) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunfave(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_readMessageContents
//
func NewTLchannels_readMessageContents() *TLchannels_readMessageContents {
	return &TLchannels_readMessageContents{}
}

// CodecEncode:channels_readMessageContents
func (m *TLchannels_readMessageContents) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-357180360)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_readMessageContents
func (m *TLchannels_readMessageContents) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_resetSaved
//
func NewTLcontacts_resetSaved() *TLcontacts_resetSaved {
	return &TLcontacts_resetSaved{}
}

// CodecEncode:contacts_resetSaved
func (m *TLcontacts_resetSaved) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2020263951)
	return x.Buf
}

// CodecDecode:contacts_resetSaved
func (m *TLcontacts_resetSaved) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_deleteHistory
//
func NewTLchannels_deleteHistory() *TLchannels_deleteHistory {
	return &TLchannels_deleteHistory{}
}

// CodecEncode:channels_deleteHistory
func (m *TLchannels_deleteHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1355375294)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:channels_deleteHistory
func (m *TLchannels_deleteHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resetWebAuthorization
//
func NewTLaccount_resetWebAuthorization() *TLaccount_resetWebAuthorization {
	return &TLaccount_resetWebAuthorization{}
}

// CodecEncode:account_resetWebAuthorization
func (m *TLaccount_resetWebAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(755087855)
	x.Long(m.Gethash())
	return x.Buf
}

// CodecDecode:account_resetWebAuthorization
func (m *TLaccount_resetWebAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resetWebAuthorizations
//
func NewTLaccount_resetWebAuthorizations() *TLaccount_resetWebAuthorizations {
	return &TLaccount_resetWebAuthorizations{}
}

// CodecEncode:account_resetWebAuthorizations
func (m *TLaccount_resetWebAuthorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1747789204)
	return x.Buf
}

// CodecDecode:account_resetWebAuthorizations
func (m *TLaccount_resetWebAuthorizations) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_acceptTermsOfService
//
func NewTLhelp_acceptTermsOfService() *TLhelp_acceptTermsOfService {
	return &TLhelp_acceptTermsOfService{}
}

// CodecEncode:help_acceptTermsOfService
func (m *TLhelp_acceptTermsOfService) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-294455398)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:help_acceptTermsOfService
func (m *TLhelp_acceptTermsOfService) Decode(dbuf *code.DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_deleteSecureValue
//
func NewTLaccount_deleteSecureValue() *TLaccount_deleteSecureValue {
	return &TLaccount_deleteSecureValue{}
}

// CodecEncode:account_deleteSecureValue
func (m *TLaccount_deleteSecureValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1199522741)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_deleteSecureValue
func (m *TLaccount_deleteSecureValue) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:users_setSecureValueErrors
//
func NewTLusers_setSecureValueErrors() *TLusers_setSecureValueErrors {
	return &TLusers_setSecureValueErrors{}
}

// CodecEncode:users_setSecureValueErrors
func (m *TLusers_setSecureValueErrors) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1865902923)
	x.Bytes(m.Getid().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Geterrors())))
	for _, v := range m.Geterrors() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:users_setSecureValueErrors
func (m *TLusers_setSecureValueErrors) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]SecureValueError, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = SecureValueError{}
		v1[i].Decode(dbuf)
	}
	m.Seterrors(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_acceptAuthorization
//
func NewTLaccount_acceptAuthorization() *TLaccount_acceptAuthorization {
	return &TLaccount_acceptAuthorization{}
}

// CodecEncode:account_acceptAuthorization
func (m *TLaccount_acceptAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-419267436)
	x.Int(m.Getbot_id())
	x.String(m.Getscope())
	x.String(m.Getpublic_key())
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_hashes())))
	for _, v := range m.Getvalue_hashes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:account_acceptAuthorization
func (m *TLaccount_acceptAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Setbot_id(dbuf.Int())
	m.Setscope(dbuf.String())
	m.Setpublic_key(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]SecureValueHash, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = SecureValueHash{}
		v3[i].Decode(dbuf)
	}
	m.Setvalue_hashes(v3)
	m4 := &SecureCredentialsEncrypted{}
	m4.Decode(dbuf)
	m.Setcredentials(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_verifyPhone
//
func NewTLaccount_verifyPhone() *TLaccount_verifyPhone {
	return &TLaccount_verifyPhone{}
}

// CodecEncode:account_verifyPhone
func (m *TLaccount_verifyPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1305716726)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_verifyPhone
func (m *TLaccount_verifyPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_verifyEmail
//
func NewTLaccount_verifyEmail() *TLaccount_verifyEmail {
	return &TLaccount_verifyEmail{}
}

// CodecEncode:account_verifyEmail
func (m *TLaccount_verifyEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-323339813)
	x.String(m.Getemail())
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:account_verifyEmail
func (m *TLaccount_verifyEmail) Decode(dbuf *code.DecodeBuf) error {
	m.Setemail(dbuf.String())
	m.Setcode(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_finishTakeoutSession
//
func NewTLaccount_finishTakeoutSession() *TLaccount_finishTakeoutSession {
	return &TLaccount_finishTakeoutSession{}
}

// CodecEncode:account_finishTakeoutSession
func (m *TLaccount_finishTakeoutSession) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(489050862)
	var flags uint32 = 0
	if m.Getsuccess() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_finishTakeoutSession
func (m *TLaccount_finishTakeoutSession) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsuccess(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_markDialogUnread
//
func NewTLmessages_markDialogUnread() *TLmessages_markDialogUnread {
	return &TLmessages_markDialogUnread{}
}

// CodecEncode:messages_markDialogUnread
func (m *TLmessages_markDialogUnread) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1031349873)
	var flags uint32 = 0
	if m.Getunread() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_markDialogUnread
func (m *TLmessages_markDialogUnread) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setunread(true)
	}
	m1 := &InputDialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_toggleTopPeers
//
func NewTLcontacts_toggleTopPeers() *TLcontacts_toggleTopPeers {
	return &TLcontacts_toggleTopPeers{}
}

// CodecEncode:contacts_toggleTopPeers
func (m *TLcontacts_toggleTopPeers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2062238246)
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:contacts_toggleTopPeers
func (m *TLcontacts_toggleTopPeers) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setenabled(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_clearAllDrafts
//
func NewTLmessages_clearAllDrafts() *TLmessages_clearAllDrafts {
	return &TLmessages_clearAllDrafts{}
}

// CodecEncode:messages_clearAllDrafts
func (m *TLmessages_clearAllDrafts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2119757468)
	return x.Buf
}

// CodecDecode:messages_clearAllDrafts
func (m *TLmessages_clearAllDrafts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_saveAppLog
//
func NewTLhelp_saveAppLog() *TLhelp_saveAppLog {
	return &TLhelp_saveAppLog{}
}

// CodecEncode:help_saveAppLog
func (m *TLhelp_saveAppLog) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1862465352)
	x.Int(481674261)
	x.Int(int32(len(m.Getevents())))
	for _, v := range m.Getevents() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_saveAppLog
func (m *TLhelp_saveAppLog) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputAppEvent, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputAppEvent{}
		v0[i].Decode(dbuf)
	}
	m.Setevents(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_confirmPasswordEmail
//
func NewTLaccount_confirmPasswordEmail() *TLaccount_confirmPasswordEmail {
	return &TLaccount_confirmPasswordEmail{}
}

// CodecEncode:account_confirmPasswordEmail
func (m *TLaccount_confirmPasswordEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1881204448)
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:account_confirmPasswordEmail
func (m *TLaccount_confirmPasswordEmail) Decode(dbuf *code.DecodeBuf) error {
	m.Setcode(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resendPasswordEmail
//
func NewTLaccount_resendPasswordEmail() *TLaccount_resendPasswordEmail {
	return &TLaccount_resendPasswordEmail{}
}

// CodecEncode:account_resendPasswordEmail
func (m *TLaccount_resendPasswordEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2055154197)
	return x.Buf
}

// CodecDecode:account_resendPasswordEmail
func (m *TLaccount_resendPasswordEmail) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_cancelPasswordEmail
//
func NewTLaccount_cancelPasswordEmail() *TLaccount_cancelPasswordEmail {
	return &TLaccount_cancelPasswordEmail{}
}

// CodecEncode:account_cancelPasswordEmail
func (m *TLaccount_cancelPasswordEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1043606090)
	return x.Buf
}

// CodecDecode:account_cancelPasswordEmail
func (m *TLaccount_cancelPasswordEmail) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getContactSignUpNotification
//
func NewTLaccount_getContactSignUpNotification() *TLaccount_getContactSignUpNotification {
	return &TLaccount_getContactSignUpNotification{}
}

// CodecEncode:account_getContactSignUpNotification
func (m *TLaccount_getContactSignUpNotification) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1626880216)
	return x.Buf
}

// CodecDecode:account_getContactSignUpNotification
func (m *TLaccount_getContactSignUpNotification) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_setContactSignUpNotification
//
func NewTLaccount_setContactSignUpNotification() *TLaccount_setContactSignUpNotification {
	return &TLaccount_setContactSignUpNotification{}
}

// CodecEncode:account_setContactSignUpNotification
func (m *TLaccount_setContactSignUpNotification) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-806076575)
	x.Bytes(m.Getsilent().Encode())
	return x.Buf
}

// CodecDecode:account_setContactSignUpNotification
func (m *TLaccount_setContactSignUpNotification) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setsilent(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_editChatAbout
//
func NewTLmessages_editChatAbout() *TLmessages_editChatAbout {
	return &TLmessages_editChatAbout{}
}

// CodecEncode:messages_editChatAbout
func (m *TLmessages_editChatAbout) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-554301545)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getabout())
	return x.Buf
}

// CodecDecode:messages_editChatAbout
func (m *TLmessages_editChatAbout) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setabout(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_saveWallPaper
//
func NewTLaccount_saveWallPaper() *TLaccount_saveWallPaper {
	return &TLaccount_saveWallPaper{}
}

// CodecEncode:account_saveWallPaper
func (m *TLaccount_saveWallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1817860919)
	x.Bytes(m.Getwallpaper().Encode())
	x.Bytes(m.Getunsave().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_saveWallPaper
func (m *TLaccount_saveWallPaper) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	m2 := &WallPaperSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_installWallPaper
//
func NewTLaccount_installWallPaper() *TLaccount_installWallPaper {
	return &TLaccount_installWallPaper{}
}

// CodecEncode:account_installWallPaper
func (m *TLaccount_installWallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-18000023)
	x.Bytes(m.Getwallpaper().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_installWallPaper
func (m *TLaccount_installWallPaper) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	m1 := &WallPaperSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_resetWallPapers
//
func NewTLaccount_resetWallPapers() *TLaccount_resetWallPapers {
	return &TLaccount_resetWallPapers{}
}

// CodecEncode:account_resetWallPapers
func (m *TLaccount_resetWallPapers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1153722364)
	return x.Buf
}

// CodecDecode:account_resetWallPapers
func (m *TLaccount_resetWallPapers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_saveAutoDownloadSettings
//
func NewTLaccount_saveAutoDownloadSettings() *TLaccount_saveAutoDownloadSettings {
	return &TLaccount_saveAutoDownloadSettings{}
}

// CodecEncode:account_saveAutoDownloadSettings
func (m *TLaccount_saveAutoDownloadSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1995661875)
	var flags uint32 = 0
	if m.Getlow() != false {
		flags |= 0 << 0
	}
	if m.Gethigh() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_saveAutoDownloadSettings
func (m *TLaccount_saveAutoDownloadSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setlow(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethigh(true)
	}
	m2 := &AutoDownloadSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_setDiscussionGroup
//
func NewTLchannels_setDiscussionGroup() *TLchannels_setDiscussionGroup {
	return &TLchannels_setDiscussionGroup{}
}

// CodecEncode:channels_setDiscussionGroup
func (m *TLchannels_setDiscussionGroup) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1079520178)
	x.Bytes(m.Getbroadcast().Encode())
	x.Bytes(m.Getgroup().Encode())
	return x.Buf
}

// CodecDecode:channels_setDiscussionGroup
func (m *TLchannels_setDiscussionGroup) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setbroadcast(m0)
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setgroup(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_hidePeerSettingsBar
//
func NewTLmessages_hidePeerSettingsBar() *TLmessages_hidePeerSettingsBar {
	return &TLmessages_hidePeerSettingsBar{}
}

// CodecEncode:messages_hidePeerSettingsBar
func (m *TLmessages_hidePeerSettingsBar) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1336717624)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_hidePeerSettingsBar
func (m *TLmessages_hidePeerSettingsBar) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_editLocation
//
func NewTLchannels_editLocation() *TLchannels_editLocation {
	return &TLchannels_editLocation{}
}

// CodecEncode:channels_editLocation
func (m *TLchannels_editLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1491484525)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Getaddress())
	return x.Buf
}

// CodecDecode:channels_editLocation
func (m *TLchannels_editLocation) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	m.Setaddress(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_saveTheme
//
func NewTLaccount_saveTheme() *TLaccount_saveTheme {
	return &TLaccount_saveTheme{}
}

// CodecEncode:account_saveTheme
func (m *TLaccount_saveTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-229175188)
	x.Bytes(m.Gettheme().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:account_saveTheme
func (m *TLaccount_saveTheme) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputTheme{}
	m0.Decode(dbuf)
	m.Settheme(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_installTheme
//
func NewTLaccount_installTheme() *TLaccount_installTheme {
	return &TLaccount_installTheme{}
}

// CodecEncode:account_installTheme
func (m *TLaccount_installTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2061776695)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 0 << 0
	}
	if m.Getformat() != "" {
		flags |= 1 << 1
	}
	if m.Gettheme().Constructor != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getformat() != "" {
		x.String(m.Getformat())
	}
	if m.Gettheme().Constructor != 0 {
		x.Bytes(m.Gettheme().Encode())
	}
	return x.Buf
}

// CodecDecode:account_installTheme
func (m *TLaccount_installTheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setformat(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &InputTheme{}
		m2.Decode(dbuf)
		m.Settheme(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_setContentSettings
//
func NewTLaccount_setContentSettings() *TLaccount_setContentSettings {
	return &TLaccount_setContentSettings{}
}

// CodecEncode:account_setContentSettings
func (m *TLaccount_setContentSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1250643605)
	var flags uint32 = 0
	if m.Getsensitive_enabled() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_setContentSettings
func (m *TLaccount_setContentSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsensitive_enabled(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_toggleStickerSets
//
func NewTLmessages_toggleStickerSets() *TLmessages_toggleStickerSets {
	return &TLmessages_toggleStickerSets{}
}

// CodecEncode:messages_toggleStickerSets
func (m *TLmessages_toggleStickerSets) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1257951254)
	var flags uint32 = 0
	if m.Getuninstall() != false {
		flags |= 0 << 0
	}
	if m.Getarchive() != false {
		flags |= 1 << 1
	}
	if m.Getunarchive() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getstickersets())))
	for _, v := range m.Getstickersets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_toggleStickerSets
func (m *TLmessages_toggleStickerSets) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setuninstall(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setarchive(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setunarchive(true)
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]InputStickerSet, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = InputStickerSet{}
		v3[i].Decode(dbuf)
	}
	m.Setstickersets(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_updateDialogFilter
//
func NewTLmessages_updateDialogFilter() *TLmessages_updateDialogFilter {
	return &TLmessages_updateDialogFilter{}
}

// CodecEncode:messages_updateDialogFilter
func (m *TLmessages_updateDialogFilter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(450142282)
	var flags uint32 = 0
	if m.Getfilter().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfilter().Constructor != 0 {
		x.Bytes(m.Getfilter().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_updateDialogFilter
func (m *TLmessages_updateDialogFilter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m1 := &DialogFilter{}
		m1.Decode(dbuf)
		m.Setfilter(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_updateDialogFiltersOrder
//
func NewTLmessages_updateDialogFiltersOrder() *TLmessages_updateDialogFiltersOrder {
	return &TLmessages_updateDialogFiltersOrder{}
}

// CodecEncode:messages_updateDialogFiltersOrder
func (m *TLmessages_updateDialogFiltersOrder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-983318044)
	x.Int(481674261)
	x.Int(int32(len(m.Getorder())))
	for _, v := range m.Getorder() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_updateDialogFiltersOrder
func (m *TLmessages_updateDialogFiltersOrder) Decode(dbuf *code.DecodeBuf) error {
	m.Setorder(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:bots_setBotCommands
//
func NewTLbots_setBotCommands() *TLbots_setBotCommands {
	return &TLbots_setBotCommands{}
}

// CodecEncode:bots_setBotCommands
func (m *TLbots_setBotCommands) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2141370634)
	x.Int(481674261)
	x.Int(int32(len(m.Getcommands())))
	for _, v := range m.Getcommands() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:bots_setBotCommands
func (m *TLbots_setBotCommands) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]BotCommand, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = BotCommand{}
		v0[i].Decode(dbuf)
	}
	m.Setcommands(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_hidePromoData
//
func NewTLhelp_hidePromoData() *TLhelp_hidePromoData {
	return &TLhelp_hidePromoData{}
}

// CodecEncode:help_hidePromoData
func (m *TLhelp_hidePromoData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(505748629)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:help_hidePromoData
func (m *TLhelp_hidePromoData) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_sendSignalingData
//
func NewTLphone_sendSignalingData() *TLphone_sendSignalingData {
	return &TLphone_sendSignalingData{}
}

// CodecEncode:phone_sendSignalingData
func (m *TLphone_sendSignalingData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-8744061)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:phone_sendSignalingData
func (m *TLphone_sendSignalingData) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_dismissSuggestion
//
func NewTLhelp_dismissSuggestion() *TLhelp_dismissSuggestion {
	return &TLhelp_dismissSuggestion{}
}

// CodecEncode:help_dismissSuggestion
func (m *TLhelp_dismissSuggestion) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(125807007)
	x.String(m.Getsuggestion())
	return x.Buf
}

// CodecDecode:help_dismissSuggestion
func (m *TLhelp_dismissSuggestion) Decode(dbuf *code.DecodeBuf) error {
	m.Setsuggestion(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readDiscussion
//
func NewTLmessages_readDiscussion() *TLmessages_readDiscussion {
	return &TLmessages_readDiscussion{}
}

// CodecEncode:messages_readDiscussion
func (m *TLmessages_readDiscussion) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-147740172)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getread_max_id())
	return x.Buf
}

// CodecDecode:messages_readDiscussion
func (m *TLmessages_readDiscussion) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:bots_sendCustomRequest
//
func NewTLbots_sendCustomRequest() *TLbots_sendCustomRequest {
	return &TLbots_sendCustomRequest{}
}

// CodecEncode:bots_sendCustomRequest
func (m *TLbots_sendCustomRequest) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1440257555)
	x.String(m.Getcustom_method())
	x.Bytes(m.Getparams().Encode())
	return x.Buf
}

// CodecDecode:bots_sendCustomRequest
func (m *TLbots_sendCustomRequest) Decode(dbuf *code.DecodeBuf) error {
	m.Setcustom_method(dbuf.String())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setparams(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_getCallConfig
//
func NewTLphone_getCallConfig() *TLphone_getCallConfig {
	return &TLphone_getCallConfig{}
}

// CodecEncode:phone_getCallConfig
func (m *TLphone_getCallConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1430593449)
	return x.Buf
}

// CodecDecode:phone_getCallConfig
func (m *TLphone_getCallConfig) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_validateRequestedInfo
//
func NewTLpayments_validateRequestedInfo() *TLpayments_validateRequestedInfo {
	return &TLpayments_validateRequestedInfo{}
}

// CodecEncode:payments_validateRequestedInfo
func (m *TLpayments_validateRequestedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1997180532)
	var flags uint32 = 0
	if m.Getsave() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	x.Bytes(m.Getinfo().Encode())
	return x.Buf
}

// CodecDecode:payments_validateRequestedInfo
func (m *TLpayments_validateRequestedInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsave(true)
	}
	m.Setmsg_id(dbuf.Int())
	m2 := &PaymentRequestedInfo{}
	m2.Decode(dbuf)
	m.Setinfo(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_getWebFile
//
func NewTLupload_getWebFile() *TLupload_getWebFile {
	return &TLupload_getWebFile{}
}

// CodecEncode:upload_getWebFile
func (m *TLupload_getWebFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(619086221)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getWebFile
func (m *TLupload_getWebFile) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputWebFileLocation{}
	m0.Decode(dbuf)
	m.Setlocation(m0)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_checkChatInvite
//
func NewTLmessages_checkChatInvite() *TLmessages_checkChatInvite {
	return &TLmessages_checkChatInvite{}
}

// CodecEncode:messages_checkChatInvite
func (m *TLmessages_checkChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1051570619)
	x.String(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_checkChatInvite
func (m *TLmessages_checkChatInvite) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getAuthorizationForm
//
func NewTLaccount_getAuthorizationForm() *TLaccount_getAuthorizationForm {
	return &TLaccount_getAuthorizationForm{}
}

// CodecEncode:account_getAuthorizationForm
func (m *TLaccount_getAuthorizationForm) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1200903967)
	x.Int(m.Getbot_id())
	x.String(m.Getscope())
	x.String(m.Getpublic_key())
	return x.Buf
}

// CodecDecode:account_getAuthorizationForm
func (m *TLaccount_getAuthorizationForm) Decode(dbuf *code.DecodeBuf) error {
	m.Setbot_id(dbuf.Int())
	m.Setscope(dbuf.String())
	m.Setpublic_key(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getMessageEditData
//
func NewTLmessages_getMessageEditData() *TLmessages_getMessageEditData {
	return &TLmessages_getMessageEditData{}
}

// CodecEncode:messages_getMessageEditData
func (m *TLmessages_getMessageEditData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-39416522)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messages_getMessageEditData
func (m *TLmessages_getMessageEditData) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:users_getFullUser
//
func NewTLusers_getFullUser() *TLusers_getFullUser {
	return &TLusers_getFullUser{}
}

// CodecEncode:users_getFullUser
func (m *TLusers_getFullUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-902781519)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:users_getFullUser
func (m *TLusers_getFullUser) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stats_getMegagroupStats
//
func NewTLstats_getMegagroupStats() *TLstats_getMegagroupStats {
	return &TLstats_getMegagroupStats{}
}

// CodecEncode:stats_getMegagroupStats
func (m *TLstats_getMegagroupStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-589330937)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:stats_getMegagroupStats
func (m *TLstats_getMegagroupStats) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getInactiveChannels
//
func NewTLchannels_getInactiveChannels() *TLchannels_getInactiveChannels {
	return &TLchannels_getInactiveChannels{}
}

// CodecEncode:channels_getInactiveChannels
func (m *TLchannels_getInactiveChannels) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(300429806)
	return x.Buf
}

// CodecDecode:channels_getInactiveChannels
func (m *TLchannels_getInactiveChannels) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:users_getUsers
//
func NewTLusers_getUsers() *TLusers_getUsers {
	return &TLusers_getUsers{}
}

// CodecEncode:users_getUsers
func (m *TLusers_getUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(227648840)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:users_getUsers
func (m *TLusers_getUsers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_exportMessageLink
//
func NewTLchannels_exportMessageLink() *TLchannels_exportMessageLink {
	return &TLchannels_exportMessageLink{}
}

// CodecEncode:channels_exportMessageLink
func (m *TLchannels_exportMessageLink) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-432034325)
	var flags uint32 = 0
	if m.Getgrouped() != false {
		flags |= 0 << 0
	}
	if m.Getthread() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:channels_exportMessageLink
func (m *TLchannels_exportMessageLink) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgrouped(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setthread(true)
	}
	m2 := &InputChannel{}
	m2.Decode(dbuf)
	m.Setchannel(m2)
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:updates_getState
//
func NewTLupdates_getState() *TLupdates_getState {
	return &TLupdates_getState{}
}

// CodecEncode:updates_getState
func (m *TLupdates_getState) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-304838614)
	return x.Buf
}

// CodecDecode:updates_getState
func (m *TLupdates_getState) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_getPaymentReceipt
//
func NewTLpayments_getPaymentReceipt() *TLpayments_getPaymentReceipt {
	return &TLpayments_getPaymentReceipt{}
}

// CodecEncode:payments_getPaymentReceipt
func (m *TLpayments_getPaymentReceipt) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1601001088)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:payments_getPaymentReceipt
func (m *TLpayments_getPaymentReceipt) Decode(dbuf *code.DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:photos_deletePhotos
//
func NewTLphotos_deletePhotos() *TLphotos_deletePhotos {
	return &TLphotos_deletePhotos{}
}

// CodecEncode:photos_deletePhotos
func (m *TLphotos_deletePhotos) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2016444625)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_deletePhotos
func (m *TLphotos_deletePhotos) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputPhoto, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputPhoto{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_receivedQueue
//
func NewTLmessages_receivedQueue() *TLmessages_receivedQueue {
	return &TLmessages_receivedQueue{}
}

// CodecEncode:messages_receivedQueue
func (m *TLmessages_receivedQueue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1436924774)
	x.Int(m.Getmax_qts())
	return x.Buf
}

// CodecDecode:messages_receivedQueue
func (m *TLmessages_receivedQueue) Decode(dbuf *code.DecodeBuf) error {
	m.Setmax_qts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getRecentMeUrls
//
func NewTLhelp_getRecentMeUrls() *TLhelp_getRecentMeUrls {
	return &TLhelp_getRecentMeUrls{}
}

// CodecEncode:help_getRecentMeUrls
func (m *TLhelp_getRecentMeUrls) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1036054804)
	x.String(m.Getreferer())
	return x.Buf
}

// CodecDecode:help_getRecentMeUrls
func (m *TLhelp_getRecentMeUrls) Decode(dbuf *code.DecodeBuf) error {
	m.Setreferer(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendEncrypted
//
func NewTLmessages_sendEncrypted() *TLmessages_sendEncrypted {
	return &TLmessages_sendEncrypted{}
}

// CodecEncode:messages_sendEncrypted
func (m *TLmessages_sendEncrypted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1157265941)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:messages_sendEncrypted
func (m *TLmessages_sendEncrypted) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	m1 := &InputEncryptedChat{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendEncryptedFile
//
func NewTLmessages_sendEncryptedFile() *TLmessages_sendEncryptedFile {
	return &TLmessages_sendEncryptedFile{}
}

// CodecEncode:messages_sendEncryptedFile
func (m *TLmessages_sendEncryptedFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1431914525)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_sendEncryptedFile
func (m *TLmessages_sendEncryptedFile) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	m1 := &InputEncryptedChat{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	m4 := &InputEncryptedFile{}
	m4.Decode(dbuf)
	m.Setfile(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_sendEncryptedService
//
func NewTLmessages_sendEncryptedService() *TLmessages_sendEncryptedService {
	return &TLmessages_sendEncryptedService{}
}

// CodecEncode:messages_sendEncryptedService
func (m *TLmessages_sendEncryptedService) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(852769188)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:messages_sendEncryptedService
func (m *TLmessages_sendEncryptedService) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getContentSettings
//
func NewTLaccount_getContentSettings() *TLaccount_getContentSettings {
	return &TLaccount_getContentSettings{}
}

// CodecEncode:account_getContentSettings
func (m *TLaccount_getContentSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1952756306)
	return x.Buf
}

// CodecDecode:account_getContentSettings
func (m *TLaccount_getContentSettings) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getStickerSet
//
func NewTLmessages_getStickerSet() *TLmessages_getStickerSet {
	return &TLmessages_getStickerSet{}
}

// CodecEncode:messages_getStickerSet
func (m *TLmessages_getStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(639215886)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:messages_getStickerSet
func (m *TLmessages_getStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stickers_createStickerSet
//
func NewTLstickers_createStickerSet() *TLstickers_createStickerSet {
	return &TLstickers_createStickerSet{}
}

// CodecEncode:stickers_createStickerSet
func (m *TLstickers_createStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-251435136)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 0 << 0
	}
	if m.Getanimated() != false {
		flags |= 1 << 1
	}
	if m.Getthumb().Constructor != 0 {
		flags |= 2 << 5
	}
	x.UInt(flags)
	x.Bytes(m.Getuser_id().Encode())
	x.String(m.Gettitle())
	x.String(m.Getshort_name())
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stickers_createStickerSet
func (m *TLstickers_createStickerSet) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setanimated(true)
	}
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id(m2)
	m.Settitle(dbuf.String())
	m.Setshort_name(dbuf.String())
	if (flags & (1 << 5)) != 0 {
		m5 := &InputDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]InputStickerSetItem, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = InputStickerSetItem{}
		v6[i].Decode(dbuf)
	}
	m.Setstickers(v6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stickers_removeStickerFromSet
//
func NewTLstickers_removeStickerFromSet() *TLstickers_removeStickerFromSet {
	return &TLstickers_removeStickerFromSet{}
}

// CodecEncode:stickers_removeStickerFromSet
func (m *TLstickers_removeStickerFromSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-143257775)
	x.Bytes(m.Getsticker().Encode())
	return x.Buf
}

// CodecDecode:stickers_removeStickerFromSet
func (m *TLstickers_removeStickerFromSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setsticker(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stickers_changeStickerPosition
//
func NewTLstickers_changeStickerPosition() *TLstickers_changeStickerPosition {
	return &TLstickers_changeStickerPosition{}
}

// CodecEncode:stickers_changeStickerPosition
func (m *TLstickers_changeStickerPosition) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-4795190)
	x.Bytes(m.Getsticker().Encode())
	x.Int(m.Getposition())
	return x.Buf
}

// CodecDecode:stickers_changeStickerPosition
func (m *TLstickers_changeStickerPosition) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setsticker(m0)
	m.Setposition(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stickers_addStickerToSet
//
func NewTLstickers_addStickerToSet() *TLstickers_addStickerToSet {
	return &TLstickers_addStickerToSet{}
}

// CodecEncode:stickers_addStickerToSet
func (m *TLstickers_addStickerToSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2041315650)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getsticker().Encode())
	return x.Buf
}

// CodecDecode:stickers_addStickerToSet
func (m *TLstickers_addStickerToSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &InputStickerSetItem{}
	m1.Decode(dbuf)
	m.Setsticker(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stickers_setStickerSetThumb
//
func NewTLstickers_setStickerSetThumb() *TLstickers_setStickerSetThumb {
	return &TLstickers_setStickerSetThumb{}
}

// CodecEncode:stickers_setStickerSetThumb
func (m *TLstickers_setStickerSetThumb) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1707717072)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getthumb().Encode())
	return x.Buf
}

// CodecDecode:stickers_setStickerSetThumb
func (m *TLstickers_setStickerSetThumb) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &InputDocument{}
	m1.Decode(dbuf)
	m.Setthumb(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_requestCall
//
func NewTLphone_requestCall() *TLphone_requestCall {
	return &TLphone_requestCall{}
}

// CodecEncode:phone_requestCall
func (m *TLphone_requestCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1124046573)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getrandom_id())
	x.Bytes(m.Getg_a_hash())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_requestCall
func (m *TLphone_requestCall) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setrandom_id(dbuf.Int())
	m.Setg_a_hash(dbuf.StringBytes())
	m4 := &PhoneCallProtocol{}
	m4.Decode(dbuf)
	m.Setprotocol(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_acceptCall
//
func NewTLphone_acceptCall() *TLphone_acceptCall {
	return &TLphone_acceptCall{}
}

// CodecEncode:phone_acceptCall
func (m *TLphone_acceptCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1003664544)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_b())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_acceptCall
func (m *TLphone_acceptCall) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_b(dbuf.StringBytes())
	m2 := &PhoneCallProtocol{}
	m2.Decode(dbuf)
	m.Setprotocol(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:phone_confirmCall
//
func NewTLphone_confirmCall() *TLphone_confirmCall {
	return &TLphone_confirmCall{}
}

// CodecEncode:phone_confirmCall
func (m *TLphone_confirmCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(788404002)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_a())
	x.Long(m.Getkey_fingerprint())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_confirmCall
func (m *TLphone_confirmCall) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_a(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	m3 := &PhoneCallProtocol{}
	m3.Decode(dbuf)
	m.Setprotocol(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_sendPaymentForm
//
func NewTLpayments_sendPaymentForm() *TLpayments_sendPaymentForm {
	return &TLpayments_sendPaymentForm{}
}

// CodecEncode:payments_sendPaymentForm
func (m *TLpayments_sendPaymentForm) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(730364339)
	var flags uint32 = 0
	if m.Getrequested_info_id() != "" {
		flags |= 0 << 1
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	if m.Getrequested_info_id() != "" {
		x.String(m.Getrequested_info_id())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:payments_sendPaymentForm
func (m *TLpayments_sendPaymentForm) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmsg_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Setrequested_info_id(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m3 := &InputPaymentCredentials{}
	m3.Decode(dbuf)
	m.Setcredentials(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getDeepLinkInfo
//
func NewTLhelp_getDeepLinkInfo() *TLhelp_getDeepLinkInfo {
	return &TLhelp_getDeepLinkInfo{}
}

// CodecEncode:help_getDeepLinkInfo
func (m *TLhelp_getDeepLinkInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1072547679)
	x.String(m.Getpath())
	return x.Buf
}

// CodecDecode:help_getDeepLinkInfo
func (m *TLhelp_getDeepLinkInfo) Decode(dbuf *code.DecodeBuf) error {
	m.Setpath(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getSupport
//
func NewTLhelp_getSupport() *TLhelp_getSupport {
	return &TLhelp_getSupport{}
}

// CodecEncode:help_getSupport
func (m *TLhelp_getSupport) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1663104819)
	return x.Buf
}

// CodecDecode:help_getSupport
func (m *TLhelp_getSupport) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_uploadEncryptedFile
//
func NewTLmessages_uploadEncryptedFile() *TLmessages_uploadEncryptedFile {
	return &TLmessages_uploadEncryptedFile{}
}

// CodecEncode:messages_uploadEncryptedFile
func (m *TLmessages_uploadEncryptedFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1347929239)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_uploadEncryptedFile
func (m *TLmessages_uploadEncryptedFile) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputEncryptedFile{}
	m1.Decode(dbuf)
	m.Setfile(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getStatsURL
//
func NewTLmessages_getStatsURL() *TLmessages_getStatsURL {
	return &TLmessages_getStatsURL{}
}

// CodecEncode:messages_getStatsURL
func (m *TLmessages_getStatsURL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2127811866)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getparams())
	return x.Buf
}

// CodecDecode:messages_getStatsURL
func (m *TLmessages_getStatsURL) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setparams(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getParticipants
//
func NewTLchannels_getParticipants() *TLchannels_getParticipants {
	return &TLchannels_getParticipants{}
}

// CodecEncode:channels_getParticipants
func (m *TLchannels_getParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(306054633)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:channels_getParticipants
func (m *TLchannels_getParticipants) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &ChannelParticipantsFilter{}
	m1.Decode(dbuf)
	m.Setfilter(m1)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readHistory
//
func NewTLmessages_readHistory() *TLmessages_readHistory {
	return &TLmessages_readHistory{}
}

// CodecEncode:messages_readHistory
func (m *TLmessages_readHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(238054714)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_readHistory
func (m *TLmessages_readHistory) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_deleteMessages
//
func NewTLmessages_deleteMessages() *TLmessages_deleteMessages {
	return &TLmessages_deleteMessages{}
}

// CodecEncode:messages_deleteMessages
func (m *TLmessages_deleteMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-443640366)
	var flags uint32 = 0
	if m.Getrevoke() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_deleteMessages
func (m *TLmessages_deleteMessages) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrevoke(true)
	}
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_readMessageContents
//
func NewTLmessages_readMessageContents() *TLmessages_readMessageContents {
	return &TLmessages_readMessageContents{}
}

// CodecEncode:messages_readMessageContents
func (m *TLmessages_readMessageContents) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(916930423)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_readMessageContents
func (m *TLmessages_readMessageContents) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_deleteMessages
//
func NewTLchannels_deleteMessages() *TLchannels_deleteMessages {
	return &TLchannels_deleteMessages{}
}

// CodecEncode:channels_deleteMessages
func (m *TLchannels_deleteMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2067661490)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_deleteMessages
func (m *TLchannels_deleteMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stats_getBroadcastStats
//
func NewTLstats_getBroadcastStats() *TLstats_getBroadcastStats {
	return &TLstats_getBroadcastStats{}
}

// CodecEncode:stats_getBroadcastStats
func (m *TLstats_getBroadcastStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1421720550)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:stats_getBroadcastStats
func (m *TLstats_getBroadcastStats) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_acceptLoginToken
//
func NewTLauth_acceptLoginToken() *TLauth_acceptLoginToken {
	return &TLauth_acceptLoginToken{}
}

// CodecEncode:auth_acceptLoginToken
func (m *TLauth_acceptLoginToken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-392909491)
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_acceptLoginToken
func (m *TLauth_acceptLoginToken) Decode(dbuf *code.DecodeBuf) error {
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_initTakeoutSession
//
func NewTLaccount_initTakeoutSession() *TLaccount_initTakeoutSession {
	return &TLaccount_initTakeoutSession{}
}

// CodecEncode:account_initTakeoutSession
func (m *TLaccount_initTakeoutSession) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-262453244)
	var flags uint32 = 0
	if m.Getcontacts() != false {
		flags |= 0 << 0
	}
	if m.Getmessage_users() != false {
		flags |= 1 << 1
	}
	if m.Getmessage_chats() != false {
		flags |= 2 << 2
	}
	if m.Getmessage_megagroups() != false {
		flags |= 3 << 3
	}
	if m.Getmessage_channels() != false {
		flags |= 4 << 4
	}
	if m.Getfiles() != false {
		flags |= 5 << 5
	}
	if m.Getfile_max_size() != 0 {
		flags |= 5 << 6
	}
	x.UInt(flags)
	if m.Getfile_max_size() != 0 {
		x.Int(m.Getfile_max_size())
	}
	return x.Buf
}

// CodecDecode:account_initTakeoutSession
func (m *TLaccount_initTakeoutSession) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcontacts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmessage_users(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmessage_chats(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmessage_megagroups(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmessage_channels(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setfiles(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setfile_max_size(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getAccountTTL
//
func NewTLaccount_getAccountTTL() *TLaccount_getAccountTTL {
	return &TLaccount_getAccountTTL{}
}

// CodecEncode:account_getAccountTTL
func (m *TLaccount_getAccountTTL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(150761757)
	return x.Buf
}

// CodecDecode:account_getAccountTTL
func (m *TLaccount_getAccountTTL) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getSplitRanges
//
func NewTLmessages_getSplitRanges() *TLmessages_getSplitRanges {
	return &TLmessages_getSplitRanges{}
}

// CodecEncode:messages_getSplitRanges
func (m *TLmessages_getSplitRanges) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(486505992)
	return x.Buf
}

// CodecDecode:messages_getSplitRanges
func (m *TLmessages_getSplitRanges) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getWallPapers
//
func NewTLaccount_getWallPapers() *TLaccount_getWallPapers {
	return &TLaccount_getWallPapers{}
}

// CodecEncode:account_getWallPapers
func (m *TLaccount_getWallPapers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1430579357)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:account_getWallPapers
func (m *TLaccount_getWallPapers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:langpack_getLangPack
//
func NewTLlangpack_getLangPack() *TLlangpack_getLangPack {
	return &TLlangpack_getLangPack{}
}

// CodecEncode:langpack_getLangPack
func (m *TLlangpack_getLangPack) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-219008246)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:langpack_getLangPack
func (m *TLlangpack_getLangPack) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:langpack_getDifference
//
func NewTLlangpack_getDifference() *TLlangpack_getDifference {
	return &TLlangpack_getDifference{}
}

// CodecEncode:langpack_getDifference
func (m *TLlangpack_getDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-845657435)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	return x.Buf
}

// CodecDecode:langpack_getDifference
func (m *TLlangpack_getDifference) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getDhConfig
//
func NewTLmessages_getDhConfig() *TLmessages_getDhConfig {
	return &TLmessages_getDhConfig{}
}

// CodecEncode:messages_getDhConfig
func (m *TLmessages_getDhConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(651135312)
	x.Int(m.Getversion())
	x.Int(m.Getrandom_length())
	return x.Buf
}

// CodecDecode:messages_getDhConfig
func (m *TLmessages_getDhConfig) Decode(dbuf *code.DecodeBuf) error {
	m.Setversion(dbuf.Int())
	m.Setrandom_length(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateProfile
//
func NewTLaccount_updateProfile() *TLaccount_updateProfile {
	return &TLaccount_updateProfile{}
}

// CodecEncode:account_updateProfile
func (m *TLaccount_updateProfile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2018596725)
	var flags uint32 = 0
	if m.Getfirst_name() != "" {
		flags |= 0 << 0
	}
	if m.Getlast_name() != "" {
		flags |= 1 << 1
	}
	if m.Getabout() != "" {
		flags |= 2 << 2
	}
	x.UInt(flags)
	if m.Getfirst_name() != "" {
		x.String(m.Getfirst_name())
	}
	if m.Getlast_name() != "" {
		x.String(m.Getlast_name())
	}
	if m.Getabout() != "" {
		x.String(m.Getabout())
	}
	return x.Buf
}

// CodecDecode:account_updateProfile
func (m *TLaccount_updateProfile) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfirst_name(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setlast_name(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setabout(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_updateUsername
//
func NewTLaccount_updateUsername() *TLaccount_updateUsername {
	return &TLaccount_updateUsername{}
}

// CodecEncode:account_updateUsername
func (m *TLaccount_updateUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1040964988)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:account_updateUsername
func (m *TLaccount_updateUsername) Decode(dbuf *code.DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_changePhone
//
func NewTLaccount_changePhone() *TLaccount_changePhone {
	return &TLaccount_changePhone{}
}

// CodecEncode:account_changePhone
func (m *TLaccount_changePhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1891839707)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_changePhone
func (m *TLaccount_changePhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getInlineBotResults
//
func NewTLmessages_getInlineBotResults() *TLmessages_getInlineBotResults {
	return &TLmessages_getInlineBotResults{}
}

// CodecEncode:messages_getInlineBotResults
func (m *TLmessages_getInlineBotResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1364105629)
	var flags uint32 = 0
	if m.Getgeo_point().Constructor != 0 {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getbot().Encode())
	x.Bytes(m.Getpeer().Encode())
	if m.Getgeo_point().Constructor != 0 {
		x.Bytes(m.Getgeo_point().Encode())
	}
	x.String(m.Getquery())
	x.String(m.Getoffset())
	return x.Buf
}

// CodecDecode:messages_getInlineBotResults
func (m *TLmessages_getInlineBotResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	if (flags & (1 << 2)) != 0 {
		m2 := &InputGeoPoint{}
		m2.Decode(dbuf)
		m.Setgeo_point(m2)
	}
	m.Setquery(dbuf.String())
	m.Setoffset(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_getWebAuthorizations
//
func NewTLaccount_getWebAuthorizations() *TLaccount_getWebAuthorizations {
	return &TLaccount_getWebAuthorizations{}
}

// CodecEncode:account_getWebAuthorizations
func (m *TLaccount_getWebAuthorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(405695855)
	return x.Buf
}

// CodecDecode:account_getWebAuthorizations
func (m *TLaccount_getWebAuthorizations) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getPollVotes
//
func NewTLmessages_getPollVotes() *TLmessages_getPollVotes {
	return &TLmessages_getPollVotes{}
}

// CodecEncode:messages_getPollVotes
func (m *TLmessages_getPollVotes) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1200736242)
	var flags uint32 = 0
	if len(m.Getoption()) > 0 {
		flags |= 0 << 2
	}
	if m.Getoffset() != "" {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	if m.Getoption() != nil {
		x.Bytes(m.Getoption())
	}
	if m.Getoffset() != "" {
		x.String(m.Getoffset())
	}
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getPollVotes
func (m *TLmessages_getPollVotes) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setoption(dbuf.StringBytes())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setoffset(dbuf.String())
	}
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_requestPasswordRecovery
//
func NewTLauth_requestPasswordRecovery() *TLauth_requestPasswordRecovery {
	return &TLauth_requestPasswordRecovery{}
}

// CodecEncode:auth_requestPasswordRecovery
func (m *TLauth_requestPasswordRecovery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-661144474)
	return x.Buf
}

// CodecDecode:auth_requestPasswordRecovery
func (m *TLauth_requestPasswordRecovery) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:payments_getBankCardData
//
func NewTLpayments_getBankCardData() *TLpayments_getBankCardData {
	return &TLpayments_getBankCardData{}
}

// CodecEncode:payments_getBankCardData
func (m *TLpayments_getBankCardData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(779736953)
	x.String(m.Getnumber())
	return x.Buf
}

// CodecDecode:payments_getBankCardData
func (m *TLpayments_getBankCardData) Decode(dbuf *code.DecodeBuf) error {
	m.Setnumber(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_requestUrlAuth
//
func NewTLmessages_requestUrlAuth() *TLmessages_requestUrlAuth {
	return &TLmessages_requestUrlAuth{}
}

// CodecEncode:messages_requestUrlAuth
func (m *TLmessages_requestUrlAuth) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-482388461)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:messages_requestUrlAuth
func (m *TLmessages_requestUrlAuth) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_acceptUrlAuth
//
func NewTLmessages_acceptUrlAuth() *TLmessages_acceptUrlAuth {
	return &TLmessages_acceptUrlAuth{}
}

// CodecEncode:messages_acceptUrlAuth
func (m *TLmessages_acceptUrlAuth) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-148247912)
	var flags uint32 = 0
	if m.Getwrite_allowed() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:messages_acceptUrlAuth
func (m *TLmessages_acceptUrlAuth) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setwrite_allowed(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setmsg_id(dbuf.Int())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getPeerDialogs
//
func NewTLmessages_getPeerDialogs() *TLmessages_getPeerDialogs {
	return &TLmessages_getPeerDialogs{}
}

// CodecEncode:messages_getPeerDialogs
func (m *TLmessages_getPeerDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-462373635)
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getPeerDialogs
func (m *TLmessages_getPeerDialogs) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputDialogPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputDialogPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setpeers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getPinnedDialogs
//
func NewTLmessages_getPinnedDialogs() *TLmessages_getPinnedDialogs {
	return &TLmessages_getPinnedDialogs{}
}

// CodecEncode:messages_getPinnedDialogs
func (m *TLmessages_getPinnedDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-692498958)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:messages_getPinnedDialogs
func (m *TLmessages_getPinnedDialogs) Decode(dbuf *code.DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:langpack_getLanguages
//
func NewTLlangpack_getLanguages() *TLlangpack_getLanguages {
	return &TLlangpack_getLanguages{}
}

// CodecEncode:langpack_getLanguages
func (m *TLlangpack_getLanguages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1120311183)
	x.String(m.Getlang_pack())
	return x.Buf
}

// CodecDecode:langpack_getLanguages
func (m *TLlangpack_getLanguages) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getAppUpdate
//
func NewTLhelp_getAppUpdate() *TLhelp_getAppUpdate {
	return &TLhelp_getAppUpdate{}
}

// CodecEncode:help_getAppUpdate
func (m *TLhelp_getAppUpdate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1378703997)
	x.String(m.Getsource())
	return x.Buf
}

// CodecDecode:help_getAppUpdate
func (m *TLhelp_getAppUpdate) Decode(dbuf *code.DecodeBuf) error {
	m.Setsource(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_exportAuthorization
//
func NewTLauth_exportAuthorization() *TLauth_exportAuthorization {
	return &TLauth_exportAuthorization{}
}

// CodecEncode:auth_exportAuthorization
func (m *TLauth_exportAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-440401971)
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:auth_exportAuthorization
func (m *TLauth_exportAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:messages_getWebPage
//
func NewTLmessages_getWebPage() *TLmessages_getWebPage {
	return &TLmessages_getWebPage{}
}

// CodecEncode:messages_getWebPage
func (m *TLmessages_getWebPage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(852135825)
	x.String(m.Geturl())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getWebPage
func (m *TLmessages_getWebPage) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:channels_getParticipant
//
func NewTLchannels_getParticipant() *TLchannels_getParticipant {
	return &TLchannels_getParticipant{}
}

// CodecEncode:channels_getParticipant
func (m *TLchannels_getParticipant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1416484774)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:channels_getParticipant
func (m *TLchannels_getParticipant) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:upload_getFile
//
func NewTLupload_getFile() *TLupload_getFile {
	return &TLupload_getFile{}
}

// CodecEncode:upload_getFile
func (m *TLupload_getFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1319462148)
	var flags uint32 = 0
	if m.Getprecise() != false {
		flags |= 0 << 0
	}
	if m.Getcdn_supported() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getFile
func (m *TLupload_getFile) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setprecise(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcdn_supported(true)
	}
	m2 := &InputFileLocation{}
	m2.Decode(dbuf)
	m.Setlocation(m2)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:stats_loadAsyncGraph
//
func NewTLstats_loadAsyncGraph() *TLstats_loadAsyncGraph {
	return &TLstats_loadAsyncGraph{}
}

// CodecEncode:stats_loadAsyncGraph
func (m *TLstats_loadAsyncGraph) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1646092192)
	var flags uint32 = 0
	if m.Getx().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.String(m.Gettoken())
	if m.Getx() != 0 {
		x.Long(m.Getx())
	}
	return x.Buf
}

// CodecDecode:stats_loadAsyncGraph
func (m *TLstats_loadAsyncGraph) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settoken(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setx(dbuf.Long())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_sendCode
//
func NewTLauth_sendCode() *TLauth_sendCode {
	return &TLauth_sendCode{}
}

// CodecEncode:auth_sendCode
func (m *TLauth_sendCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1502141361)
	x.String(m.Getphone_number())
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:auth_sendCode
func (m *TLauth_sendCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m3 := &CodeSettings{}
	m3.Decode(dbuf)
	m.Setsettings(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_sendChangePhoneCode
//
func NewTLaccount_sendChangePhoneCode() *TLaccount_sendChangePhoneCode {
	return &TLaccount_sendChangePhoneCode{}
}

// CodecEncode:account_sendChangePhoneCode
func (m *TLaccount_sendChangePhoneCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2108208411)
	x.String(m.Getphone_number())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendChangePhoneCode
func (m *TLaccount_sendChangePhoneCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:auth_resendCode
//
func NewTLauth_resendCode() *TLauth_resendCode {
	return &TLauth_resendCode{}
}

// CodecEncode:auth_resendCode
func (m *TLauth_resendCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1056025023)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	return x.Buf
}

// CodecDecode:auth_resendCode
func (m *TLauth_resendCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_sendConfirmPhoneCode
//
func NewTLaccount_sendConfirmPhoneCode() *TLaccount_sendConfirmPhoneCode {
	return &TLaccount_sendConfirmPhoneCode{}
}

// CodecEncode:account_sendConfirmPhoneCode
func (m *TLaccount_sendConfirmPhoneCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(457157256)
	x.String(m.Gethash())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendConfirmPhoneCode
func (m *TLaccount_sendConfirmPhoneCode) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:account_sendVerifyPhoneCode
//
func NewTLaccount_sendVerifyPhoneCode() *TLaccount_sendVerifyPhoneCode {
	return &TLaccount_sendVerifyPhoneCode{}
}

// CodecEncode:account_sendVerifyPhoneCode
func (m *TLaccount_sendVerifyPhoneCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1516022023)
	x.String(m.Getphone_number())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendVerifyPhoneCode
func (m *TLaccount_sendVerifyPhoneCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_getSaved
//
func NewTLcontacts_getSaved() *TLcontacts_getSaved {
	return &TLcontacts_getSaved{}
}

// CodecEncode:contacts_getSaved
func (m *TLcontacts_getSaved) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2098076769)
	return x.Buf
}

// CodecDecode:contacts_getSaved
func (m *TLcontacts_getSaved) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:contacts_importContacts
//
func NewTLcontacts_importContacts() *TLcontacts_importContacts {
	return &TLcontacts_importContacts{}
}

// CodecEncode:contacts_importContacts
func (m *TLcontacts_importContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(746589157)
	x.Int(481674261)
	x.Int(int32(len(m.Getcontacts())))
	for _, v := range m.Getcontacts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_importContacts
func (m *TLcontacts_importContacts) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputContact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputContact{}
		v0[i].Decode(dbuf)
	}
	m.Setcontacts(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:updates_getDifference
//
func NewTLupdates_getDifference() *TLupdates_getDifference {
	return &TLupdates_getDifference{}
}

// CodecEncode:updates_getDifference
func (m *TLupdates_getDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(630429265)
	var flags uint32 = 0
	if m.Getpts_total_limit() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Getpts_total_limit() != 0 {
		x.Int(m.Getpts_total_limit())
	}
	x.Int(m.Getdate())
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updates_getDifference
func (m *TLupdates_getDifference) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setpts(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Setpts_total_limit(dbuf.Int())
	}
	m.Setdate(dbuf.Int())
	m.Setqts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// MethodCodec:New:help_getTermsOfServiceUpdate
//
func NewTLhelp_getTermsOfServiceUpdate() *TLhelp_getTermsOfServiceUpdate {
	return &TLhelp_getTermsOfServiceUpdate{}
}

// CodecEncode:help_getTermsOfServiceUpdate
func (m *TLhelp_getTermsOfServiceUpdate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(749019089)
	return x.Buf
}

// CodecDecode:help_getTermsOfServiceUpdate
func (m *TLhelp_getTermsOfServiceUpdate) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEmpty
//
func NewTLmessageEmpty() *TLmessageEmpty {
	return &TLmessageEmpty{}
}

// CodecEncode:messageEmpty
func (m *TLmessageEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2082087340)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messageEmpty
func (m *TLmessageEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:message
//
func NewTLmessage() *TLmessage {
	return &TLmessage{}
}

// CodecEncode:message
func (m *TLmessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1487813065)
	var flags uint32 = 0
	if m.Getout_key() != false {
		flags |= 1 << 0
	}
	if m.Getmentioned() != false {
		flags |= 4 << 1
	}
	if m.Getmedia_unread() != false {
		flags |= 5 << 2
	}
	if m.Getsilent() != false {
		flags |= 13 << 3
	}
	if m.Getpost() != false {
		flags |= 14 << 4
	}
	if m.Getfrom_scheduled() != false {
		flags |= 18 << 5
	}
	if m.Getlegacy() != false {
		flags |= 19 << 6
	}
	if m.Getedit_hide() != false {
		flags |= 21 << 7
	}
	if m.Getpinned() != false {
		flags |= 24 << 8
	}
	if m.Getfrom_id().Constructor != 0 {
		flags |= 8 << 10
	}
	if m.Getfwd_from().Constructor != 0 {
		flags |= 2 << 12
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 11 << 13
	}
	if m.Getreply_to().Constructor != 0 {
		flags |= 3 << 14
	}
	if m.Getmedia().Constructor != 0 {
		flags |= 9 << 17
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 6 << 18
	}
	if len(m.Getentities()) > 0 {
		flags |= 7 << 19
	}
	if m.Getviews() != 0 {
		flags |= 10 << 20
	}
	if m.Getforwards() != 0 {
		flags |= 10 << 21
	}
	if m.Getreplies().Constructor != 0 {
		flags |= 23 << 22
	}
	if m.Getedit_date() != 0 {
		flags |= 15 << 23
	}
	if m.Getpost_author() != "" {
		flags |= 16 << 24
	}
	if m.Getgrouped_id().Constructor != 0 {
		flags |= 17 << 25
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 22 << 26
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfrom_id().Constructor != 0 {
		x.Bytes(m.Getfrom_id().Encode())
	}
	x.Bytes(m.Getpeer_id().Encode())
	if m.Getfwd_from().Constructor != 0 {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to().Constructor != 0 {
		x.Bytes(m.Getreply_to().Encode())
	}
	x.Int(m.Getdate())
	x.String(m.Getmessage())
	if m.Getmedia().Constructor != 0 {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	if m.Getforwards() != 0 {
		x.Int(m.Getforwards())
	}
	if m.Getreplies().Constructor != 0 {
		x.Bytes(m.Getreplies().Encode())
	}
	if m.Getedit_date() != 0 {
		x.Int(m.Getedit_date())
	}
	if m.Getpost_author() != "" {
		x.String(m.Getpost_author())
	}
	if m.Getgrouped_id() != 0 {
		x.Long(m.Getgrouped_id())
	}
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:message
func (m *TLmessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setout_key(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setpost(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setfrom_scheduled(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setlegacy(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setedit_hide(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setpinned(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 10)) != 0 {
		m10 := &Peer{}
		m10.Decode(dbuf)
		m.Setfrom_id(m10)
	}
	m11 := &Peer{}
	m11.Decode(dbuf)
	m.Setpeer_id(m11)
	if (flags & (1 << 12)) != 0 {
		m12 := &MessageFwdHeader{}
		m12.Decode(dbuf)
		m.Setfwd_from(m12)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 14)) != 0 {
		m14 := &MessageReplyHeader{}
		m14.Decode(dbuf)
		m.Setreply_to(m14)
	}
	m.Setdate(dbuf.Int())
	m.Setmessage(dbuf.String())
	if (flags & (1 << 17)) != 0 {
		m17 := &MessageMedia{}
		m17.Decode(dbuf)
		m.Setmedia(m17)
	}
	if (flags & (1 << 18)) != 0 {
		m18 := &ReplyMarkup{}
		m18.Decode(dbuf)
		m.Setreply_markup(m18)
	}
	if (flags & (1 << 19)) != 0 {
		c19 := dbuf.Int()
		if c19 != 481674261 {
			return dbuf.Err
		}
		l19 := dbuf.Int()
		v19 := make([]MessageEntity, l19)
		for i := int32(0); i < l19; i++ {
			v19[i] = MessageEntity{}
			v19[i].Decode(dbuf)
		}
		m.Setentities(v19)
	}
	if (flags & (1 << 20)) != 0 {
		m.Setviews(dbuf.Int())
	}
	if (flags & (1 << 21)) != 0 {
		m.Setforwards(dbuf.Int())
	}
	if (flags & (1 << 22)) != 0 {
		m22 := &MessageReplies{}
		m22.Decode(dbuf)
		m.Setreplies(m22)
	}
	if (flags & (1 << 23)) != 0 {
		m.Setedit_date(dbuf.Int())
	}
	if (flags & (1 << 24)) != 0 {
		m.Setpost_author(dbuf.String())
	}
	if (flags & (1 << 25)) != 0 {
		m.Setgrouped_id(dbuf.Long())
	}
	if (flags & (1 << 26)) != 0 {
		c26 := dbuf.Int()
		if c26 != 481674261 {
			return dbuf.Err
		}
		l26 := dbuf.Int()
		v26 := make([]RestrictionReason, l26)
		for i := int32(0); i < l26; i++ {
			v26[i] = RestrictionReason{}
			v26[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v26)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageService
//
func NewTLmessageService() *TLmessageService {
	return &TLmessageService{}
}

// CodecEncode:messageService
func (m *TLmessageService) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(678405636)
	var flags uint32 = 0
	if m.Getout_key() != false {
		flags |= 1 << 0
	}
	if m.Getmentioned() != false {
		flags |= 4 << 1
	}
	if m.Getmedia_unread() != false {
		flags |= 5 << 2
	}
	if m.Getsilent() != false {
		flags |= 13 << 3
	}
	if m.Getpost() != false {
		flags |= 14 << 4
	}
	if m.Getlegacy() != false {
		flags |= 19 << 5
	}
	if m.Getfrom_id().Constructor != 0 {
		flags |= 8 << 7
	}
	if m.Getreply_to().Constructor != 0 {
		flags |= 3 << 9
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfrom_id().Constructor != 0 {
		x.Bytes(m.Getfrom_id().Encode())
	}
	x.Bytes(m.Getpeer_id().Encode())
	if m.Getreply_to().Constructor != 0 {
		x.Bytes(m.Getreply_to().Encode())
	}
	x.Int(m.Getdate())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:messageService
func (m *TLmessageService) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setout_key(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setpost(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setlegacy(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 7)) != 0 {
		m7 := &Peer{}
		m7.Decode(dbuf)
		m.Setfrom_id(m7)
	}
	m8 := &Peer{}
	m8.Decode(dbuf)
	m.Setpeer_id(m8)
	if (flags & (1 << 9)) != 0 {
		m9 := &MessageReplyHeader{}
		m9.Decode(dbuf)
		m.Setreply_to(m9)
	}
	m.Setdate(dbuf.Int())
	m11 := &MessageAction{}
	m11.Decode(dbuf)
	m.Setaction(m11)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButton
//
func NewTLkeyboardButton() *TLkeyboardButton {
	return &TLkeyboardButton{}
}

// CodecEncode:keyboardButton
func (m *TLkeyboardButton) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1560655744)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButton
func (m *TLkeyboardButton) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonUrl
//
func NewTLkeyboardButtonUrl() *TLkeyboardButtonUrl {
	return &TLkeyboardButtonUrl{}
}

// CodecEncode:keyboardButtonUrl
func (m *TLkeyboardButtonUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(629866245)
	x.String(m.Gettext())
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:keyboardButtonUrl
func (m *TLkeyboardButtonUrl) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonCallback
//
func NewTLkeyboardButtonCallback() *TLkeyboardButtonCallback {
	return &TLkeyboardButtonCallback{}
}

// CodecEncode:keyboardButtonCallback
func (m *TLkeyboardButtonCallback) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(901503851)
	var flags uint32 = 0
	if m.Getrequires_password() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.String(m.Gettext())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:keyboardButtonCallback
func (m *TLkeyboardButtonCallback) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequires_password(true)
	}
	m.Settext(dbuf.String())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonRequestPhone
//
func NewTLkeyboardButtonRequestPhone() *TLkeyboardButtonRequestPhone {
	return &TLkeyboardButtonRequestPhone{}
}

// CodecEncode:keyboardButtonRequestPhone
func (m *TLkeyboardButtonRequestPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1318425559)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestPhone
func (m *TLkeyboardButtonRequestPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonRequestGeoLocation
//
func NewTLkeyboardButtonRequestGeoLocation() *TLkeyboardButtonRequestGeoLocation {
	return &TLkeyboardButtonRequestGeoLocation{}
}

// CodecEncode:keyboardButtonRequestGeoLocation
func (m *TLkeyboardButtonRequestGeoLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-59151553)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestGeoLocation
func (m *TLkeyboardButtonRequestGeoLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonSwitchInline
//
func NewTLkeyboardButtonSwitchInline() *TLkeyboardButtonSwitchInline {
	return &TLkeyboardButtonSwitchInline{}
}

// CodecEncode:keyboardButtonSwitchInline
func (m *TLkeyboardButtonSwitchInline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(90744648)
	var flags uint32 = 0
	if m.Getsame_peer() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.String(m.Gettext())
	x.String(m.Getquery())
	return x.Buf
}

// CodecDecode:keyboardButtonSwitchInline
func (m *TLkeyboardButtonSwitchInline) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsame_peer(true)
	}
	m.Settext(dbuf.String())
	m.Setquery(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonGame
//
func NewTLkeyboardButtonGame() *TLkeyboardButtonGame {
	return &TLkeyboardButtonGame{}
}

// CodecEncode:keyboardButtonGame
func (m *TLkeyboardButtonGame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1358175439)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonGame
func (m *TLkeyboardButtonGame) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonBuy
//
func NewTLkeyboardButtonBuy() *TLkeyboardButtonBuy {
	return &TLkeyboardButtonBuy{}
}

// CodecEncode:keyboardButtonBuy
func (m *TLkeyboardButtonBuy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1344716869)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonBuy
func (m *TLkeyboardButtonBuy) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonUrlAuth
//
func NewTLkeyboardButtonUrlAuth() *TLkeyboardButtonUrlAuth {
	return &TLkeyboardButtonUrlAuth{}
}

// CodecEncode:keyboardButtonUrlAuth
func (m *TLkeyboardButtonUrlAuth) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(280464681)
	var flags uint32 = 0
	if m.Getfwd_text() != "" {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.String(m.Gettext())
	if m.Getfwd_text() != "" {
		x.String(m.Getfwd_text())
	}
	x.String(m.Geturl())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:keyboardButtonUrlAuth
func (m *TLkeyboardButtonUrlAuth) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settext(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setfwd_text(dbuf.String())
	}
	m.Seturl(dbuf.String())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputKeyboardButtonUrlAuth
//
func NewTLinputKeyboardButtonUrlAuth() *TLinputKeyboardButtonUrlAuth {
	return &TLinputKeyboardButtonUrlAuth{}
}

// CodecEncode:inputKeyboardButtonUrlAuth
func (m *TLinputKeyboardButtonUrlAuth) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-802258988)
	var flags uint32 = 0
	if m.Getrequest_write_access() != false {
		flags |= 0 << 0
	}
	if m.Getfwd_text() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Gettext())
	if m.Getfwd_text() != "" {
		x.String(m.Getfwd_text())
	}
	x.String(m.Geturl())
	x.Bytes(m.Getbot().Encode())
	return x.Buf
}

// CodecDecode:inputKeyboardButtonUrlAuth
func (m *TLinputKeyboardButtonUrlAuth) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequest_write_access(true)
	}
	m.Settext(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m.Setfwd_text(dbuf.String())
	}
	m.Seturl(dbuf.String())
	m4 := &InputUser{}
	m4.Decode(dbuf)
	m.Setbot(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonRequestPoll
//
func NewTLkeyboardButtonRequestPoll() *TLkeyboardButtonRequestPoll {
	return &TLkeyboardButtonRequestPoll{}
}

// CodecEncode:keyboardButtonRequestPoll
func (m *TLkeyboardButtonRequestPoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1144565411)
	var flags uint32 = 0
	if m.Getquiz().Constructor != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getquiz().Constructor != 0 {
		x.Bytes(m.Getquiz().Encode())
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestPoll
func (m *TLkeyboardButtonRequestPoll) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setquiz(m0)
	}
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChannelEmpty
//
func NewTLinputChannelEmpty() *TLinputChannelEmpty {
	return &TLinputChannelEmpty{}
}

// CodecEncode:inputChannelEmpty
func (m *TLinputChannelEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-292807034)
	return x.Buf
}

// CodecDecode:inputChannelEmpty
func (m *TLinputChannelEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChannel
//
func NewTLinputChannel() *TLinputChannel {
	return &TLinputChannel{}
}

// CodecEncode:inputChannel
func (m *TLinputChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1343524562)
	x.Int(m.Getchannel_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputChannel
func (m *TLinputChannel) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChannelFromMessage
//
func NewTLinputChannelFromMessage() *TLinputChannelFromMessage {
	return &TLinputChannelFromMessage{}
}

// CodecEncode:inputChannelFromMessage
func (m *TLinputChannelFromMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(707290417)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:inputChannelFromMessage
func (m *TLinputChannelFromMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGraphAsync
//
func NewTLstatsGraphAsync() *TLstatsGraphAsync {
	return &TLstatsGraphAsync{}
}

// CodecEncode:statsGraphAsync
func (m *TLstatsGraphAsync) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1244130093)
	x.String(m.Gettoken())
	return x.Buf
}

// CodecDecode:statsGraphAsync
func (m *TLstatsGraphAsync) Decode(dbuf *code.DecodeBuf) error {
	m.Settoken(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGraphError
//
func NewTLstatsGraphError() *TLstatsGraphError {
	return &TLstatsGraphError{}
}

// CodecEncode:statsGraphError
func (m *TLstatsGraphError) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1092839390)
	x.String(m.Geterror())
	return x.Buf
}

// CodecDecode:statsGraphError
func (m *TLstatsGraphError) Decode(dbuf *code.DecodeBuf) error {
	m.Seterror(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGraph
//
func NewTLstatsGraph() *TLstatsGraph {
	return &TLstatsGraph{}
}

// CodecEncode:statsGraph
func (m *TLstatsGraph) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1901828938)
	var flags uint32 = 0
	if m.Getzoom_token() != "" {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getjson().Encode())
	if m.Getzoom_token() != "" {
		x.String(m.Getzoom_token())
	}
	return x.Buf
}

// CodecDecode:statsGraph
func (m *TLstatsGraph) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setjson(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setzoom_token(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryPeers
//
func NewTLtopPeerCategoryPeers() *TLtopPeerCategoryPeers {
	return &TLtopPeerCategoryPeers{}
}

// CodecEncode:topPeerCategoryPeers
func (m *TLtopPeerCategoryPeers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-75283823)
	x.Bytes(m.Getcategory().Encode())
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:topPeerCategoryPeers
func (m *TLtopPeerCategoryPeers) Decode(dbuf *code.DecodeBuf) error {
	m0 := &TopPeerCategory{}
	m0.Decode(dbuf)
	m.Setcategory(m0)
	m.Setcount(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]TopPeer, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = TopPeer{}
		v2[i].Decode(dbuf)
	}
	m.Setpeers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:emojiKeyword
//
func NewTLemojiKeyword() *TLemojiKeyword {
	return &TLemojiKeyword{}
}

// CodecEncode:emojiKeyword
func (m *TLemojiKeyword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-709641735)
	x.String(m.Getkeyword())
	x.Int(481674261)
	x.Int(int32(len(m.Getemoticons())))
	for _, v := range m.Getemoticons() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:emojiKeyword
func (m *TLemojiKeyword) Decode(dbuf *code.DecodeBuf) error {
	m.Setkeyword(dbuf.String())
	m.Setemoticons(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:emojiKeywordDeleted
//
func NewTLemojiKeywordDeleted() *TLemojiKeywordDeleted {
	return &TLemojiKeywordDeleted{}
}

// CodecEncode:emojiKeywordDeleted
func (m *TLemojiKeywordDeleted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(594408994)
	x.String(m.Getkeyword())
	x.Int(481674261)
	x.Int(int32(len(m.Getemoticons())))
	for _, v := range m.Getemoticons() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:emojiKeywordDeleted
func (m *TLemojiKeywordDeleted) Decode(dbuf *code.DecodeBuf) error {
	m.Setkeyword(dbuf.String())
	m.Setemoticons(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputAppEvent
//
func NewTLinputAppEvent() *TLinputAppEvent {
	return &TLinputAppEvent{}
}

// CodecEncode:inputAppEvent
func (m *TLinputAppEvent) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(488313413)
	x.Bytes(m.Gettime().Encode())
	x.String(m.Gettype())
	x.Long(m.Getpeer())
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:inputAppEvent
func (m *TLinputAppEvent) Decode(dbuf *code.DecodeBuf) error {
	m.Settime(dbuf.Double())
	m.Settype(dbuf.String())
	m.Setpeer(dbuf.Long())
	m3 := &JSONValue{}
	m3.Decode(dbuf)
	m.Setdata(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedFileEmpty
//
func NewTLencryptedFileEmpty() *TLencryptedFileEmpty {
	return &TLencryptedFileEmpty{}
}

// CodecEncode:encryptedFileEmpty
func (m *TLencryptedFileEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1038136962)
	return x.Buf
}

// CodecDecode:encryptedFileEmpty
func (m *TLencryptedFileEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedFile
//
func NewTLencryptedFile() *TLencryptedFile {
	return &TLencryptedFile{}
}

// CodecEncode:encryptedFile
func (m *TLencryptedFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1248893260)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.Int(m.Getdc_id())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:encryptedFile
func (m *TLencryptedFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setdc_id(dbuf.Int())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerEmpty
//
func NewTLinputPeerEmpty() *TLinputPeerEmpty {
	return &TLinputPeerEmpty{}
}

// CodecEncode:inputPeerEmpty
func (m *TLinputPeerEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2134579434)
	return x.Buf
}

// CodecDecode:inputPeerEmpty
func (m *TLinputPeerEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerSelf
//
func NewTLinputPeerSelf() *TLinputPeerSelf {
	return &TLinputPeerSelf{}
}

// CodecEncode:inputPeerSelf
func (m *TLinputPeerSelf) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2107670217)
	return x.Buf
}

// CodecDecode:inputPeerSelf
func (m *TLinputPeerSelf) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerChat
//
func NewTLinputPeerChat() *TLinputPeerChat {
	return &TLinputPeerChat{}
}

// CodecEncode:inputPeerChat
func (m *TLinputPeerChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(396093539)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:inputPeerChat
func (m *TLinputPeerChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerUser
//
func NewTLinputPeerUser() *TLinputPeerUser {
	return &TLinputPeerUser{}
}

// CodecEncode:inputPeerUser
func (m *TLinputPeerUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2072935910)
	x.Int(m.Getuser_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPeerUser
func (m *TLinputPeerUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerChannel
//
func NewTLinputPeerChannel() *TLinputPeerChannel {
	return &TLinputPeerChannel{}
}

// CodecEncode:inputPeerChannel
func (m *TLinputPeerChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(548253432)
	x.Int(m.Getchannel_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPeerChannel
func (m *TLinputPeerChannel) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerUserFromMessage
//
func NewTLinputPeerUserFromMessage() *TLinputPeerUserFromMessage {
	return &TLinputPeerUserFromMessage{}
}

// CodecEncode:inputPeerUserFromMessage
func (m *TLinputPeerUserFromMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(398123750)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:inputPeerUserFromMessage
func (m *TLinputPeerUserFromMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerChannelFromMessage
//
func NewTLinputPeerChannelFromMessage() *TLinputPeerChannelFromMessage {
	return &TLinputPeerChannelFromMessage{}
}

// CodecEncode:inputPeerChannelFromMessage
func (m *TLinputPeerChannelFromMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1667893317)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:inputPeerChannelFromMessage
func (m *TLinputPeerChannelFromMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inlineBotSwitchPM
//
func NewTLinlineBotSwitchPM() *TLinlineBotSwitchPM {
	return &TLinlineBotSwitchPM{}
}

// CodecEncode:inlineBotSwitchPM
func (m *TLinlineBotSwitchPM) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1008755359)
	x.String(m.Gettext())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:inlineBotSwitchPM
func (m *TLinlineBotSwitchPM) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contact
//
func NewTLcontact() *TLcontact {
	return &TLcontact{}
}

// CodecEncode:contact
func (m *TLcontact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-116274796)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getmutual().Encode())
	return x.Buf
}

// CodecDecode:contact
func (m *TLcontact) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setmutual(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputSecureValue
//
func NewTLinputSecureValue() *TLinputSecureValue {
	return &TLinputSecureValue{}
}

// CodecEncode:inputSecureValue
func (m *TLinputSecureValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-618540889)
	var flags uint32 = 0
	if m.Getdata().Constructor != 0 {
		flags |= 0 << 1
	}
	if m.Getfront_side().Constructor != 0 {
		flags |= 1 << 2
	}
	if m.Getreverse_side().Constructor != 0 {
		flags |= 2 << 3
	}
	if m.Getselfie().Constructor != 0 {
		flags |= 3 << 4
	}
	if len(m.Gettranslation()) > 0 {
		flags |= 6 << 5
	}
	if len(m.Getfiles()) > 0 {
		flags |= 4 << 6
	}
	if m.Getplain_data().Constructor != 0 {
		flags |= 5 << 7
	}
	x.UInt(flags)
	x.Bytes(m.Gettype().Encode())
	if m.Getdata().Constructor != 0 {
		x.Bytes(m.Getdata().Encode())
	}
	if m.Getfront_side().Constructor != 0 {
		x.Bytes(m.Getfront_side().Encode())
	}
	if m.Getreverse_side().Constructor != 0 {
		x.Bytes(m.Getreverse_side().Encode())
	}
	if m.Getselfie().Constructor != 0 {
		x.Bytes(m.Getselfie().Encode())
	}
	if len(m.Gettranslation()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Gettranslation())))
		for _, v := range m.Gettranslation() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getfiles()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getfiles())))
		for _, v := range m.Getfiles() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getplain_data().Constructor != 0 {
		x.Bytes(m.Getplain_data().Encode())
	}
	return x.Buf
}

// CodecDecode:inputSecureValue
func (m *TLinputSecureValue) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	if (flags & (1 << 1)) != 0 {
		m1 := &SecureData{}
		m1.Decode(dbuf)
		m.Setdata(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &InputSecureFile{}
		m2.Decode(dbuf)
		m.Setfront_side(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &InputSecureFile{}
		m3.Decode(dbuf)
		m.Setreverse_side(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &InputSecureFile{}
		m4.Decode(dbuf)
		m.Setselfie(m4)
	}
	if (flags & (1 << 5)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]InputSecureFile, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = InputSecureFile{}
			v5[i].Decode(dbuf)
		}
		m.Settranslation(v5)
	}
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]InputSecureFile, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = InputSecureFile{}
			v6[i].Decode(dbuf)
		}
		m.Setfiles(v6)
	}
	if (flags & (1 << 7)) != 0 {
		m7 := &SecurePlainData{}
		m7.Decode(dbuf)
		m.Setplain_data(m7)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_channelDifferenceEmpty
//
func NewTLupdates_channelDifferenceEmpty() *TLupdates_channelDifferenceEmpty {
	return &TLupdates_channelDifferenceEmpty{}
}

// CodecEncode:updates_channelDifferenceEmpty
func (m *TLupdates_channelDifferenceEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1041346555)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 0 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	return x.Buf
}

// CodecDecode:updates_channelDifferenceEmpty
func (m *TLupdates_channelDifferenceEmpty) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	m.Setpts(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_channelDifferenceTooLong
//
func NewTLupdates_channelDifferenceTooLong() *TLupdates_channelDifferenceTooLong {
	return &TLupdates_channelDifferenceTooLong{}
}

// CodecEncode:updates_channelDifferenceTooLong
func (m *TLupdates_channelDifferenceTooLong) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1531132162)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 0 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	x.Bytes(m.Getdialog().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updates_channelDifferenceTooLong
func (m *TLupdates_channelDifferenceTooLong) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	m2 := &Dialog{}
	m2.Decode(dbuf)
	m.Setdialog(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Message, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Message{}
		v3[i].Decode(dbuf)
	}
	m.Setmessages(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Chat, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Chat{}
		v4[i].Decode(dbuf)
	}
	m.Setchats(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]User, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = User{}
		v5[i].Decode(dbuf)
	}
	m.Setusers(v5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_channelDifference
//
func NewTLupdates_channelDifference() *TLupdates_channelDifference {
	return &TLupdates_channelDifference{}
}

// CodecEncode:updates_channelDifference
func (m *TLupdates_channelDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(543450958)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 0 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updates_channelDifference
func (m *TLupdates_channelDifference) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	m.Setpts(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Message, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Message{}
		v3[i].Decode(dbuf)
	}
	m.Setnew_messages(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Update, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Update{}
		v4[i].Decode(dbuf)
	}
	m.Setother_updates(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineResult
//
func NewTLbotInlineResult() *TLbotInlineResult {
	return &TLbotInlineResult{}
}

// CodecEncode:botInlineResult
func (m *TLbotInlineResult) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(295067450)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 2
	}
	if m.Getdescription() != "" {
		flags |= 2 << 3
	}
	if m.Geturl() != "" {
		flags |= 3 << 4
	}
	if m.Getthumb().Constructor != 0 {
		flags |= 4 << 5
	}
	if m.Getcontent().Constructor != 0 {
		flags |= 5 << 6
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getcontent().Constructor != 0 {
		x.Bytes(m.Getcontent().Encode())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:botInlineResult
func (m *TLbotInlineResult) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &WebDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	if (flags & (1 << 6)) != 0 {
		m6 := &WebDocument{}
		m6.Decode(dbuf)
		m.Setcontent(m6)
	}
	m7 := &BotInlineMessage{}
	m7.Decode(dbuf)
	m.Setsend_message(m7)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMediaResult
//
func NewTLbotInlineMediaResult() *TLbotInlineMediaResult {
	return &TLbotInlineMediaResult{}
}

// CodecEncode:botInlineMediaResult
func (m *TLbotInlineMediaResult) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(400266251)
	var flags uint32 = 0
	if m.Getphoto().Constructor != 0 {
		flags |= 0 << 2
	}
	if m.Getdocument().Constructor != 0 {
		flags |= 1 << 3
	}
	if m.Gettitle() != "" {
		flags |= 2 << 4
	}
	if m.Getdescription() != "" {
		flags |= 3 << 5
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype())
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:botInlineMediaResult
func (m *TLbotInlineMediaResult) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &Photo{}
		m2.Decode(dbuf)
		m.Setphoto(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &Document{}
		m3.Decode(dbuf)
		m.Setdocument(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setdescription(dbuf.String())
	}
	m6 := &BotInlineMessage{}
	m6.Decode(dbuf)
	m.Setsend_message(m6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_paymentResult
//
func NewTLpayments_paymentResult() *TLpayments_paymentResult {
	return &TLpayments_paymentResult{}
}

// CodecEncode:payments_paymentResult
func (m *TLpayments_paymentResult) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1314881805)
	x.Bytes(m.Getupdates().Encode())
	return x.Buf
}

// CodecDecode:payments_paymentResult
func (m *TLpayments_paymentResult) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Updates{}
	m0.Decode(dbuf)
	m.Setupdates(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_paymentVerificationNeeded
//
func NewTLpayments_paymentVerificationNeeded() *TLpayments_paymentVerificationNeeded {
	return &TLpayments_paymentVerificationNeeded{}
}

// CodecEncode:payments_paymentVerificationNeeded
func (m *TLpayments_paymentVerificationNeeded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-666824391)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:payments_paymentVerificationNeeded
func (m *TLpayments_paymentVerificationNeeded) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureCredentialsEncrypted
//
func NewTLsecureCredentialsEncrypted() *TLsecureCredentialsEncrypted {
	return &TLsecureCredentialsEncrypted{}
}

// CodecEncode:secureCredentialsEncrypted
func (m *TLsecureCredentialsEncrypted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(871426631)
	x.Bytes(m.Getdata())
	x.Bytes(m.Gethash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureCredentialsEncrypted
func (m *TLsecureCredentialsEncrypted) Decode(dbuf *code.DecodeBuf) error {
	m.Setdata(dbuf.StringBytes())
	m.Sethash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerNotifySettings
//
func NewTLinputPeerNotifySettings() *TLinputPeerNotifySettings {
	return &TLinputPeerNotifySettings{}
}

// CodecEncode:inputPeerNotifySettings
func (m *TLinputPeerNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1673717362)
	var flags uint32 = 0
	if m.Getshow_previews().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getsilent().Constructor != 0 {
		flags |= 1 << 1
	}
	if m.Getmute_until() != 0 {
		flags |= 2 << 2
	}
	if m.Getsound() != "" {
		flags |= 3 << 3
	}
	x.UInt(flags)
	if m.Getshow_previews().Constructor != 0 {
		x.Bytes(m.Getshow_previews().Encode())
	}
	if m.Getsilent().Constructor != 0 {
		x.Bytes(m.Getsilent().Encode())
	}
	if m.Getmute_until() != 0 {
		x.Int(m.Getmute_until())
	}
	if m.Getsound() != "" {
		x.String(m.Getsound())
	}
	return x.Buf
}

// CodecDecode:inputPeerNotifySettings
func (m *TLinputPeerNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setshow_previews(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &Bool{}
		m1.Decode(dbuf)
		m.Setsilent(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmute_until(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsound(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatFull
//
func NewTLchatFull() *TLchatFull {
	return &TLchatFull{}
}

// CodecEncode:chatFull
func (m *TLchatFull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(461151667)
	var flags uint32 = 0
	if m.Getcan_set_username() != false {
		flags |= 7 << 0
	}
	if m.Gethas_scheduled() != false {
		flags |= 8 << 1
	}
	if m.Getchat_photo().Constructor != 0 {
		flags |= 2 << 5
	}
	if len(m.Getbot_info()) > 0 {
		flags |= 3 << 8
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 6 << 9
	}
	if m.Getfolder_id() != 0 {
		flags |= 11 << 10
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getabout())
	x.Bytes(m.Getparticipants().Encode())
	if m.Getchat_photo().Constructor != 0 {
		x.Bytes(m.Getchat_photo().Encode())
	}
	x.Bytes(m.Getnotify_settings().Encode())
	x.Bytes(m.Getexported_invite().Encode())
	if len(m.Getbot_info()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getbot_info())))
		for _, v := range m.Getbot_info() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:chatFull
func (m *TLchatFull) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_set_username(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethas_scheduled(true)
	}
	m.Setid(dbuf.Int())
	m.Setabout(dbuf.String())
	m4 := &ChatParticipants{}
	m4.Decode(dbuf)
	m.Setparticipants(m4)
	if (flags & (1 << 5)) != 0 {
		m5 := &Photo{}
		m5.Decode(dbuf)
		m.Setchat_photo(m5)
	}
	m6 := &PeerNotifySettings{}
	m6.Decode(dbuf)
	m.Setnotify_settings(m6)
	m7 := &ExportedChatInvite{}
	m7.Decode(dbuf)
	m.Setexported_invite(m7)
	if (flags & (1 << 8)) != 0 {
		c8 := dbuf.Int()
		if c8 != 481674261 {
			return dbuf.Err
		}
		l8 := dbuf.Int()
		v8 := make([]BotInfo, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = BotInfo{}
			v8[i].Decode(dbuf)
		}
		m.Setbot_info(v8)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	if (flags & (1 << 10)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelFull
//
func NewTLchannelFull() *TLchannelFull {
	return &TLchannelFull{}
}

// CodecEncode:channelFull
func (m *TLchannelFull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-253335766)
	var flags uint32 = 0
	if m.Getcan_view_participants() != false {
		flags |= 3 << 0
	}
	if m.Getcan_set_username() != false {
		flags |= 6 << 1
	}
	if m.Getcan_set_stickers() != false {
		flags |= 7 << 2
	}
	if m.Gethidden_prehistory() != false {
		flags |= 10 << 3
	}
	if m.Getcan_set_location() != false {
		flags |= 16 << 4
	}
	if m.Gethas_scheduled() != false {
		flags |= 19 << 5
	}
	if m.Getcan_view_stats() != false {
		flags |= 20 << 6
	}
	if m.Getblocked() != false {
		flags |= 22 << 7
	}
	if m.Getparticipants_count() != 0 {
		flags |= 0 << 10
	}
	if m.Getadmins_count() != 0 {
		flags |= 1 << 11
	}
	if m.Getkicked_count() != 0 {
		flags |= 2 << 12
	}
	if m.Getbanned_count() != 0 {
		flags |= 2 << 13
	}
	if m.Getonline_count() != 0 {
		flags |= 13 << 14
	}
	if m.Getmigrated_from_chat_id() != 0 {
		flags |= 4 << 22
	}
	if m.Getmigrated_from_max_id() != 0 {
		flags |= 4 << 23
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 5 << 24
	}
	if m.Getstickerset().Constructor != 0 {
		flags |= 8 << 25
	}
	if m.Getavailable_min_id() != 0 {
		flags |= 9 << 26
	}
	if m.Getfolder_id() != 0 {
		flags |= 11 << 27
	}
	if m.Getlinked_chat_id() != 0 {
		flags |= 14 << 28
	}
	if m.Getlocation().Constructor != 0 {
		flags |= 15 << 29
	}
	if m.Getslowmode_seconds() != 0 {
		flags |= 17 << 30
	}
	if m.Getslowmode_next_send_date() != 0 {
		flags |= 18 << 31
	}
	if m.Getstats_dc() != 0 {
		flags |= 12 << 32
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getabout())
	if m.Getparticipants_count() != 0 {
		x.Int(m.Getparticipants_count())
	}
	if m.Getadmins_count() != 0 {
		x.Int(m.Getadmins_count())
	}
	if m.Getkicked_count() != 0 {
		x.Int(m.Getkicked_count())
	}
	if m.Getbanned_count() != 0 {
		x.Int(m.Getbanned_count())
	}
	if m.Getonline_count() != 0 {
		x.Int(m.Getonline_count())
	}
	x.Int(m.Getread_inbox_max_id())
	x.Int(m.Getread_outbox_max_id())
	x.Int(m.Getunread_count())
	x.Bytes(m.Getchat_photo().Encode())
	x.Bytes(m.Getnotify_settings().Encode())
	x.Bytes(m.Getexported_invite().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getbot_info())))
	for _, v := range m.Getbot_info() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmigrated_from_chat_id() != 0 {
		x.Int(m.Getmigrated_from_chat_id())
	}
	if m.Getmigrated_from_max_id() != 0 {
		x.Int(m.Getmigrated_from_max_id())
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	if m.Getstickerset().Constructor != 0 {
		x.Bytes(m.Getstickerset().Encode())
	}
	if m.Getavailable_min_id() != 0 {
		x.Int(m.Getavailable_min_id())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	if m.Getlinked_chat_id() != 0 {
		x.Int(m.Getlinked_chat_id())
	}
	if m.Getlocation().Constructor != 0 {
		x.Bytes(m.Getlocation().Encode())
	}
	if m.Getslowmode_seconds() != 0 {
		x.Int(m.Getslowmode_seconds())
	}
	if m.Getslowmode_next_send_date() != 0 {
		x.Int(m.Getslowmode_next_send_date())
	}
	if m.Getstats_dc() != 0 {
		x.Int(m.Getstats_dc())
	}
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:channelFull
func (m *TLchannelFull) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_view_participants(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcan_set_username(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setcan_set_stickers(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Sethidden_prehistory(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setcan_set_location(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Sethas_scheduled(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setcan_view_stats(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setblocked(true)
	}
	m.Setid(dbuf.Int())
	m.Setabout(dbuf.String())
	if (flags & (1 << 10)) != 0 {
		m.Setparticipants_count(dbuf.Int())
	}
	if (flags & (1 << 11)) != 0 {
		m.Setadmins_count(dbuf.Int())
	}
	if (flags & (1 << 12)) != 0 {
		m.Setkicked_count(dbuf.Int())
	}
	if (flags & (1 << 13)) != 0 {
		m.Setbanned_count(dbuf.Int())
	}
	if (flags & (1 << 14)) != 0 {
		m.Setonline_count(dbuf.Int())
	}
	m.Setread_inbox_max_id(dbuf.Int())
	m.Setread_outbox_max_id(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	m18 := &Photo{}
	m18.Decode(dbuf)
	m.Setchat_photo(m18)
	m19 := &PeerNotifySettings{}
	m19.Decode(dbuf)
	m.Setnotify_settings(m19)
	m20 := &ExportedChatInvite{}
	m20.Decode(dbuf)
	m.Setexported_invite(m20)
	c21 := dbuf.Int()
	if c21 != 481674261 {
		return dbuf.Err
	}
	l21 := dbuf.Int()
	v21 := make([]BotInfo, l21)
	for i := int32(0); i < l21; i++ {
		v21[i] = BotInfo{}
		v21[i].Decode(dbuf)
	}
	m.Setbot_info(v21)
	if (flags & (1 << 22)) != 0 {
		m.Setmigrated_from_chat_id(dbuf.Int())
	}
	if (flags & (1 << 23)) != 0 {
		m.Setmigrated_from_max_id(dbuf.Int())
	}
	if (flags & (1 << 24)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	if (flags & (1 << 25)) != 0 {
		m25 := &StickerSet{}
		m25.Decode(dbuf)
		m.Setstickerset(m25)
	}
	if (flags & (1 << 26)) != 0 {
		m.Setavailable_min_id(dbuf.Int())
	}
	if (flags & (1 << 27)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	if (flags & (1 << 28)) != 0 {
		m.Setlinked_chat_id(dbuf.Int())
	}
	if (flags & (1 << 29)) != 0 {
		m29 := &ChannelLocation{}
		m29.Decode(dbuf)
		m.Setlocation(m29)
	}
	if (flags & (1 << 30)) != 0 {
		m.Setslowmode_seconds(dbuf.Int())
	}
	if (flags & (1 << 31)) != 0 {
		m.Setslowmode_next_send_date(dbuf.Int())
	}
	if (flags & (1 << 32)) != 0 {
		m.Setstats_dc(dbuf.Int())
	}
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedMessage
//
func NewTLencryptedMessage() *TLencryptedMessage {
	return &TLencryptedMessage{}
}

// CodecEncode:encryptedMessage
func (m *TLencryptedMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-317144808)
	x.Long(m.Getrandom_id())
	x.Int(m.Getchat_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getbytes())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:encryptedMessage
func (m *TLencryptedMessage) Decode(dbuf *code.DecodeBuf) error {
	m.Setrandom_id(dbuf.Long())
	m.Setchat_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	m4 := &EncryptedFile{}
	m4.Decode(dbuf)
	m.Setfile(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedMessageService
//
func NewTLencryptedMessageService() *TLencryptedMessageService {
	return &TLencryptedMessageService{}
}

// CodecEncode:encryptedMessageService
func (m *TLencryptedMessageService) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(594758406)
	x.Long(m.Getrandom_id())
	x.Int(m.Getchat_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:encryptedMessageService
func (m *TLencryptedMessageService) Decode(dbuf *code.DecodeBuf) error {
	m.Setrandom_id(dbuf.Long())
	m.Setchat_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:highScore
//
func NewTLhighScore() *TLhighScore {
	return &TLhighScore{}
}

// CodecEncode:highScore
func (m *TLhighScore) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1493171408)
	x.Int(m.Getpos())
	x.Int(m.Getuser_id())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:highScore
func (m *TLhighScore) Decode(dbuf *code.DecodeBuf) error {
	m.Setpos(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatesTooLong
//
func NewTLupdatesTooLong() *TLupdatesTooLong {
	return &TLupdatesTooLong{}
}

// CodecEncode:updatesTooLong
func (m *TLupdatesTooLong) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-484987010)
	return x.Buf
}

// CodecDecode:updatesTooLong
func (m *TLupdatesTooLong) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateShortMessage
//
func NewTLupdateShortMessage() *TLupdateShortMessage {
	return &TLupdateShortMessage{}
}

// CodecEncode:updateShortMessage
func (m *TLupdateShortMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(580309704)
	var flags uint32 = 0
	if m.Getout_key() != false {
		flags |= 1 << 0
	}
	if m.Getmentioned() != false {
		flags |= 4 << 1
	}
	if m.Getmedia_unread() != false {
		flags |= 5 << 2
	}
	if m.Getsilent() != false {
		flags |= 13 << 3
	}
	if m.Getfwd_from().Constructor != 0 {
		flags |= 2 << 10
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 11 << 11
	}
	if m.Getreply_to().Constructor != 0 {
		flags |= 3 << 12
	}
	if len(m.Getentities()) > 0 {
		flags |= 7 << 13
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getuser_id())
	x.String(m.Getmessage())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getfwd_from().Constructor != 0 {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to().Constructor != 0 {
		x.Bytes(m.Getreply_to().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortMessage
func (m *TLupdateShortMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setout_key(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsilent(true)
	}
	m.Setid(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setmessage(dbuf.String())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 10)) != 0 {
		m10 := &MessageFwdHeader{}
		m10.Decode(dbuf)
		m.Setfwd_from(m10)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 12)) != 0 {
		m12 := &MessageReplyHeader{}
		m12.Decode(dbuf)
		m.Setreply_to(m12)
	}
	if (flags & (1 << 13)) != 0 {
		c13 := dbuf.Int()
		if c13 != 481674261 {
			return dbuf.Err
		}
		l13 := dbuf.Int()
		v13 := make([]MessageEntity, l13)
		for i := int32(0); i < l13; i++ {
			v13[i] = MessageEntity{}
			v13[i].Decode(dbuf)
		}
		m.Setentities(v13)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateShortChatMessage
//
func NewTLupdateShortChatMessage() *TLupdateShortChatMessage {
	return &TLupdateShortChatMessage{}
}

// CodecEncode:updateShortChatMessage
func (m *TLupdateShortChatMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1076714939)
	var flags uint32 = 0
	if m.Getout_key() != false {
		flags |= 1 << 0
	}
	if m.Getmentioned() != false {
		flags |= 4 << 1
	}
	if m.Getmedia_unread() != false {
		flags |= 5 << 2
	}
	if m.Getsilent() != false {
		flags |= 13 << 3
	}
	if m.Getfwd_from().Constructor != 0 {
		flags |= 2 << 11
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 11 << 12
	}
	if m.Getreply_to().Constructor != 0 {
		flags |= 3 << 13
	}
	if len(m.Getentities()) > 0 {
		flags |= 7 << 14
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getfrom_id())
	x.Int(m.Getchat_id())
	x.String(m.Getmessage())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getfwd_from().Constructor != 0 {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to().Constructor != 0 {
		x.Bytes(m.Getreply_to().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortChatMessage
func (m *TLupdateShortChatMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setout_key(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsilent(true)
	}
	m.Setid(dbuf.Int())
	m.Setfrom_id(dbuf.Int())
	m.Setchat_id(dbuf.Int())
	m.Setmessage(dbuf.String())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 11)) != 0 {
		m11 := &MessageFwdHeader{}
		m11.Decode(dbuf)
		m.Setfwd_from(m11)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 13)) != 0 {
		m13 := &MessageReplyHeader{}
		m13.Decode(dbuf)
		m.Setreply_to(m13)
	}
	if (flags & (1 << 14)) != 0 {
		c14 := dbuf.Int()
		if c14 != 481674261 {
			return dbuf.Err
		}
		l14 := dbuf.Int()
		v14 := make([]MessageEntity, l14)
		for i := int32(0); i < l14; i++ {
			v14[i] = MessageEntity{}
			v14[i].Decode(dbuf)
		}
		m.Setentities(v14)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateShort
//
func NewTLupdateShort() *TLupdateShort {
	return &TLupdateShort{}
}

// CodecEncode:updateShort
func (m *TLupdateShort) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2027216577)
	x.Bytes(m.Getupdate().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateShort
func (m *TLupdateShort) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Update{}
	m0.Decode(dbuf)
	m.Setupdate(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatesCombined
//
func NewTLupdatesCombined() *TLupdatesCombined {
	return &TLupdatesCombined{}
}

// CodecEncode:updatesCombined
func (m *TLupdatesCombined) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1918567619)
	x.Int(481674261)
	x.Int(int32(len(m.Getupdates())))
	for _, v := range m.Getupdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getdate())
	x.Int(m.Getseq_start())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updatesCombined
func (m *TLupdatesCombined) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Update, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Update{}
		v0[i].Decode(dbuf)
	}
	m.Setupdates(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	m.Setdate(dbuf.Int())
	m.Setseq_start(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates
//
func NewTLupdates() *TLupdates {
	return &TLupdates{}
}

// CodecEncode:updates
func (m *TLupdates) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1957577280)
	x.Int(481674261)
	x.Int(int32(len(m.Getupdates())))
	for _, v := range m.Getupdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updates
func (m *TLupdates) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Update, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Update{}
		v0[i].Decode(dbuf)
	}
	m.Setupdates(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateShortSentMessage
//
func NewTLupdateShortSentMessage() *TLupdateShortSentMessage {
	return &TLupdateShortSentMessage{}
}

// CodecEncode:updateShortSentMessage
func (m *TLupdateShortSentMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(301019932)
	var flags uint32 = 0
	if m.Getout_key() != false {
		flags |= 1 << 0
	}
	if m.Getmedia().Constructor != 0 {
		flags |= 9 << 5
	}
	if len(m.Getentities()) > 0 {
		flags |= 7 << 6
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getmedia().Constructor != 0 {
		x.Bytes(m.Getmedia().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortSentMessage
func (m *TLupdateShortSentMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setout_key(true)
	}
	m.Setid(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 5)) != 0 {
		m5 := &MessageMedia{}
		m5.Decode(dbuf)
		m.Setmedia(m5)
	}
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]MessageEntity, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = MessageEntity{}
			v6[i].Decode(dbuf)
		}
		m.Setentities(v6)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGroupTopInviter
//
func NewTLstatsGroupTopInviter() *TLstatsGroupTopInviter {
	return &TLstatsGroupTopInviter{}
}

// CodecEncode:statsGroupTopInviter
func (m *TLstatsGroupTopInviter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(831924812)
	x.Int(m.Getuser_id())
	x.Int(m.Getinvitations())
	return x.Buf
}

// CodecDecode:statsGroupTopInviter
func (m *TLstatsGroupTopInviter) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinvitations(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:shippingOption
//
func NewTLshippingOption() *TLshippingOption {
	return &TLshippingOption{}
}

// CodecEncode:shippingOption
func (m *TLshippingOption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1239335713)
	x.String(m.Getid())
	x.String(m.Gettitle())
	x.Int(481674261)
	x.Int(int32(len(m.Getprices())))
	for _, v := range m.Getprices() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:shippingOption
func (m *TLshippingOption) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settitle(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]LabeledPrice, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = LabeledPrice{}
		v2[i].Decode(dbuf)
	}
	m.Setprices(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputSingleMedia
//
func NewTLinputSingleMedia() *TLinputSingleMedia {
	return &TLinputSingleMedia{}
}

// CodecEncode:inputSingleMedia
func (m *TLinputSingleMedia) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(482797855)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getmedia().Encode())
	x.Long(m.Getrandom_id())
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:inputSingleMedia
func (m *TLinputSingleMedia) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputMedia{}
	m0.Decode(dbuf)
	m.Setmedia(m0)
	m.Setrandom_id(dbuf.Long())
	m.Setmessage(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setentities(v3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pollAnswerVoters
//
func NewTLpollAnswerVoters() *TLpollAnswerVoters {
	return &TLpollAnswerVoters{}
}

// CodecEncode:pollAnswerVoters
func (m *TLpollAnswerVoters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(997055186)
	var flags uint32 = 0
	if m.Getchosen() != false {
		flags |= 0 << 0
	}
	if m.Getcorrect() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getoption())
	x.Int(m.Getvoters())
	return x.Buf
}

// CodecDecode:pollAnswerVoters
func (m *TLpollAnswerVoters) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchosen(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcorrect(true)
	}
	m.Setoption(dbuf.StringBytes())
	m.Setvoters(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_password
//
func NewTLaccount_password() *TLaccount_password {
	return &TLaccount_password{}
}

// CodecEncode:account_password
func (m *TLaccount_password) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1390001672)
	var flags uint32 = 0
	if m.Gethas_recovery() != false {
		flags |= 0 << 0
	}
	if m.Gethas_secure_values() != false {
		flags |= 1 << 1
	}
	if m.Gethas_password() != false {
		flags |= 2 << 2
	}
	if m.Getcurrent_algo().Constructor != 0 {
		flags |= 2 << 3
	}
	if len(m.Getsrp_B()) > 0 {
		flags |= 2 << 4
	}
	if m.Getsrp_id().Constructor != 0 {
		flags |= 2 << 5
	}
	if m.Gethint() != "" {
		flags |= 3 << 6
	}
	if m.Getemail_unconfirmed_pattern() != "" {
		flags |= 4 << 7
	}
	x.UInt(flags)
	if m.Getcurrent_algo().Constructor != 0 {
		x.Bytes(m.Getcurrent_algo().Encode())
	}
	if m.Getsrp_B() != nil {
		x.Bytes(m.Getsrp_B())
	}
	if m.Getsrp_id() != 0 {
		x.Long(m.Getsrp_id())
	}
	if m.Gethint() != "" {
		x.String(m.Gethint())
	}
	if m.Getemail_unconfirmed_pattern() != "" {
		x.String(m.Getemail_unconfirmed_pattern())
	}
	x.Bytes(m.Getnew_algo().Encode())
	x.Bytes(m.Getnew_secure_algo().Encode())
	x.Bytes(m.Getsecure_random())
	return x.Buf
}

// CodecDecode:account_password
func (m *TLaccount_password) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_recovery(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethas_secure_values(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Sethas_password(true)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &PasswordKdfAlgo{}
		m3.Decode(dbuf)
		m.Setcurrent_algo(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsrp_B(dbuf.StringBytes())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setsrp_id(dbuf.Long())
	}
	if (flags & (1 << 6)) != 0 {
		m.Sethint(dbuf.String())
	}
	if (flags & (1 << 7)) != 0 {
		m.Setemail_unconfirmed_pattern(dbuf.String())
	}
	m8 := &PasswordKdfAlgo{}
	m8.Decode(dbuf)
	m.Setnew_algo(m8)
	m9 := &SecurePasswordKdfAlgo{}
	m9.Decode(dbuf)
	m.Setnew_secure_algo(m9)
	m.Setsecure_random(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_topPeersNotModified
//
func NewTLcontacts_topPeersNotModified() *TLcontacts_topPeersNotModified {
	return &TLcontacts_topPeersNotModified{}
}

// CodecEncode:contacts_topPeersNotModified
func (m *TLcontacts_topPeersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-567906571)
	return x.Buf
}

// CodecDecode:contacts_topPeersNotModified
func (m *TLcontacts_topPeersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_topPeers
//
func NewTLcontacts_topPeers() *TLcontacts_topPeers {
	return &TLcontacts_topPeers{}
}

// CodecEncode:contacts_topPeers
func (m *TLcontacts_topPeers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1891070632)
	x.Int(481674261)
	x.Int(int32(len(m.Getcategories())))
	for _, v := range m.Getcategories() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_topPeers
func (m *TLcontacts_topPeers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]TopPeerCategoryPeers, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = TopPeerCategoryPeers{}
		v0[i].Decode(dbuf)
	}
	m.Setcategories(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_topPeersDisabled
//
func NewTLcontacts_topPeersDisabled() *TLcontacts_topPeersDisabled {
	return &TLcontacts_topPeersDisabled{}
}

// CodecEncode:contacts_topPeersDisabled
func (m *TLcontacts_topPeersDisabled) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1255369827)
	return x.Buf
}

// CodecDecode:contacts_topPeersDisabled
func (m *TLcontacts_topPeersDisabled) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userEmpty
//
func NewTLuserEmpty() *TLuserEmpty {
	return &TLuserEmpty{}
}

// CodecEncode:userEmpty
func (m *TLuserEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(537022650)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:userEmpty
func (m *TLuserEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:user
//
func NewTLuser() *TLuser {
	return &TLuser{}
}

// CodecEncode:user
func (m *TLuser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1820043071)
	var flags uint32 = 0
	if m.Getself() != false {
		flags |= 10 << 0
	}
	if m.Getcontact() != false {
		flags |= 11 << 1
	}
	if m.Getmutual_contact() != false {
		flags |= 12 << 2
	}
	if m.Getdeleted() != false {
		flags |= 13 << 3
	}
	if m.Getbot() != false {
		flags |= 14 << 4
	}
	if m.Getbot_chat_history() != false {
		flags |= 15 << 5
	}
	if m.Getbot_nochats() != false {
		flags |= 16 << 6
	}
	if m.Getverified() != false {
		flags |= 17 << 7
	}
	if m.Getrestricted() != false {
		flags |= 18 << 8
	}
	if m.Getmin() != false {
		flags |= 20 << 9
	}
	if m.Getbot_inline_geo() != false {
		flags |= 21 << 10
	}
	if m.Getsupport() != false {
		flags |= 23 << 11
	}
	if m.Getscam() != false {
		flags |= 24 << 12
	}
	if m.Getapply_min_photo() != false {
		flags |= 25 << 13
	}
	if m.Getaccess_hash().Constructor != 0 {
		flags |= 0 << 15
	}
	if m.Getfirst_name() != "" {
		flags |= 1 << 16
	}
	if m.Getlast_name() != "" {
		flags |= 2 << 17
	}
	if m.Getusername() != "" {
		flags |= 3 << 18
	}
	if m.Getphone() != "" {
		flags |= 4 << 19
	}
	if m.Getphoto().Constructor != 0 {
		flags |= 5 << 20
	}
	if m.Getstatus().Constructor != 0 {
		flags |= 6 << 21
	}
	if m.Getbot_info_version() != 0 {
		flags |= 14 << 22
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 18 << 23
	}
	if m.Getbot_inline_placeholder() != "" {
		flags |= 19 << 24
	}
	if m.Getlang_code() != "" {
		flags |= 22 << 25
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getaccess_hash() != 0 {
		x.Long(m.Getaccess_hash())
	}
	if m.Getfirst_name() != "" {
		x.String(m.Getfirst_name())
	}
	if m.Getlast_name() != "" {
		x.String(m.Getlast_name())
	}
	if m.Getusername() != "" {
		x.String(m.Getusername())
	}
	if m.Getphone() != "" {
		x.String(m.Getphone())
	}
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getstatus().Constructor != 0 {
		x.Bytes(m.Getstatus().Encode())
	}
	if m.Getbot_info_version() != 0 {
		x.Int(m.Getbot_info_version())
	}
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getbot_inline_placeholder() != "" {
		x.String(m.Getbot_inline_placeholder())
	}
	if m.Getlang_code() != "" {
		x.String(m.Getlang_code())
	}
	return x.Buf
}

// CodecDecode:user
func (m *TLuser) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setself(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcontact(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmutual_contact(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdeleted(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setbot(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setbot_chat_history(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbot_nochats(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setverified(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setrestricted(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setbot_inline_geo(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setsupport(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setscam(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setapply_min_photo(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 15)) != 0 {
		m.Setaccess_hash(dbuf.Long())
	}
	if (flags & (1 << 16)) != 0 {
		m.Setfirst_name(dbuf.String())
	}
	if (flags & (1 << 17)) != 0 {
		m.Setlast_name(dbuf.String())
	}
	if (flags & (1 << 18)) != 0 {
		m.Setusername(dbuf.String())
	}
	if (flags & (1 << 19)) != 0 {
		m.Setphone(dbuf.String())
	}
	if (flags & (1 << 20)) != 0 {
		m20 := &UserProfilePhoto{}
		m20.Decode(dbuf)
		m.Setphoto(m20)
	}
	if (flags & (1 << 21)) != 0 {
		m21 := &UserStatus{}
		m21.Decode(dbuf)
		m.Setstatus(m21)
	}
	if (flags & (1 << 22)) != 0 {
		m.Setbot_info_version(dbuf.Int())
	}
	if (flags & (1 << 23)) != 0 {
		c23 := dbuf.Int()
		if c23 != 481674261 {
			return dbuf.Err
		}
		l23 := dbuf.Int()
		v23 := make([]RestrictionReason, l23)
		for i := int32(0); i < l23; i++ {
			v23[i] = RestrictionReason{}
			v23[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v23)
	}
	if (flags & (1 << 24)) != 0 {
		m.Setbot_inline_placeholder(dbuf.String())
	}
	if (flags & (1 << 25)) != 0 {
		m.Setlang_code(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_votesList
//
func NewTLmessages_votesList() *TLmessages_votesList {
	return &TLmessages_votesList{}
}

// CodecEncode:messages_votesList
func (m *TLmessages_votesList) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(136574537)
	var flags uint32 = 0
	if m.Getnext_offset() != "" {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getvotes())))
	for _, v := range m.Getvotes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	return x.Buf
}

// CodecDecode:messages_votesList
func (m *TLmessages_votesList) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]MessageUserVote, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = MessageUserVote{}
		v1[i].Decode(dbuf)
	}
	m.Setvotes(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	if (flags & (1 << 3)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_dialogs
//
func NewTLmessages_dialogs() *TLmessages_dialogs {
	return &TLmessages_dialogs{}
}

// CodecEncode:messages_dialogs
func (m *TLmessages_dialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(364538944)
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_dialogs
func (m *TLmessages_dialogs) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Dialog, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Dialog{}
		v0[i].Decode(dbuf)
	}
	m.Setdialogs(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Message, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Message{}
		v1[i].Decode(dbuf)
	}
	m.Setmessages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_dialogsSlice
//
func NewTLmessages_dialogsSlice() *TLmessages_dialogsSlice {
	return &TLmessages_dialogsSlice{}
}

// CodecEncode:messages_dialogsSlice
func (m *TLmessages_dialogsSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1910543603)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_dialogsSlice
func (m *TLmessages_dialogsSlice) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Dialog, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Dialog{}
		v1[i].Decode(dbuf)
	}
	m.Setdialogs(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Message, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Message{}
		v2[i].Decode(dbuf)
	}
	m.Setmessages(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_dialogsNotModified
//
func NewTLmessages_dialogsNotModified() *TLmessages_dialogsNotModified {
	return &TLmessages_dialogsNotModified{}
}

// CodecEncode:messages_dialogsNotModified
func (m *TLmessages_dialogsNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-253500010)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_dialogsNotModified
func (m *TLmessages_dialogsNotModified) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerUser
//
func NewTLpeerUser() *TLpeerUser {
	return &TLpeerUser{}
}

// CodecEncode:peerUser
func (m *TLpeerUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1649296275)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:peerUser
func (m *TLpeerUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerChat
//
func NewTLpeerChat() *TLpeerChat {
	return &TLpeerChat{}
}

// CodecEncode:peerChat
func (m *TLpeerChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1160714821)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:peerChat
func (m *TLpeerChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerChannel
//
func NewTLpeerChannel() *TLpeerChannel {
	return &TLpeerChannel{}
}

// CodecEncode:peerChannel
func (m *TLpeerChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1109531342)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:peerChannel
func (m *TLpeerChannel) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_botCallbackAnswer
//
func NewTLmessages_botCallbackAnswer() *TLmessages_botCallbackAnswer {
	return &TLmessages_botCallbackAnswer{}
}

// CodecEncode:messages_botCallbackAnswer
func (m *TLmessages_botCallbackAnswer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(911761060)
	var flags uint32 = 0
	if m.Getalert() != false {
		flags |= 1 << 0
	}
	if m.Gethas_url() != false {
		flags |= 3 << 1
	}
	if m.Getnative_ui() != false {
		flags |= 4 << 2
	}
	if m.Getmessage() != "" {
		flags |= 0 << 3
	}
	if m.Geturl() != "" {
		flags |= 2 << 4
	}
	x.UInt(flags)
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	x.Int(m.Getcache_time())
	return x.Buf
}

// CodecDecode:messages_botCallbackAnswer
func (m *TLmessages_botCallbackAnswer) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setalert(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethas_url(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setnative_ui(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Seturl(dbuf.String())
	}
	m.Setcache_time(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerNotifySettings
//
func NewTLpeerNotifySettings() *TLpeerNotifySettings {
	return &TLpeerNotifySettings{}
}

// CodecEncode:peerNotifySettings
func (m *TLpeerNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1353671392)
	var flags uint32 = 0
	if m.Getshow_previews().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getsilent().Constructor != 0 {
		flags |= 1 << 1
	}
	if m.Getmute_until() != 0 {
		flags |= 2 << 2
	}
	if m.Getsound() != "" {
		flags |= 3 << 3
	}
	x.UInt(flags)
	if m.Getshow_previews().Constructor != 0 {
		x.Bytes(m.Getshow_previews().Encode())
	}
	if m.Getsilent().Constructor != 0 {
		x.Bytes(m.Getsilent().Encode())
	}
	if m.Getmute_until() != 0 {
		x.Int(m.Getmute_until())
	}
	if m.Getsound() != "" {
		x.String(m.Getsound())
	}
	return x.Buf
}

// CodecDecode:peerNotifySettings
func (m *TLpeerNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setshow_previews(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &Bool{}
		m1.Decode(dbuf)
		m.Setsilent(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmute_until(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsound(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetItem
//
func NewTLinputStickerSetItem() *TLinputStickerSetItem {
	return &TLinputStickerSetItem{}
}

// CodecEncode:inputStickerSetItem
func (m *TLinputStickerSetItem) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-6249322)
	var flags uint32 = 0
	if m.Getmask_coords().Constructor != 0 {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getdocument().Encode())
	x.String(m.Getemoji())
	if m.Getmask_coords().Constructor != 0 {
		x.Bytes(m.Getmask_coords().Encode())
	}
	return x.Buf
}

// CodecDecode:inputStickerSetItem
func (m *TLinputStickerSetItem) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setdocument(m0)
	m.Setemoji(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &MaskCoords{}
		m2.Decode(dbuf)
		m.Setmask_coords(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatParticipantsForbidden
//
func NewTLchatParticipantsForbidden() *TLchatParticipantsForbidden {
	return &TLchatParticipantsForbidden{}
}

// CodecEncode:chatParticipantsForbidden
func (m *TLchatParticipantsForbidden) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-57668565)
	var flags uint32 = 0
	if m.Getself_participant().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getchat_id())
	if m.Getself_participant().Constructor != 0 {
		x.Bytes(m.Getself_participant().Encode())
	}
	return x.Buf
}

// CodecDecode:chatParticipantsForbidden
func (m *TLchatParticipantsForbidden) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchat_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m1 := &ChatParticipant{}
		m1.Decode(dbuf)
		m.Setself_participant(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatParticipants
//
func NewTLchatParticipants() *TLchatParticipants {
	return &TLchatParticipants{}
}

// CodecEncode:chatParticipants
func (m *TLchatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1061556205)
	x.Int(m.Getchat_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getparticipants())))
	for _, v := range m.Getparticipants() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:chatParticipants
func (m *TLchatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]ChatParticipant, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = ChatParticipant{}
		v1[i].Decode(dbuf)
	}
	m.Setparticipants(v1)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputThemeSettings
//
func NewTLinputThemeSettings() *TLinputThemeSettings {
	return &TLinputThemeSettings{}
}

// CodecEncode:inputThemeSettings
func (m *TLinputThemeSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1118798639)
	var flags uint32 = 0
	if m.Getmessage_top_color() != 0 {
		flags |= 0 << 2
	}
	if m.Getmessage_bottom_color() != 0 {
		flags |= 0 << 3
	}
	if m.Getwallpaper().Constructor != 0 {
		flags |= 1 << 4
	}
	if m.Getwallpaper_settings().Constructor != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Bytes(m.Getbase_theme().Encode())
	x.Int(m.Getaccent_color())
	if m.Getmessage_top_color() != 0 {
		x.Int(m.Getmessage_top_color())
	}
	if m.Getmessage_bottom_color() != 0 {
		x.Int(m.Getmessage_bottom_color())
	}
	if m.Getwallpaper().Constructor != 0 {
		x.Bytes(m.Getwallpaper().Encode())
	}
	if m.Getwallpaper_settings().Constructor != 0 {
		x.Bytes(m.Getwallpaper_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:inputThemeSettings
func (m *TLinputThemeSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &BaseTheme{}
	m0.Decode(dbuf)
	m.Setbase_theme(m0)
	m.Setaccent_color(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setmessage_top_color(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmessage_bottom_color(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &InputWallPaper{}
		m4.Decode(dbuf)
		m.Setwallpaper(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &WallPaperSettings{}
		m5.Decode(dbuf)
		m.Setwallpaper_settings(m5)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsPercentValue
//
func NewTLstatsPercentValue() *TLstatsPercentValue {
	return &TLstatsPercentValue{}
}

// CodecEncode:statsPercentValue
func (m *TLstatsPercentValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-875679776)
	x.Bytes(m.Getpart().Encode())
	x.Bytes(m.Gettotal().Encode())
	return x.Buf
}

// CodecDecode:statsPercentValue
func (m *TLstatsPercentValue) Decode(dbuf *code.DecodeBuf) error {
	m.Setpart(dbuf.Double())
	m.Settotal(dbuf.Double())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_authorization
//
func NewTLauth_authorization() *TLauth_authorization {
	return &TLauth_authorization{}
}

// CodecEncode:auth_authorization
func (m *TLauth_authorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-855308010)
	var flags uint32 = 0
	if m.Gettmp_sessions() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Gettmp_sessions() != 0 {
		x.Int(m.Gettmp_sessions())
	}
	x.Bytes(m.Getuser().Encode())
	return x.Buf
}

// CodecDecode:auth_authorization
func (m *TLauth_authorization) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Settmp_sessions(dbuf.Int())
	}
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setuser(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_authorizationSignUpRequired
//
func NewTLauth_authorizationSignUpRequired() *TLauth_authorizationSignUpRequired {
	return &TLauth_authorizationSignUpRequired{}
}

// CodecEncode:auth_authorizationSignUpRequired
func (m *TLauth_authorizationSignUpRequired) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1148485274)
	var flags uint32 = 0
	if m.Getterms_of_service().Constructor != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getterms_of_service().Constructor != 0 {
		x.Bytes(m.Getterms_of_service().Encode())
	}
	return x.Buf
}

// CodecDecode:auth_authorizationSignUpRequired
func (m *TLauth_authorizationSignUpRequired) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Help_TermsOfService{}
		m0.Decode(dbuf)
		m.Setterms_of_service(m0)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneConnection
//
func NewTLphoneConnection() *TLphoneConnection {
	return &TLphoneConnection{}
}

// CodecEncode:phoneConnection
func (m *TLphoneConnection) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1655957568)
	x.Long(m.Getid())
	x.String(m.Getip())
	x.String(m.Getipv6())
	x.Int(m.Getport())
	x.Bytes(m.Getpeer_tag())
	return x.Buf
}

// CodecDecode:phoneConnection
func (m *TLphoneConnection) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setip(dbuf.String())
	m.Setipv6(dbuf.String())
	m.Setport(dbuf.Int())
	m.Setpeer_tag(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneConnectionWebrtc
//
func NewTLphoneConnectionWebrtc() *TLphoneConnectionWebrtc {
	return &TLphoneConnectionWebrtc{}
}

// CodecEncode:phoneConnectionWebrtc
func (m *TLphoneConnectionWebrtc) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1667228533)
	var flags uint32 = 0
	if m.Getturn() != false {
		flags |= 0 << 0
	}
	if m.Getstun() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Getip())
	x.String(m.Getipv6())
	x.Int(m.Getport())
	x.String(m.Getusername())
	x.String(m.Getpassword())
	return x.Buf
}

// CodecDecode:phoneConnectionWebrtc
func (m *TLphoneConnectionWebrtc) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setturn(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setstun(true)
	}
	m.Setid(dbuf.Long())
	m.Setip(dbuf.String())
	m.Setipv6(dbuf.String())
	m.Setport(dbuf.Int())
	m.Setusername(dbuf.String())
	m.Setpassword(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputClientProxy
//
func NewTLinputClientProxy() *TLinputClientProxy {
	return &TLinputClientProxy{}
}

// CodecEncode:inputClientProxy
func (m *TLinputClientProxy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1968737087)
	x.String(m.Getaddress())
	x.Int(m.Getport())
	return x.Buf
}

// CodecDecode:inputClientProxy
func (m *TLinputClientProxy) Decode(dbuf *code.DecodeBuf) error {
	m.Setaddress(dbuf.String())
	m.Setport(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:fileHash
//
func NewTLfileHash() *TLfileHash {
	return &TLfileHash{}
}

// CodecEncode:fileHash
func (m *TLfileHash) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1648543603)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:fileHash
func (m *TLfileHash) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputNotifyPeer
//
func NewTLinputNotifyPeer() *TLinputNotifyPeer {
	return &TLinputNotifyPeer{}
}

// CodecEncode:inputNotifyPeer
func (m *TLinputNotifyPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1195615476)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:inputNotifyPeer
func (m *TLinputNotifyPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputNotifyUsers
//
func NewTLinputNotifyUsers() *TLinputNotifyUsers {
	return &TLinputNotifyUsers{}
}

// CodecEncode:inputNotifyUsers
func (m *TLinputNotifyUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(423314455)
	return x.Buf
}

// CodecDecode:inputNotifyUsers
func (m *TLinputNotifyUsers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputNotifyChats
//
func NewTLinputNotifyChats() *TLinputNotifyChats {
	return &TLinputNotifyChats{}
}

// CodecEncode:inputNotifyChats
func (m *TLinputNotifyChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1251338318)
	return x.Buf
}

// CodecDecode:inputNotifyChats
func (m *TLinputNotifyChats) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputNotifyBroadcasts
//
func NewTLinputNotifyBroadcasts() *TLinputNotifyBroadcasts {
	return &TLinputNotifyBroadcasts{}
}

// CodecEncode:inputNotifyBroadcasts
func (m *TLinputNotifyBroadcasts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1311015810)
	return x.Buf
}

// CodecDecode:inputNotifyBroadcasts
func (m *TLinputNotifyBroadcasts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeer
//
func NewTLtopPeer() *TLtopPeer {
	return &TLtopPeer{}
}

// CodecEncode:topPeer
func (m *TLtopPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-305282981)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getrating().Encode())
	return x.Buf
}

// CodecDecode:topPeer
func (m *TLtopPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setrating(dbuf.Double())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:recentMeUrlUnknown
//
func NewTLrecentMeUrlUnknown() *TLrecentMeUrlUnknown {
	return &TLrecentMeUrlUnknown{}
}

// CodecEncode:recentMeUrlUnknown
func (m *TLrecentMeUrlUnknown) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1189204285)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:recentMeUrlUnknown
func (m *TLrecentMeUrlUnknown) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:recentMeUrlUser
//
func NewTLrecentMeUrlUser() *TLrecentMeUrlUser {
	return &TLrecentMeUrlUser{}
}

// CodecEncode:recentMeUrlUser
func (m *TLrecentMeUrlUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1917045962)
	x.String(m.Geturl())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:recentMeUrlUser
func (m *TLrecentMeUrlUser) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:recentMeUrlChat
//
func NewTLrecentMeUrlChat() *TLrecentMeUrlChat {
	return &TLrecentMeUrlChat{}
}

// CodecEncode:recentMeUrlChat
func (m *TLrecentMeUrlChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1608834311)
	x.String(m.Geturl())
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:recentMeUrlChat
func (m *TLrecentMeUrlChat) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:recentMeUrlChatInvite
//
func NewTLrecentMeUrlChatInvite() *TLrecentMeUrlChatInvite {
	return &TLrecentMeUrlChatInvite{}
}

// CodecEncode:recentMeUrlChatInvite
func (m *TLrecentMeUrlChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-347535331)
	x.String(m.Geturl())
	x.Bytes(m.Getchat_invite().Encode())
	return x.Buf
}

// CodecDecode:recentMeUrlChatInvite
func (m *TLrecentMeUrlChatInvite) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m1 := &ChatInvite{}
	m1.Decode(dbuf)
	m.Setchat_invite(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:recentMeUrlStickerSet
//
func NewTLrecentMeUrlStickerSet() *TLrecentMeUrlStickerSet {
	return &TLrecentMeUrlStickerSet{}
}

// CodecEncode:recentMeUrlStickerSet
func (m *TLrecentMeUrlStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1140172836)
	x.String(m.Geturl())
	x.Bytes(m.Getset().Encode())
	return x.Buf
}

// CodecDecode:recentMeUrlStickerSet
func (m *TLrecentMeUrlStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m1 := &StickerSetCovered{}
	m1.Decode(dbuf)
	m.Setset(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:paymentRequestedInfo
//
func NewTLpaymentRequestedInfo() *TLpaymentRequestedInfo {
	return &TLpaymentRequestedInfo{}
}

// CodecEncode:paymentRequestedInfo
func (m *TLpaymentRequestedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1868808300)
	var flags uint32 = 0
	if m.Getname() != "" {
		flags |= 0 << 0
	}
	if m.Getphone() != "" {
		flags |= 1 << 1
	}
	if m.Getemail() != "" {
		flags |= 2 << 2
	}
	if m.Getshipping_address().Constructor != 0 {
		flags |= 3 << 3
	}
	x.UInt(flags)
	if m.Getname() != "" {
		x.String(m.Getname())
	}
	if m.Getphone() != "" {
		x.String(m.Getphone())
	}
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getshipping_address().Constructor != 0 {
		x.Bytes(m.Getshipping_address().Encode())
	}
	return x.Buf
}

// CodecDecode:paymentRequestedInfo
func (m *TLpaymentRequestedInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setname(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setphone(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &PostAddress{}
		m3.Decode(dbuf)
		m.Setshipping_address(m3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGroupTopPoster
//
func NewTLstatsGroupTopPoster() *TLstatsGroupTopPoster {
	return &TLstatsGroupTopPoster{}
}

// CodecEncode:statsGroupTopPoster
func (m *TLstatsGroupTopPoster) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(418631927)
	x.Int(m.Getuser_id())
	x.Int(m.Getmessages())
	x.Int(m.Getavg_chars())
	return x.Buf
}

// CodecDecode:statsGroupTopPoster
func (m *TLstatsGroupTopPoster) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setmessages(dbuf.Int())
	m.Setavg_chars(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:nearestDc
//
func NewTLnearestDc() *TLnearestDc {
	return &TLnearestDc{}
}

// CodecEncode:nearestDc
func (m *TLnearestDc) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1910892683)
	x.String(m.Getcountry())
	x.Int(m.Getthis_dc())
	x.Int(m.Getnearest_dc())
	return x.Buf
}

// CodecDecode:nearestDc
func (m *TLnearestDc) Decode(dbuf *code.DecodeBuf) error {
	m.Setcountry(dbuf.String())
	m.Setthis_dc(dbuf.Int())
	m.Setnearest_dc(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:labeledPrice
//
func NewTLlabeledPrice() *TLlabeledPrice {
	return &TLlabeledPrice{}
}

// CodecEncode:labeledPrice
func (m *TLlabeledPrice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-886477832)
	x.String(m.Getlabel())
	x.Long(m.Getamount())
	return x.Buf
}

// CodecDecode:labeledPrice
func (m *TLlabeledPrice) Decode(dbuf *code.DecodeBuf) error {
	m.Setlabel(dbuf.String())
	m.Setamount(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:passwordKdfAlgoUnknown
//
func NewTLpasswordKdfAlgoUnknown() *TLpasswordKdfAlgoUnknown {
	return &TLpasswordKdfAlgoUnknown{}
}

// CodecEncode:passwordKdfAlgoUnknown
func (m *TLpasswordKdfAlgoUnknown) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-732254058)
	return x.Buf
}

// CodecDecode:passwordKdfAlgoUnknown
func (m *TLpasswordKdfAlgoUnknown) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
//
func NewTLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow() *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow {
	return &TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{}
}

// CodecEncode:passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(982592842)
	x.Bytes(m.Getsalt1())
	x.Bytes(m.Getsalt2())
	x.Int(m.Getg())
	x.Bytes(m.Getp())
	return x.Buf
}

// CodecDecode:passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Decode(dbuf *code.DecodeBuf) error {
	m.Setsalt1(dbuf.StringBytes())
	m.Setsalt2(dbuf.StringBytes())
	m.Setg(dbuf.Int())
	m.Setp(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoEmpty
//
func NewTLphotoEmpty() *TLphotoEmpty {
	return &TLphotoEmpty{}
}

// CodecEncode:photoEmpty
func (m *TLphotoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(590459437)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:photoEmpty
func (m *TLphotoEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photo
//
func NewTLphoto() *TLphoto {
	return &TLphoto{}
}

// CodecEncode:photo
func (m *TLphoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-82216347)
	var flags uint32 = 0
	if m.Gethas_stickers() != false {
		flags |= 0 << 0
	}
	if len(m.Getvideo_sizes()) > 0 {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Int(m.Getdate())
	x.Int(481674261)
	x.Int(int32(len(m.Getsizes())))
	for _, v := range m.Getsizes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if len(m.Getvideo_sizes()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getvideo_sizes())))
		for _, v := range m.Getvideo_sizes() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:photo
func (m *TLphoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_stickers(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]PhotoSize, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = PhotoSize{}
		v5[i].Decode(dbuf)
	}
	m.Setsizes(v5)
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]VideoSize, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = VideoSize{}
			v6[i].Decode(dbuf)
		}
		m.Setvideo_sizes(v6)
	}
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageID
//
func NewTLinputBotInlineMessageID() *TLinputBotInlineMessageID {
	return &TLinputBotInlineMessageID{}
}

// CodecEncode:inputBotInlineMessageID
func (m *TLinputBotInlineMessageID) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1995686519)
	x.Int(m.Getdc_id())
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputBotInlineMessageID
func (m *TLinputBotInlineMessageID) Decode(dbuf *code.DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userFull
//
func NewTLuserFull() *TLuserFull {
	return &TLuserFull{}
}

// CodecEncode:userFull
func (m *TLuserFull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-302941166)
	var flags uint32 = 0
	if m.Getblocked() != false {
		flags |= 0 << 0
	}
	if m.Getphone_calls_available() != false {
		flags |= 4 << 1
	}
	if m.Getphone_calls_private() != false {
		flags |= 5 << 2
	}
	if m.Getcan_pin_message() != false {
		flags |= 7 << 3
	}
	if m.Gethas_scheduled() != false {
		flags |= 12 << 4
	}
	if m.Getvideo_calls_available() != false {
		flags |= 13 << 5
	}
	if m.Getabout() != "" {
		flags |= 1 << 7
	}
	if m.Getprofile_photo().Constructor != 0 {
		flags |= 2 << 9
	}
	if m.Getbot_info().Constructor != 0 {
		flags |= 3 << 11
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 6 << 12
	}
	if m.Getfolder_id() != 0 {
		flags |= 11 << 14
	}
	x.UInt(flags)
	x.Bytes(m.Getuser().Encode())
	if m.Getabout() != "" {
		x.String(m.Getabout())
	}
	x.Bytes(m.Getsettings().Encode())
	if m.Getprofile_photo().Constructor != 0 {
		x.Bytes(m.Getprofile_photo().Encode())
	}
	x.Bytes(m.Getnotify_settings().Encode())
	if m.Getbot_info().Constructor != 0 {
		x.Bytes(m.Getbot_info().Encode())
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	x.Int(m.Getcommon_chats_count())
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:userFull
func (m *TLuserFull) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setblocked(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setphone_calls_available(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setphone_calls_private(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setcan_pin_message(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Sethas_scheduled(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setvideo_calls_available(true)
	}
	m6 := &User{}
	m6.Decode(dbuf)
	m.Setuser(m6)
	if (flags & (1 << 7)) != 0 {
		m.Setabout(dbuf.String())
	}
	m8 := &PeerSettings{}
	m8.Decode(dbuf)
	m.Setsettings(m8)
	if (flags & (1 << 9)) != 0 {
		m9 := &Photo{}
		m9.Decode(dbuf)
		m.Setprofile_photo(m9)
	}
	m10 := &PeerNotifySettings{}
	m10.Decode(dbuf)
	m.Setnotify_settings(m10)
	if (flags & (1 << 11)) != 0 {
		m11 := &BotInfo{}
		m11.Decode(dbuf)
		m.Setbot_info(m11)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	m.Setcommon_chats_count(dbuf.Int())
	if (flags & (1 << 14)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:cdnPublicKey
//
func NewTLcdnPublicKey() *TLcdnPublicKey {
	return &TLcdnPublicKey{}
}

// CodecEncode:cdnPublicKey
func (m *TLcdnPublicKey) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-914167110)
	x.Int(m.Getdc_id())
	x.String(m.Getpublic_key())
	return x.Buf
}

// CodecDecode:cdnPublicKey
func (m *TLcdnPublicKey) Decode(dbuf *code.DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setpublic_key(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botCommand
//
func NewTLbotCommand() *TLbotCommand {
	return &TLbotCommand{}
}

// CodecEncode:botCommand
func (m *TLbotCommand) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1032140601)
	x.String(m.Getcommand())
	x.String(m.Getdescription())
	return x.Buf
}

// CodecDecode:botCommand
func (m *TLbotCommand) Decode(dbuf *code.DecodeBuf) error {
	m.Setcommand(dbuf.String())
	m.Setdescription(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stickerSet
//
func NewTLstickerSet() *TLstickerSet {
	return &TLstickerSet{}
}

// CodecEncode:stickerSet
func (m *TLstickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-290164953)
	var flags uint32 = 0
	if m.Getarchived() != false {
		flags |= 1 << 0
	}
	if m.Getofficial() != false {
		flags |= 2 << 1
	}
	if m.Getmasks() != false {
		flags |= 3 << 2
	}
	if m.Getanimated() != false {
		flags |= 5 << 3
	}
	if m.Getinstalled_date() != 0 {
		flags |= 0 << 4
	}
	if m.Getthumb().Constructor != 0 {
		flags |= 4 << 9
	}
	if m.Getthumb_dc_id() != 0 {
		flags |= 4 << 10
	}
	x.UInt(flags)
	if m.Getinstalled_date() != 0 {
		x.Int(m.Getinstalled_date())
	}
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Gettitle())
	x.String(m.Getshort_name())
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getthumb_dc_id() != 0 {
		x.Int(m.Getthumb_dc_id())
	}
	x.Int(m.Getcount())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:stickerSet
func (m *TLstickerSet) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setarchived(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setofficial(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmasks(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setanimated(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setinstalled_date(dbuf.Int())
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Settitle(dbuf.String())
	m.Setshort_name(dbuf.String())
	if (flags & (1 << 9)) != 0 {
		m9 := &PhotoSize{}
		m9.Decode(dbuf)
		m.Setthumb(m9)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setthumb_dc_id(dbuf.Int())
	}
	m.Setcount(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChatPhotoEmpty
//
func NewTLinputChatPhotoEmpty() *TLinputChatPhotoEmpty {
	return &TLinputChatPhotoEmpty{}
}

// CodecEncode:inputChatPhotoEmpty
func (m *TLinputChatPhotoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(480546647)
	return x.Buf
}

// CodecDecode:inputChatPhotoEmpty
func (m *TLinputChatPhotoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChatUploadedPhoto
//
func NewTLinputChatUploadedPhoto() *TLinputChatUploadedPhoto {
	return &TLinputChatUploadedPhoto{}
}

// CodecEncode:inputChatUploadedPhoto
func (m *TLinputChatUploadedPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-968723890)
	var flags uint32 = 0
	if m.Getfile().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getvideo().Constructor != 0 {
		flags |= 1 << 1
	}
	if m.Getvideo_start_ts().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	if m.Getfile().Constructor != 0 {
		x.Bytes(m.Getfile().Encode())
	}
	if m.Getvideo().Constructor != 0 {
		x.Bytes(m.Getvideo().Encode())
	}
	if m.Getvideo_start_ts().Constructor != 0 {
		x.Bytes(m.Getvideo_start_ts().Encode())
	}
	return x.Buf
}

// CodecDecode:inputChatUploadedPhoto
func (m *TLinputChatUploadedPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &InputFile{}
		m0.Decode(dbuf)
		m.Setfile(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setvideo(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputChatPhoto
//
func NewTLinputChatPhoto() *TLinputChatPhoto {
	return &TLinputChatPhoto{}
}

// CodecEncode:inputChatPhoto
func (m *TLinputChatPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1991004873)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:inputChatPhoto
func (m *TLinputChatPhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureRequiredType
//
func NewTLsecureRequiredType() *TLsecureRequiredType {
	return &TLsecureRequiredType{}
}

// CodecEncode:secureRequiredType
func (m *TLsecureRequiredType) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2103600678)
	var flags uint32 = 0
	if m.Getnative_names() != false {
		flags |= 0 << 0
	}
	if m.Getselfie_required() != false {
		flags |= 1 << 1
	}
	if m.Gettranslation_required() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Gettype().Encode())
	return x.Buf
}

// CodecDecode:secureRequiredType
func (m *TLsecureRequiredType) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setnative_names(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setselfie_required(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settranslation_required(true)
	}
	m3 := &SecureValueType{}
	m3.Decode(dbuf)
	m.Settype(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureRequiredTypeOneOf
//
func NewTLsecureRequiredTypeOneOf() *TLsecureRequiredTypeOneOf {
	return &TLsecureRequiredTypeOneOf{}
}

// CodecEncode:secureRequiredTypeOneOf
func (m *TLsecureRequiredTypeOneOf) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(41187252)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:secureRequiredTypeOneOf
func (m *TLsecureRequiredTypeOneOf) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureRequiredType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureRequiredType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:wallPaperSettings
//
func NewTLwallPaperSettings() *TLwallPaperSettings {
	return &TLwallPaperSettings{}
}

// CodecEncode:wallPaperSettings
func (m *TLwallPaperSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(84438264)
	var flags uint32 = 0
	if m.Getblur() != false {
		flags |= 1 << 0
	}
	if m.Getmotion() != false {
		flags |= 2 << 1
	}
	if m.Getbackground_color() != 0 {
		flags |= 0 << 2
	}
	if m.Getsecond_background_color() != 0 {
		flags |= 4 << 3
	}
	if m.Getintensity() != 0 {
		flags |= 3 << 4
	}
	if m.Getrotation() != 0 {
		flags |= 4 << 5
	}
	x.UInt(flags)
	if m.Getbackground_color() != 0 {
		x.Int(m.Getbackground_color())
	}
	if m.Getsecond_background_color() != 0 {
		x.Int(m.Getsecond_background_color())
	}
	if m.Getintensity() != 0 {
		x.Int(m.Getintensity())
	}
	if m.Getrotation() != 0 {
		x.Int(m.Getrotation())
	}
	return x.Buf
}

// CodecDecode:wallPaperSettings
func (m *TLwallPaperSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setblur(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmotion(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbackground_color(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsecond_background_color(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setintensity(dbuf.Int())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setrotation(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageUserVote
//
func NewTLmessageUserVote() *TLmessageUserVote {
	return &TLmessageUserVote{}
}

// CodecEncode:messageUserVote
func (m *TLmessageUserVote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1567730343)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getoption())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVote
func (m *TLmessageUserVote) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setoption(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageUserVoteInputOption
//
func NewTLmessageUserVoteInputOption() *TLmessageUserVoteInputOption {
	return &TLmessageUserVoteInputOption{}
}

// CodecEncode:messageUserVoteInputOption
func (m *TLmessageUserVoteInputOption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(909603888)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVoteInputOption
func (m *TLmessageUserVoteInputOption) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageUserVoteMultiple
//
func NewTLmessageUserVoteMultiple() *TLmessageUserVoteMultiple {
	return &TLmessageUserVoteMultiple{}
}

// CodecEncode:messageUserVoteMultiple
func (m *TLmessageUserVoteMultiple) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(244310238)
	x.Int(m.Getuser_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVoteMultiple
func (m *TLmessageUserVoteMultiple) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i].Bytes(dbuf)
	}
	m.Setoptions(v1)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_sentEncryptedMessage
//
func NewTLmessages_sentEncryptedMessage() *TLmessages_sentEncryptedMessage {
	return &TLmessages_sentEncryptedMessage{}
}

// CodecEncode:messages_sentEncryptedMessage
func (m *TLmessages_sentEncryptedMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1443858741)
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messages_sentEncryptedMessage
func (m *TLmessages_sentEncryptedMessage) Decode(dbuf *code.DecodeBuf) error {
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_sentEncryptedFile
//
func NewTLmessages_sentEncryptedFile() *TLmessages_sentEncryptedFile {
	return &TLmessages_sentEncryptedFile{}
}

// CodecEncode:messages_sentEncryptedFile
func (m *TLmessages_sentEncryptedFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1802240206)
	x.Int(m.Getdate())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_sentEncryptedFile
func (m *TLmessages_sentEncryptedFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setdate(dbuf.Int())
	m1 := &EncryptedFile{}
	m1.Decode(dbuf)
	m.Setfile(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:maskCoords
//
func NewTLmaskCoords() *TLmaskCoords {
	return &TLmaskCoords{}
}

// CodecEncode:maskCoords
func (m *TLmaskCoords) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1361650766)
	x.Int(m.Getn())
	x.Bytes(m.Getx().Encode())
	x.Bytes(m.Gety().Encode())
	x.Bytes(m.Getzoom().Encode())
	return x.Buf
}

// CodecDecode:maskCoords
func (m *TLmaskCoords) Decode(dbuf *code.DecodeBuf) error {
	m.Setn(dbuf.Int())
	m.Setx(dbuf.Double())
	m.Sety(dbuf.Double())
	m.Setzoom(dbuf.Double())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageTableRow
//
func NewTLpageTableRow() *TLpageTableRow {
	return &TLpageTableRow{}
}

// CodecEncode:pageTableRow
func (m *TLpageTableRow) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-524237339)
	x.Int(481674261)
	x.Int(int32(len(m.Getcells())))
	for _, v := range m.Getcells() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageTableRow
func (m *TLpageTableRow) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageTableCell, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageTableCell{}
		v0[i].Decode(dbuf)
	}
	m.Setcells(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_state
//
func NewTLupdates_state() *TLupdates_state {
	return &TLupdates_state{}
}

// CodecEncode:updates_state
func (m *TLupdates_state) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1519637954)
	x.Int(m.Getpts())
	x.Int(m.Getqts())
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	x.Int(m.Getunread_count())
	return x.Buf
}

// CodecDecode:updates_state
func (m *TLupdates_state) Decode(dbuf *code.DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setqts(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:page
//
func NewTLpage() *TLpage {
	return &TLpage{}
}

// CodecEncode:page
func (m *TLpage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1738178803)
	var flags uint32 = 0
	if m.Getpart() != false {
		flags |= 0 << 0
	}
	if m.Getrtl() != false {
		flags |= 1 << 1
	}
	if m.Getv2() != false {
		flags |= 2 << 2
	}
	if m.Getviews() != 0 {
		flags |= 3 << 7
	}
	x.UInt(flags)
	x.String(m.Geturl())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getdocuments())))
	for _, v := range m.Getdocuments() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	return x.Buf
}

// CodecDecode:page
func (m *TLpage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpart(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setrtl(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setv2(true)
	}
	m.Seturl(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]PageBlock, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = PageBlock{}
		v4[i].Decode(dbuf)
	}
	m.Setblocks(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]Photo, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = Photo{}
		v5[i].Decode(dbuf)
	}
	m.Setphotos(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]Document, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = Document{}
		v6[i].Decode(dbuf)
	}
	m.Setdocuments(v6)
	if (flags & (1 << 7)) != 0 {
		m.Setviews(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_deepLinkInfoEmpty
//
func NewTLhelp_deepLinkInfoEmpty() *TLhelp_deepLinkInfoEmpty {
	return &TLhelp_deepLinkInfoEmpty{}
}

// CodecEncode:help_deepLinkInfoEmpty
func (m *TLhelp_deepLinkInfoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1722786150)
	return x.Buf
}

// CodecDecode:help_deepLinkInfoEmpty
func (m *TLhelp_deepLinkInfoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_deepLinkInfo
//
func NewTLhelp_deepLinkInfo() *TLhelp_deepLinkInfo {
	return &TLhelp_deepLinkInfo{}
}

// CodecEncode:help_deepLinkInfo
func (m *TLhelp_deepLinkInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1783556146)
	var flags uint32 = 0
	if m.Getupdate_app() != false {
		flags |= 0 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:help_deepLinkInfo
func (m *TLhelp_deepLinkInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setupdate_app(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageRelatedArticle
//
func NewTLpageRelatedArticle() *TLpageRelatedArticle {
	return &TLpageRelatedArticle{}
}

// CodecEncode:pageRelatedArticle
func (m *TLpageRelatedArticle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1282352120)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 0 << 2
	}
	if m.Getdescription() != "" {
		flags |= 1 << 3
	}
	if m.Getphoto_id().Constructor != 0 {
		flags |= 2 << 4
	}
	if m.Getauthor() != "" {
		flags |= 3 << 5
	}
	if m.Getpublished_date() != 0 {
		flags |= 4 << 6
	}
	x.UInt(flags)
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Getphoto_id() != 0 {
		x.Long(m.Getphoto_id())
	}
	if m.Getauthor() != "" {
		x.String(m.Getauthor())
	}
	if m.Getpublished_date() != 0 {
		x.Int(m.Getpublished_date())
	}
	return x.Buf
}

// CodecDecode:pageRelatedArticle
func (m *TLpageRelatedArticle) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setphoto_id(dbuf.Long())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setauthor(dbuf.String())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpublished_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_stickerSetInstallResultSuccess
//
func NewTLmessages_stickerSetInstallResultSuccess() *TLmessages_stickerSetInstallResultSuccess {
	return &TLmessages_stickerSetInstallResultSuccess{}
}

// CodecEncode:messages_stickerSetInstallResultSuccess
func (m *TLmessages_stickerSetInstallResultSuccess) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(946083368)
	return x.Buf
}

// CodecDecode:messages_stickerSetInstallResultSuccess
func (m *TLmessages_stickerSetInstallResultSuccess) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_stickerSetInstallResultArchive
//
func NewTLmessages_stickerSetInstallResultArchive() *TLmessages_stickerSetInstallResultArchive {
	return &TLmessages_stickerSetInstallResultArchive{}
}

// CodecEncode:messages_stickerSetInstallResultArchive
func (m *TLmessages_stickerSetInstallResultArchive) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(904138920)
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickerSetInstallResultArchive
func (m *TLmessages_stickerSetInstallResultArchive) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]StickerSetCovered, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = StickerSetCovered{}
		v0[i].Decode(dbuf)
	}
	m.Setsets(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:folder
//
func NewTLfolder() *TLfolder {
	return &TLfolder{}
}

// CodecEncode:folder
func (m *TLfolder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-11252123)
	var flags uint32 = 0
	if m.Getautofill_new_broadcasts() != false {
		flags |= 0 << 0
	}
	if m.Getautofill_public_groups() != false {
		flags |= 1 << 1
	}
	if m.Getautofill_new_correspondents() != false {
		flags |= 2 << 2
	}
	if m.Getphoto().Constructor != 0 {
		flags |= 3 << 5
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	return x.Buf
}

// CodecDecode:folder
func (m *TLfolder) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setautofill_new_broadcasts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setautofill_public_groups(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setautofill_new_correspondents(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	if (flags & (1 << 5)) != 0 {
		m5 := &ChatPhoto{}
		m5.Decode(dbuf)
		m.Setphoto(m5)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:videoSize
//
func NewTLvideoSize() *TLvideoSize {
	return &TLvideoSize{}
}

// CodecEncode:videoSize
func (m *TLvideoSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-399391402)
	var flags uint32 = 0
	if m.Getvideo_start_ts().Constructor != 0 {
		flags |= 0 << 5
	}
	x.UInt(flags)
	x.String(m.Gettype())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getsize())
	if m.Getvideo_start_ts().Constructor != 0 {
		x.Bytes(m.Getvideo_start_ts().Encode())
	}
	return x.Buf
}

// CodecDecode:videoSize
func (m *TLvideoSize) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settype(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsize(dbuf.Int())
	if (flags & (1 << 5)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerSettings
//
func NewTLpeerSettings() *TLpeerSettings {
	return &TLpeerSettings{}
}

// CodecEncode:peerSettings
func (m *TLpeerSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1933519201)
	var flags uint32 = 0
	if m.Getreport_spam() != false {
		flags |= 0 << 0
	}
	if m.Getadd_contact() != false {
		flags |= 1 << 1
	}
	if m.Getblock_contact() != false {
		flags |= 2 << 2
	}
	if m.Getshare_contact() != false {
		flags |= 3 << 3
	}
	if m.Getneed_contacts_exception() != false {
		flags |= 4 << 4
	}
	if m.Getreport_geo() != false {
		flags |= 5 << 5
	}
	if m.Getautoarchived() != false {
		flags |= 7 << 6
	}
	if m.Getgeo_distance() != 0 {
		flags |= 6 << 7
	}
	x.UInt(flags)
	if m.Getgeo_distance() != 0 {
		x.Int(m.Getgeo_distance())
	}
	return x.Buf
}

// CodecDecode:peerSettings
func (m *TLpeerSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setreport_spam(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setadd_contact(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setblock_contact(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setshare_contact(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setneed_contacts_exception(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setreport_geo(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setautoarchived(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setgeo_distance(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_exportedAuthorization
//
func NewTLauth_exportedAuthorization() *TLauth_exportedAuthorization {
	return &TLauth_exportedAuthorization{}
}

// CodecEncode:auth_exportedAuthorization
func (m *TLauth_exportedAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-543777747)
	x.Int(m.Getid())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:auth_exportedAuthorization
func (m *TLauth_exportedAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipant
//
func NewTLchannelParticipant() *TLchannelParticipant {
	return &TLchannelParticipant{}
}

// CodecEncode:channelParticipant
func (m *TLchannelParticipant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(367766557)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:channelParticipant
func (m *TLchannelParticipant) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantSelf
//
func NewTLchannelParticipantSelf() *TLchannelParticipantSelf {
	return &TLchannelParticipantSelf{}
}

// CodecEncode:channelParticipantSelf
func (m *TLchannelParticipantSelf) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1557620115)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:channelParticipantSelf
func (m *TLchannelParticipantSelf) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantCreator
//
func NewTLchannelParticipantCreator() *TLchannelParticipantCreator {
	return &TLchannelParticipantCreator{}
}

// CodecEncode:channelParticipantCreator
func (m *TLchannelParticipantCreator) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1149094475)
	var flags uint32 = 0
	if m.Getrank() != "" {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getadmin_rights().Encode())
	if m.Getrank() != "" {
		x.String(m.Getrank())
	}
	return x.Buf
}

// CodecDecode:channelParticipantCreator
func (m *TLchannelParticipantCreator) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setuser_id(dbuf.Int())
	m1 := &ChatAdminRights{}
	m1.Decode(dbuf)
	m.Setadmin_rights(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setrank(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantAdmin
//
func NewTLchannelParticipantAdmin() *TLchannelParticipantAdmin {
	return &TLchannelParticipantAdmin{}
}

// CodecEncode:channelParticipantAdmin
func (m *TLchannelParticipantAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-859915345)
	var flags uint32 = 0
	if m.Getcan_edit() != false {
		flags |= 0 << 0
	}
	if m.Getself() != false {
		flags |= 1 << 1
	}
	if m.Getinviter_id() != 0 {
		flags |= 1 << 3
	}
	if m.Getrank() != "" {
		flags |= 2 << 7
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	if m.Getinviter_id() != 0 {
		x.Int(m.Getinviter_id())
	}
	x.Int(m.Getpromoted_by())
	x.Int(m.Getdate())
	x.Bytes(m.Getadmin_rights().Encode())
	if m.Getrank() != "" {
		x.String(m.Getrank())
	}
	return x.Buf
}

// CodecDecode:channelParticipantAdmin
func (m *TLchannelParticipantAdmin) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_edit(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setself(true)
	}
	m.Setuser_id(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setinviter_id(dbuf.Int())
	}
	m.Setpromoted_by(dbuf.Int())
	m.Setdate(dbuf.Int())
	m6 := &ChatAdminRights{}
	m6.Decode(dbuf)
	m.Setadmin_rights(m6)
	if (flags & (1 << 7)) != 0 {
		m.Setrank(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantBanned
//
func NewTLchannelParticipantBanned() *TLchannelParticipantBanned {
	return &TLchannelParticipantBanned{}
}

// CodecEncode:channelParticipantBanned
func (m *TLchannelParticipantBanned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(470789295)
	var flags uint32 = 0
	if m.Getleft() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.Int(m.Getkicked_by())
	x.Int(m.Getdate())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:channelParticipantBanned
func (m *TLchannelParticipantBanned) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setleft(true)
	}
	m.Setuser_id(dbuf.Int())
	m.Setkicked_by(dbuf.Int())
	m.Setdate(dbuf.Int())
	m4 := &ChatBannedRights{}
	m4.Decode(dbuf)
	m.Setbanned_rights(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantLeft
//
func NewTLchannelParticipantLeft() *TLchannelParticipantLeft {
	return &TLchannelParticipantLeft{}
}

// CodecEncode:channelParticipantLeft
func (m *TLchannelParticipantLeft) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1010402965)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:channelParticipantLeft
func (m *TLchannelParticipantLeft) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageMediaAuto
//
func NewTLinputBotInlineMessageMediaAuto() *TLinputBotInlineMessageMediaAuto {
	return &TLinputBotInlineMessageMediaAuto{}
}

// CodecEncode:inputBotInlineMessageMediaAuto
func (m *TLinputBotInlineMessageMediaAuto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(864077702)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaAuto
func (m *TLinputBotInlineMessageMediaAuto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &ReplyMarkup{}
		m2.Decode(dbuf)
		m.Setreply_markup(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageText
//
func NewTLinputBotInlineMessageText() *TLinputBotInlineMessageText {
	return &TLinputBotInlineMessageText{}
}

// CodecEncode:inputBotInlineMessageText
func (m *TLinputBotInlineMessageText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1036876423)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 0 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 2
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageText
func (m *TLinputBotInlineMessageText) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &ReplyMarkup{}
		m3.Decode(dbuf)
		m.Setreply_markup(m3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageMediaGeo
//
func NewTLinputBotInlineMessageMediaGeo() *TLinputBotInlineMessageMediaGeo {
	return &TLinputBotInlineMessageMediaGeo{}
}

// CodecEncode:inputBotInlineMessageMediaGeo
func (m *TLinputBotInlineMessageMediaGeo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1768777083)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 0 << 1
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 2
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 3 << 3
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaGeo
func (m *TLinputBotInlineMessageMediaGeo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageMediaVenue
//
func NewTLinputBotInlineMessageMediaVenue() *TLinputBotInlineMessageMediaVenue {
	return &TLinputBotInlineMessageMediaVenue{}
}

// CodecEncode:inputBotInlineMessageMediaVenue
func (m *TLinputBotInlineMessageMediaVenue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1098628881)
	var flags uint32 = 0
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 6
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaVenue
func (m *TLinputBotInlineMessageMediaVenue) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m6 := &ReplyMarkup{}
		m6.Decode(dbuf)
		m.Setreply_markup(m6)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageMediaContact
//
func NewTLinputBotInlineMessageMediaContact() *TLinputBotInlineMessageMediaContact {
	return &TLinputBotInlineMessageMediaContact{}
}

// CodecEncode:inputBotInlineMessageMediaContact
func (m *TLinputBotInlineMessageMediaContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1494368259)
	var flags uint32 = 0
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaContact
func (m *TLinputBotInlineMessageMediaContact) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineMessageGame
//
func NewTLinputBotInlineMessageGame() *TLinputBotInlineMessageGame {
	return &TLinputBotInlineMessageGame{}
}

// CodecEncode:inputBotInlineMessageGame
func (m *TLinputBotInlineMessageGame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1262639204)
	var flags uint32 = 0
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 0
	}
	x.UInt(flags)
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageGame
func (m *TLinputBotInlineMessageGame) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &ReplyMarkup{}
		m0.Decode(dbuf)
		m.Setreply_markup(m0)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webPageAttributeTheme
//
func NewTLwebPageAttributeTheme() *TLwebPageAttributeTheme {
	return &TLwebPageAttributeTheme{}
}

// CodecEncode:webPageAttributeTheme
func (m *TLwebPageAttributeTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1421174295)
	var flags uint32 = 0
	if len(m.Getdocuments()) > 0 {
		flags |= 0 << 0
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if len(m.Getdocuments()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getdocuments())))
		for _, v := range m.Getdocuments() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:webPageAttributeTheme
func (m *TLwebPageAttributeTheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		c0 := dbuf.Int()
		if c0 != 481674261 {
			return dbuf.Err
		}
		l0 := dbuf.Int()
		v0 := make([]Document, l0)
		for i := int32(0); i < l0; i++ {
			v0[i] = Document{}
			v0[i].Decode(dbuf)
		}
		m.Setdocuments(v0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &ThemeSettings{}
		m1.Decode(dbuf)
		m.Setsettings(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageTypingAction
//
func NewTLsendMessageTypingAction() *TLsendMessageTypingAction {
	return &TLsendMessageTypingAction{}
}

// CodecEncode:sendMessageTypingAction
func (m *TLsendMessageTypingAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(381645902)
	return x.Buf
}

// CodecDecode:sendMessageTypingAction
func (m *TLsendMessageTypingAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageCancelAction
//
func NewTLsendMessageCancelAction() *TLsendMessageCancelAction {
	return &TLsendMessageCancelAction{}
}

// CodecEncode:sendMessageCancelAction
func (m *TLsendMessageCancelAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-44119819)
	return x.Buf
}

// CodecDecode:sendMessageCancelAction
func (m *TLsendMessageCancelAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageRecordVideoAction
//
func NewTLsendMessageRecordVideoAction() *TLsendMessageRecordVideoAction {
	return &TLsendMessageRecordVideoAction{}
}

// CodecEncode:sendMessageRecordVideoAction
func (m *TLsendMessageRecordVideoAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1584933265)
	return x.Buf
}

// CodecDecode:sendMessageRecordVideoAction
func (m *TLsendMessageRecordVideoAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageUploadVideoAction
//
func NewTLsendMessageUploadVideoAction() *TLsendMessageUploadVideoAction {
	return &TLsendMessageUploadVideoAction{}
}

// CodecEncode:sendMessageUploadVideoAction
func (m *TLsendMessageUploadVideoAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-378127636)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadVideoAction
func (m *TLsendMessageUploadVideoAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageRecordAudioAction
//
func NewTLsendMessageRecordAudioAction() *TLsendMessageRecordAudioAction {
	return &TLsendMessageRecordAudioAction{}
}

// CodecEncode:sendMessageRecordAudioAction
func (m *TLsendMessageRecordAudioAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-718310409)
	return x.Buf
}

// CodecDecode:sendMessageRecordAudioAction
func (m *TLsendMessageRecordAudioAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageUploadAudioAction
//
func NewTLsendMessageUploadAudioAction() *TLsendMessageUploadAudioAction {
	return &TLsendMessageUploadAudioAction{}
}

// CodecEncode:sendMessageUploadAudioAction
func (m *TLsendMessageUploadAudioAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-212740181)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadAudioAction
func (m *TLsendMessageUploadAudioAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageUploadPhotoAction
//
func NewTLsendMessageUploadPhotoAction() *TLsendMessageUploadPhotoAction {
	return &TLsendMessageUploadPhotoAction{}
}

// CodecEncode:sendMessageUploadPhotoAction
func (m *TLsendMessageUploadPhotoAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-774682074)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadPhotoAction
func (m *TLsendMessageUploadPhotoAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageUploadDocumentAction
//
func NewTLsendMessageUploadDocumentAction() *TLsendMessageUploadDocumentAction {
	return &TLsendMessageUploadDocumentAction{}
}

// CodecEncode:sendMessageUploadDocumentAction
func (m *TLsendMessageUploadDocumentAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1441998364)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadDocumentAction
func (m *TLsendMessageUploadDocumentAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageGeoLocationAction
//
func NewTLsendMessageGeoLocationAction() *TLsendMessageGeoLocationAction {
	return &TLsendMessageGeoLocationAction{}
}

// CodecEncode:sendMessageGeoLocationAction
func (m *TLsendMessageGeoLocationAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(393186209)
	return x.Buf
}

// CodecDecode:sendMessageGeoLocationAction
func (m *TLsendMessageGeoLocationAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageChooseContactAction
//
func NewTLsendMessageChooseContactAction() *TLsendMessageChooseContactAction {
	return &TLsendMessageChooseContactAction{}
}

// CodecEncode:sendMessageChooseContactAction
func (m *TLsendMessageChooseContactAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1653390447)
	return x.Buf
}

// CodecDecode:sendMessageChooseContactAction
func (m *TLsendMessageChooseContactAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageGamePlayAction
//
func NewTLsendMessageGamePlayAction() *TLsendMessageGamePlayAction {
	return &TLsendMessageGamePlayAction{}
}

// CodecEncode:sendMessageGamePlayAction
func (m *TLsendMessageGamePlayAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-580219064)
	return x.Buf
}

// CodecDecode:sendMessageGamePlayAction
func (m *TLsendMessageGamePlayAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageRecordRoundAction
//
func NewTLsendMessageRecordRoundAction() *TLsendMessageRecordRoundAction {
	return &TLsendMessageRecordRoundAction{}
}

// CodecEncode:sendMessageRecordRoundAction
func (m *TLsendMessageRecordRoundAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1997373508)
	return x.Buf
}

// CodecDecode:sendMessageRecordRoundAction
func (m *TLsendMessageRecordRoundAction) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:sendMessageUploadRoundAction
//
func NewTLsendMessageUploadRoundAction() *TLsendMessageUploadRoundAction {
	return &TLsendMessageUploadRoundAction{}
}

// CodecEncode:sendMessageUploadRoundAction
func (m *TLsendMessageUploadRoundAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(608050278)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadRoundAction
func (m *TLsendMessageUploadRoundAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_favedStickersNotModified
//
func NewTLmessages_favedStickersNotModified() *TLmessages_favedStickersNotModified {
	return &TLmessages_favedStickersNotModified{}
}

// CodecEncode:messages_favedStickersNotModified
func (m *TLmessages_favedStickersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1634752813)
	return x.Buf
}

// CodecDecode:messages_favedStickersNotModified
func (m *TLmessages_favedStickersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_favedStickers
//
func NewTLmessages_favedStickers() *TLmessages_favedStickers {
	return &TLmessages_favedStickers{}
}

// CodecEncode:messages_favedStickers
func (m *TLmessages_favedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-209768682)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_favedStickers
func (m *TLmessages_favedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Document{}
		v2[i].Decode(dbuf)
	}
	m.Setstickers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_found
//
func NewTLcontacts_found() *TLcontacts_found {
	return &TLcontacts_found{}
}

// CodecEncode:contacts_found
func (m *TLcontacts_found) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1290580579)
	x.Int(481674261)
	x.Int(int32(len(m.Getmy_results())))
	for _, v := range m.Getmy_results() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_found
func (m *TLcontacts_found) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Peer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Peer{}
		v0[i].Decode(dbuf)
	}
	m.Setmy_results(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Peer, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Peer{}
		v1[i].Decode(dbuf)
	}
	m.Setresults(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetEmpty
//
func NewTLinputStickerSetEmpty() *TLinputStickerSetEmpty {
	return &TLinputStickerSetEmpty{}
}

// CodecEncode:inputStickerSetEmpty
func (m *TLinputStickerSetEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-4838507)
	return x.Buf
}

// CodecDecode:inputStickerSetEmpty
func (m *TLinputStickerSetEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetID
//
func NewTLinputStickerSetID() *TLinputStickerSetID {
	return &TLinputStickerSetID{}
}

// CodecEncode:inputStickerSetID
func (m *TLinputStickerSetID) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1645763991)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputStickerSetID
func (m *TLinputStickerSetID) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetShortName
//
func NewTLinputStickerSetShortName() *TLinputStickerSetShortName {
	return &TLinputStickerSetShortName{}
}

// CodecEncode:inputStickerSetShortName
func (m *TLinputStickerSetShortName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2044933984)
	x.String(m.Getshort_name())
	return x.Buf
}

// CodecDecode:inputStickerSetShortName
func (m *TLinputStickerSetShortName) Decode(dbuf *code.DecodeBuf) error {
	m.Setshort_name(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetAnimatedEmoji
//
func NewTLinputStickerSetAnimatedEmoji() *TLinputStickerSetAnimatedEmoji {
	return &TLinputStickerSetAnimatedEmoji{}
}

// CodecEncode:inputStickerSetAnimatedEmoji
func (m *TLinputStickerSetAnimatedEmoji) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(42402760)
	return x.Buf
}

// CodecDecode:inputStickerSetAnimatedEmoji
func (m *TLinputStickerSetAnimatedEmoji) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetDice
//
func NewTLinputStickerSetDice() *TLinputStickerSetDice {
	return &TLinputStickerSetDice{}
}

// CodecEncode:inputStickerSetDice
func (m *TLinputStickerSetDice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-427863538)
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:inputStickerSetDice
func (m *TLinputStickerSetDice) Decode(dbuf *code.DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stats_megagroupStats
//
func NewTLstats_megagroupStats() *TLstats_megagroupStats {
	return &TLstats_megagroupStats{}
}

// CodecEncode:stats_megagroupStats
func (m *TLstats_megagroupStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-276825834)
	x.Bytes(m.Getperiod().Encode())
	x.Bytes(m.Getmembers().Encode())
	x.Bytes(m.Getmessages().Encode())
	x.Bytes(m.Getviewers().Encode())
	x.Bytes(m.Getposters().Encode())
	x.Bytes(m.Getgrowth_graph().Encode())
	x.Bytes(m.Getmembers_graph().Encode())
	x.Bytes(m.Getnew_members_by_source_graph().Encode())
	x.Bytes(m.Getlanguages_graph().Encode())
	x.Bytes(m.Getmessages_graph().Encode())
	x.Bytes(m.Getactions_graph().Encode())
	x.Bytes(m.Gettop_hours_graph().Encode())
	x.Bytes(m.Getweekdays_graph().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_posters())))
	for _, v := range m.Gettop_posters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_admins())))
	for _, v := range m.Gettop_admins() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_inviters())))
	for _, v := range m.Gettop_inviters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stats_megagroupStats
func (m *TLstats_megagroupStats) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StatsDateRangeDays{}
	m0.Decode(dbuf)
	m.Setperiod(m0)
	m1 := &StatsAbsValueAndPrev{}
	m1.Decode(dbuf)
	m.Setmembers(m1)
	m2 := &StatsAbsValueAndPrev{}
	m2.Decode(dbuf)
	m.Setmessages(m2)
	m3 := &StatsAbsValueAndPrev{}
	m3.Decode(dbuf)
	m.Setviewers(m3)
	m4 := &StatsAbsValueAndPrev{}
	m4.Decode(dbuf)
	m.Setposters(m4)
	m5 := &StatsGraph{}
	m5.Decode(dbuf)
	m.Setgrowth_graph(m5)
	m6 := &StatsGraph{}
	m6.Decode(dbuf)
	m.Setmembers_graph(m6)
	m7 := &StatsGraph{}
	m7.Decode(dbuf)
	m.Setnew_members_by_source_graph(m7)
	m8 := &StatsGraph{}
	m8.Decode(dbuf)
	m.Setlanguages_graph(m8)
	m9 := &StatsGraph{}
	m9.Decode(dbuf)
	m.Setmessages_graph(m9)
	m10 := &StatsGraph{}
	m10.Decode(dbuf)
	m.Setactions_graph(m10)
	m11 := &StatsGraph{}
	m11.Decode(dbuf)
	m.Settop_hours_graph(m11)
	m12 := &StatsGraph{}
	m12.Decode(dbuf)
	m.Setweekdays_graph(m12)
	c13 := dbuf.Int()
	if c13 != 481674261 {
		return dbuf.Err
	}
	l13 := dbuf.Int()
	v13 := make([]StatsGroupTopPoster, l13)
	for i := int32(0); i < l13; i++ {
		v13[i] = StatsGroupTopPoster{}
		v13[i].Decode(dbuf)
	}
	m.Settop_posters(v13)
	c14 := dbuf.Int()
	if c14 != 481674261 {
		return dbuf.Err
	}
	l14 := dbuf.Int()
	v14 := make([]StatsGroupTopAdmin, l14)
	for i := int32(0); i < l14; i++ {
		v14[i] = StatsGroupTopAdmin{}
		v14[i].Decode(dbuf)
	}
	m.Settop_admins(v14)
	c15 := dbuf.Int()
	if c15 != 481674261 {
		return dbuf.Err
	}
	l15 := dbuf.Int()
	v15 := make([]StatsGroupTopInviter, l15)
	for i := int32(0); i < l15; i++ {
		v15[i] = StatsGroupTopInviter{}
		v15[i].Decode(dbuf)
	}
	m.Settop_inviters(v15)
	c16 := dbuf.Int()
	if c16 != 481674261 {
		return dbuf.Err
	}
	l16 := dbuf.Int()
	v16 := make([]User, l16)
	for i := int32(0); i < l16; i++ {
		v16[i] = User{}
		v16[i].Decode(dbuf)
	}
	m.Setusers(v16)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_featuredStickersNotModified
//
func NewTLmessages_featuredStickersNotModified() *TLmessages_featuredStickersNotModified {
	return &TLmessages_featuredStickersNotModified{}
}

// CodecEncode:messages_featuredStickersNotModified
func (m *TLmessages_featuredStickersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-958657434)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_featuredStickersNotModified
func (m *TLmessages_featuredStickersNotModified) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_featuredStickers
//
func NewTLmessages_featuredStickers() *TLmessages_featuredStickers {
	return &TLmessages_featuredStickers{}
}

// CodecEncode:messages_featuredStickers
func (m *TLmessages_featuredStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1230257343)
	x.Int(m.Gethash())
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getunread())))
	for _, v := range m.Getunread() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_featuredStickers
func (m *TLmessages_featuredStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	m.Setcount(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]StickerSetCovered, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = StickerSetCovered{}
		v2[i].Decode(dbuf)
	}
	m.Setsets(v2)
	m.Setunread(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhoneCall
//
func NewTLinputPhoneCall() *TLinputPhoneCall {
	return &TLinputPhoneCall{}
}

// CodecEncode:inputPhoneCall
func (m *TLinputPhoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(506920429)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPhoneCall
func (m *TLinputPhoneCall) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:autoDownloadSettings
//
func NewTLautoDownloadSettings() *TLautoDownloadSettings {
	return &TLautoDownloadSettings{}
}

// CodecEncode:autoDownloadSettings
func (m *TLautoDownloadSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-532532493)
	var flags uint32 = 0
	if m.Getdisabled() != false {
		flags |= 0 << 0
	}
	if m.Getvideo_preload_large() != false {
		flags |= 1 << 1
	}
	if m.Getaudio_preload_next() != false {
		flags |= 2 << 2
	}
	if m.Getphonecalls_less_data() != false {
		flags |= 3 << 3
	}
	x.UInt(flags)
	x.Int(m.Getphoto_size_max())
	x.Int(m.Getvideo_size_max())
	x.Int(m.Getfile_size_max())
	x.Int(m.Getvideo_upload_maxbitrate())
	return x.Buf
}

// CodecDecode:autoDownloadSettings
func (m *TLautoDownloadSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdisabled(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setvideo_preload_large(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setaudio_preload_next(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setphonecalls_less_data(true)
	}
	m.Setphoto_size_max(dbuf.Int())
	m.Setvideo_size_max(dbuf.Int())
	m.Setfile_size_max(dbuf.Int())
	m.Setvideo_upload_maxbitrate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_messageViews
//
func NewTLmessages_messageViews() *TLmessages_messageViews {
	return &TLmessages_messageViews{}
}

// CodecEncode:messages_messageViews
func (m *TLmessages_messageViews) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1228606141)
	x.Int(481674261)
	x.Int(int32(len(m.Getviews())))
	for _, v := range m.Getviews() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messageViews
func (m *TLmessages_messageViews) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]MessageViews, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = MessageViews{}
		v0[i].Decode(dbuf)
	}
	m.Setviews(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channels_adminLogResults
//
func NewTLchannels_adminLogResults() *TLchannels_adminLogResults {
	return &TLchannels_adminLogResults{}
}

// CodecEncode:channels_adminLogResults
func (m *TLchannels_adminLogResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-309659827)
	x.Int(481674261)
	x.Int(int32(len(m.Getevents())))
	for _, v := range m.Getevents() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_adminLogResults
func (m *TLchannels_adminLogResults) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]ChannelAdminLogEvent, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = ChannelAdminLogEvent{}
		v0[i].Decode(dbuf)
	}
	m.Setevents(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatInviteAlready
//
func NewTLchatInviteAlready() *TLchatInviteAlready {
	return &TLchatInviteAlready{}
}

// CodecEncode:chatInviteAlready
func (m *TLchatInviteAlready) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1516793212)
	x.Bytes(m.Getchat().Encode())
	return x.Buf
}

// CodecDecode:chatInviteAlready
func (m *TLchatInviteAlready) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatInvite
//
func NewTLchatInvite() *TLchatInvite {
	return &TLchatInvite{}
}

// CodecEncode:chatInvite
func (m *TLchatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-540871282)
	var flags uint32 = 0
	if m.Getchannel() != false {
		flags |= 0 << 0
	}
	if m.Getbroadcast() != false {
		flags |= 1 << 1
	}
	if m.Getpublic() != false {
		flags |= 2 << 2
	}
	if m.Getmegagroup() != false {
		flags |= 3 << 3
	}
	if len(m.Getparticipants()) > 0 {
		flags |= 4 << 7
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getparticipants_count())
	if len(m.Getparticipants()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getparticipants())))
		for _, v := range m.Getparticipants() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:chatInvite
func (m *TLchatInvite) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchannel(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpublic(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmegagroup(true)
	}
	m.Settitle(dbuf.String())
	m5 := &Photo{}
	m5.Decode(dbuf)
	m.Setphoto(m5)
	m.Setparticipants_count(dbuf.Int())
	if (flags & (1 << 7)) != 0 {
		c7 := dbuf.Int()
		if c7 != 481674261 {
			return dbuf.Err
		}
		l7 := dbuf.Int()
		v7 := make([]User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = User{}
			v7[i].Decode(dbuf)
		}
		m.Setparticipants(v7)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatInvitePeek
//
func NewTLchatInvitePeek() *TLchatInvitePeek {
	return &TLchatInvitePeek{}
}

// CodecEncode:chatInvitePeek
func (m *TLchatInvitePeek) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1634294960)
	x.Bytes(m.Getchat().Encode())
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:chatInvitePeek
func (m *TLchatInvitePeek) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeImageSize
//
func NewTLdocumentAttributeImageSize() *TLdocumentAttributeImageSize {
	return &TLdocumentAttributeImageSize{}
}

// CodecEncode:documentAttributeImageSize
func (m *TLdocumentAttributeImageSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1815593308)
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:documentAttributeImageSize
func (m *TLdocumentAttributeImageSize) Decode(dbuf *code.DecodeBuf) error {
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeAnimated
//
func NewTLdocumentAttributeAnimated() *TLdocumentAttributeAnimated {
	return &TLdocumentAttributeAnimated{}
}

// CodecEncode:documentAttributeAnimated
func (m *TLdocumentAttributeAnimated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(297109817)
	return x.Buf
}

// CodecDecode:documentAttributeAnimated
func (m *TLdocumentAttributeAnimated) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeSticker
//
func NewTLdocumentAttributeSticker() *TLdocumentAttributeSticker {
	return &TLdocumentAttributeSticker{}
}

// CodecEncode:documentAttributeSticker
func (m *TLdocumentAttributeSticker) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1662637586)
	var flags uint32 = 0
	if m.Getmask() != false {
		flags |= 1 << 0
	}
	if m.Getmask_coords().Constructor != 0 {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.String(m.Getalt())
	x.Bytes(m.Getstickerset().Encode())
	if m.Getmask_coords().Constructor != 0 {
		x.Bytes(m.Getmask_coords().Encode())
	}
	return x.Buf
}

// CodecDecode:documentAttributeSticker
func (m *TLdocumentAttributeSticker) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmask(true)
	}
	m.Setalt(dbuf.String())
	m2 := &InputStickerSet{}
	m2.Decode(dbuf)
	m.Setstickerset(m2)
	if (flags & (1 << 3)) != 0 {
		m3 := &MaskCoords{}
		m3.Decode(dbuf)
		m.Setmask_coords(m3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeVideo
//
func NewTLdocumentAttributeVideo() *TLdocumentAttributeVideo {
	return &TLdocumentAttributeVideo{}
}

// CodecEncode:documentAttributeVideo
func (m *TLdocumentAttributeVideo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(250621158)
	var flags uint32 = 0
	if m.Getround_message() != false {
		flags |= 0 << 0
	}
	if m.Getsupports_streaming() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getduration())
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:documentAttributeVideo
func (m *TLdocumentAttributeVideo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setround_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsupports_streaming(true)
	}
	m.Setduration(dbuf.Int())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeAudio
//
func NewTLdocumentAttributeAudio() *TLdocumentAttributeAudio {
	return &TLdocumentAttributeAudio{}
}

// CodecEncode:documentAttributeAudio
func (m *TLdocumentAttributeAudio) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1739392570)
	var flags uint32 = 0
	if m.Getvoice() != false {
		flags |= 10 << 0
	}
	if m.Gettitle() != "" {
		flags |= 0 << 2
	}
	if m.Getperformer() != "" {
		flags |= 1 << 3
	}
	if len(m.Getwaveform()) > 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.Int(m.Getduration())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getperformer() != "" {
		x.String(m.Getperformer())
	}
	if m.Getwaveform() != nil {
		x.Bytes(m.Getwaveform())
	}
	return x.Buf
}

// CodecDecode:documentAttributeAudio
func (m *TLdocumentAttributeAudio) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvoice(true)
	}
	m.Setduration(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setperformer(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setwaveform(dbuf.StringBytes())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeFilename
//
func NewTLdocumentAttributeFilename() *TLdocumentAttributeFilename {
	return &TLdocumentAttributeFilename{}
}

// CodecEncode:documentAttributeFilename
func (m *TLdocumentAttributeFilename) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(358154344)
	x.String(m.Getfile_name())
	return x.Buf
}

// CodecDecode:documentAttributeFilename
func (m *TLdocumentAttributeFilename) Decode(dbuf *code.DecodeBuf) error {
	m.Setfile_name(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentAttributeHasStickers
//
func NewTLdocumentAttributeHasStickers() *TLdocumentAttributeHasStickers {
	return &TLdocumentAttributeHasStickers{}
}

// CodecEncode:documentAttributeHasStickers
func (m *TLdocumentAttributeHasStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1744710921)
	return x.Buf
}

// CodecDecode:documentAttributeHasStickers
func (m *TLdocumentAttributeHasStickers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_supportName
//
func NewTLhelp_supportName() *TLhelp_supportName {
	return &TLhelp_supportName{}
}

// CodecEncode:help_supportName
func (m *TLhelp_supportName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1945767479)
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:help_supportName
func (m *TLhelp_supportName) Decode(dbuf *code.DecodeBuf) error {
	m.Setname(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputCheckPasswordEmpty
//
func NewTLinputCheckPasswordEmpty() *TLinputCheckPasswordEmpty {
	return &TLinputCheckPasswordEmpty{}
}

// CodecEncode:inputCheckPasswordEmpty
func (m *TLinputCheckPasswordEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1736378792)
	return x.Buf
}

// CodecDecode:inputCheckPasswordEmpty
func (m *TLinputCheckPasswordEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputCheckPasswordSRP
//
func NewTLinputCheckPasswordSRP() *TLinputCheckPasswordSRP {
	return &TLinputCheckPasswordSRP{}
}

// CodecEncode:inputCheckPasswordSRP
func (m *TLinputCheckPasswordSRP) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-763367294)
	x.Long(m.Getsrp_id())
	x.Bytes(m.GetA())
	x.Bytes(m.GetM1())
	return x.Buf
}

// CodecDecode:inputCheckPasswordSRP
func (m *TLinputCheckPasswordSRP) Decode(dbuf *code.DecodeBuf) error {
	m.Setsrp_id(dbuf.Long())
	m.SetA(dbuf.StringBytes())
	m.SetM1(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:null
//
func NewTLnull() *TLnull {
	return &TLnull{}
}

// CodecEncode:null
func (m *TLnull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1450380236)
	return x.Buf
}

// CodecDecode:null
func (m *TLnull) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_tmpPassword
//
func NewTLaccount_tmpPassword() *TLaccount_tmpPassword {
	return &TLaccount_tmpPassword{}
}

// CodecEncode:account_tmpPassword
func (m *TLaccount_tmpPassword) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-614138572)
	x.Bytes(m.Gettmp_password())
	x.Int(m.Getvalid_until())
	return x.Buf
}

// CodecDecode:account_tmpPassword
func (m *TLaccount_tmpPassword) Decode(dbuf *code.DecodeBuf) error {
	m.Settmp_password(dbuf.StringBytes())
	m.Setvalid_until(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photos_photo
//
func NewTLphotos_photo() *TLphotos_photo {
	return &TLphotos_photo{}
}

// CodecEncode:photos_photo
func (m *TLphotos_photo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(539045032)
	x.Bytes(m.Getphoto().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photo
func (m *TLphotos_photo) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setphoto(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonSpam
//
func NewTLinputReportReasonSpam() *TLinputReportReasonSpam {
	return &TLinputReportReasonSpam{}
}

// CodecEncode:inputReportReasonSpam
func (m *TLinputReportReasonSpam) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1490799288)
	return x.Buf
}

// CodecDecode:inputReportReasonSpam
func (m *TLinputReportReasonSpam) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonViolence
//
func NewTLinputReportReasonViolence() *TLinputReportReasonViolence {
	return &TLinputReportReasonViolence{}
}

// CodecEncode:inputReportReasonViolence
func (m *TLinputReportReasonViolence) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(505595789)
	return x.Buf
}

// CodecDecode:inputReportReasonViolence
func (m *TLinputReportReasonViolence) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonPornography
//
func NewTLinputReportReasonPornography() *TLinputReportReasonPornography {
	return &TLinputReportReasonPornography{}
}

// CodecEncode:inputReportReasonPornography
func (m *TLinputReportReasonPornography) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(777640226)
	return x.Buf
}

// CodecDecode:inputReportReasonPornography
func (m *TLinputReportReasonPornography) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonChildAbuse
//
func NewTLinputReportReasonChildAbuse() *TLinputReportReasonChildAbuse {
	return &TLinputReportReasonChildAbuse{}
}

// CodecEncode:inputReportReasonChildAbuse
func (m *TLinputReportReasonChildAbuse) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1376497949)
	return x.Buf
}

// CodecDecode:inputReportReasonChildAbuse
func (m *TLinputReportReasonChildAbuse) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonOther
//
func NewTLinputReportReasonOther() *TLinputReportReasonOther {
	return &TLinputReportReasonOther{}
}

// CodecEncode:inputReportReasonOther
func (m *TLinputReportReasonOther) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-512463606)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:inputReportReasonOther
func (m *TLinputReportReasonOther) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonCopyright
//
func NewTLinputReportReasonCopyright() *TLinputReportReasonCopyright {
	return &TLinputReportReasonCopyright{}
}

// CodecEncode:inputReportReasonCopyright
func (m *TLinputReportReasonCopyright) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1685456582)
	return x.Buf
}

// CodecDecode:inputReportReasonCopyright
func (m *TLinputReportReasonCopyright) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputReportReasonGeoIrrelevant
//
func NewTLinputReportReasonGeoIrrelevant() *TLinputReportReasonGeoIrrelevant {
	return &TLinputReportReasonGeoIrrelevant{}
}

// CodecEncode:inputReportReasonGeoIrrelevant
func (m *TLinputReportReasonGeoIrrelevant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-606798099)
	return x.Buf
}

// CodecDecode:inputReportReasonGeoIrrelevant
func (m *TLinputReportReasonGeoIrrelevant) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerBlocked
//
func NewTLpeerBlocked() *TLpeerBlocked {
	return &TLpeerBlocked{}
}

// CodecEncode:peerBlocked
func (m *TLpeerBlocked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-386039788)
	x.Bytes(m.Getpeer_id().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:peerBlocked
func (m *TLpeerBlocked) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_id(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userProfilePhotoEmpty
//
func NewTLuserProfilePhotoEmpty() *TLuserProfilePhotoEmpty {
	return &TLuserProfilePhotoEmpty{}
}

// CodecEncode:userProfilePhotoEmpty
func (m *TLuserProfilePhotoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1326562017)
	return x.Buf
}

// CodecDecode:userProfilePhotoEmpty
func (m *TLuserProfilePhotoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userProfilePhoto
//
func NewTLuserProfilePhoto() *TLuserProfilePhoto {
	return &TLuserProfilePhoto{}
}

// CodecEncode:userProfilePhoto
func (m *TLuserProfilePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1775479590)
	var flags uint32 = 0
	if m.Gethas_video() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Long(m.Getphoto_id())
	x.Bytes(m.Getphoto_small().Encode())
	x.Bytes(m.Getphoto_big().Encode())
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:userProfilePhoto
func (m *TLuserProfilePhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_video(true)
	}
	m.Setphoto_id(dbuf.Long())
	m2 := &FileLocation{}
	m2.Decode(dbuf)
	m.Setphoto_small(m2)
	m3 := &FileLocation{}
	m3.Decode(dbuf)
	m.Setphoto_big(m3)
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_contentSettings
//
func NewTLaccount_contentSettings() *TLaccount_contentSettings {
	return &TLaccount_contentSettings{}
}

// CodecEncode:account_contentSettings
func (m *TLaccount_contentSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1474462241)
	var flags uint32 = 0
	if m.Getsensitive_enabled() != false {
		flags |= 0 << 0
	}
	if m.Getsensitive_can_change() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_contentSettings
func (m *TLaccount_contentSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsensitive_enabled(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsensitive_can_change(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageListOrderedItemText
//
func NewTLpageListOrderedItemText() *TLpageListOrderedItemText {
	return &TLpageListOrderedItemText{}
}

// CodecEncode:pageListOrderedItemText
func (m *TLpageListOrderedItemText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1577484359)
	x.String(m.Getnum())
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageListOrderedItemText
func (m *TLpageListOrderedItemText) Decode(dbuf *code.DecodeBuf) error {
	m.Setnum(dbuf.String())
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Settext(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageListOrderedItemBlocks
//
func NewTLpageListOrderedItemBlocks() *TLpageListOrderedItemBlocks {
	return &TLpageListOrderedItemBlocks{}
}

// CodecEncode:pageListOrderedItemBlocks
func (m *TLpageListOrderedItemBlocks) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1730311882)
	x.String(m.Getnum())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageListOrderedItemBlocks
func (m *TLpageListOrderedItemBlocks) Decode(dbuf *code.DecodeBuf) error {
	m.Setnum(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PageBlock, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PageBlock{}
		v1[i].Decode(dbuf)
	}
	m.Setblocks(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialog
//
func NewTLdialog() *TLdialog {
	return &TLdialog{}
}

// CodecEncode:dialog
func (m *TLdialog) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(739712882)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 2 << 0
	}
	if m.Getunread_mark() != false {
		flags |= 3 << 1
	}
	if m.Getpts() != 0 {
		flags |= 0 << 9
	}
	if m.Getdraft().Constructor != 0 {
		flags |= 1 << 10
	}
	if m.Getfolder_id() != 0 {
		flags |= 4 << 11
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gettop_message())
	x.Int(m.Getread_inbox_max_id())
	x.Int(m.Getread_outbox_max_id())
	x.Int(m.Getunread_count())
	x.Int(m.Getunread_mentions_count())
	x.Bytes(m.Getnotify_settings().Encode())
	if m.Getpts() != 0 {
		x.Int(m.Getpts())
	}
	if m.Getdraft().Constructor != 0 {
		x.Bytes(m.Getdraft().Encode())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:dialog
func (m *TLdialog) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setunread_mark(true)
	}
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Settop_message(dbuf.Int())
	m.Setread_inbox_max_id(dbuf.Int())
	m.Setread_outbox_max_id(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	m.Setunread_mentions_count(dbuf.Int())
	m8 := &PeerNotifySettings{}
	m8.Decode(dbuf)
	m.Setnotify_settings(m8)
	if (flags & (1 << 9)) != 0 {
		m.Setpts(dbuf.Int())
	}
	if (flags & (1 << 10)) != 0 {
		m10 := &DraftMessage{}
		m10.Decode(dbuf)
		m.Setdraft(m10)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialogFolder
//
func NewTLdialogFolder() *TLdialogFolder {
	return &TLdialogFolder{}
}

// CodecEncode:dialogFolder
func (m *TLdialogFolder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1908216652)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 2 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getfolder().Encode())
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gettop_message())
	x.Int(m.Getunread_muted_peers_count())
	x.Int(m.Getunread_unmuted_peers_count())
	x.Int(m.Getunread_muted_messages_count())
	x.Int(m.Getunread_unmuted_messages_count())
	return x.Buf
}

// CodecDecode:dialogFolder
func (m *TLdialogFolder) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m1 := &Folder{}
	m1.Decode(dbuf)
	m.Setfolder(m1)
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Settop_message(dbuf.Int())
	m.Setunread_muted_peers_count(dbuf.Int())
	m.Setunread_unmuted_peers_count(dbuf.Int())
	m.Setunread_muted_messages_count(dbuf.Int())
	m.Setunread_unmuted_messages_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:wallPaper
//
func NewTLwallPaper() *TLwallPaper {
	return &TLwallPaper{}
}

// CodecEncode:wallPaper
func (m *TLwallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1539849235)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 0 << 1
	}
	if m.Getdefault() != false {
		flags |= 1 << 2
	}
	if m.Getpattern() != false {
		flags |= 3 << 3
	}
	if m.Getdark() != false {
		flags |= 4 << 4
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 2 << 8
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getslug())
	x.Bytes(m.Getdocument().Encode())
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:wallPaper
func (m *TLwallPaper) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	if (flags & (1 << 1)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setdefault(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setpattern(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setdark(true)
	}
	m.Setaccess_hash(dbuf.Long())
	m.Setslug(dbuf.String())
	m7 := &Document{}
	m7.Decode(dbuf)
	m.Setdocument(m7)
	if (flags & (1 << 8)) != 0 {
		m8 := &WallPaperSettings{}
		m8.Decode(dbuf)
		m.Setsettings(m8)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:wallPaperNoFile
//
func NewTLwallPaperNoFile() *TLwallPaperNoFile {
	return &TLwallPaperNoFile{}
}

// CodecEncode:wallPaperNoFile
func (m *TLwallPaperNoFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1963717851)
	var flags uint32 = 0
	if m.Getdefault() != false {
		flags |= 1 << 0
	}
	if m.Getdark() != false {
		flags |= 4 << 1
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:wallPaperNoFile
func (m *TLwallPaperNoFile) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdefault(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdark(true)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &WallPaperSettings{}
		m2.Decode(dbuf)
		m.Setsettings(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_messageEditData
//
func NewTLmessages_messageEditData() *TLmessages_messageEditData {
	return &TLmessages_messageEditData{}
}

// CodecEncode:messages_messageEditData
func (m *TLmessages_messageEditData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(649453030)
	var flags uint32 = 0
	if m.Getcaption() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:messages_messageEditData
func (m *TLmessages_messageEditData) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcaption(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:themeSettings
//
func NewTLthemeSettings() *TLthemeSettings {
	return &TLthemeSettings{}
}

// CodecEncode:themeSettings
func (m *TLthemeSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1676371894)
	var flags uint32 = 0
	if m.Getmessage_top_color() != 0 {
		flags |= 0 << 2
	}
	if m.Getmessage_bottom_color() != 0 {
		flags |= 0 << 3
	}
	if m.Getwallpaper().Constructor != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getbase_theme().Encode())
	x.Int(m.Getaccent_color())
	if m.Getmessage_top_color() != 0 {
		x.Int(m.Getmessage_top_color())
	}
	if m.Getmessage_bottom_color() != 0 {
		x.Int(m.Getmessage_bottom_color())
	}
	if m.Getwallpaper().Constructor != 0 {
		x.Bytes(m.Getwallpaper().Encode())
	}
	return x.Buf
}

// CodecDecode:themeSettings
func (m *TLthemeSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &BaseTheme{}
	m0.Decode(dbuf)
	m.Setbase_theme(m0)
	m.Setaccent_color(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setmessage_top_color(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmessage_bottom_color(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &WallPaper{}
		m4.Decode(dbuf)
		m.Setwallpaper(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputUserEmpty
//
func NewTLinputUserEmpty() *TLinputUserEmpty {
	return &TLinputUserEmpty{}
}

// CodecEncode:inputUserEmpty
func (m *TLinputUserEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1182234929)
	return x.Buf
}

// CodecDecode:inputUserEmpty
func (m *TLinputUserEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputUserSelf
//
func NewTLinputUserSelf() *TLinputUserSelf {
	return &TLinputUserSelf{}
}

// CodecEncode:inputUserSelf
func (m *TLinputUserSelf) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-138301121)
	return x.Buf
}

// CodecDecode:inputUserSelf
func (m *TLinputUserSelf) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputUser
//
func NewTLinputUser() *TLinputUser {
	return &TLinputUser{}
}

// CodecEncode:inputUser
func (m *TLinputUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-668391402)
	x.Int(m.Getuser_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputUser
func (m *TLinputUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputUserFromMessage
//
func NewTLinputUserFromMessage() *TLinputUserFromMessage {
	return &TLinputUserFromMessage{}
}

// CodecEncode:inputUserFromMessage
func (m *TLinputUserFromMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(756118935)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:inputUserFromMessage
func (m *TLinputUserFromMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:emojiLanguage
//
func NewTLemojiLanguage() *TLemojiLanguage {
	return &TLemojiLanguage{}
}

// CodecEncode:emojiLanguage
func (m *TLemojiLanguage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1275374751)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:emojiLanguage
func (m *TLemojiLanguage) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webAuthorization
//
func NewTLwebAuthorization() *TLwebAuthorization {
	return &TLwebAuthorization{}
}

// CodecEncode:webAuthorization
func (m *TLwebAuthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-892779534)
	x.Long(m.Gethash())
	x.Int(m.Getbot_id())
	x.String(m.Getdomain())
	x.String(m.Getbrowser())
	x.String(m.Getplatform())
	x.Int(m.Getdate_created())
	x.Int(m.Getdate_active())
	x.String(m.Getip())
	x.String(m.Getregion())
	return x.Buf
}

// CodecDecode:webAuthorization
func (m *TLwebAuthorization) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Long())
	m.Setbot_id(dbuf.Int())
	m.Setdomain(dbuf.String())
	m.Setbrowser(dbuf.String())
	m.Setplatform(dbuf.String())
	m.Setdate_created(dbuf.Int())
	m.Setdate_active(dbuf.Int())
	m.Setip(dbuf.String())
	m.Setregion(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageListItemText
//
func NewTLpageListItemText() *TLpageListItemText {
	return &TLpageListItemText{}
}

// CodecEncode:pageListItemText
func (m *TLpageListItemText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1188055347)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageListItemText
func (m *TLpageListItemText) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageListItemBlocks
//
func NewTLpageListItemBlocks() *TLpageListItemBlocks {
	return &TLpageListItemBlocks{}
}

// CodecEncode:pageListItemBlocks
func (m *TLpageListItemBlocks) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(635466748)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageListItemBlocks
func (m *TLpageListItemBlocks) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setblocks(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contactStatus
//
func NewTLcontactStatus() *TLcontactStatus {
	return &TLcontactStatus{}
}

// CodecEncode:contactStatus
func (m *TLcontactStatus) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-748155807)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getstatus().Encode())
	return x.Buf
}

// CodecDecode:contactStatus
func (m *TLcontactStatus) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &UserStatus{}
	m1.Decode(dbuf)
	m.Setstatus(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_recentMeUrls
//
func NewTLhelp_recentMeUrls() *TLhelp_recentMeUrls {
	return &TLhelp_recentMeUrls{}
}

// CodecEncode:help_recentMeUrls
func (m *TLhelp_recentMeUrls) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(235081943)
	x.Int(481674261)
	x.Int(int32(len(m.Geturls())))
	for _, v := range m.Geturls() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_recentMeUrls
func (m *TLhelp_recentMeUrls) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]RecentMeUrl, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = RecentMeUrl{}
		v0[i].Decode(dbuf)
	}
	m.Seturls(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_webAuthorizations
//
func NewTLaccount_webAuthorizations() *TLaccount_webAuthorizations {
	return &TLaccount_webAuthorizations{}
}

// CodecEncode:account_webAuthorizations
func (m *TLaccount_webAuthorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-313079300)
	x.Int(481674261)
	x.Int(int32(len(m.Getauthorizations())))
	for _, v := range m.Getauthorizations() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_webAuthorizations
func (m *TLaccount_webAuthorizations) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]WebAuthorization, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = WebAuthorization{}
		v0[i].Decode(dbuf)
	}
	m.Setauthorizations(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:replyKeyboardHide
//
func NewTLreplyKeyboardHide() *TLreplyKeyboardHide {
	return &TLreplyKeyboardHide{}
}

// CodecEncode:replyKeyboardHide
func (m *TLreplyKeyboardHide) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1606526075)
	var flags uint32 = 0
	if m.Getselective() != false {
		flags |= 2 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:replyKeyboardHide
func (m *TLreplyKeyboardHide) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setselective(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:replyKeyboardForceReply
//
func NewTLreplyKeyboardForceReply() *TLreplyKeyboardForceReply {
	return &TLreplyKeyboardForceReply{}
}

// CodecEncode:replyKeyboardForceReply
func (m *TLreplyKeyboardForceReply) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-200242528)
	var flags uint32 = 0
	if m.Getsingle_use() != false {
		flags |= 1 << 0
	}
	if m.Getselective() != false {
		flags |= 2 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:replyKeyboardForceReply
func (m *TLreplyKeyboardForceReply) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsingle_use(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setselective(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:replyKeyboardMarkup
//
func NewTLreplyKeyboardMarkup() *TLreplyKeyboardMarkup {
	return &TLreplyKeyboardMarkup{}
}

// CodecEncode:replyKeyboardMarkup
func (m *TLreplyKeyboardMarkup) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(889353612)
	var flags uint32 = 0
	if m.Getresize() != false {
		flags |= 0 << 0
	}
	if m.Getsingle_use() != false {
		flags |= 1 << 1
	}
	if m.Getselective() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:replyKeyboardMarkup
func (m *TLreplyKeyboardMarkup) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setresize(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsingle_use(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setselective(true)
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]KeyboardButtonRow, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = KeyboardButtonRow{}
		v3[i].Decode(dbuf)
	}
	m.Setrows(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:replyInlineMarkup
//
func NewTLreplyInlineMarkup() *TLreplyInlineMarkup {
	return &TLreplyInlineMarkup{}
}

// CodecEncode:replyInlineMarkup
func (m *TLreplyInlineMarkup) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1218642516)
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:replyInlineMarkup
func (m *TLreplyInlineMarkup) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]KeyboardButtonRow, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = KeyboardButtonRow{}
		v0[i].Decode(dbuf)
	}
	m.Setrows(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_support
//
func NewTLhelp_support() *TLhelp_support {
	return &TLhelp_support{}
}

// CodecEncode:help_support
func (m *TLhelp_support) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(398898678)
	x.String(m.Getphone_number())
	x.Bytes(m.Getuser().Encode())
	return x.Buf
}

// CodecDecode:help_support
func (m *TLhelp_support) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setuser(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWebDocument
//
func NewTLinputWebDocument() *TLinputWebDocument {
	return &TLinputWebDocument{}
}

// CodecEncode:inputWebDocument
func (m *TLinputWebDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1678949555)
	x.String(m.Geturl())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputWebDocument
func (m *TLinputWebDocument) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]DocumentAttribute, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = DocumentAttribute{}
		v3[i].Decode(dbuf)
	}
	m.Setattributes(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickeredMediaPhoto
//
func NewTLinputStickeredMediaPhoto() *TLinputStickeredMediaPhoto {
	return &TLinputStickeredMediaPhoto{}
}

// CodecEncode:inputStickeredMediaPhoto
func (m *TLinputStickeredMediaPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1251549527)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:inputStickeredMediaPhoto
func (m *TLinputStickeredMediaPhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickeredMediaDocument
//
func NewTLinputStickeredMediaDocument() *TLinputStickeredMediaDocument {
	return &TLinputStickeredMediaDocument{}
}

// CodecEncode:inputStickeredMediaDocument
func (m *TLinputStickeredMediaDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(70813275)
	x.Bytes(m.Getid_2().Encode())
	return x.Buf
}

// CodecDecode:inputStickeredMediaDocument
func (m *TLinputStickeredMediaDocument) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallEmpty
//
func NewTLphoneCallEmpty() *TLphoneCallEmpty {
	return &TLphoneCallEmpty{}
}

// CodecEncode:phoneCallEmpty
func (m *TLphoneCallEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1399245077)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:phoneCallEmpty
func (m *TLphoneCallEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallWaiting
//
func NewTLphoneCallWaiting() *TLphoneCallWaiting {
	return &TLphoneCallWaiting{}
}

// CodecEncode:phoneCallWaiting
func (m *TLphoneCallWaiting) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(462375633)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 6 << 0
	}
	if m.Getreceive_date() != 0 {
		flags |= 0 << 7
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getprotocol().Encode())
	if m.Getreceive_date() != 0 {
		x.Int(m.Getreceive_date())
	}
	return x.Buf
}

// CodecDecode:phoneCallWaiting
func (m *TLphoneCallWaiting) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m6 := &PhoneCallProtocol{}
	m6.Decode(dbuf)
	m.Setprotocol(m6)
	if (flags & (1 << 7)) != 0 {
		m.Setreceive_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallRequested
//
func NewTLphoneCallRequested() *TLphoneCallRequested {
	return &TLphoneCallRequested{}
}

// CodecEncode:phoneCallRequested
func (m *TLphoneCallRequested) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2014659757)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 6 << 0
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_hash())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phoneCallRequested
func (m *TLphoneCallRequested) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_hash(dbuf.StringBytes())
	m7 := &PhoneCallProtocol{}
	m7.Decode(dbuf)
	m.Setprotocol(m7)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallAccepted
//
func NewTLphoneCallAccepted() *TLphoneCallAccepted {
	return &TLphoneCallAccepted{}
}

// CodecEncode:phoneCallAccepted
func (m *TLphoneCallAccepted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1719909046)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 6 << 0
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_b())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phoneCallAccepted
func (m *TLphoneCallAccepted) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_b(dbuf.StringBytes())
	m7 := &PhoneCallProtocol{}
	m7.Decode(dbuf)
	m.Setprotocol(m7)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCall
//
func NewTLphoneCall() *TLphoneCall {
	return &TLphoneCall{}
}

// CodecEncode:phoneCall
func (m *TLphoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2025673089)
	var flags uint32 = 0
	if m.Getp2p_allowed() != false {
		flags |= 5 << 0
	}
	if m.Getvideo() != false {
		flags |= 6 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_or_b())
	x.Long(m.Getkey_fingerprint())
	x.Bytes(m.Getprotocol().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getconnections())))
	for _, v := range m.Getconnections() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getstart_date())
	return x.Buf
}

// CodecDecode:phoneCall
func (m *TLphoneCall) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setp2p_allowed(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_or_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	m9 := &PhoneCallProtocol{}
	m9.Decode(dbuf)
	m.Setprotocol(m9)
	c10 := dbuf.Int()
	if c10 != 481674261 {
		return dbuf.Err
	}
	l10 := dbuf.Int()
	v10 := make([]PhoneConnection, l10)
	for i := int32(0); i < l10; i++ {
		v10[i] = PhoneConnection{}
		v10[i].Decode(dbuf)
	}
	m.Setconnections(v10)
	m.Setstart_date(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallDiscarded
//
func NewTLphoneCallDiscarded() *TLphoneCallDiscarded {
	return &TLphoneCallDiscarded{}
}

// CodecEncode:phoneCallDiscarded
func (m *TLphoneCallDiscarded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1355435489)
	var flags uint32 = 0
	if m.Getneed_rating() != false {
		flags |= 2 << 0
	}
	if m.Getneed_debug() != false {
		flags |= 3 << 1
	}
	if m.Getvideo() != false {
		flags |= 6 << 2
	}
	if m.Getreason().Constructor != 0 {
		flags |= 0 << 4
	}
	if m.Getduration() != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Long(m.Getid())
	if m.Getreason().Constructor != 0 {
		x.Bytes(m.Getreason().Encode())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	return x.Buf
}

// CodecDecode:phoneCallDiscarded
func (m *TLphoneCallDiscarded) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setneed_rating(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setneed_debug(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	if (flags & (1 << 4)) != 0 {
		m4 := &PhoneCallDiscardReason{}
		m4.Decode(dbuf)
		m.Setreason(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setduration(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_messages
//
func NewTLmessages_messages() *TLmessages_messages {
	return &TLmessages_messages{}
}

// CodecEncode:messages_messages
func (m *TLmessages_messages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1938715001)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messages
func (m *TLmessages_messages) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Message{}
		v0[i].Decode(dbuf)
	}
	m.Setmessages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_messagesSlice
//
func NewTLmessages_messagesSlice() *TLmessages_messagesSlice {
	return &TLmessages_messagesSlice{}
}

// CodecEncode:messages_messagesSlice
func (m *TLmessages_messagesSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(978610270)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 0
	}
	if m.Getnext_rate() != 0 {
		flags |= 0 << 2
	}
	if m.Getoffset_id_offset() != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Int(m.Getcount())
	if m.Getnext_rate() != 0 {
		x.Int(m.Getnext_rate())
	}
	if m.Getoffset_id_offset() != 0 {
		x.Int(m.Getoffset_id_offset())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messagesSlice
func (m *TLmessages_messagesSlice) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setinexact(true)
	}
	m.Setcount(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setnext_rate(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setoffset_id_offset(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Message, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Message{}
		v4[i].Decode(dbuf)
	}
	m.Setmessages(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_channelMessages
//
func NewTLmessages_channelMessages() *TLmessages_channelMessages {
	return &TLmessages_channelMessages{}
}

// CodecEncode:messages_channelMessages
func (m *TLmessages_channelMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1682413576)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 0
	}
	if m.Getoffset_id_offset() != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	x.Int(m.Getcount())
	if m.Getoffset_id_offset() != 0 {
		x.Int(m.Getoffset_id_offset())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_channelMessages
func (m *TLmessages_channelMessages) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setinexact(true)
	}
	m.Setpts(dbuf.Int())
	m.Setcount(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setoffset_id_offset(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Message, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Message{}
		v4[i].Decode(dbuf)
	}
	m.Setmessages(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_messagesNotModified
//
func NewTLmessages_messagesNotModified() *TLmessages_messagesNotModified {
	return &TLmessages_messagesNotModified{}
}

// CodecEncode:messages_messagesNotModified
func (m *TLmessages_messagesNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1951620897)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_messagesNotModified
func (m *TLmessages_messagesNotModified) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:fileLocationToBeDeprecated
//
func NewTLfileLocationToBeDeprecated() *TLfileLocationToBeDeprecated {
	return &TLfileLocationToBeDeprecated{}
}

// CodecEncode:fileLocationToBeDeprecated
func (m *TLfileLocationToBeDeprecated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1132476723)
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:fileLocationToBeDeprecated
func (m *TLfileLocationToBeDeprecated) Decode(dbuf *code.DecodeBuf) error {
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsGroupTopAdmin
//
func NewTLstatsGroupTopAdmin() *TLstatsGroupTopAdmin {
	return &TLstatsGroupTopAdmin{}
}

// CodecEncode:statsGroupTopAdmin
func (m *TLstatsGroupTopAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1611985938)
	x.Int(m.Getuser_id())
	x.Int(m.Getdeleted())
	x.Int(m.Getkicked())
	x.Int(m.Getbanned())
	return x.Buf
}

// CodecDecode:statsGroupTopAdmin
func (m *TLstatsGroupTopAdmin) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdeleted(dbuf.Int())
	m.Setkicked(dbuf.Int())
	m.Setbanned(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:postAddress
//
func NewTLpostAddress() *TLpostAddress {
	return &TLpostAddress{}
}

// CodecEncode:postAddress
func (m *TLpostAddress) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(512535275)
	x.String(m.Getstreet_line1())
	x.String(m.Getstreet_line2())
	x.String(m.Getcity())
	x.String(m.Getstate())
	x.String(m.Getcountry_iso2())
	x.String(m.Getpost_code())
	return x.Buf
}

// CodecDecode:postAddress
func (m *TLpostAddress) Decode(dbuf *code.DecodeBuf) error {
	m.Setstreet_line1(dbuf.String())
	m.Setstreet_line2(dbuf.String())
	m.Setcity(dbuf.String())
	m.Setstate(dbuf.String())
	m.Setcountry_iso2(dbuf.String())
	m.Setpost_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputSecureFileUploaded
//
func NewTLinputSecureFileUploaded() *TLinputSecureFileUploaded {
	return &TLinputSecureFileUploaded{}
}

// CodecEncode:inputSecureFileUploaded
func (m *TLinputSecureFileUploaded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(859091184)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getmd5_checksum())
	x.Bytes(m.Getfile_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:inputSecureFileUploaded
func (m *TLinputSecureFileUploaded) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setmd5_checksum(dbuf.String())
	m.Setfile_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputSecureFile
//
func NewTLinputSecureFile() *TLinputSecureFile {
	return &TLinputSecureFile{}
}

// CodecEncode:inputSecureFile
func (m *TLinputSecureFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1399317950)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputSecureFile
func (m *TLinputSecureFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_peerDialogs
//
func NewTLmessages_peerDialogs() *TLmessages_peerDialogs {
	return &TLmessages_peerDialogs{}
}

// CodecEncode:messages_peerDialogs
func (m *TLmessages_peerDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(863093588)
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getstate().Encode())
	return x.Buf
}

// CodecDecode:messages_peerDialogs
func (m *TLmessages_peerDialogs) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Dialog, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Dialog{}
		v0[i].Decode(dbuf)
	}
	m.Setdialogs(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Message, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Message{}
		v1[i].Decode(dbuf)
	}
	m.Setmessages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	m4 := &Updates_State{}
	m4.Decode(dbuf)
	m.Setstate(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_blocked
//
func NewTLcontacts_blocked() *TLcontacts_blocked {
	return &TLcontacts_blocked{}
}

// CodecEncode:contacts_blocked
func (m *TLcontacts_blocked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(182326673)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocked())))
	for _, v := range m.Getblocked() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_blocked
func (m *TLcontacts_blocked) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PeerBlocked, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PeerBlocked{}
		v0[i].Decode(dbuf)
	}
	m.Setblocked(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_blockedSlice
//
func NewTLcontacts_blockedSlice() *TLcontacts_blockedSlice {
	return &TLcontacts_blockedSlice{}
}

// CodecEncode:contacts_blockedSlice
func (m *TLcontacts_blockedSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-513392236)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocked())))
	for _, v := range m.Getblocked() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_blockedSlice
func (m *TLcontacts_blockedSlice) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PeerBlocked, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PeerBlocked{}
		v1[i].Decode(dbuf)
	}
	m.Setblocked(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageRange
//
func NewTLmessageRange() *TLmessageRange {
	return &TLmessageRange{}
}

// CodecEncode:messageRange
func (m *TLmessageRange) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(182649427)
	x.Int(m.Getmin_id())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messageRange
func (m *TLmessageRange) Decode(dbuf *code.DecodeBuf) error {
	m.Setmin_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_promoDataEmpty
//
func NewTLhelp_promoDataEmpty() *TLhelp_promoDataEmpty {
	return &TLhelp_promoDataEmpty{}
}

// CodecEncode:help_promoDataEmpty
func (m *TLhelp_promoDataEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1728664459)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:help_promoDataEmpty
func (m *TLhelp_promoDataEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_promoData
//
func NewTLhelp_promoData() *TLhelp_promoData {
	return &TLhelp_promoData{}
}

// CodecEncode:help_promoData
func (m *TLhelp_promoData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1942390465)
	var flags uint32 = 0
	if m.Getproxy() != false {
		flags |= 0 << 0
	}
	if m.Getpsa_type() != "" {
		flags |= 1 << 5
	}
	if m.Getpsa_message() != "" {
		flags |= 2 << 6
	}
	x.UInt(flags)
	x.Int(m.Getexpires())
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getpsa_type() != "" {
		x.String(m.Getpsa_type())
	}
	if m.Getpsa_message() != "" {
		x.String(m.Getpsa_message())
	}
	return x.Buf
}

// CodecDecode:help_promoData
func (m *TLhelp_promoData) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setproxy(true)
	}
	m.Setexpires(dbuf.Int())
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	if (flags & (1 << 5)) != 0 {
		m.Setpsa_type(dbuf.String())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpsa_message(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:upload_webFile
//
func NewTLupload_webFile() *TLupload_webFile {
	return &TLupload_webFile{}
}

// CodecEncode:upload_webFile
func (m *TLupload_webFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(568808380)
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Bytes(m.Getfile_type().Encode())
	x.Int(m.Getmtime())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_webFile
func (m *TLupload_webFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	m2 := &Storage_FileType{}
	m2.Decode(dbuf)
	m.Setfile_type(m2)
	m.Setmtime(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_botResults
//
func NewTLmessages_botResults() *TLmessages_botResults {
	return &TLmessages_botResults{}
}

// CodecEncode:messages_botResults
func (m *TLmessages_botResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1803769784)
	var flags uint32 = 0
	if m.Getgallery() != false {
		flags |= 0 << 0
	}
	if m.Getnext_offset() != "" {
		flags |= 1 << 2
	}
	if m.Getswitch_pm().Constructor != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	if m.Getswitch_pm().Constructor != 0 {
		x.Bytes(m.Getswitch_pm().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getcache_time())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_botResults
func (m *TLmessages_botResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgallery(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &InlineBotSwitchPM{}
		m3.Decode(dbuf)
		m.Setswitch_pm(m3)
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]BotInlineResult, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = BotInlineResult{}
		v4[i].Decode(dbuf)
	}
	m.Setresults(v4)
	m.Setcache_time(dbuf.Int())
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_authorizationForm
//
func NewTLaccount_authorizationForm() *TLaccount_authorizationForm {
	return &TLaccount_authorizationForm{}
}

// CodecEncode:account_authorizationForm
func (m *TLaccount_authorizationForm) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1389486888)
	var flags uint32 = 0
	if m.Getprivacy_policy_url() != "" {
		flags |= 0 << 4
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getrequired_types())))
	for _, v := range m.Getrequired_types() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getvalues())))
	for _, v := range m.Getvalues() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Geterrors())))
	for _, v := range m.Geterrors() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getprivacy_policy_url() != "" {
		x.String(m.Getprivacy_policy_url())
	}
	return x.Buf
}

// CodecDecode:account_authorizationForm
func (m *TLaccount_authorizationForm) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureRequiredType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureRequiredType{}
		v0[i].Decode(dbuf)
	}
	m.Setrequired_types(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]SecureValue, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = SecureValue{}
		v1[i].Decode(dbuf)
	}
	m.Setvalues(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]SecureValueError, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = SecureValueError{}
		v2[i].Decode(dbuf)
	}
	m.Seterrors(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	if (flags & (1 << 4)) != 0 {
		m.Setprivacy_policy_url(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_userInfoEmpty
//
func NewTLhelp_userInfoEmpty() *TLhelp_userInfoEmpty {
	return &TLhelp_userInfoEmpty{}
}

// CodecEncode:help_userInfoEmpty
func (m *TLhelp_userInfoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-206688531)
	return x.Buf
}

// CodecDecode:help_userInfoEmpty
func (m *TLhelp_userInfoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_userInfo
//
func NewTLhelp_userInfo() *TLhelp_userInfo {
	return &TLhelp_userInfo{}
}

// CodecEncode:help_userInfo
func (m *TLhelp_userInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(32192344)
	x.String(m.Getmessage())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Getauthor())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:help_userInfo
func (m *TLhelp_userInfo) Decode(dbuf *code.DecodeBuf) error {
	m.Setmessage(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]MessageEntity, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = MessageEntity{}
		v1[i].Decode(dbuf)
	}
	m.Setentities(v1)
	m.Setauthor(dbuf.String())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterEmpty
//
func NewTLinputMessagesFilterEmpty() *TLinputMessagesFilterEmpty {
	return &TLinputMessagesFilterEmpty{}
}

// CodecEncode:inputMessagesFilterEmpty
func (m *TLinputMessagesFilterEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1474492012)
	return x.Buf
}

// CodecDecode:inputMessagesFilterEmpty
func (m *TLinputMessagesFilterEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterPhotos
//
func NewTLinputMessagesFilterPhotos() *TLinputMessagesFilterPhotos {
	return &TLinputMessagesFilterPhotos{}
}

// CodecEncode:inputMessagesFilterPhotos
func (m *TLinputMessagesFilterPhotos) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1777752804)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhotos
func (m *TLinputMessagesFilterPhotos) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterVideo
//
func NewTLinputMessagesFilterVideo() *TLinputMessagesFilterVideo {
	return &TLinputMessagesFilterVideo{}
}

// CodecEncode:inputMessagesFilterVideo
func (m *TLinputMessagesFilterVideo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1614803355)
	return x.Buf
}

// CodecDecode:inputMessagesFilterVideo
func (m *TLinputMessagesFilterVideo) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterPhotoVideo
//
func NewTLinputMessagesFilterPhotoVideo() *TLinputMessagesFilterPhotoVideo {
	return &TLinputMessagesFilterPhotoVideo{}
}

// CodecEncode:inputMessagesFilterPhotoVideo
func (m *TLinputMessagesFilterPhotoVideo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1458172132)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhotoVideo
func (m *TLinputMessagesFilterPhotoVideo) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterDocument
//
func NewTLinputMessagesFilterDocument() *TLinputMessagesFilterDocument {
	return &TLinputMessagesFilterDocument{}
}

// CodecEncode:inputMessagesFilterDocument
func (m *TLinputMessagesFilterDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1629621880)
	return x.Buf
}

// CodecDecode:inputMessagesFilterDocument
func (m *TLinputMessagesFilterDocument) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterUrl
//
func NewTLinputMessagesFilterUrl() *TLinputMessagesFilterUrl {
	return &TLinputMessagesFilterUrl{}
}

// CodecEncode:inputMessagesFilterUrl
func (m *TLinputMessagesFilterUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2129714567)
	return x.Buf
}

// CodecDecode:inputMessagesFilterUrl
func (m *TLinputMessagesFilterUrl) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterGif
//
func NewTLinputMessagesFilterGif() *TLinputMessagesFilterGif {
	return &TLinputMessagesFilterGif{}
}

// CodecEncode:inputMessagesFilterGif
func (m *TLinputMessagesFilterGif) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-3644025)
	return x.Buf
}

// CodecDecode:inputMessagesFilterGif
func (m *TLinputMessagesFilterGif) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterVoice
//
func NewTLinputMessagesFilterVoice() *TLinputMessagesFilterVoice {
	return &TLinputMessagesFilterVoice{}
}

// CodecEncode:inputMessagesFilterVoice
func (m *TLinputMessagesFilterVoice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1358283666)
	return x.Buf
}

// CodecDecode:inputMessagesFilterVoice
func (m *TLinputMessagesFilterVoice) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterMusic
//
func NewTLinputMessagesFilterMusic() *TLinputMessagesFilterMusic {
	return &TLinputMessagesFilterMusic{}
}

// CodecEncode:inputMessagesFilterMusic
func (m *TLinputMessagesFilterMusic) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(928101534)
	return x.Buf
}

// CodecDecode:inputMessagesFilterMusic
func (m *TLinputMessagesFilterMusic) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterChatPhotos
//
func NewTLinputMessagesFilterChatPhotos() *TLinputMessagesFilterChatPhotos {
	return &TLinputMessagesFilterChatPhotos{}
}

// CodecEncode:inputMessagesFilterChatPhotos
func (m *TLinputMessagesFilterChatPhotos) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(975236280)
	return x.Buf
}

// CodecDecode:inputMessagesFilterChatPhotos
func (m *TLinputMessagesFilterChatPhotos) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterPhoneCalls
//
func NewTLinputMessagesFilterPhoneCalls() *TLinputMessagesFilterPhoneCalls {
	return &TLinputMessagesFilterPhoneCalls{}
}

// CodecEncode:inputMessagesFilterPhoneCalls
func (m *TLinputMessagesFilterPhoneCalls) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2134272152)
	var flags uint32 = 0
	if m.Getmissed() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhoneCalls
func (m *TLinputMessagesFilterPhoneCalls) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmissed(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterRoundVoice
//
func NewTLinputMessagesFilterRoundVoice() *TLinputMessagesFilterRoundVoice {
	return &TLinputMessagesFilterRoundVoice{}
}

// CodecEncode:inputMessagesFilterRoundVoice
func (m *TLinputMessagesFilterRoundVoice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2054952868)
	return x.Buf
}

// CodecDecode:inputMessagesFilterRoundVoice
func (m *TLinputMessagesFilterRoundVoice) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterRoundVideo
//
func NewTLinputMessagesFilterRoundVideo() *TLinputMessagesFilterRoundVideo {
	return &TLinputMessagesFilterRoundVideo{}
}

// CodecEncode:inputMessagesFilterRoundVideo
func (m *TLinputMessagesFilterRoundVideo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1253451181)
	return x.Buf
}

// CodecDecode:inputMessagesFilterRoundVideo
func (m *TLinputMessagesFilterRoundVideo) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterMyMentions
//
func NewTLinputMessagesFilterMyMentions() *TLinputMessagesFilterMyMentions {
	return &TLinputMessagesFilterMyMentions{}
}

// CodecEncode:inputMessagesFilterMyMentions
func (m *TLinputMessagesFilterMyMentions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1040652646)
	return x.Buf
}

// CodecDecode:inputMessagesFilterMyMentions
func (m *TLinputMessagesFilterMyMentions) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterGeo
//
func NewTLinputMessagesFilterGeo() *TLinputMessagesFilterGeo {
	return &TLinputMessagesFilterGeo{}
}

// CodecEncode:inputMessagesFilterGeo
func (m *TLinputMessagesFilterGeo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-419271411)
	return x.Buf
}

// CodecDecode:inputMessagesFilterGeo
func (m *TLinputMessagesFilterGeo) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterContacts
//
func NewTLinputMessagesFilterContacts() *TLinputMessagesFilterContacts {
	return &TLinputMessagesFilterContacts{}
}

// CodecEncode:inputMessagesFilterContacts
func (m *TLinputMessagesFilterContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-530392189)
	return x.Buf
}

// CodecDecode:inputMessagesFilterContacts
func (m *TLinputMessagesFilterContacts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagesFilterPinned
//
func NewTLinputMessagesFilterPinned() *TLinputMessagesFilterPinned {
	return &TLinputMessagesFilterPinned{}
}

// CodecEncode:inputMessagesFilterPinned
func (m *TLinputMessagesFilterPinned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(464520273)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPinned
func (m *TLinputMessagesFilterPinned) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:receivedNotifyMessage
//
func NewTLreceivedNotifyMessage() *TLreceivedNotifyMessage {
	return &TLreceivedNotifyMessage{}
}

// CodecEncode:receivedNotifyMessage
func (m *TLreceivedNotifyMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1551583367)
	x.Int(m.Getid())
	x.Int(m.Getflags())
	return x.Buf
}

// CodecDecode:receivedNotifyMessage
func (m *TLreceivedNotifyMessage) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setflags(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureFileEmpty
//
func NewTLsecureFileEmpty() *TLsecureFileEmpty {
	return &TLsecureFileEmpty{}
}

// CodecEncode:secureFileEmpty
func (m *TLsecureFileEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1679398724)
	return x.Buf
}

// CodecDecode:secureFileEmpty
func (m *TLsecureFileEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureFile
//
func NewTLsecureFile() *TLsecureFile {
	return &TLsecureFile{}
}

// CodecEncode:secureFile
func (m *TLsecureFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-534283678)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.Int(m.Getdc_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getfile_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureFile
func (m *TLsecureFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setdc_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setfile_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:securePasswordKdfAlgoUnknown
//
func NewTLsecurePasswordKdfAlgoUnknown() *TLsecurePasswordKdfAlgoUnknown {
	return &TLsecurePasswordKdfAlgoUnknown{}
}

// CodecEncode:securePasswordKdfAlgoUnknown
func (m *TLsecurePasswordKdfAlgoUnknown) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(4883767)
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoUnknown
func (m *TLsecurePasswordKdfAlgoUnknown) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:securePasswordKdfAlgoPBKDF2HMACSHA512iter100000
//
func NewTLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000() *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 {
	return &TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{}
}

// CodecEncode:securePasswordKdfAlgoPBKDF2HMACSHA512iter100000
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1141711456)
	x.Bytes(m.Getsalt())
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoPBKDF2HMACSHA512iter100000
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Decode(dbuf *code.DecodeBuf) error {
	m.Setsalt(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:securePasswordKdfAlgoSHA512
//
func NewTLsecurePasswordKdfAlgoSHA512() *TLsecurePasswordKdfAlgoSHA512 {
	return &TLsecurePasswordKdfAlgoSHA512{}
}

// CodecEncode:securePasswordKdfAlgoSHA512
func (m *TLsecurePasswordKdfAlgoSHA512) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2042159726)
	x.Bytes(m.Getsalt())
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoSHA512
func (m *TLsecurePasswordKdfAlgoSHA512) Decode(dbuf *code.DecodeBuf) error {
	m.Setsalt(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusEmpty
//
func NewTLuserStatusEmpty() *TLuserStatusEmpty {
	return &TLuserStatusEmpty{}
}

// CodecEncode:userStatusEmpty
func (m *TLuserStatusEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(164646985)
	return x.Buf
}

// CodecDecode:userStatusEmpty
func (m *TLuserStatusEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusOnline
//
func NewTLuserStatusOnline() *TLuserStatusOnline {
	return &TLuserStatusOnline{}
}

// CodecEncode:userStatusOnline
func (m *TLuserStatusOnline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-306628279)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:userStatusOnline
func (m *TLuserStatusOnline) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusOffline
//
func NewTLuserStatusOffline() *TLuserStatusOffline {
	return &TLuserStatusOffline{}
}

// CodecEncode:userStatusOffline
func (m *TLuserStatusOffline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(9203775)
	x.Int(m.Getwas_online())
	return x.Buf
}

// CodecDecode:userStatusOffline
func (m *TLuserStatusOffline) Decode(dbuf *code.DecodeBuf) error {
	m.Setwas_online(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusRecently
//
func NewTLuserStatusRecently() *TLuserStatusRecently {
	return &TLuserStatusRecently{}
}

// CodecEncode:userStatusRecently
func (m *TLuserStatusRecently) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-496024847)
	return x.Buf
}

// CodecDecode:userStatusRecently
func (m *TLuserStatusRecently) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusLastWeek
//
func NewTLuserStatusLastWeek() *TLuserStatusLastWeek {
	return &TLuserStatusLastWeek{}
}

// CodecEncode:userStatusLastWeek
func (m *TLuserStatusLastWeek) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(129960444)
	return x.Buf
}

// CodecDecode:userStatusLastWeek
func (m *TLuserStatusLastWeek) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:userStatusLastMonth
//
func NewTLuserStatusLastMonth() *TLuserStatusLastMonth {
	return &TLuserStatusLastMonth{}
}

// CodecEncode:userStatusLastMonth
func (m *TLuserStatusLastMonth) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2011940674)
	return x.Buf
}

// CodecDecode:userStatusLastMonth
func (m *TLuserStatusLastMonth) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWallPaper
//
func NewTLinputWallPaper() *TLinputWallPaper {
	return &TLinputWallPaper{}
}

// CodecEncode:inputWallPaper
func (m *TLinputWallPaper) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-433014407)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputWallPaper
func (m *TLinputWallPaper) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWallPaperSlug
//
func NewTLinputWallPaperSlug() *TLinputWallPaperSlug {
	return &TLinputWallPaperSlug{}
}

// CodecEncode:inputWallPaperSlug
func (m *TLinputWallPaperSlug) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1913199744)
	x.String(m.Getslug())
	return x.Buf
}

// CodecDecode:inputWallPaperSlug
func (m *TLinputWallPaperSlug) Decode(dbuf *code.DecodeBuf) error {
	m.Setslug(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWallPaperNoFile
//
func NewTLinputWallPaperNoFile() *TLinputWallPaperNoFile {
	return &TLinputWallPaperNoFile{}
}

// CodecEncode:inputWallPaperNoFile
func (m *TLinputWallPaperNoFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2077770836)
	return x.Buf
}

// CodecDecode:inputWallPaperNoFile
func (m *TLinputWallPaperNoFile) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMessageMediaAuto
//
func NewTLbotInlineMessageMediaAuto() *TLbotInlineMessageMediaAuto {
	return &TLbotInlineMessageMediaAuto{}
}

// CodecEncode:botInlineMessageMediaAuto
func (m *TLbotInlineMessageMediaAuto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1984755728)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaAuto
func (m *TLbotInlineMessageMediaAuto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &ReplyMarkup{}
		m2.Decode(dbuf)
		m.Setreply_markup(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMessageText
//
func NewTLbotInlineMessageText() *TLbotInlineMessageText {
	return &TLbotInlineMessageText{}
}

// CodecEncode:botInlineMessageText
func (m *TLbotInlineMessageText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1937807902)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 0 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 2
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageText
func (m *TLbotInlineMessageText) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &ReplyMarkup{}
		m3.Decode(dbuf)
		m.Setreply_markup(m3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMessageMediaGeo
//
func NewTLbotInlineMessageMediaGeo() *TLbotInlineMessageMediaGeo {
	return &TLbotInlineMessageMediaGeo{}
}

// CodecEncode:botInlineMessageMediaGeo
func (m *TLbotInlineMessageMediaGeo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(85477117)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 0 << 1
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 2
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 3 << 3
	}
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaGeo
func (m *TLbotInlineMessageMediaGeo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMessageMediaVenue
//
func NewTLbotInlineMessageMediaVenue() *TLbotInlineMessageMediaVenue {
	return &TLbotInlineMessageMediaVenue{}
}

// CodecEncode:botInlineMessageMediaVenue
func (m *TLbotInlineMessageMediaVenue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1970903652)
	var flags uint32 = 0
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 6
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaVenue
func (m *TLbotInlineMessageMediaVenue) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m6 := &ReplyMarkup{}
		m6.Decode(dbuf)
		m.Setreply_markup(m6)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInlineMessageMediaContact
//
func NewTLbotInlineMessageMediaContact() *TLbotInlineMessageMediaContact {
	return &TLbotInlineMessageMediaContact{}
}

// CodecEncode:botInlineMessageMediaContact
func (m *TLbotInlineMessageMediaContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(416402882)
	var flags uint32 = 0
	if m.Getreply_markup().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	if m.Getreply_markup().Constructor != 0 {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaContact
func (m *TLbotInlineMessageMediaContact) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:langPackLanguage
//
func NewTLlangPackLanguage() *TLlangPackLanguage {
	return &TLlangPackLanguage{}
}

// CodecEncode:langPackLanguage
func (m *TLlangPackLanguage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-288727837)
	var flags uint32 = 0
	if m.Getofficial() != false {
		flags |= 0 << 0
	}
	if m.Getrtl() != false {
		flags |= 2 << 1
	}
	if m.Getbeta() != false {
		flags |= 3 << 2
	}
	if m.Getbase_lang_code() != "" {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.String(m.Getname())
	x.String(m.Getnative_name())
	x.String(m.Getlang_code())
	if m.Getbase_lang_code() != "" {
		x.String(m.Getbase_lang_code())
	}
	x.String(m.Getplural_code())
	x.Int(m.Getstrings_count())
	x.Int(m.Gettranslated_count())
	x.String(m.Gettranslations_url())
	return x.Buf
}

// CodecDecode:langPackLanguage
func (m *TLlangPackLanguage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setofficial(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setrtl(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbeta(true)
	}
	m.Setname(dbuf.String())
	m.Setnative_name(dbuf.String())
	m.Setlang_code(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m.Setbase_lang_code(dbuf.String())
	}
	m.Setplural_code(dbuf.String())
	m.Setstrings_count(dbuf.Int())
	m.Settranslated_count(dbuf.Int())
	m.Settranslations_url(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:popularContact
//
func NewTLpopularContact() *TLpopularContact {
	return &TLpopularContact{}
}

// CodecEncode:popularContact
func (m *TLpopularContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1558266229)
	x.Long(m.Getclient_id())
	x.Int(m.Getimporters())
	return x.Buf
}

// CodecDecode:popularContact
func (m *TLpopularContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setclient_id(dbuf.Long())
	m.Setimporters(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWebFileLocation
//
func NewTLinputWebFileLocation() *TLinputWebFileLocation {
	return &TLinputWebFileLocation{}
}

// CodecEncode:inputWebFileLocation
func (m *TLinputWebFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1036396922)
	x.String(m.Geturl())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputWebFileLocation
func (m *TLinputWebFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputWebFileGeoPointLocation
//
func NewTLinputWebFileGeoPointLocation() *TLinputWebFileGeoPointLocation {
	return &TLinputWebFileGeoPointLocation{}
}

// CodecEncode:inputWebFileGeoPointLocation
func (m *TLinputWebFileGeoPointLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1625153079)
	x.Bytes(m.Getgeo_point().Encode())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getzoom())
	x.Int(m.Getscale())
	return x.Buf
}

// CodecDecode:inputWebFileGeoPointLocation
func (m *TLinputWebFileGeoPointLocation) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Setaccess_hash(dbuf.Long())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setzoom(dbuf.Int())
	m.Setscale(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_savedGifsNotModified
//
func NewTLmessages_savedGifsNotModified() *TLmessages_savedGifsNotModified {
	return &TLmessages_savedGifsNotModified{}
}

// CodecEncode:messages_savedGifsNotModified
func (m *TLmessages_savedGifsNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-402498398)
	return x.Buf
}

// CodecDecode:messages_savedGifsNotModified
func (m *TLmessages_savedGifsNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_savedGifs
//
func NewTLmessages_savedGifs() *TLmessages_savedGifs {
	return &TLmessages_savedGifs{}
}

// CodecEncode:messages_savedGifs
func (m *TLmessages_savedGifs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(772213157)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getgifs())))
	for _, v := range m.Getgifs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_savedGifs
func (m *TLmessages_savedGifs) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Document{}
		v1[i].Decode(dbuf)
	}
	m.Setgifs(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_appUpdate
//
func NewTLhelp_appUpdate() *TLhelp_appUpdate {
	return &TLhelp_appUpdate{}
}

// CodecEncode:help_appUpdate
func (m *TLhelp_appUpdate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(497489295)
	var flags uint32 = 0
	if m.Getcan_not_skip() != false {
		flags |= 0 << 0
	}
	if m.Getdocument().Constructor != 0 {
		flags |= 1 << 5
	}
	if m.Geturl() != "" {
		flags |= 2 << 6
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getversion())
	x.String(m.Gettext())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	return x.Buf
}

// CodecDecode:help_appUpdate
func (m *TLhelp_appUpdate) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_not_skip(true)
	}
	m.Setid(dbuf.Int())
	m.Setversion(dbuf.String())
	m.Settext(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]MessageEntity, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = MessageEntity{}
		v4[i].Decode(dbuf)
	}
	m.Setentities(v4)
	if (flags & (1 << 5)) != 0 {
		m5 := &Document{}
		m5.Decode(dbuf)
		m.Setdocument(m5)
	}
	if (flags & (1 << 6)) != 0 {
		m.Seturl(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_noAppUpdate
//
func NewTLhelp_noAppUpdate() *TLhelp_noAppUpdate {
	return &TLhelp_noAppUpdate{}
}

// CodecEncode:help_noAppUpdate
func (m *TLhelp_noAppUpdate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1000708810)
	return x.Buf
}

// CodecDecode:help_noAppUpdate
func (m *TLhelp_noAppUpdate) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:baseThemeClassic
//
func NewTLbaseThemeClassic() *TLbaseThemeClassic {
	return &TLbaseThemeClassic{}
}

// CodecEncode:baseThemeClassic
func (m *TLbaseThemeClassic) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1012849566)
	return x.Buf
}

// CodecDecode:baseThemeClassic
func (m *TLbaseThemeClassic) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:baseThemeDay
//
func NewTLbaseThemeDay() *TLbaseThemeDay {
	return &TLbaseThemeDay{}
}

// CodecEncode:baseThemeDay
func (m *TLbaseThemeDay) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-69724536)
	return x.Buf
}

// CodecDecode:baseThemeDay
func (m *TLbaseThemeDay) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:baseThemeNight
//
func NewTLbaseThemeNight() *TLbaseThemeNight {
	return &TLbaseThemeNight{}
}

// CodecEncode:baseThemeNight
func (m *TLbaseThemeNight) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1212997976)
	return x.Buf
}

// CodecDecode:baseThemeNight
func (m *TLbaseThemeNight) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:baseThemeTinted
//
func NewTLbaseThemeTinted() *TLbaseThemeTinted {
	return &TLbaseThemeTinted{}
}

// CodecEncode:baseThemeTinted
func (m *TLbaseThemeTinted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1834973166)
	return x.Buf
}

// CodecDecode:baseThemeTinted
func (m *TLbaseThemeTinted) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:baseThemeArctic
//
func NewTLbaseThemeArctic() *TLbaseThemeArctic {
	return &TLbaseThemeArctic{}
}

// CodecEncode:baseThemeArctic
func (m *TLbaseThemeArctic) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1527845466)
	return x.Buf
}

// CodecDecode:baseThemeArctic
func (m *TLbaseThemeArctic) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stickerPack
//
func NewTLstickerPack() *TLstickerPack {
	return &TLstickerPack{}
}

// CodecEncode:stickerPack
func (m *TLstickerPack) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(313694676)
	x.String(m.Getemoticon())
	x.Int(481674261)
	x.Int(int32(len(m.Getdocuments())))
	for _, v := range m.Getdocuments() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stickerPack
func (m *TLstickerPack) Decode(dbuf *code.DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	m.Setdocuments(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileUnknown
//
func NewTLstorage_fileUnknown() *TLstorage_fileUnknown {
	return &TLstorage_fileUnknown{}
}

// CodecEncode:storage_fileUnknown
func (m *TLstorage_fileUnknown) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1432995067)
	return x.Buf
}

// CodecDecode:storage_fileUnknown
func (m *TLstorage_fileUnknown) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_filePartial
//
func NewTLstorage_filePartial() *TLstorage_filePartial {
	return &TLstorage_filePartial{}
}

// CodecEncode:storage_filePartial
func (m *TLstorage_filePartial) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1086091090)
	return x.Buf
}

// CodecDecode:storage_filePartial
func (m *TLstorage_filePartial) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileJpeg
//
func NewTLstorage_fileJpeg() *TLstorage_fileJpeg {
	return &TLstorage_fileJpeg{}
}

// CodecEncode:storage_fileJpeg
func (m *TLstorage_fileJpeg) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(8322574)
	return x.Buf
}

// CodecDecode:storage_fileJpeg
func (m *TLstorage_fileJpeg) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileGif
//
func NewTLstorage_fileGif() *TLstorage_fileGif {
	return &TLstorage_fileGif{}
}

// CodecEncode:storage_fileGif
func (m *TLstorage_fileGif) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-891180321)
	return x.Buf
}

// CodecDecode:storage_fileGif
func (m *TLstorage_fileGif) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_filePng
//
func NewTLstorage_filePng() *TLstorage_filePng {
	return &TLstorage_filePng{}
}

// CodecEncode:storage_filePng
func (m *TLstorage_filePng) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(172975040)
	return x.Buf
}

// CodecDecode:storage_filePng
func (m *TLstorage_filePng) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_filePdf
//
func NewTLstorage_filePdf() *TLstorage_filePdf {
	return &TLstorage_filePdf{}
}

// CodecEncode:storage_filePdf
func (m *TLstorage_filePdf) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1373745011)
	return x.Buf
}

// CodecDecode:storage_filePdf
func (m *TLstorage_filePdf) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileMp3
//
func NewTLstorage_fileMp3() *TLstorage_fileMp3 {
	return &TLstorage_fileMp3{}
}

// CodecEncode:storage_fileMp3
func (m *TLstorage_fileMp3) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1384777335)
	return x.Buf
}

// CodecDecode:storage_fileMp3
func (m *TLstorage_fileMp3) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileMov
//
func NewTLstorage_fileMov() *TLstorage_fileMov {
	return &TLstorage_fileMov{}
}

// CodecEncode:storage_fileMov
func (m *TLstorage_fileMov) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1258941372)
	return x.Buf
}

// CodecDecode:storage_fileMov
func (m *TLstorage_fileMov) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileMp4
//
func NewTLstorage_fileMp4() *TLstorage_fileMp4 {
	return &TLstorage_fileMp4{}
}

// CodecEncode:storage_fileMp4
func (m *TLstorage_fileMp4) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1278304028)
	return x.Buf
}

// CodecDecode:storage_fileMp4
func (m *TLstorage_fileMp4) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:storage_fileWebp
//
func NewTLstorage_fileWebp() *TLstorage_fileWebp {
	return &TLstorage_fileWebp{}
}

// CodecEncode:storage_fileWebp
func (m *TLstorage_fileWebp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(276907596)
	return x.Buf
}

// CodecDecode:storage_fileWebp
func (m *TLstorage_fileWebp) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineResult
//
func NewTLinputBotInlineResult() *TLinputBotInlineResult {
	return &TLinputBotInlineResult{}
}

// CodecEncode:inputBotInlineResult
func (m *TLinputBotInlineResult) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2000710887)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 2
	}
	if m.Getdescription() != "" {
		flags |= 2 << 3
	}
	if m.Geturl() != "" {
		flags |= 3 << 4
	}
	if m.Getthumb().Constructor != 0 {
		flags |= 4 << 5
	}
	if m.Getcontent().Constructor != 0 {
		flags |= 5 << 6
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getcontent().Constructor != 0 {
		x.Bytes(m.Getcontent().Encode())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResult
func (m *TLinputBotInlineResult) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &InputWebDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	if (flags & (1 << 6)) != 0 {
		m6 := &InputWebDocument{}
		m6.Decode(dbuf)
		m.Setcontent(m6)
	}
	m7 := &InputBotInlineMessage{}
	m7.Decode(dbuf)
	m.Setsend_message(m7)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineResultPhoto
//
func NewTLinputBotInlineResultPhoto() *TLinputBotInlineResultPhoto {
	return &TLinputBotInlineResultPhoto{}
}

// CodecEncode:inputBotInlineResultPhoto
func (m *TLinputBotInlineResultPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1462213465)
	x.String(m.Getid())
	x.String(m.Gettype())
	x.Bytes(m.Getphoto().Encode())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultPhoto
func (m *TLinputBotInlineResultPhoto) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settype(dbuf.String())
	m2 := &InputPhoto{}
	m2.Decode(dbuf)
	m.Setphoto(m2)
	m3 := &InputBotInlineMessage{}
	m3.Decode(dbuf)
	m.Setsend_message(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineResultDocument
//
func NewTLinputBotInlineResultDocument() *TLinputBotInlineResultDocument {
	return &TLinputBotInlineResultDocument{}
}

// CodecEncode:inputBotInlineResultDocument
func (m *TLinputBotInlineResultDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-459324)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 2
	}
	if m.Getdescription() != "" {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	x.Bytes(m.Getdocument().Encode())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultDocument
func (m *TLinputBotInlineResultDocument) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	m4 := &InputDocument{}
	m4.Decode(dbuf)
	m.Setdocument(m4)
	m5 := &InputBotInlineMessage{}
	m5.Decode(dbuf)
	m.Setsend_message(m5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputBotInlineResultGame
//
func NewTLinputBotInlineResultGame() *TLinputBotInlineResultGame {
	return &TLinputBotInlineResultGame{}
}

// CodecEncode:inputBotInlineResultGame
func (m *TLinputBotInlineResultGame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1336154098)
	x.String(m.Getid())
	x.String(m.Getshort_name())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultGame
func (m *TLinputBotInlineResultGame) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Setshort_name(dbuf.String())
	m2 := &InputBotInlineMessage{}
	m2.Decode(dbuf)
	m.Setsend_message(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_paymentForm
//
func NewTLpayments_paymentForm() *TLpayments_paymentForm {
	return &TLpayments_paymentForm{}
}

// CodecEncode:payments_paymentForm
func (m *TLpayments_paymentForm) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1062645411)
	var flags uint32 = 0
	if m.Getcan_save_credentials() != false {
		flags |= 2 << 0
	}
	if m.Getpassword_missing() != false {
		flags |= 3 << 1
	}
	if m.Getnative_provider() != "" {
		flags |= 4 << 6
	}
	if m.Getnative_params().Constructor != 0 {
		flags |= 4 << 7
	}
	if m.Getsaved_info().Constructor != 0 {
		flags |= 0 << 8
	}
	if m.Getsaved_credentials().Constructor != 0 {
		flags |= 1 << 9
	}
	x.UInt(flags)
	x.Int(m.Getbot_id())
	x.Bytes(m.Getinvoice().Encode())
	x.Int(m.Getprovider_id())
	x.String(m.Geturl())
	if m.Getnative_provider() != "" {
		x.String(m.Getnative_provider())
	}
	if m.Getnative_params().Constructor != 0 {
		x.Bytes(m.Getnative_params().Encode())
	}
	if m.Getsaved_info().Constructor != 0 {
		x.Bytes(m.Getsaved_info().Encode())
	}
	if m.Getsaved_credentials().Constructor != 0 {
		x.Bytes(m.Getsaved_credentials().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_paymentForm
func (m *TLpayments_paymentForm) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_save_credentials(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setpassword_missing(true)
	}
	m.Setbot_id(dbuf.Int())
	m3 := &Invoice{}
	m3.Decode(dbuf)
	m.Setinvoice(m3)
	m.Setprovider_id(dbuf.Int())
	m.Seturl(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m.Setnative_provider(dbuf.String())
	}
	if (flags & (1 << 7)) != 0 {
		m7 := &DataJSON{}
		m7.Decode(dbuf)
		m.Setnative_params(m7)
	}
	if (flags & (1 << 8)) != 0 {
		m8 := &PaymentRequestedInfo{}
		m8.Decode(dbuf)
		m.Setsaved_info(m8)
	}
	if (flags & (1 << 9)) != 0 {
		m9 := &PaymentSavedCredentials{}
		m9.Decode(dbuf)
		m.Setsaved_credentials(m9)
	}
	c10 := dbuf.Int()
	if c10 != 481674261 {
		return dbuf.Err
	}
	l10 := dbuf.Int()
	v10 := make([]User, l10)
	for i := int32(0); i < l10; i++ {
		v10[i] = User{}
		v10[i].Decode(dbuf)
	}
	m.Setusers(v10)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_validatedRequestedInfo
//
func NewTLpayments_validatedRequestedInfo() *TLpayments_validatedRequestedInfo {
	return &TLpayments_validatedRequestedInfo{}
}

// CodecEncode:payments_validatedRequestedInfo
func (m *TLpayments_validatedRequestedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-784000893)
	var flags uint32 = 0
	if m.Getid() != "" {
		flags |= 0 << 0
	}
	if len(m.Getshipping_options()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getid() != "" {
		x.String(m.Getid())
	}
	if len(m.Getshipping_options()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getshipping_options())))
		for _, v := range m.Getshipping_options() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:payments_validatedRequestedInfo
func (m *TLpayments_validatedRequestedInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setid(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]ShippingOption, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = ShippingOption{}
			v1[i].Decode(dbuf)
		}
		m.Setshipping_options(v1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pollAnswer
//
func NewTLpollAnswer() *TLpollAnswer {
	return &TLpollAnswer{}
}

// CodecEncode:pollAnswer
func (m *TLpollAnswer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1823064809)
	x.String(m.Gettext())
	x.Bytes(m.Getoption())
	return x.Buf
}

// CodecDecode:pollAnswer
func (m *TLpollAnswer) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Setoption(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueHash
//
func NewTLsecureValueHash() *TLsecureValueHash {
	return &TLsecureValueHash{}
}

// CodecEncode:secureValueHash
func (m *TLsecureValueHash) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-316748368)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:secureValueHash
func (m *TLsecureValueHash) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatParticipant
//
func NewTLchatParticipant() *TLchatParticipant {
	return &TLchatParticipant{}
}

// CodecEncode:chatParticipant
func (m *TLchatParticipant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-925415106)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:chatParticipant
func (m *TLchatParticipant) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatParticipantCreator
//
func NewTLchatParticipantCreator() *TLchatParticipantCreator {
	return &TLchatParticipantCreator{}
}

// CodecEncode:chatParticipantCreator
func (m *TLchatParticipantCreator) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-636267638)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:chatParticipantCreator
func (m *TLchatParticipantCreator) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatParticipantAdmin
//
func NewTLchatParticipantAdmin() *TLchatParticipantAdmin {
	return &TLchatParticipantAdmin{}
}

// CodecEncode:chatParticipantAdmin
func (m *TLchatParticipantAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-489233354)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:chatParticipantAdmin
func (m *TLchatParticipantAdmin) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:folderPeer
//
func NewTLfolderPeer() *TLfolderPeer {
	return &TLfolderPeer{}
}

// CodecEncode:folderPeer
func (m *TLfolderPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-373643672)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:folderPeer
func (m *TLfolderPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityUnknown
//
func NewTLmessageEntityUnknown() *TLmessageEntityUnknown {
	return &TLmessageEntityUnknown{}
}

// CodecEncode:messageEntityUnknown
func (m *TLmessageEntityUnknown) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1148011883)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUnknown
func (m *TLmessageEntityUnknown) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityMention
//
func NewTLmessageEntityMention() *TLmessageEntityMention {
	return &TLmessageEntityMention{}
}

// CodecEncode:messageEntityMention
func (m *TLmessageEntityMention) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-100378723)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityMention
func (m *TLmessageEntityMention) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityHashtag
//
func NewTLmessageEntityHashtag() *TLmessageEntityHashtag {
	return &TLmessageEntityHashtag{}
}

// CodecEncode:messageEntityHashtag
func (m *TLmessageEntityHashtag) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1868782349)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityHashtag
func (m *TLmessageEntityHashtag) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityBotCommand
//
func NewTLmessageEntityBotCommand() *TLmessageEntityBotCommand {
	return &TLmessageEntityBotCommand{}
}

// CodecEncode:messageEntityBotCommand
func (m *TLmessageEntityBotCommand) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1827637959)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBotCommand
func (m *TLmessageEntityBotCommand) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityUrl
//
func NewTLmessageEntityUrl() *TLmessageEntityUrl {
	return &TLmessageEntityUrl{}
}

// CodecEncode:messageEntityUrl
func (m *TLmessageEntityUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1859134776)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUrl
func (m *TLmessageEntityUrl) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityEmail
//
func NewTLmessageEntityEmail() *TLmessageEntityEmail {
	return &TLmessageEntityEmail{}
}

// CodecEncode:messageEntityEmail
func (m *TLmessageEntityEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1692693954)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityEmail
func (m *TLmessageEntityEmail) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityBold
//
func NewTLmessageEntityBold() *TLmessageEntityBold {
	return &TLmessageEntityBold{}
}

// CodecEncode:messageEntityBold
func (m *TLmessageEntityBold) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1117713463)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBold
func (m *TLmessageEntityBold) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityItalic
//
func NewTLmessageEntityItalic() *TLmessageEntityItalic {
	return &TLmessageEntityItalic{}
}

// CodecEncode:messageEntityItalic
func (m *TLmessageEntityItalic) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2106619040)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityItalic
func (m *TLmessageEntityItalic) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityCode
//
func NewTLmessageEntityCode() *TLmessageEntityCode {
	return &TLmessageEntityCode{}
}

// CodecEncode:messageEntityCode
func (m *TLmessageEntityCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(681706865)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityCode
func (m *TLmessageEntityCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityPre
//
func NewTLmessageEntityPre() *TLmessageEntityPre {
	return &TLmessageEntityPre{}
}

// CodecEncode:messageEntityPre
func (m *TLmessageEntityPre) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1938967520)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.String(m.Getlanguage())
	return x.Buf
}

// CodecDecode:messageEntityPre
func (m *TLmessageEntityPre) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Setlanguage(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityTextUrl
//
func NewTLmessageEntityTextUrl() *TLmessageEntityTextUrl {
	return &TLmessageEntityTextUrl{}
}

// CodecEncode:messageEntityTextUrl
func (m *TLmessageEntityTextUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1990644519)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:messageEntityTextUrl
func (m *TLmessageEntityTextUrl) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityMentionName
//
func NewTLmessageEntityMentionName() *TLmessageEntityMentionName {
	return &TLmessageEntityMentionName{}
}

// CodecEncode:messageEntityMentionName
func (m *TLmessageEntityMentionName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(892193368)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageEntityMentionName
func (m *TLmessageEntityMentionName) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessageEntityMentionName
//
func NewTLinputMessageEntityMentionName() *TLinputMessageEntityMentionName {
	return &TLinputMessageEntityMentionName{}
}

// CodecEncode:inputMessageEntityMentionName
func (m *TLinputMessageEntityMentionName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(546203849)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.Bytes(m.Getuser_id_6().Encode())
	return x.Buf
}

// CodecDecode:inputMessageEntityMentionName
func (m *TLinputMessageEntityMentionName) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id_6(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityPhone
//
func NewTLmessageEntityPhone() *TLmessageEntityPhone {
	return &TLmessageEntityPhone{}
}

// CodecEncode:messageEntityPhone
func (m *TLmessageEntityPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1687559349)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityPhone
func (m *TLmessageEntityPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityCashtag
//
func NewTLmessageEntityCashtag() *TLmessageEntityCashtag {
	return &TLmessageEntityCashtag{}
}

// CodecEncode:messageEntityCashtag
func (m *TLmessageEntityCashtag) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1280209983)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityCashtag
func (m *TLmessageEntityCashtag) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityUnderline
//
func NewTLmessageEntityUnderline() *TLmessageEntityUnderline {
	return &TLmessageEntityUnderline{}
}

// CodecEncode:messageEntityUnderline
func (m *TLmessageEntityUnderline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1672577397)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUnderline
func (m *TLmessageEntityUnderline) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityStrike
//
func NewTLmessageEntityStrike() *TLmessageEntityStrike {
	return &TLmessageEntityStrike{}
}

// CodecEncode:messageEntityStrike
func (m *TLmessageEntityStrike) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1090087980)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityStrike
func (m *TLmessageEntityStrike) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityBlockquote
//
func NewTLmessageEntityBlockquote() *TLmessageEntityBlockquote {
	return &TLmessageEntityBlockquote{}
}

// CodecEncode:messageEntityBlockquote
func (m *TLmessageEntityBlockquote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(34469328)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBlockquote
func (m *TLmessageEntityBlockquote) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageEntityBankCard
//
func NewTLmessageEntityBankCard() *TLmessageEntityBankCard {
	return &TLmessageEntityBankCard{}
}

// CodecEncode:messageEntityBankCard
func (m *TLmessageEntityBankCard) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1981704948)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBankCard
func (m *TLmessageEntityBankCard) Decode(dbuf *code.DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_resolvedPeer
//
func NewTLcontacts_resolvedPeer() *TLcontacts_resolvedPeer {
	return &TLcontacts_resolvedPeer{}
}

// CodecEncode:contacts_resolvedPeer
func (m *TLcontacts_resolvedPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2131196633)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_resolvedPeer
func (m *TLcontacts_resolvedPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_codeTypeSms
//
func NewTLauth_codeTypeSms() *TLauth_codeTypeSms {
	return &TLauth_codeTypeSms{}
}

// CodecEncode:auth_codeTypeSms
func (m *TLauth_codeTypeSms) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1923290508)
	return x.Buf
}

// CodecDecode:auth_codeTypeSms
func (m *TLauth_codeTypeSms) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_codeTypeCall
//
func NewTLauth_codeTypeCall() *TLauth_codeTypeCall {
	return &TLauth_codeTypeCall{}
}

// CodecEncode:auth_codeTypeCall
func (m *TLauth_codeTypeCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1948046307)
	return x.Buf
}

// CodecDecode:auth_codeTypeCall
func (m *TLauth_codeTypeCall) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_codeTypeFlashCall
//
func NewTLauth_codeTypeFlashCall() *TLauth_codeTypeFlashCall {
	return &TLauth_codeTypeFlashCall{}
}

// CodecEncode:auth_codeTypeFlashCall
func (m *TLauth_codeTypeFlashCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(577556219)
	return x.Buf
}

// CodecDecode:auth_codeTypeFlashCall
func (m *TLauth_codeTypeFlashCall) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channels_channelParticipants
//
func NewTLchannels_channelParticipants() *TLchannels_channelParticipants {
	return &TLchannels_channelParticipants{}
}

// CodecEncode:channels_channelParticipants
func (m *TLchannels_channelParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-177282392)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getparticipants())))
	for _, v := range m.Getparticipants() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_channelParticipants
func (m *TLchannels_channelParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]ChannelParticipant, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = ChannelParticipant{}
		v1[i].Decode(dbuf)
	}
	m.Setparticipants(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channels_channelParticipantsNotModified
//
func NewTLchannels_channelParticipantsNotModified() *TLchannels_channelParticipantsNotModified {
	return &TLchannels_channelParticipantsNotModified{}
}

// CodecEncode:channels_channelParticipantsNotModified
func (m *TLchannels_channelParticipantsNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-266911767)
	return x.Buf
}

// CodecDecode:channels_channelParticipantsNotModified
func (m *TLchannels_channelParticipantsNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputFileLocation
//
func NewTLinputFileLocation() *TLinputFileLocation {
	return &TLinputFileLocation{}
}

// CodecEncode:inputFileLocation
func (m *TLinputFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-539317279)
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	x.Long(m.Getsecret())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputFileLocation
func (m *TLinputFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	m.Setsecret(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedFileLocation
//
func NewTLinputEncryptedFileLocation() *TLinputEncryptedFileLocation {
	return &TLinputEncryptedFileLocation{}
}

// CodecEncode:inputEncryptedFileLocation
func (m *TLinputEncryptedFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-182231723)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedFileLocation
func (m *TLinputEncryptedFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputDocumentFileLocation
//
func NewTLinputDocumentFileLocation() *TLinputDocumentFileLocation {
	return &TLinputDocumentFileLocation{}
}

// CodecEncode:inputDocumentFileLocation
func (m *TLinputDocumentFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1160743548)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.String(m.Getthumb_size())
	return x.Buf
}

// CodecDecode:inputDocumentFileLocation
func (m *TLinputDocumentFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setthumb_size(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputSecureFileLocation
//
func NewTLinputSecureFileLocation() *TLinputSecureFileLocation {
	return &TLinputSecureFileLocation{}
}

// CodecEncode:inputSecureFileLocation
func (m *TLinputSecureFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-876089816)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputSecureFileLocation
func (m *TLinputSecureFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputTakeoutFileLocation
//
func NewTLinputTakeoutFileLocation() *TLinputTakeoutFileLocation {
	return &TLinputTakeoutFileLocation{}
}

// CodecEncode:inputTakeoutFileLocation
func (m *TLinputTakeoutFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(700340377)
	return x.Buf
}

// CodecDecode:inputTakeoutFileLocation
func (m *TLinputTakeoutFileLocation) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhotoFileLocation
//
func NewTLinputPhotoFileLocation() *TLinputPhotoFileLocation {
	return &TLinputPhotoFileLocation{}
}

// CodecEncode:inputPhotoFileLocation
func (m *TLinputPhotoFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1075322878)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.String(m.Getthumb_size())
	return x.Buf
}

// CodecDecode:inputPhotoFileLocation
func (m *TLinputPhotoFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setthumb_size(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhotoLegacyFileLocation
//
func NewTLinputPhotoLegacyFileLocation() *TLinputPhotoLegacyFileLocation {
	return &TLinputPhotoLegacyFileLocation{}
}

// CodecEncode:inputPhotoLegacyFileLocation
func (m *TLinputPhotoLegacyFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-667654413)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	x.Long(m.Getsecret())
	return x.Buf
}

// CodecDecode:inputPhotoLegacyFileLocation
func (m *TLinputPhotoLegacyFileLocation) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	m.Setsecret(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPeerPhotoFileLocation
//
func NewTLinputPeerPhotoFileLocation() *TLinputPeerPhotoFileLocation {
	return &TLinputPeerPhotoFileLocation{}
}

// CodecEncode:inputPeerPhotoFileLocation
func (m *TLinputPeerPhotoFileLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(668375447)
	var flags uint32 = 0
	if m.Getbig() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:inputPeerPhotoFileLocation
func (m *TLinputPeerPhotoFileLocation) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbig(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputStickerSetThumb
//
func NewTLinputStickerSetThumb() *TLinputStickerSetThumb {
	return &TLinputStickerSetThumb{}
}

// CodecEncode:inputStickerSetThumb
func (m *TLinputStickerSetThumb) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(230353641)
	x.Bytes(m.Getstickerset().Encode())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:inputStickerSetThumb
func (m *TLinputStickerSetThumb) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:true
//
func NewTLtrue() *TLtrue {
	return &TLtrue{}
}

// CodecEncode:true
func (m *TLtrue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1072550713)
	return x.Buf
}

// CodecDecode:true
func (m *TLtrue) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEvent
//
func NewTLchannelAdminLogEvent() *TLchannelAdminLogEvent {
	return &TLchannelAdminLogEvent{}
}

// CodecEncode:channelAdminLogEvent
func (m *TLchannelAdminLogEvent) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(995769920)
	x.Long(m.Getid())
	x.Int(m.Getdate())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEvent
func (m *TLchannelAdminLogEvent) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m3 := &ChannelAdminLogEventAction{}
	m3.Decode(dbuf)
	m.Setaction(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_contactsNotModified
//
func NewTLcontacts_contactsNotModified() *TLcontacts_contactsNotModified {
	return &TLcontacts_contactsNotModified{}
}

// CodecEncode:contacts_contactsNotModified
func (m *TLcontacts_contactsNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1219778094)
	return x.Buf
}

// CodecDecode:contacts_contactsNotModified
func (m *TLcontacts_contactsNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_contacts
//
func NewTLcontacts_contacts() *TLcontacts_contacts {
	return &TLcontacts_contacts{}
}

// CodecEncode:contacts_contacts
func (m *TLcontacts_contacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-353862078)
	x.Int(481674261)
	x.Int(int32(len(m.Getcontacts())))
	for _, v := range m.Getcontacts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getsaved_count())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_contacts
func (m *TLcontacts_contacts) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Contact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Contact{}
		v0[i].Decode(dbuf)
	}
	m.Setcontacts(v0)
	m.Setsaved_count(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonObjectValue
//
func NewTLjsonObjectValue() *TLjsonObjectValue {
	return &TLjsonObjectValue{}
}

// CodecEncode:jsonObjectValue
func (m *TLjsonObjectValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1059185703)
	x.String(m.Getkey_key())
	x.Bytes(m.Getvalue().Encode())
	return x.Buf
}

// CodecDecode:jsonObjectValue
func (m *TLjsonObjectValue) Decode(dbuf *code.DecodeBuf) error {
	m.Setkey_key(dbuf.String())
	m1 := &JSONValue{}
	m1.Decode(dbuf)
	m.Setvalue(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:draftMessageEmpty
//
func NewTLdraftMessageEmpty() *TLdraftMessageEmpty {
	return &TLdraftMessageEmpty{}
}

// CodecEncode:draftMessageEmpty
func (m *TLdraftMessageEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(453805082)
	var flags uint32 = 0
	if m.Getdate() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getdate() != 0 {
		x.Int(m.Getdate())
	}
	return x.Buf
}

// CodecDecode:draftMessageEmpty
func (m *TLdraftMessageEmpty) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdate(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:draftMessage
//
func NewTLdraftMessage() *TLdraftMessage {
	return &TLdraftMessage{}
}

// CodecEncode:draftMessage
func (m *TLdraftMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-40996577)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 0 << 1
	}
	if len(m.Getentities()) > 0 {
		flags |= 3 << 3
	}
	x.UInt(flags)
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:draftMessage
func (m *TLdraftMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setentities(v3)
	}
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webPageEmpty
//
func NewTLwebPageEmpty() *TLwebPageEmpty {
	return &TLwebPageEmpty{}
}

// CodecEncode:webPageEmpty
func (m *TLwebPageEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-350980120)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:webPageEmpty
func (m *TLwebPageEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webPagePending
//
func NewTLwebPagePending() *TLwebPagePending {
	return &TLwebPagePending{}
}

// CodecEncode:webPagePending
func (m *TLwebPagePending) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-981018084)
	x.Long(m.Getid())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:webPagePending
func (m *TLwebPagePending) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webPage
//
func NewTLwebPage() *TLwebPage {
	return &TLwebPage{}
}

// CodecEncode:webPage
func (m *TLwebPage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-392411726)
	var flags uint32 = 0
	if m.Gettype() != "" {
		flags |= 0 << 4
	}
	if m.Getsite_name() != "" {
		flags |= 1 << 5
	}
	if m.Gettitle() != "" {
		flags |= 2 << 6
	}
	if m.Getdescription() != "" {
		flags |= 3 << 7
	}
	if m.Getphoto().Constructor != 0 {
		flags |= 4 << 8
	}
	if m.Getembed_url() != "" {
		flags |= 5 << 9
	}
	if m.Getembed_type() != "" {
		flags |= 5 << 10
	}
	if m.Getembed_width() != 0 {
		flags |= 6 << 11
	}
	if m.Getembed_height() != 0 {
		flags |= 6 << 12
	}
	if m.Getduration() != 0 {
		flags |= 7 << 13
	}
	if m.Getauthor() != "" {
		flags |= 8 << 14
	}
	if m.Getdocument().Constructor != 0 {
		flags |= 9 << 15
	}
	if m.Getcached_page().Constructor != 0 {
		flags |= 10 << 16
	}
	if len(m.Getattributes()) > 0 {
		flags |= 12 << 17
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Geturl())
	x.String(m.Getdisplay_url())
	x.Int(m.Gethash())
	if m.Gettype() != "" {
		x.String(m.Gettype())
	}
	if m.Getsite_name() != "" {
		x.String(m.Getsite_name())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getembed_url() != "" {
		x.String(m.Getembed_url())
	}
	if m.Getembed_type() != "" {
		x.String(m.Getembed_type())
	}
	if m.Getembed_width() != 0 {
		x.Int(m.Getembed_width())
	}
	if m.Getembed_height() != 0 {
		x.Int(m.Getembed_height())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	if m.Getauthor() != "" {
		x.String(m.Getauthor())
	}
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getcached_page().Constructor != 0 {
		x.Bytes(m.Getcached_page().Encode())
	}
	if len(m.Getattributes()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getattributes())))
		for _, v := range m.Getattributes() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:webPage
func (m *TLwebPage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Seturl(dbuf.String())
	m.Setdisplay_url(dbuf.String())
	m.Sethash(dbuf.Int())
	if (flags & (1 << 4)) != 0 {
		m.Settype(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setsite_name(dbuf.String())
	}
	if (flags & (1 << 6)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 7)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 8)) != 0 {
		m8 := &Photo{}
		m8.Decode(dbuf)
		m.Setphoto(m8)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setembed_url(dbuf.String())
	}
	if (flags & (1 << 10)) != 0 {
		m.Setembed_type(dbuf.String())
	}
	if (flags & (1 << 11)) != 0 {
		m.Setembed_width(dbuf.Int())
	}
	if (flags & (1 << 12)) != 0 {
		m.Setembed_height(dbuf.Int())
	}
	if (flags & (1 << 13)) != 0 {
		m.Setduration(dbuf.Int())
	}
	if (flags & (1 << 14)) != 0 {
		m.Setauthor(dbuf.String())
	}
	if (flags & (1 << 15)) != 0 {
		m15 := &Document{}
		m15.Decode(dbuf)
		m.Setdocument(m15)
	}
	if (flags & (1 << 16)) != 0 {
		m16 := &Page{}
		m16.Decode(dbuf)
		m.Setcached_page(m16)
	}
	if (flags & (1 << 17)) != 0 {
		c17 := dbuf.Int()
		if c17 != 481674261 {
			return dbuf.Err
		}
		l17 := dbuf.Int()
		v17 := make([]WebPageAttribute, l17)
		for i := int32(0); i < l17; i++ {
			v17[i] = WebPageAttribute{}
			v17[i].Decode(dbuf)
		}
		m.Setattributes(v17)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webPageNotModified
//
func NewTLwebPageNotModified() *TLwebPageNotModified {
	return &TLwebPageNotModified{}
}

// CodecEncode:webPageNotModified
func (m *TLwebPageNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1930545681)
	var flags uint32 = 0
	if m.Getcached_page_views() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getcached_page_views() != 0 {
		x.Int(m.Getcached_page_views())
	}
	return x.Buf
}

// CodecDecode:webPageNotModified
func (m *TLwebPageNotModified) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcached_page_views(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputTheme
//
func NewTLinputTheme() *TLinputTheme {
	return &TLinputTheme{}
}

// CodecEncode:inputTheme
func (m *TLinputTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1012306921)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputTheme
func (m *TLinputTheme) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputThemeSlug
//
func NewTLinputThemeSlug() *TLinputThemeSlug {
	return &TLinputThemeSlug{}
}

// CodecEncode:inputThemeSlug
func (m *TLinputThemeSlug) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-175567375)
	x.String(m.Getslug())
	return x.Buf
}

// CodecDecode:inputThemeSlug
func (m *TLinputThemeSlug) Decode(dbuf *code.DecodeBuf) error {
	m.Setslug(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:botInfo
//
func NewTLbotInfo() *TLbotInfo {
	return &TLbotInfo{}
}

// CodecEncode:botInfo
func (m *TLbotInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1729618630)
	x.Int(m.Getuser_id())
	x.String(m.Getdescription())
	x.Int(481674261)
	x.Int(int32(len(m.Getcommands())))
	for _, v := range m.Getcommands() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:botInfo
func (m *TLbotInfo) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdescription(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]BotCommand, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = BotCommand{}
		v2[i].Decode(dbuf)
	}
	m.Setcommands(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_recentStickersNotModified
//
func NewTLmessages_recentStickersNotModified() *TLmessages_recentStickersNotModified {
	return &TLmessages_recentStickersNotModified{}
}

// CodecEncode:messages_recentStickersNotModified
func (m *TLmessages_recentStickersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(186120336)
	return x.Buf
}

// CodecDecode:messages_recentStickersNotModified
func (m *TLmessages_recentStickersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_recentStickers
//
func NewTLmessages_recentStickers() *TLmessages_recentStickers {
	return &TLmessages_recentStickers{}
}

// CodecEncode:messages_recentStickers
func (m *TLmessages_recentStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(586395571)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getdates())))
	for _, v := range m.Getdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_recentStickers
func (m *TLmessages_recentStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Document{}
		v2[i].Decode(dbuf)
	}
	m.Setstickers(v2)
	m.Setdates(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_wallPapersNotModified
//
func NewTLaccount_wallPapersNotModified() *TLaccount_wallPapersNotModified {
	return &TLaccount_wallPapersNotModified{}
}

// CodecEncode:account_wallPapersNotModified
func (m *TLaccount_wallPapersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(471437699)
	return x.Buf
}

// CodecDecode:account_wallPapersNotModified
func (m *TLaccount_wallPapersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_wallPapers
//
func NewTLaccount_wallPapers() *TLaccount_wallPapers {
	return &TLaccount_wallPapers{}
}

// CodecEncode:account_wallPapers
func (m *TLaccount_wallPapers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1881892265)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getwallpapers())))
	for _, v := range m.Getwallpapers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_wallPapers
func (m *TLaccount_wallPapers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]WallPaper, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = WallPaper{}
		v1[i].Decode(dbuf)
	}
	m.Setwallpapers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialogFilter
//
func NewTLdialogFilter() *TLdialogFilter {
	return &TLdialogFilter{}
}

// CodecEncode:dialogFilter
func (m *TLdialogFilter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1949890536)
	var flags uint32 = 0
	if m.Getcontacts() != false {
		flags |= 0 << 0
	}
	if m.Getnon_contacts() != false {
		flags |= 1 << 1
	}
	if m.Getgroups() != false {
		flags |= 2 << 2
	}
	if m.Getbroadcasts() != false {
		flags |= 3 << 3
	}
	if m.Getbots() != false {
		flags |= 4 << 4
	}
	if m.Getexclude_muted() != false {
		flags |= 11 << 5
	}
	if m.Getexclude_read() != false {
		flags |= 12 << 6
	}
	if m.Getexclude_archived() != false {
		flags |= 13 << 7
	}
	if m.Getemoticon() != "" {
		flags |= 25 << 10
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	if m.Getemoticon() != "" {
		x.String(m.Getemoticon())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getpinned_peers())))
	for _, v := range m.Getpinned_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getinclude_peers())))
	for _, v := range m.Getinclude_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getexclude_peers())))
	for _, v := range m.Getexclude_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:dialogFilter
func (m *TLdialogFilter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcontacts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setnon_contacts(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setgroups(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setbroadcasts(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setbots(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setexclude_muted(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setexclude_read(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setexclude_archived(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	if (flags & (1 << 10)) != 0 {
		m.Setemoticon(dbuf.String())
	}
	c11 := dbuf.Int()
	if c11 != 481674261 {
		return dbuf.Err
	}
	l11 := dbuf.Int()
	v11 := make([]InputPeer, l11)
	for i := int32(0); i < l11; i++ {
		v11[i] = InputPeer{}
		v11[i].Decode(dbuf)
	}
	m.Setpinned_peers(v11)
	c12 := dbuf.Int()
	if c12 != 481674261 {
		return dbuf.Err
	}
	l12 := dbuf.Int()
	v12 := make([]InputPeer, l12)
	for i := int32(0); i < l12; i++ {
		v12[i] = InputPeer{}
		v12[i].Decode(dbuf)
	}
	m.Setinclude_peers(v12)
	c13 := dbuf.Int()
	if c13 != 481674261 {
		return dbuf.Err
	}
	l13 := dbuf.Int()
	v13 := make([]InputPeer, l13)
	for i := int32(0); i < l13; i++ {
		v13[i] = InputPeer{}
		v13[i].Decode(dbuf)
	}
	m.Setexclude_peers(v13)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:authorization
//
func NewTLauthorization() *TLauthorization {
	return &TLauthorization{}
}

// CodecEncode:authorization
func (m *TLauthorization) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1392388579)
	var flags uint32 = 0
	if m.Getcurrent() != false {
		flags |= 0 << 0
	}
	if m.Getofficial_app() != false {
		flags |= 1 << 1
	}
	if m.Getpassword_pending() != false {
		flags |= 2 << 2
	}
	x.UInt(flags)
	x.Long(m.Gethash())
	x.String(m.Getdevice_model())
	x.String(m.Getplatform())
	x.String(m.Getsystem_version())
	x.Int(m.Getapi_id())
	x.String(m.Getapp_name())
	x.String(m.Getapp_version())
	x.Int(m.Getdate_created())
	x.Int(m.Getdate_active())
	x.String(m.Getip())
	x.String(m.Getcountry())
	x.String(m.Getregion())
	return x.Buf
}

// CodecDecode:authorization
func (m *TLauthorization) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcurrent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setofficial_app(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpassword_pending(true)
	}
	m.Sethash(dbuf.Long())
	m.Setdevice_model(dbuf.String())
	m.Setplatform(dbuf.String())
	m.Setsystem_version(dbuf.String())
	m.Setapi_id(dbuf.Int())
	m.Setapp_name(dbuf.String())
	m.Setapp_version(dbuf.String())
	m.Setdate_created(dbuf.Int())
	m.Setdate_active(dbuf.Int())
	m.Setip(dbuf.String())
	m.Setcountry(dbuf.String())
	m.Setregion(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:upload_cdnFileReuploadNeeded
//
func NewTLupload_cdnFileReuploadNeeded() *TLupload_cdnFileReuploadNeeded {
	return &TLupload_cdnFileReuploadNeeded{}
}

// CodecEncode:upload_cdnFileReuploadNeeded
func (m *TLupload_cdnFileReuploadNeeded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-290921362)
	x.Bytes(m.Getrequest_token())
	return x.Buf
}

// CodecDecode:upload_cdnFileReuploadNeeded
func (m *TLupload_cdnFileReuploadNeeded) Decode(dbuf *code.DecodeBuf) error {
	m.Setrequest_token(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:upload_cdnFile
//
func NewTLupload_cdnFile() *TLupload_cdnFile {
	return &TLupload_cdnFile{}
}

// CodecEncode:upload_cdnFile
func (m *TLupload_cdnFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1449145777)
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_cdnFile
func (m *TLupload_cdnFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:emojiKeywordsDifference
//
func NewTLemojiKeywordsDifference() *TLemojiKeywordsDifference {
	return &TLemojiKeywordsDifference{}
}

// CodecEncode:emojiKeywordsDifference
func (m *TLemojiKeywordsDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1556570557)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	x.Int(m.Getversion())
	x.Int(481674261)
	x.Int(int32(len(m.Getkeywords())))
	for _, v := range m.Getkeywords() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:emojiKeywordsDifference
func (m *TLemojiKeywordsDifference) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	m.Setversion(dbuf.Int())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]EmojiKeyword, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = EmojiKeyword{}
		v3[i].Decode(dbuf)
	}
	m.Setkeywords(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photos_photos
//
func NewTLphotos_photos() *TLphotos_photos {
	return &TLphotos_photos{}
}

// CodecEncode:photos_photos
func (m *TLphotos_photos) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1916114267)
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photos
func (m *TLphotos_photos) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Photo, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Photo{}
		v0[i].Decode(dbuf)
	}
	m.Setphotos(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photos_photosSlice
//
func NewTLphotos_photosSlice() *TLphotos_photosSlice {
	return &TLphotos_photosSlice{}
}

// CodecEncode:photos_photosSlice
func (m *TLphotos_photosSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(352657236)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photosSlice
func (m *TLphotos_photosSlice) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Photo, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Photo{}
		v1[i].Decode(dbuf)
	}
	m.Setphotos(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:langPackDifference
//
func NewTLlangPackDifference() *TLlangPackDifference {
	return &TLlangPackDifference{}
}

// CodecEncode:langPackDifference
func (m *TLlangPackDifference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-209337866)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	x.Int(m.Getversion())
	x.Int(481674261)
	x.Int(int32(len(m.Getstrings())))
	for _, v := range m.Getstrings() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:langPackDifference
func (m *TLlangPackDifference) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	m.Setversion(dbuf.Int())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]LangPackString, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = LangPackString{}
		v3[i].Decode(dbuf)
	}
	m.Setstrings(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatPhotoEmpty
//
func NewTLchatPhotoEmpty() *TLchatPhotoEmpty {
	return &TLchatPhotoEmpty{}
}

// CodecEncode:chatPhotoEmpty
func (m *TLchatPhotoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(935395612)
	return x.Buf
}

// CodecDecode:chatPhotoEmpty
func (m *TLchatPhotoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatPhoto
//
func NewTLchatPhoto() *TLchatPhoto {
	return &TLchatPhoto{}
}

// CodecEncode:chatPhoto
func (m *TLchatPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-770990276)
	var flags uint32 = 0
	if m.Gethas_video() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getphoto_small().Encode())
	x.Bytes(m.Getphoto_big().Encode())
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:chatPhoto
func (m *TLchatPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_video(true)
	}
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setphoto_small(m1)
	m2 := &FileLocation{}
	m2.Decode(dbuf)
	m.Setphoto_big(m2)
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageReplies
//
func NewTLmessageReplies() *TLmessageReplies {
	return &TLmessageReplies{}
}

// CodecEncode:messageReplies
func (m *TLmessageReplies) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1093204652)
	var flags uint32 = 0
	if m.Getcomments() != false {
		flags |= 0 << 0
	}
	if len(m.Getrecent_repliers()) > 0 {
		flags |= 1 << 3
	}
	if m.Getchannel_id() != 0 {
		flags |= 0 << 4
	}
	if m.Getmax_id() != 0 {
		flags |= 2 << 5
	}
	if m.Getread_max_id() != 0 {
		flags |= 3 << 6
	}
	x.UInt(flags)
	x.Int(m.Getreplies())
	x.Int(m.Getreplies_pts())
	if len(m.Getrecent_repliers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrecent_repliers())))
		for _, v := range m.Getrecent_repliers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getchannel_id() != 0 {
		x.Int(m.Getchannel_id())
	}
	if m.Getmax_id() != 0 {
		x.Int(m.Getmax_id())
	}
	if m.Getread_max_id() != 0 {
		x.Int(m.Getread_max_id())
	}
	return x.Buf
}

// CodecDecode:messageReplies
func (m *TLmessageReplies) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcomments(true)
	}
	m.Setreplies(dbuf.Int())
	m.Setreplies_pts(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]Peer, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = Peer{}
			v3[i].Decode(dbuf)
		}
		m.Setrecent_repliers(v3)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setchannel_id(dbuf.Int())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmax_id(dbuf.Int())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setread_max_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:savedPhoneContact
//
func NewTLsavedPhoneContact() *TLsavedPhoneContact {
	return &TLsavedPhoneContact{}
}

// CodecEncode:savedPhoneContact
func (m *TLsavedPhoneContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(289586518)
	x.String(m.Getphone())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:savedPhoneContact
func (m *TLsavedPhoneContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_differenceEmpty
//
func NewTLupdates_differenceEmpty() *TLupdates_differenceEmpty {
	return &TLupdates_differenceEmpty{}
}

// CodecEncode:updates_differenceEmpty
func (m *TLupdates_differenceEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1567990072)
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updates_differenceEmpty
func (m *TLupdates_differenceEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_difference
//
func NewTLupdates_difference() *TLupdates_difference {
	return &TLupdates_difference{}
}

// CodecEncode:updates_difference
func (m *TLupdates_difference) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(16030880)
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_encrypted_messages())))
	for _, v := range m.Getnew_encrypted_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getstate().Encode())
	return x.Buf
}

// CodecDecode:updates_difference
func (m *TLupdates_difference) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Message{}
		v0[i].Decode(dbuf)
	}
	m.Setnew_messages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]EncryptedMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = EncryptedMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setnew_encrypted_messages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Update, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Update{}
		v2[i].Decode(dbuf)
	}
	m.Setother_updates(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	m5 := &Updates_State{}
	m5.Decode(dbuf)
	m.Setstate(m5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_differenceSlice
//
func NewTLupdates_differenceSlice() *TLupdates_differenceSlice {
	return &TLupdates_differenceSlice{}
}

// CodecEncode:updates_differenceSlice
func (m *TLupdates_differenceSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1459938943)
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_encrypted_messages())))
	for _, v := range m.Getnew_encrypted_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getintermediate_state().Encode())
	return x.Buf
}

// CodecDecode:updates_differenceSlice
func (m *TLupdates_differenceSlice) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Message{}
		v0[i].Decode(dbuf)
	}
	m.Setnew_messages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]EncryptedMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = EncryptedMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setnew_encrypted_messages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Update, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Update{}
		v2[i].Decode(dbuf)
	}
	m.Setother_updates(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	m5 := &Updates_State{}
	m5.Decode(dbuf)
	m.Setintermediate_state(m5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updates_differenceTooLong
//
func NewTLupdates_differenceTooLong() *TLupdates_differenceTooLong {
	return &TLupdates_differenceTooLong{}
}

// CodecEncode:updates_differenceTooLong
func (m *TLupdates_differenceTooLong) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1258196845)
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:updates_differenceTooLong
func (m *TLupdates_differenceTooLong) Decode(dbuf *code.DecodeBuf) error {
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatAdminRights
//
func NewTLchatAdminRights() *TLchatAdminRights {
	return &TLchatAdminRights{}
}

// CodecEncode:chatAdminRights
func (m *TLchatAdminRights) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1605510357)
	var flags uint32 = 0
	if m.Getchange_info() != false {
		flags |= 0 << 0
	}
	if m.Getpost_messages() != false {
		flags |= 1 << 1
	}
	if m.Getedit_messages() != false {
		flags |= 2 << 2
	}
	if m.Getdelete_messages() != false {
		flags |= 3 << 3
	}
	if m.Getban_users() != false {
		flags |= 4 << 4
	}
	if m.Getinvite_users() != false {
		flags |= 5 << 5
	}
	if m.Getpin_messages() != false {
		flags |= 7 << 6
	}
	if m.Getadd_admins() != false {
		flags |= 9 << 7
	}
	if m.Getanonymous() != false {
		flags |= 10 << 8
	}
	if m.Getmanage_call() != false {
		flags |= 11 << 9
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:chatAdminRights
func (m *TLchatAdminRights) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchange_info(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setpost_messages(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setedit_messages(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdelete_messages(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setban_users(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setinvite_users(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpin_messages(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setadd_admins(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setanonymous(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setmanage_call(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_dhConfigNotModified
//
func NewTLmessages_dhConfigNotModified() *TLmessages_dhConfigNotModified {
	return &TLmessages_dhConfigNotModified{}
}

// CodecEncode:messages_dhConfigNotModified
func (m *TLmessages_dhConfigNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1058912715)
	x.Bytes(m.Getrandom())
	return x.Buf
}

// CodecDecode:messages_dhConfigNotModified
func (m *TLmessages_dhConfigNotModified) Decode(dbuf *code.DecodeBuf) error {
	m.Setrandom(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_dhConfig
//
func NewTLmessages_dhConfig() *TLmessages_dhConfig {
	return &TLmessages_dhConfig{}
}

// CodecEncode:messages_dhConfig
func (m *TLmessages_dhConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(740433629)
	x.Int(m.Getg())
	x.Bytes(m.Getp())
	x.Int(m.Getversion())
	x.Bytes(m.Getrandom())
	return x.Buf
}

// CodecDecode:messages_dhConfig
func (m *TLmessages_dhConfig) Decode(dbuf *code.DecodeBuf) error {
	m.Setg(dbuf.Int())
	m.Setp(dbuf.StringBytes())
	m.Setversion(dbuf.Int())
	m.Setrandom(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:langPackString
//
func NewTLlangPackString() *TLlangPackString {
	return &TLlangPackString{}
}

// CodecEncode:langPackString
func (m *TLlangPackString) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-892239370)
	x.String(m.Getkey_key())
	x.String(m.Getvalue())
	return x.Buf
}

// CodecDecode:langPackString
func (m *TLlangPackString) Decode(dbuf *code.DecodeBuf) error {
	m.Setkey_key(dbuf.String())
	m.Setvalue(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:langPackStringPluralized
//
func NewTLlangPackStringPluralized() *TLlangPackStringPluralized {
	return &TLlangPackStringPluralized{}
}

// CodecEncode:langPackStringPluralized
func (m *TLlangPackStringPluralized) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1816636575)
	var flags uint32 = 0
	if m.Getzero_value() != "" {
		flags |= 0 << 1
	}
	if m.Getone_value() != "" {
		flags |= 1 << 2
	}
	if m.Gettwo_value() != "" {
		flags |= 2 << 3
	}
	if m.Getfew_value() != "" {
		flags |= 3 << 4
	}
	if m.Getmany_value() != "" {
		flags |= 4 << 5
	}
	x.UInt(flags)
	x.String(m.Getkey_key())
	if m.Getzero_value() != "" {
		x.String(m.Getzero_value())
	}
	if m.Getone_value() != "" {
		x.String(m.Getone_value())
	}
	if m.Gettwo_value() != "" {
		x.String(m.Gettwo_value())
	}
	if m.Getfew_value() != "" {
		x.String(m.Getfew_value())
	}
	if m.Getmany_value() != "" {
		x.String(m.Getmany_value())
	}
	x.String(m.Getother_value())
	return x.Buf
}

// CodecDecode:langPackStringPluralized
func (m *TLlangPackStringPluralized) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setkey_key(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setzero_value(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setone_value(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Settwo_value(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setfew_value(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmany_value(dbuf.String())
	}
	m.Setother_value(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:langPackStringDeleted
//
func NewTLlangPackStringDeleted() *TLlangPackStringDeleted {
	return &TLlangPackStringDeleted{}
}

// CodecEncode:langPackStringDeleted
func (m *TLlangPackStringDeleted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(695856818)
	x.String(m.Getkey_key())
	return x.Buf
}

// CodecDecode:langPackStringDeleted
func (m *TLlangPackStringDeleted) Decode(dbuf *code.DecodeBuf) error {
	m.Setkey_key(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dcOption
//
func NewTLdcOption() *TLdcOption {
	return &TLdcOption{}
}

// CodecEncode:dcOption
func (m *TLdcOption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(414687501)
	var flags uint32 = 0
	if m.Getipv6() != false {
		flags |= 0 << 0
	}
	if m.Getmedia_only() != false {
		flags |= 1 << 1
	}
	if m.Gettcpo_only() != false {
		flags |= 2 << 2
	}
	if m.Getcdn() != false {
		flags |= 3 << 3
	}
	if m.Getstatic() != false {
		flags |= 4 << 4
	}
	if len(m.Getsecret()) > 0 {
		flags |= 10 << 8
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getip_address())
	x.Int(m.Getport())
	if m.Getsecret() != nil {
		x.Bytes(m.Getsecret())
	}
	return x.Buf
}

// CodecDecode:dcOption
func (m *TLdcOption) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setipv6(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmedia_only(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settcpo_only(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setcdn(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setstatic(true)
	}
	m.Setid(dbuf.Int())
	m.Setip_address(dbuf.String())
	m.Setport(dbuf.Int())
	if (flags & (1 << 8)) != 0 {
		m.Setsecret(dbuf.StringBytes())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageFwdHeader
//
func NewTLmessageFwdHeader() *TLmessageFwdHeader {
	return &TLmessageFwdHeader{}
}

// CodecEncode:messageFwdHeader
func (m *TLmessageFwdHeader) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1601666510)
	var flags uint32 = 0
	if m.Getfrom_id().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getfrom_name() != "" {
		flags |= 5 << 1
	}
	if m.Getchannel_post() != 0 {
		flags |= 2 << 3
	}
	if m.Getpost_author() != "" {
		flags |= 3 << 4
	}
	if m.Getsaved_from_peer().Constructor != 0 {
		flags |= 4 << 5
	}
	if m.Getsaved_from_msg_id() != 0 {
		flags |= 4 << 6
	}
	if m.Getpsa_type() != "" {
		flags |= 6 << 7
	}
	x.UInt(flags)
	if m.Getfrom_id().Constructor != 0 {
		x.Bytes(m.Getfrom_id().Encode())
	}
	if m.Getfrom_name() != "" {
		x.String(m.Getfrom_name())
	}
	x.Int(m.Getdate())
	if m.Getchannel_post() != 0 {
		x.Int(m.Getchannel_post())
	}
	if m.Getpost_author() != "" {
		x.String(m.Getpost_author())
	}
	if m.Getsaved_from_peer().Constructor != 0 {
		x.Bytes(m.Getsaved_from_peer().Encode())
	}
	if m.Getsaved_from_msg_id() != 0 {
		x.Int(m.Getsaved_from_msg_id())
	}
	if m.Getpsa_type() != "" {
		x.String(m.Getpsa_type())
	}
	return x.Buf
}

// CodecDecode:messageFwdHeader
func (m *TLmessageFwdHeader) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Peer{}
		m0.Decode(dbuf)
		m.Setfrom_id(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfrom_name(dbuf.String())
	}
	m.Setdate(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setchannel_post(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setpost_author(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &Peer{}
		m5.Decode(dbuf)
		m.Setsaved_from_peer(m5)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setsaved_from_msg_id(dbuf.Int())
	}
	if (flags & (1 << 7)) != 0 {
		m.Setpsa_type(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:geoPointEmpty
//
func NewTLgeoPointEmpty() *TLgeoPointEmpty {
	return &TLgeoPointEmpty{}
}

// CodecEncode:geoPointEmpty
func (m *TLgeoPointEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(286776671)
	return x.Buf
}

// CodecDecode:geoPointEmpty
func (m *TLgeoPointEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:geoPoint
//
func NewTLgeoPoint() *TLgeoPoint {
	return &TLgeoPoint{}
}

// CodecEncode:geoPoint
func (m *TLgeoPoint) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1297942941)
	var flags uint32 = 0
	if m.Getaccuracy_radius() != 0 {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getlong_key().Encode())
	x.Bytes(m.Getlat().Encode())
	x.Long(m.Getaccess_hash())
	if m.Getaccuracy_radius() != 0 {
		x.Int(m.Getaccuracy_radius())
	}
	return x.Buf
}

// CodecDecode:geoPoint
func (m *TLgeoPoint) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setlong_key(dbuf.Double())
	m.Setlat(dbuf.Double())
	m.Setaccess_hash(dbuf.Long())
	if (flags & (1 << 3)) != 0 {
		m.Setaccuracy_radius(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatBannedRights
//
func NewTLchatBannedRights() *TLchatBannedRights {
	return &TLchatBannedRights{}
}

// CodecEncode:chatBannedRights
func (m *TLchatBannedRights) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1626209256)
	var flags uint32 = 0
	if m.Getview_messages() != false {
		flags |= 0 << 0
	}
	if m.Getsend_messages() != false {
		flags |= 1 << 1
	}
	if m.Getsend_media() != false {
		flags |= 2 << 2
	}
	if m.Getsend_stickers() != false {
		flags |= 3 << 3
	}
	if m.Getsend_gifs() != false {
		flags |= 4 << 4
	}
	if m.Getsend_games() != false {
		flags |= 5 << 5
	}
	if m.Getsend_inline() != false {
		flags |= 6 << 6
	}
	if m.Getembed_links() != false {
		flags |= 7 << 7
	}
	if m.Getsend_polls() != false {
		flags |= 8 << 8
	}
	if m.Getchange_info() != false {
		flags |= 10 << 9
	}
	if m.Getinvite_users() != false {
		flags |= 15 << 10
	}
	if m.Getpin_messages() != false {
		flags |= 17 << 11
	}
	x.UInt(flags)
	x.Int(m.Getuntil_date())
	return x.Buf
}

// CodecDecode:chatBannedRights
func (m *TLchatBannedRights) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setview_messages(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsend_messages(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setsend_media(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsend_stickers(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsend_gifs(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setsend_games(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setsend_inline(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setembed_links(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setsend_polls(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setchange_info(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setinvite_users(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setpin_messages(true)
	}
	m.Setuntil_date(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_termsOfServiceUpdateEmpty
//
func NewTLhelp_termsOfServiceUpdateEmpty() *TLhelp_termsOfServiceUpdateEmpty {
	return &TLhelp_termsOfServiceUpdateEmpty{}
}

// CodecEncode:help_termsOfServiceUpdateEmpty
func (m *TLhelp_termsOfServiceUpdateEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-483352705)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:help_termsOfServiceUpdateEmpty
func (m *TLhelp_termsOfServiceUpdateEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_termsOfServiceUpdate
//
func NewTLhelp_termsOfServiceUpdate() *TLhelp_termsOfServiceUpdate {
	return &TLhelp_termsOfServiceUpdate{}
}

// CodecEncode:help_termsOfServiceUpdate
func (m *TLhelp_termsOfServiceUpdate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(686618977)
	x.Int(m.Getexpires())
	x.Bytes(m.Getterms_of_service().Encode())
	return x.Buf
}

// CodecDecode:help_termsOfServiceUpdate
func (m *TLhelp_termsOfServiceUpdate) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	m1 := &Help_TermsOfService{}
	m1.Decode(dbuf)
	m.Setterms_of_service(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_sentCode
//
func NewTLauth_sentCode() *TLauth_sentCode {
	return &TLauth_sentCode{}
}

// CodecEncode:auth_sentCode
func (m *TLauth_sentCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1577067778)
	var flags uint32 = 0
	if m.Getnext_type().Constructor != 0 {
		flags |= 1 << 2
	}
	if m.Gettimeout() != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Gettype().Encode())
	x.String(m.Getphone_code_hash())
	if m.Getnext_type().Constructor != 0 {
		x.Bytes(m.Getnext_type().Encode())
	}
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	return x.Buf
}

// CodecDecode:auth_sentCode
func (m *TLauth_sentCode) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &Auth_SentCodeType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setphone_code_hash(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &Auth_CodeType{}
		m2.Decode(dbuf)
		m.Setnext_type(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_passwordRecovery
//
func NewTLauth_passwordRecovery() *TLauth_passwordRecovery {
	return &TLauth_passwordRecovery{}
}

// CodecEncode:auth_passwordRecovery
func (m *TLauth_passwordRecovery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(326715557)
	x.String(m.Getemail_pattern())
	return x.Buf
}

// CodecDecode:auth_passwordRecovery
func (m *TLauth_passwordRecovery) Decode(dbuf *code.DecodeBuf) error {
	m.Setemail_pattern(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_privacyRules
//
func NewTLaccount_privacyRules() *TLaccount_privacyRules {
	return &TLaccount_privacyRules{}
}

// CodecEncode:account_privacyRules
func (m *TLaccount_privacyRules) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1352683077)
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_privacyRules
func (m *TLaccount_privacyRules) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PrivacyRule, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PrivacyRule{}
		v0[i].Decode(dbuf)
	}
	m.Setrules(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureSecretSettings
//
func NewTLsecureSecretSettings() *TLsecureSecretSettings {
	return &TLsecureSecretSettings{}
}

// CodecEncode:secureSecretSettings
func (m *TLsecureSecretSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(354925740)
	x.Bytes(m.Getsecure_algo().Encode())
	x.Bytes(m.Getsecure_secret())
	x.Long(m.Getsecure_secret_id())
	return x.Buf
}

// CodecDecode:secureSecretSettings
func (m *TLsecureSecretSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecurePasswordKdfAlgo{}
	m0.Decode(dbuf)
	m.Setsecure_algo(m0)
	m.Setsecure_secret(dbuf.StringBytes())
	m.Setsecure_secret_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:theme
//
func NewTLtheme() *TLtheme {
	return &TLtheme{}
}

// CodecEncode:theme
func (m *TLtheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(42930452)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 0 << 0
	}
	if m.Getdefault() != false {
		flags |= 1 << 1
	}
	if m.Getdocument().Constructor != 0 {
		flags |= 2 << 6
	}
	if m.Getsettings().Constructor != 0 {
		flags |= 3 << 7
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getslug())
	x.String(m.Gettitle())
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings().Constructor != 0 {
		x.Bytes(m.Getsettings().Encode())
	}
	x.Int(m.Getinstalls_count())
	return x.Buf
}

// CodecDecode:theme
func (m *TLtheme) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdefault(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setslug(dbuf.String())
	m.Settitle(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m6 := &Document{}
		m6.Decode(dbuf)
		m.Setdocument(m6)
	}
	if (flags & (1 << 7)) != 0 {
		m7 := &ThemeSettings{}
		m7.Decode(dbuf)
		m.Setsettings(m7)
	}
	m.Setinstalls_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_termsOfService
//
func NewTLhelp_termsOfService() *TLhelp_termsOfService {
	return &TLhelp_termsOfService{}
}

// CodecEncode:help_termsOfService
func (m *TLhelp_termsOfService) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2013922064)
	var flags uint32 = 0
	if m.Getpopup() != false {
		flags |= 0 << 0
	}
	if m.Getmin_age_confirm() != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.String(m.Gettext())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmin_age_confirm() != 0 {
		x.Int(m.Getmin_age_confirm())
	}
	return x.Buf
}

// CodecDecode:help_termsOfService
func (m *TLhelp_termsOfService) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpopup(true)
	}
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m.Settext(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]MessageEntity, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = MessageEntity{}
		v3[i].Decode(dbuf)
	}
	m.Setentities(v3)
	if (flags & (1 << 4)) != 0 {
		m.Setmin_age_confirm(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:restrictionReason
//
func NewTLrestrictionReason() *TLrestrictionReason {
	return &TLrestrictionReason{}
}

// CodecEncode:restrictionReason
func (m *TLrestrictionReason) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-797791052)
	x.String(m.Getplatform())
	x.String(m.Getreason())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:restrictionReason
func (m *TLrestrictionReason) Decode(dbuf *code.DecodeBuf) error {
	m.Setplatform(dbuf.String())
	m.Setreason(dbuf.String())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phone_phoneCall
//
func NewTLphone_phoneCall() *TLphone_phoneCall {
	return &TLphone_phoneCall{}
}

// CodecEncode:phone_phoneCall
func (m *TLphone_phoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-326966976)
	x.Bytes(m.Getphone_call().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:phone_phoneCall
func (m *TLphone_phoneCall) Decode(dbuf *code.DecodeBuf) error {
	m0 := &PhoneCall{}
	m0.Decode(dbuf)
	m.Setphone_call(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stats_broadcastStats
//
func NewTLstats_broadcastStats() *TLstats_broadcastStats {
	return &TLstats_broadcastStats{}
}

// CodecEncode:stats_broadcastStats
func (m *TLstats_broadcastStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1107852396)
	x.Bytes(m.Getperiod().Encode())
	x.Bytes(m.Getfollowers().Encode())
	x.Bytes(m.Getviews_per_post().Encode())
	x.Bytes(m.Getshares_per_post().Encode())
	x.Bytes(m.Getenabled_notifications().Encode())
	x.Bytes(m.Getgrowth_graph().Encode())
	x.Bytes(m.Getfollowers_graph().Encode())
	x.Bytes(m.Getmute_graph().Encode())
	x.Bytes(m.Gettop_hours_graph().Encode())
	x.Bytes(m.Getinteractions_graph().Encode())
	x.Bytes(m.Getiv_interactions_graph().Encode())
	x.Bytes(m.Getviews_by_source_graph().Encode())
	x.Bytes(m.Getnew_followers_by_source_graph().Encode())
	x.Bytes(m.Getlanguages_graph().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrecent_message_interactions())))
	for _, v := range m.Getrecent_message_interactions() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stats_broadcastStats
func (m *TLstats_broadcastStats) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StatsDateRangeDays{}
	m0.Decode(dbuf)
	m.Setperiod(m0)
	m1 := &StatsAbsValueAndPrev{}
	m1.Decode(dbuf)
	m.Setfollowers(m1)
	m2 := &StatsAbsValueAndPrev{}
	m2.Decode(dbuf)
	m.Setviews_per_post(m2)
	m3 := &StatsAbsValueAndPrev{}
	m3.Decode(dbuf)
	m.Setshares_per_post(m3)
	m4 := &StatsPercentValue{}
	m4.Decode(dbuf)
	m.Setenabled_notifications(m4)
	m5 := &StatsGraph{}
	m5.Decode(dbuf)
	m.Setgrowth_graph(m5)
	m6 := &StatsGraph{}
	m6.Decode(dbuf)
	m.Setfollowers_graph(m6)
	m7 := &StatsGraph{}
	m7.Decode(dbuf)
	m.Setmute_graph(m7)
	m8 := &StatsGraph{}
	m8.Decode(dbuf)
	m.Settop_hours_graph(m8)
	m9 := &StatsGraph{}
	m9.Decode(dbuf)
	m.Setinteractions_graph(m9)
	m10 := &StatsGraph{}
	m10.Decode(dbuf)
	m.Setiv_interactions_graph(m10)
	m11 := &StatsGraph{}
	m11.Decode(dbuf)
	m.Setviews_by_source_graph(m11)
	m12 := &StatsGraph{}
	m12.Decode(dbuf)
	m.Setnew_followers_by_source_graph(m12)
	m13 := &StatsGraph{}
	m13.Decode(dbuf)
	m.Setlanguages_graph(m13)
	c14 := dbuf.Int()
	if c14 != 481674261 {
		return dbuf.Err
	}
	l14 := dbuf.Int()
	v14 := make([]MessageInteractionCounters, l14)
	for i := int32(0); i < l14; i++ {
		v14[i] = MessageInteractionCounters{}
		v14[i].Decode(dbuf)
	}
	m.Setrecent_message_interactions(v14)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_sentCodeTypeApp
//
func NewTLauth_sentCodeTypeApp() *TLauth_sentCodeTypeApp {
	return &TLauth_sentCodeTypeApp{}
}

// CodecEncode:auth_sentCodeTypeApp
func (m *TLauth_sentCodeTypeApp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1035688326)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeApp
func (m *TLauth_sentCodeTypeApp) Decode(dbuf *code.DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_sentCodeTypeSms
//
func NewTLauth_sentCodeTypeSms() *TLauth_sentCodeTypeSms {
	return &TLauth_sentCodeTypeSms{}
}

// CodecEncode:auth_sentCodeTypeSms
func (m *TLauth_sentCodeTypeSms) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1073693790)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeSms
func (m *TLauth_sentCodeTypeSms) Decode(dbuf *code.DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_sentCodeTypeCall
//
func NewTLauth_sentCodeTypeCall() *TLauth_sentCodeTypeCall {
	return &TLauth_sentCodeTypeCall{}
}

// CodecEncode:auth_sentCodeTypeCall
func (m *TLauth_sentCodeTypeCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1398007207)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeCall
func (m *TLauth_sentCodeTypeCall) Decode(dbuf *code.DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_sentCodeTypeFlashCall
//
func NewTLauth_sentCodeTypeFlashCall() *TLauth_sentCodeTypeFlashCall {
	return &TLauth_sentCodeTypeFlashCall{}
}

// CodecEncode:auth_sentCodeTypeFlashCall
func (m *TLauth_sentCodeTypeFlashCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1425815847)
	x.String(m.Getpattern())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeFlashCall
func (m *TLauth_sentCodeTypeFlashCall) Decode(dbuf *code.DecodeBuf) error {
	m.Setpattern(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:poll
//
func NewTLpoll() *TLpoll {
	return &TLpoll{}
}

// CodecEncode:poll
func (m *TLpoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2032041631)
	var flags uint32 = 0
	if m.Getclosed() != false {
		flags |= 0 << 1
	}
	if m.Getpublic_voters() != false {
		flags |= 1 << 2
	}
	if m.Getmultiple_choice() != false {
		flags |= 2 << 3
	}
	if m.Getquiz() != false {
		flags |= 3 << 4
	}
	if m.Getclose_period() != 0 {
		flags |= 4 << 7
	}
	if m.Getclose_date() != 0 {
		flags |= 5 << 8
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Getquestion())
	x.Int(481674261)
	x.Int(int32(len(m.Getanswers())))
	for _, v := range m.Getanswers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getclose_period() != 0 {
		x.Int(m.Getclose_period())
	}
	if m.Getclose_date() != 0 {
		x.Int(m.Getclose_date())
	}
	return x.Buf
}

// CodecDecode:poll
func (m *TLpoll) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	if (flags & (1 << 1)) != 0 {
		m.Setclosed(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpublic_voters(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmultiple_choice(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setquiz(true)
	}
	m.Setquestion(dbuf.String())
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]PollAnswer, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = PollAnswer{}
		v6[i].Decode(dbuf)
	}
	m.Setanswers(v6)
	if (flags & (1 << 7)) != 0 {
		m.Setclose_period(dbuf.Int())
	}
	if (flags & (1 << 8)) != 0 {
		m.Setclose_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallProtocol
//
func NewTLphoneCallProtocol() *TLphoneCallProtocol {
	return &TLphoneCallProtocol{}
}

// CodecEncode:phoneCallProtocol
func (m *TLphoneCallProtocol) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-58224696)
	var flags uint32 = 0
	if m.Getudp_p2p() != false {
		flags |= 0 << 0
	}
	if m.Getudp_reflector() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getmin_layer())
	x.Int(m.Getmax_layer())
	x.Int(481674261)
	x.Int(int32(len(m.Getlibrary_versions())))
	for _, v := range m.Getlibrary_versions() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:phoneCallProtocol
func (m *TLphoneCallProtocol) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setudp_p2p(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setudp_reflector(true)
	}
	m.Setmin_layer(dbuf.Int())
	m.Setmax_layer(dbuf.Int())
	m.Setlibrary_versions(dbuf.VectorString())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedChatEmpty
//
func NewTLencryptedChatEmpty() *TLencryptedChatEmpty {
	return &TLencryptedChatEmpty{}
}

// CodecEncode:encryptedChatEmpty
func (m *TLencryptedChatEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1417756512)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:encryptedChatEmpty
func (m *TLencryptedChatEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedChatWaiting
//
func NewTLencryptedChatWaiting() *TLencryptedChatWaiting {
	return &TLencryptedChatWaiting{}
}

// CodecEncode:encryptedChatWaiting
func (m *TLencryptedChatWaiting) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1006044124)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	return x.Buf
}

// CodecDecode:encryptedChatWaiting
func (m *TLencryptedChatWaiting) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedChatRequested
//
func NewTLencryptedChatRequested() *TLencryptedChatRequested {
	return &TLencryptedChatRequested{}
}

// CodecEncode:encryptedChatRequested
func (m *TLencryptedChatRequested) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1651608194)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a())
	return x.Buf
}

// CodecDecode:encryptedChatRequested
func (m *TLencryptedChatRequested) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedChat
//
func NewTLencryptedChat() *TLencryptedChat {
	return &TLencryptedChat{}
}

// CodecEncode:encryptedChat
func (m *TLencryptedChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-94974410)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_or_b())
	x.Long(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:encryptedChat
func (m *TLencryptedChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_or_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:encryptedChatDiscarded
//
func NewTLencryptedChatDiscarded() *TLencryptedChatDiscarded {
	return &TLencryptedChatDiscarded{}
}

// CodecEncode:encryptedChatDiscarded
func (m *TLencryptedChatDiscarded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(332848423)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:encryptedChatDiscarded
func (m *TLencryptedChatDiscarded) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dataJSON
//
func NewTLdataJSON() *TLdataJSON {
	return &TLdataJSON{}
}

// CodecEncode:dataJSON
func (m *TLdataJSON) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2104790276)
	x.String(m.Getdata())
	return x.Buf
}

// CodecDecode:dataJSON
func (m *TLdataJSON) Decode(dbuf *code.DecodeBuf) error {
	m.Setdata(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelMessagesFilterEmpty
//
func NewTLchannelMessagesFilterEmpty() *TLchannelMessagesFilterEmpty {
	return &TLchannelMessagesFilterEmpty{}
}

// CodecEncode:channelMessagesFilterEmpty
func (m *TLchannelMessagesFilterEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1798033689)
	return x.Buf
}

// CodecDecode:channelMessagesFilterEmpty
func (m *TLchannelMessagesFilterEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelMessagesFilter
//
func NewTLchannelMessagesFilter() *TLchannelMessagesFilter {
	return &TLchannelMessagesFilter{}
}

// CodecEncode:channelMessagesFilter
func (m *TLchannelMessagesFilter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-847783593)
	var flags uint32 = 0
	if m.Getexclude_new_messages() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getranges())))
	for _, v := range m.Getranges() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channelMessagesFilter
func (m *TLchannelMessagesFilter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setexclude_new_messages(true)
	}
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]MessageRange, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = MessageRange{}
		v1[i].Decode(dbuf)
	}
	m.Setranges(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:invoice
//
func NewTLinvoice() *TLinvoice {
	return &TLinvoice{}
}

// CodecEncode:invoice
func (m *TLinvoice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1022713000)
	var flags uint32 = 0
	if m.Gettest() != false {
		flags |= 0 << 0
	}
	if m.Getname_requested() != false {
		flags |= 1 << 1
	}
	if m.Getphone_requested() != false {
		flags |= 2 << 2
	}
	if m.Getemail_requested() != false {
		flags |= 3 << 3
	}
	if m.Getshipping_address_requested() != false {
		flags |= 4 << 4
	}
	if m.Getflexible() != false {
		flags |= 5 << 5
	}
	if m.Getphone_to_provider() != false {
		flags |= 6 << 6
	}
	if m.Getemail_to_provider() != false {
		flags |= 7 << 7
	}
	x.UInt(flags)
	x.String(m.Getcurrency())
	x.Int(481674261)
	x.Int(int32(len(m.Getprices())))
	for _, v := range m.Getprices() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:invoice
func (m *TLinvoice) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Settest(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setname_requested(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setphone_requested(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setemail_requested(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setshipping_address_requested(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setflexible(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setphone_to_provider(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setemail_to_provider(true)
	}
	m.Setcurrency(dbuf.String())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]LabeledPrice, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = LabeledPrice{}
		v9[i].Decode(dbuf)
	}
	m.Setprices(v9)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeTitle
//
func NewTLchannelAdminLogEventActionChangeTitle() *TLchannelAdminLogEventActionChangeTitle {
	return &TLchannelAdminLogEventActionChangeTitle{}
}

// CodecEncode:channelAdminLogEventActionChangeTitle
func (m *TLchannelAdminLogEventActionChangeTitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-421545947)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeTitle
func (m *TLchannelAdminLogEventActionChangeTitle) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeAbout
//
func NewTLchannelAdminLogEventActionChangeAbout() *TLchannelAdminLogEventActionChangeAbout {
	return &TLchannelAdminLogEventActionChangeAbout{}
}

// CodecEncode:channelAdminLogEventActionChangeAbout
func (m *TLchannelAdminLogEventActionChangeAbout) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1427671598)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeAbout
func (m *TLchannelAdminLogEventActionChangeAbout) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeUsername
//
func NewTLchannelAdminLogEventActionChangeUsername() *TLchannelAdminLogEventActionChangeUsername {
	return &TLchannelAdminLogEventActionChangeUsername{}
}

// CodecEncode:channelAdminLogEventActionChangeUsername
func (m *TLchannelAdminLogEventActionChangeUsername) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1783299128)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeUsername
func (m *TLchannelAdminLogEventActionChangeUsername) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangePhoto
//
func NewTLchannelAdminLogEventActionChangePhoto() *TLchannelAdminLogEventActionChangePhoto {
	return &TLchannelAdminLogEventActionChangePhoto{}
}

// CodecEncode:channelAdminLogEventActionChangePhoto
func (m *TLchannelAdminLogEventActionChangePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1129042607)
	x.Bytes(m.Getprev_photo().Encode())
	x.Bytes(m.Getnew_photo().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangePhoto
func (m *TLchannelAdminLogEventActionChangePhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setprev_photo(m0)
	m1 := &Photo{}
	m1.Decode(dbuf)
	m.Setnew_photo(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionToggleInvites
//
func NewTLchannelAdminLogEventActionToggleInvites() *TLchannelAdminLogEventActionToggleInvites {
	return &TLchannelAdminLogEventActionToggleInvites{}
}

// CodecEncode:channelAdminLogEventActionToggleInvites
func (m *TLchannelAdminLogEventActionToggleInvites) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(460916654)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleInvites
func (m *TLchannelAdminLogEventActionToggleInvites) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionToggleSignatures
//
func NewTLchannelAdminLogEventActionToggleSignatures() *TLchannelAdminLogEventActionToggleSignatures {
	return &TLchannelAdminLogEventActionToggleSignatures{}
}

// CodecEncode:channelAdminLogEventActionToggleSignatures
func (m *TLchannelAdminLogEventActionToggleSignatures) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(648939889)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleSignatures
func (m *TLchannelAdminLogEventActionToggleSignatures) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionUpdatePinned
//
func NewTLchannelAdminLogEventActionUpdatePinned() *TLchannelAdminLogEventActionUpdatePinned {
	return &TLchannelAdminLogEventActionUpdatePinned{}
}

// CodecEncode:channelAdminLogEventActionUpdatePinned
func (m *TLchannelAdminLogEventActionUpdatePinned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-370660328)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionUpdatePinned
func (m *TLchannelAdminLogEventActionUpdatePinned) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionEditMessage
//
func NewTLchannelAdminLogEventActionEditMessage() *TLchannelAdminLogEventActionEditMessage {
	return &TLchannelAdminLogEventActionEditMessage{}
}

// CodecEncode:channelAdminLogEventActionEditMessage
func (m *TLchannelAdminLogEventActionEditMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1889215493)
	x.Bytes(m.Getprev_message().Encode())
	x.Bytes(m.Getnew_message().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionEditMessage
func (m *TLchannelAdminLogEventActionEditMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setprev_message(m0)
	m1 := &Message{}
	m1.Decode(dbuf)
	m.Setnew_message(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionDeleteMessage
//
func NewTLchannelAdminLogEventActionDeleteMessage() *TLchannelAdminLogEventActionDeleteMessage {
	return &TLchannelAdminLogEventActionDeleteMessage{}
}

// CodecEncode:channelAdminLogEventActionDeleteMessage
func (m *TLchannelAdminLogEventActionDeleteMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1121994683)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionDeleteMessage
func (m *TLchannelAdminLogEventActionDeleteMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionParticipantJoin
//
func NewTLchannelAdminLogEventActionParticipantJoin() *TLchannelAdminLogEventActionParticipantJoin {
	return &TLchannelAdminLogEventActionParticipantJoin{}
}

// CodecEncode:channelAdminLogEventActionParticipantJoin
func (m *TLchannelAdminLogEventActionParticipantJoin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(405815507)
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantJoin
func (m *TLchannelAdminLogEventActionParticipantJoin) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionParticipantLeave
//
func NewTLchannelAdminLogEventActionParticipantLeave() *TLchannelAdminLogEventActionParticipantLeave {
	return &TLchannelAdminLogEventActionParticipantLeave{}
}

// CodecEncode:channelAdminLogEventActionParticipantLeave
func (m *TLchannelAdminLogEventActionParticipantLeave) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-124291086)
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantLeave
func (m *TLchannelAdminLogEventActionParticipantLeave) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionParticipantInvite
//
func NewTLchannelAdminLogEventActionParticipantInvite() *TLchannelAdminLogEventActionParticipantInvite {
	return &TLchannelAdminLogEventActionParticipantInvite{}
}

// CodecEncode:channelAdminLogEventActionParticipantInvite
func (m *TLchannelAdminLogEventActionParticipantInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-484690728)
	x.Bytes(m.Getparticipant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantInvite
func (m *TLchannelAdminLogEventActionParticipantInvite) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setparticipant(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionParticipantToggleBan
//
func NewTLchannelAdminLogEventActionParticipantToggleBan() *TLchannelAdminLogEventActionParticipantToggleBan {
	return &TLchannelAdminLogEventActionParticipantToggleBan{}
}

// CodecEncode:channelAdminLogEventActionParticipantToggleBan
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-422036098)
	x.Bytes(m.Getprev_participant().Encode())
	x.Bytes(m.Getnew_participant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantToggleBan
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setprev_participant(m0)
	m1 := &ChannelParticipant{}
	m1.Decode(dbuf)
	m.Setnew_participant(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionParticipantToggleAdmin
//
func NewTLchannelAdminLogEventActionParticipantToggleAdmin() *TLchannelAdminLogEventActionParticipantToggleAdmin {
	return &TLchannelAdminLogEventActionParticipantToggleAdmin{}
}

// CodecEncode:channelAdminLogEventActionParticipantToggleAdmin
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-714643696)
	x.Bytes(m.Getprev_participant().Encode())
	x.Bytes(m.Getnew_participant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantToggleAdmin
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setprev_participant(m0)
	m1 := &ChannelParticipant{}
	m1.Decode(dbuf)
	m.Setnew_participant(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeStickerSet
//
func NewTLchannelAdminLogEventActionChangeStickerSet() *TLchannelAdminLogEventActionChangeStickerSet {
	return &TLchannelAdminLogEventActionChangeStickerSet{}
}

// CodecEncode:channelAdminLogEventActionChangeStickerSet
func (m *TLchannelAdminLogEventActionChangeStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1312568665)
	x.Bytes(m.Getprev_stickerset().Encode())
	x.Bytes(m.Getnew_stickerset().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeStickerSet
func (m *TLchannelAdminLogEventActionChangeStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setprev_stickerset(m0)
	m1 := &InputStickerSet{}
	m1.Decode(dbuf)
	m.Setnew_stickerset(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionTogglePreHistoryHidden
//
func NewTLchannelAdminLogEventActionTogglePreHistoryHidden() *TLchannelAdminLogEventActionTogglePreHistoryHidden {
	return &TLchannelAdminLogEventActionTogglePreHistoryHidden{}
}

// CodecEncode:channelAdminLogEventActionTogglePreHistoryHidden
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1599903217)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionTogglePreHistoryHidden
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionDefaultBannedRights
//
func NewTLchannelAdminLogEventActionDefaultBannedRights() *TLchannelAdminLogEventActionDefaultBannedRights {
	return &TLchannelAdminLogEventActionDefaultBannedRights{}
}

// CodecEncode:channelAdminLogEventActionDefaultBannedRights
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(771095562)
	x.Bytes(m.Getprev_banned_rights().Encode())
	x.Bytes(m.Getnew_banned_rights().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionDefaultBannedRights
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChatBannedRights{}
	m0.Decode(dbuf)
	m.Setprev_banned_rights(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setnew_banned_rights(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionStopPoll
//
func NewTLchannelAdminLogEventActionStopPoll() *TLchannelAdminLogEventActionStopPoll {
	return &TLchannelAdminLogEventActionStopPoll{}
}

// CodecEncode:channelAdminLogEventActionStopPoll
func (m *TLchannelAdminLogEventActionStopPoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1895328189)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionStopPoll
func (m *TLchannelAdminLogEventActionStopPoll) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeLinkedChat
//
func NewTLchannelAdminLogEventActionChangeLinkedChat() *TLchannelAdminLogEventActionChangeLinkedChat {
	return &TLchannelAdminLogEventActionChangeLinkedChat{}
}

// CodecEncode:channelAdminLogEventActionChangeLinkedChat
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1569748965)
	x.Int(m.Getprev_value_16())
	x.Int(m.Getnew_value_17())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeLinkedChat
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_value_16(dbuf.Int())
	m.Setnew_value_17(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionChangeLocation
//
func NewTLchannelAdminLogEventActionChangeLocation() *TLchannelAdminLogEventActionChangeLocation {
	return &TLchannelAdminLogEventActionChangeLocation{}
}

// CodecEncode:channelAdminLogEventActionChangeLocation
func (m *TLchannelAdminLogEventActionChangeLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(241923758)
	x.Bytes(m.Getprev_value_18().Encode())
	x.Bytes(m.Getnew_value_19().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeLocation
func (m *TLchannelAdminLogEventActionChangeLocation) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChannelLocation{}
	m0.Decode(dbuf)
	m.Setprev_value_18(m0)
	m1 := &ChannelLocation{}
	m1.Decode(dbuf)
	m.Setnew_value_19(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventActionToggleSlowMode
//
func NewTLchannelAdminLogEventActionToggleSlowMode() *TLchannelAdminLogEventActionToggleSlowMode {
	return &TLchannelAdminLogEventActionToggleSlowMode{}
}

// CodecEncode:channelAdminLogEventActionToggleSlowMode
func (m *TLchannelAdminLogEventActionToggleSlowMode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1401984889)
	x.Int(m.Getprev_value_16())
	x.Int(m.Getnew_value_17())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleSlowMode
func (m *TLchannelAdminLogEventActionToggleSlowMode) Decode(dbuf *code.DecodeBuf) error {
	m.Setprev_value_16(dbuf.Int())
	m.Setnew_value_17(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_passportConfigNotModified
//
func NewTLhelp_passportConfigNotModified() *TLhelp_passportConfigNotModified {
	return &TLhelp_passportConfigNotModified{}
}

// CodecEncode:help_passportConfigNotModified
func (m *TLhelp_passportConfigNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1078332329)
	return x.Buf
}

// CodecDecode:help_passportConfigNotModified
func (m *TLhelp_passportConfigNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_passportConfig
//
func NewTLhelp_passportConfig() *TLhelp_passportConfig {
	return &TLhelp_passportConfig{}
}

// CodecEncode:help_passportConfig
func (m *TLhelp_passportConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1600596305)
	x.Int(m.Gethash())
	x.Bytes(m.Getcountries_langs().Encode())
	return x.Buf
}

// CodecDecode:help_passportConfig
func (m *TLhelp_passportConfig) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setcountries_langs(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:keyboardButtonRow
//
func NewTLkeyboardButtonRow() *TLkeyboardButtonRow {
	return &TLkeyboardButtonRow{}
}

// CodecEncode:keyboardButtonRow
func (m *TLkeyboardButtonRow) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2002815875)
	x.Int(481674261)
	x.Int(int32(len(m.Getbuttons())))
	for _, v := range m.Getbuttons() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:keyboardButtonRow
func (m *TLkeyboardButtonRow) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]KeyboardButton, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = KeyboardButton{}
		v0[i].Decode(dbuf)
	}
	m.Setbuttons(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsURL
//
func NewTLstatsURL() *TLstatsURL {
	return &TLstatsURL{}
}

// CodecEncode:statsURL
func (m *TLstatsURL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1202287072)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:statsURL
func (m *TLstatsURL) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_takeout
//
func NewTLaccount_takeout() *TLaccount_takeout {
	return &TLaccount_takeout{}
}

// CodecEncode:account_takeout
func (m *TLaccount_takeout) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1304052993)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:account_takeout
func (m *TLaccount_takeout) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelLocationEmpty
//
func NewTLchannelLocationEmpty() *TLchannelLocationEmpty {
	return &TLchannelLocationEmpty{}
}

// CodecEncode:channelLocationEmpty
func (m *TLchannelLocationEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1078612597)
	return x.Buf
}

// CodecDecode:channelLocationEmpty
func (m *TLchannelLocationEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelLocation
//
func NewTLchannelLocation() *TLchannelLocation {
	return &TLchannelLocation{}
}

// CodecEncode:channelLocation
func (m *TLchannelLocation) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(547062491)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Getaddress())
	return x.Buf
}

// CodecDecode:channelLocation
func (m *TLchannelLocation) Decode(dbuf *code.DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Setaddress(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_country
//
func NewTLhelp_country() *TLhelp_country {
	return &TLhelp_country{}
}

// CodecEncode:help_country
func (m *TLhelp_country) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1014526429)
	var flags uint32 = 0
	if m.Gethidden() != false {
		flags |= 0 << 0
	}
	if m.Getname() != "" {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Getiso2())
	x.String(m.Getdefault_name())
	if m.Getname() != "" {
		x.String(m.Getname())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getcountry_codes())))
	for _, v := range m.Getcountry_codes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_country
func (m *TLhelp_country) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethidden(true)
	}
	m.Setiso2(dbuf.String())
	m.Setdefault_name(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		m.Setname(dbuf.String())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Help_CountryCode, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Help_CountryCode{}
		v4[i].Decode(dbuf)
	}
	m.Setcountry_codes(v4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialogPeer
//
func NewTLdialogPeer() *TLdialogPeer {
	return &TLdialogPeer{}
}

// CodecEncode:dialogPeer
func (m *TLdialogPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-445792507)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:dialogPeer
func (m *TLdialogPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialogPeerFolder
//
func NewTLdialogPeerFolder() *TLdialogPeerFolder {
	return &TLdialogPeerFolder{}
}

// CodecEncode:dialogPeerFolder
func (m *TLdialogPeerFolder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1363483106)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:dialogPeerFolder
func (m *TLdialogPeerFolder) Decode(dbuf *code.DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueAllowContacts
//
func NewTLprivacyValueAllowContacts() *TLprivacyValueAllowContacts {
	return &TLprivacyValueAllowContacts{}
}

// CodecEncode:privacyValueAllowContacts
func (m *TLprivacyValueAllowContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-123988)
	return x.Buf
}

// CodecDecode:privacyValueAllowContacts
func (m *TLprivacyValueAllowContacts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueAllowAll
//
func NewTLprivacyValueAllowAll() *TLprivacyValueAllowAll {
	return &TLprivacyValueAllowAll{}
}

// CodecEncode:privacyValueAllowAll
func (m *TLprivacyValueAllowAll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1698855810)
	return x.Buf
}

// CodecDecode:privacyValueAllowAll
func (m *TLprivacyValueAllowAll) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueAllowUsers
//
func NewTLprivacyValueAllowUsers() *TLprivacyValueAllowUsers {
	return &TLprivacyValueAllowUsers{}
}

// CodecEncode:privacyValueAllowUsers
func (m *TLprivacyValueAllowUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1297858060)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:privacyValueAllowUsers
func (m *TLprivacyValueAllowUsers) Decode(dbuf *code.DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueDisallowContacts
//
func NewTLprivacyValueDisallowContacts() *TLprivacyValueDisallowContacts {
	return &TLprivacyValueDisallowContacts{}
}

// CodecEncode:privacyValueDisallowContacts
func (m *TLprivacyValueDisallowContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-125240806)
	return x.Buf
}

// CodecDecode:privacyValueDisallowContacts
func (m *TLprivacyValueDisallowContacts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueDisallowAll
//
func NewTLprivacyValueDisallowAll() *TLprivacyValueDisallowAll {
	return &TLprivacyValueDisallowAll{}
}

// CodecEncode:privacyValueDisallowAll
func (m *TLprivacyValueDisallowAll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1955338397)
	return x.Buf
}

// CodecDecode:privacyValueDisallowAll
func (m *TLprivacyValueDisallowAll) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueDisallowUsers
//
func NewTLprivacyValueDisallowUsers() *TLprivacyValueDisallowUsers {
	return &TLprivacyValueDisallowUsers{}
}

// CodecEncode:privacyValueDisallowUsers
func (m *TLprivacyValueDisallowUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(209668535)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:privacyValueDisallowUsers
func (m *TLprivacyValueDisallowUsers) Decode(dbuf *code.DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueAllowChatParticipants
//
func NewTLprivacyValueAllowChatParticipants() *TLprivacyValueAllowChatParticipants {
	return &TLprivacyValueAllowChatParticipants{}
}

// CodecEncode:privacyValueAllowChatParticipants
func (m *TLprivacyValueAllowChatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(415136107)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:privacyValueAllowChatParticipants
func (m *TLprivacyValueAllowChatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyValueDisallowChatParticipants
//
func NewTLprivacyValueDisallowChatParticipants() *TLprivacyValueDisallowChatParticipants {
	return &TLprivacyValueDisallowChatParticipants{}
}

// CodecEncode:privacyValueDisallowChatParticipants
func (m *TLprivacyValueDisallowChatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1397881200)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:privacyValueDisallowChatParticipants
func (m *TLprivacyValueDisallowChatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaEmpty
//
func NewTLinputMediaEmpty() *TLinputMediaEmpty {
	return &TLinputMediaEmpty{}
}

// CodecEncode:inputMediaEmpty
func (m *TLinputMediaEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1771768449)
	return x.Buf
}

// CodecDecode:inputMediaEmpty
func (m *TLinputMediaEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaUploadedPhoto
//
func NewTLinputMediaUploadedPhoto() *TLinputMediaUploadedPhoto {
	return &TLinputMediaUploadedPhoto{}
}

// CodecEncode:inputMediaUploadedPhoto
func (m *TLinputMediaUploadedPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(505969924)
	var flags uint32 = 0
	if len(m.Getstickers()) > 0 {
		flags |= 0 << 1
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if len(m.Getstickers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getstickers())))
		for _, v := range m.Getstickers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaUploadedPhoto
func (m *TLinputMediaUploadedPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]InputDocument, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = InputDocument{}
			v1[i].Decode(dbuf)
		}
		m.Setstickers(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaPhoto
//
func NewTLinputMediaPhoto() *TLinputMediaPhoto {
	return &TLinputMediaPhoto{}
}

// CodecEncode:inputMediaPhoto
func (m *TLinputMediaPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1279654347)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaPhoto
func (m *TLinputMediaPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaGeoPoint
//
func NewTLinputMediaGeoPoint() *TLinputMediaGeoPoint {
	return &TLinputMediaGeoPoint{}
}

// CodecEncode:inputMediaGeoPoint
func (m *TLinputMediaGeoPoint) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-104578748)
	x.Bytes(m.Getgeo_point().Encode())
	return x.Buf
}

// CodecDecode:inputMediaGeoPoint
func (m *TLinputMediaGeoPoint) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaContact
//
func NewTLinputMediaContact() *TLinputMediaContact {
	return &TLinputMediaContact{}
}

// CodecEncode:inputMediaContact
func (m *TLinputMediaContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-122978821)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	return x.Buf
}

// CodecDecode:inputMediaContact
func (m *TLinputMediaContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaUploadedDocument
//
func NewTLinputMediaUploadedDocument() *TLinputMediaUploadedDocument {
	return &TLinputMediaUploadedDocument{}
}

// CodecEncode:inputMediaUploadedDocument
func (m *TLinputMediaUploadedDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1530447553)
	var flags uint32 = 0
	if m.Getnosound_video() != false {
		flags |= 3 << 0
	}
	if m.Getforce_file() != false {
		flags |= 4 << 1
	}
	if m.Getthumb().Constructor != 0 {
		flags |= 2 << 3
	}
	if len(m.Getstickers()) > 0 {
		flags |= 0 << 6
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if m.Getthumb().Constructor != 0 {
		x.Bytes(m.Getthumb().Encode())
	}
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if len(m.Getstickers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getstickers())))
		for _, v := range m.Getstickers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaUploadedDocument
func (m *TLinputMediaUploadedDocument) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setnosound_video(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforce_file(true)
	}
	m2 := &InputFile{}
	m2.Decode(dbuf)
	m.Setfile(m2)
	if (flags & (1 << 3)) != 0 {
		m3 := &InputFile{}
		m3.Decode(dbuf)
		m.Setthumb(m3)
	}
	m.Setmime_type(dbuf.String())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]DocumentAttribute, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = DocumentAttribute{}
		v5[i].Decode(dbuf)
	}
	m.Setattributes(v5)
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]InputDocument, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = InputDocument{}
			v6[i].Decode(dbuf)
		}
		m.Setstickers(v6)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaDocument
//
func NewTLinputMediaDocument() *TLinputMediaDocument {
	return &TLinputMediaDocument{}
}

// CodecEncode:inputMediaDocument
func (m *TLinputMediaDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(598418386)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getid_15().Encode())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaDocument
func (m *TLinputMediaDocument) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid_15(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaVenue
//
func NewTLinputMediaVenue() *TLinputMediaVenue {
	return &TLinputMediaVenue{}
}

// CodecEncode:inputMediaVenue
func (m *TLinputMediaVenue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1052959727)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	return x.Buf
}

// CodecDecode:inputMediaVenue
func (m *TLinputMediaVenue) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaPhotoExternal
//
func NewTLinputMediaPhotoExternal() *TLinputMediaPhotoExternal {
	return &TLinputMediaPhotoExternal{}
}

// CodecEncode:inputMediaPhotoExternal
func (m *TLinputMediaPhotoExternal) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-440664550)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.String(m.Geturl())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaPhotoExternal
func (m *TLinputMediaPhotoExternal) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaDocumentExternal
//
func NewTLinputMediaDocumentExternal() *TLinputMediaDocumentExternal {
	return &TLinputMediaDocumentExternal{}
}

// CodecEncode:inputMediaDocumentExternal
func (m *TLinputMediaDocumentExternal) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-78455655)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.String(m.Geturl())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaDocumentExternal
func (m *TLinputMediaDocumentExternal) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaGame
//
func NewTLinputMediaGame() *TLinputMediaGame {
	return &TLinputMediaGame{}
}

// CodecEncode:inputMediaGame
func (m *TLinputMediaGame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-750828557)
	x.Bytes(m.Getid_22().Encode())
	return x.Buf
}

// CodecDecode:inputMediaGame
func (m *TLinputMediaGame) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputGame{}
	m0.Decode(dbuf)
	m.Setid_22(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaInvoice
//
func NewTLinputMediaInvoice() *TLinputMediaInvoice {
	return &TLinputMediaInvoice{}
}

// CodecEncode:inputMediaInvoice
func (m *TLinputMediaInvoice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-186607933)
	var flags uint32 = 0
	if m.Getphoto().Constructor != 0 {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	x.Bytes(m.Getinvoice().Encode())
	x.Bytes(m.Getpayload())
	x.String(m.Getprovider())
	x.Bytes(m.Getprovider_data().Encode())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:inputMediaInvoice
func (m *TLinputMediaInvoice) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &InputWebDocument{}
		m2.Decode(dbuf)
		m.Setphoto(m2)
	}
	m3 := &Invoice{}
	m3.Decode(dbuf)
	m.Setinvoice(m3)
	m.Setpayload(dbuf.StringBytes())
	m.Setprovider(dbuf.String())
	m6 := &DataJSON{}
	m6.Decode(dbuf)
	m.Setprovider_data(m6)
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaGeoLive
//
func NewTLinputMediaGeoLive() *TLinputMediaGeoLive {
	return &TLinputMediaGeoLive{}
}

// CodecEncode:inputMediaGeoLive
func (m *TLinputMediaGeoLive) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1759532989)
	var flags uint32 = 0
	if m.Getstopped() != false {
		flags |= 0 << 0
	}
	if m.Getheading() != 0 {
		flags |= 2 << 2
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 3
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 3 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	return x.Buf
}

// CodecDecode:inputMediaGeoLive
func (m *TLinputMediaGeoLive) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setstopped(true)
	}
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaPoll
//
func NewTLinputMediaPoll() *TLinputMediaPoll {
	return &TLinputMediaPoll{}
}

// CodecEncode:inputMediaPoll
func (m *TLinputMediaPoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(261416433)
	var flags uint32 = 0
	if len(m.Getcorrect_answers()) > 0 {
		flags |= 0 << 1
	}
	if m.Getsolution() != "" {
		flags |= 1 << 2
	}
	if len(m.Getsolution_entities()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getpoll().Encode())
	if m.Getcorrect_answers() != nil {
		x.Int(481674261)
		x.Int(int32(len(m.Getcorrect_answers())))
		for _, v := range m.Getcorrect_answers() {
			x.Buf = append(x.Buf, v...)
		}
	}
	if m.Getsolution() != "" {
		x.String(m.Getsolution())
	}
	if len(m.Getsolution_entities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getsolution_entities())))
		for _, v := range m.Getsolution_entities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:inputMediaPoll
func (m *TLinputMediaPoll) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &Poll{}
	m0.Decode(dbuf)
	m.Setpoll(m0)
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]byte, l1)
		for i := int32(0); i < l1; i++ {
			v1[i].Bytes(dbuf)
		}
		m.Setcorrect_answers(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setsolution(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setsolution_entities(v3)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMediaDice
//
func NewTLinputMediaDice() *TLinputMediaDice {
	return &TLinputMediaDice{}
}

// CodecEncode:inputMediaDice
func (m *TLinputMediaDice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-428884101)
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:inputMediaDice
func (m *TLinputMediaDice) Decode(dbuf *code.DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputGeoPointEmpty
//
func NewTLinputGeoPointEmpty() *TLinputGeoPointEmpty {
	return &TLinputGeoPointEmpty{}
}

// CodecEncode:inputGeoPointEmpty
func (m *TLinputGeoPointEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-457104426)
	return x.Buf
}

// CodecDecode:inputGeoPointEmpty
func (m *TLinputGeoPointEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputGeoPoint
//
func NewTLinputGeoPoint() *TLinputGeoPoint {
	return &TLinputGeoPoint{}
}

// CodecEncode:inputGeoPoint
func (m *TLinputGeoPoint) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1210199983)
	var flags uint32 = 0
	if m.Getaccuracy_radius() != 0 {
		flags |= 0 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getlat().Encode())
	x.Bytes(m.Getlong_key().Encode())
	if m.Getaccuracy_radius() != 0 {
		x.Int(m.Getaccuracy_radius())
	}
	return x.Buf
}

// CodecDecode:inputGeoPoint
func (m *TLinputGeoPoint) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setlat(dbuf.Double())
	m.Setlong_key(dbuf.Double())
	if (flags & (1 << 2)) != 0 {
		m.Setaccuracy_radius(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhoneContact
//
func NewTLinputPhoneContact() *TLinputPhoneContact {
	return &TLinputPhoneContact{}
}

// CodecEncode:inputPhoneContact
func (m *TLinputPhoneContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-208488460)
	x.Long(m.Getclient_id())
	x.String(m.Getphone())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	return x.Buf
}

// CodecDecode:inputPhoneContact
func (m *TLinputPhoneContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setclient_id(dbuf.Long())
	m.Setphone(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_passwordSettings
//
func NewTLaccount_passwordSettings() *TLaccount_passwordSettings {
	return &TLaccount_passwordSettings{}
}

// CodecEncode:account_passwordSettings
func (m *TLaccount_passwordSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1705233435)
	var flags uint32 = 0
	if m.Getemail() != "" {
		flags |= 0 << 0
	}
	if m.Getsecure_settings().Constructor != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getsecure_settings().Constructor != 0 {
		x.Bytes(m.Getsecure_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_passwordSettings
func (m *TLaccount_passwordSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &SecureSecretSettings{}
		m1.Decode(dbuf)
		m.Setsecure_settings(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:contacts_importedContacts
//
func NewTLcontacts_importedContacts() *TLcontacts_importedContacts {
	return &TLcontacts_importedContacts{}
}

// CodecEncode:contacts_importedContacts
func (m *TLcontacts_importedContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2010127419)
	x.Int(481674261)
	x.Int(int32(len(m.Getimported())))
	for _, v := range m.Getimported() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getpopular_invites())))
	for _, v := range m.Getpopular_invites() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getretry_contacts())))
	for _, v := range m.Getretry_contacts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_importedContacts
func (m *TLcontacts_importedContacts) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]ImportedContact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = ImportedContact{}
		v0[i].Decode(dbuf)
	}
	m.Setimported(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PopularContact, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PopularContact{}
		v1[i].Decode(dbuf)
	}
	m.Setpopular_invites(v1)
	m.Setretry_contacts(dbuf.VectorLong())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_sentEmailCode
//
func NewTLaccount_sentEmailCode() *TLaccount_sentEmailCode {
	return &TLaccount_sentEmailCode{}
}

// CodecEncode:account_sentEmailCode
func (m *TLaccount_sentEmailCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2128640689)
	x.String(m.Getemail_pattern())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:account_sentEmailCode
func (m *TLaccount_sentEmailCode) Decode(dbuf *code.DecodeBuf) error {
	m.Setemail_pattern(dbuf.String())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaEmpty
//
func NewTLmessageMediaEmpty() *TLmessageMediaEmpty {
	return &TLmessageMediaEmpty{}
}

// CodecEncode:messageMediaEmpty
func (m *TLmessageMediaEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1038967584)
	return x.Buf
}

// CodecDecode:messageMediaEmpty
func (m *TLmessageMediaEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaPhoto
//
func NewTLmessageMediaPhoto() *TLmessageMediaPhoto {
	return &TLmessageMediaPhoto{}
}

// CodecEncode:messageMediaPhoto
func (m *TLmessageMediaPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1766936791)
	var flags uint32 = 0
	if m.Getphoto().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 2 << 1
	}
	x.UInt(flags)
	if m.Getphoto().Constructor != 0 {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:messageMediaPhoto
func (m *TLmessageMediaPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Photo{}
		m0.Decode(dbuf)
		m.Setphoto(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaGeo
//
func NewTLmessageMediaGeo() *TLmessageMediaGeo {
	return &TLmessageMediaGeo{}
}

// CodecEncode:messageMediaGeo
func (m *TLmessageMediaGeo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1457575028)
	x.Bytes(m.Getgeo().Encode())
	return x.Buf
}

// CodecDecode:messageMediaGeo
func (m *TLmessageMediaGeo) Decode(dbuf *code.DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaContact
//
func NewTLmessageMediaContact() *TLmessageMediaContact {
	return &TLmessageMediaContact{}
}

// CodecEncode:messageMediaContact
func (m *TLmessageMediaContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-873313984)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageMediaContact
func (m *TLmessageMediaContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaUnsupported
//
func NewTLmessageMediaUnsupported() *TLmessageMediaUnsupported {
	return &TLmessageMediaUnsupported{}
}

// CodecEncode:messageMediaUnsupported
func (m *TLmessageMediaUnsupported) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1618676578)
	return x.Buf
}

// CodecDecode:messageMediaUnsupported
func (m *TLmessageMediaUnsupported) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaDocument
//
func NewTLmessageMediaDocument() *TLmessageMediaDocument {
	return &TLmessageMediaDocument{}
}

// CodecEncode:messageMediaDocument
func (m *TLmessageMediaDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1666158377)
	var flags uint32 = 0
	if m.Getdocument().Constructor != 0 {
		flags |= 0 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 2 << 1
	}
	x.UInt(flags)
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:messageMediaDocument
func (m *TLmessageMediaDocument) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Document{}
		m0.Decode(dbuf)
		m.Setdocument(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaWebPage
//
func NewTLmessageMediaWebPage() *TLmessageMediaWebPage {
	return &TLmessageMediaWebPage{}
}

// CodecEncode:messageMediaWebPage
func (m *TLmessageMediaWebPage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1557277184)
	x.Bytes(m.Getwebpage().Encode())
	return x.Buf
}

// CodecDecode:messageMediaWebPage
func (m *TLmessageMediaWebPage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &WebPage{}
	m0.Decode(dbuf)
	m.Setwebpage(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaVenue
//
func NewTLmessageMediaVenue() *TLmessageMediaVenue {
	return &TLmessageMediaVenue{}
}

// CodecEncode:messageMediaVenue
func (m *TLmessageMediaVenue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(784356159)
	x.Bytes(m.Getgeo().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	return x.Buf
}

// CodecDecode:messageMediaVenue
func (m *TLmessageMediaVenue) Decode(dbuf *code.DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaGame
//
func NewTLmessageMediaGame() *TLmessageMediaGame {
	return &TLmessageMediaGame{}
}

// CodecEncode:messageMediaGame
func (m *TLmessageMediaGame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-38694904)
	x.Bytes(m.Getgame().Encode())
	return x.Buf
}

// CodecDecode:messageMediaGame
func (m *TLmessageMediaGame) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Game{}
	m0.Decode(dbuf)
	m.Setgame(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaInvoice
//
func NewTLmessageMediaInvoice() *TLmessageMediaInvoice {
	return &TLmessageMediaInvoice{}
}

// CodecEncode:messageMediaInvoice
func (m *TLmessageMediaInvoice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2074799289)
	var flags uint32 = 0
	if m.Getshipping_address_requested() != false {
		flags |= 1 << 0
	}
	if m.Gettest() != false {
		flags |= 3 << 1
	}
	if m.Getphoto_20().Constructor != 0 {
		flags |= 0 << 4
	}
	if m.Getreceipt_msg_id() != 0 {
		flags |= 2 << 5
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	if m.Getphoto_20().Constructor != 0 {
		x.Bytes(m.Getphoto_20().Encode())
	}
	if m.Getreceipt_msg_id() != 0 {
		x.Int(m.Getreceipt_msg_id())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:messageMediaInvoice
func (m *TLmessageMediaInvoice) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setshipping_address_requested(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Settest(true)
	}
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m4 := &WebDocument{}
		m4.Decode(dbuf)
		m.Setphoto_20(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setreceipt_msg_id(dbuf.Int())
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaGeoLive
//
func NewTLmessageMediaGeoLive() *TLmessageMediaGeoLive {
	return &TLmessageMediaGeoLive{}
}

// CodecEncode:messageMediaGeoLive
func (m *TLmessageMediaGeoLive) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1186937242)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 0 << 1
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	x.Int(m.Getperiod())
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	return x.Buf
}

// CodecDecode:messageMediaGeoLive
func (m *TLmessageMediaGeoLive) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	if (flags & (1 << 1)) != 0 {
		m.Setheading(dbuf.Int())
	}
	m.Setperiod(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaPoll
//
func NewTLmessageMediaPoll() *TLmessageMediaPoll {
	return &TLmessageMediaPoll{}
}

// CodecEncode:messageMediaPoll
func (m *TLmessageMediaPoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1272375192)
	x.Bytes(m.Getpoll().Encode())
	x.Bytes(m.Getresults().Encode())
	return x.Buf
}

// CodecDecode:messageMediaPoll
func (m *TLmessageMediaPoll) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Poll{}
	m0.Decode(dbuf)
	m.Setpoll(m0)
	m1 := &PollResults{}
	m1.Decode(dbuf)
	m.Setresults(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageMediaDice
//
func NewTLmessageMediaDice() *TLmessageMediaDice {
	return &TLmessageMediaDice{}
}

// CodecEncode:messageMediaDice
func (m *TLmessageMediaDice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1065280907)
	x.Int(m.Getvalue())
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:messageMediaDice
func (m *TLmessageMediaDice) Decode(dbuf *code.DecodeBuf) error {
	m.Setvalue(dbuf.Int())
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:boolFalse
//
func NewTLboolFalse() *TLboolFalse {
	return &TLboolFalse{}
}

// CodecEncode:boolFalse
func (m *TLboolFalse) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1132882121)
	return x.Buf
}

// CodecDecode:boolFalse
func (m *TLboolFalse) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:boolTrue
//
func NewTLboolTrue() *TLboolTrue {
	return &TLboolTrue{}
}

// CodecEncode:boolTrue
func (m *TLboolTrue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1720552011)
	return x.Buf
}

// CodecDecode:boolTrue
func (m *TLboolTrue) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPaymentCredentialsSaved
//
func NewTLinputPaymentCredentialsSaved() *TLinputPaymentCredentialsSaved {
	return &TLinputPaymentCredentialsSaved{}
}

// CodecEncode:inputPaymentCredentialsSaved
func (m *TLinputPaymentCredentialsSaved) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1056001329)
	x.String(m.Getid())
	x.Bytes(m.Gettmp_password())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsSaved
func (m *TLinputPaymentCredentialsSaved) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settmp_password(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPaymentCredentials
//
func NewTLinputPaymentCredentials() *TLinputPaymentCredentials {
	return &TLinputPaymentCredentials{}
}

// CodecEncode:inputPaymentCredentials
func (m *TLinputPaymentCredentials) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(873977640)
	var flags uint32 = 0
	if m.Getsave() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:inputPaymentCredentials
func (m *TLinputPaymentCredentials) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsave(true)
	}
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPaymentCredentialsApplePay
//
func NewTLinputPaymentCredentialsApplePay() *TLinputPaymentCredentialsApplePay {
	return &TLinputPaymentCredentialsApplePay{}
}

// CodecEncode:inputPaymentCredentialsApplePay
func (m *TLinputPaymentCredentialsApplePay) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(178373535)
	x.Bytes(m.Getpayment_data().Encode())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsApplePay
func (m *TLinputPaymentCredentialsApplePay) Decode(dbuf *code.DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setpayment_data(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPaymentCredentialsAndroidPay
//
func NewTLinputPaymentCredentialsAndroidPay() *TLinputPaymentCredentialsAndroidPay {
	return &TLinputPaymentCredentialsAndroidPay{}
}

// CodecEncode:inputPaymentCredentialsAndroidPay
func (m *TLinputPaymentCredentialsAndroidPay) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-905587442)
	x.Bytes(m.Getpayment_token().Encode())
	x.String(m.Getgoogle_transaction_id())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsAndroidPay
func (m *TLinputPaymentCredentialsAndroidPay) Decode(dbuf *code.DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setpayment_token(m0)
	m.Setgoogle_transaction_id(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedChat
//
func NewTLinputEncryptedChat() *TLinputEncryptedChat {
	return &TLinputEncryptedChat{}
}

// CodecEncode:inputEncryptedChat
func (m *TLinputEncryptedChat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-247351839)
	x.Int(m.Getchat_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedChat
func (m *TLinputEncryptedChat) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedFileEmpty
//
func NewTLinputEncryptedFileEmpty() *TLinputEncryptedFileEmpty {
	return &TLinputEncryptedFileEmpty{}
}

// CodecEncode:inputEncryptedFileEmpty
func (m *TLinputEncryptedFileEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(406307684)
	return x.Buf
}

// CodecDecode:inputEncryptedFileEmpty
func (m *TLinputEncryptedFileEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedFileUploaded
//
func NewTLinputEncryptedFileUploaded() *TLinputEncryptedFileUploaded {
	return &TLinputEncryptedFileUploaded{}
}

// CodecEncode:inputEncryptedFileUploaded
func (m *TLinputEncryptedFileUploaded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1690108678)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getmd5_checksum())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:inputEncryptedFileUploaded
func (m *TLinputEncryptedFileUploaded) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setmd5_checksum(dbuf.String())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedFile
//
func NewTLinputEncryptedFile() *TLinputEncryptedFile {
	return &TLinputEncryptedFile{}
}

// CodecEncode:inputEncryptedFile
func (m *TLinputEncryptedFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1511503333)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedFile
func (m *TLinputEncryptedFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputEncryptedFileBigUploaded
//
func NewTLinputEncryptedFileBigUploaded() *TLinputEncryptedFileBigUploaded {
	return &TLinputEncryptedFileBigUploaded{}
}

// CodecEncode:inputEncryptedFileBigUploaded
func (m *TLinputEncryptedFileBigUploaded) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(767652808)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:inputEncryptedFileBigUploaded
func (m *TLinputEncryptedFileBigUploaded) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_highScores
//
func NewTLmessages_highScores() *TLmessages_highScores {
	return &TLmessages_highScores{}
}

// CodecEncode:messages_highScores
func (m *TLmessages_highScores) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1707344487)
	x.Int(481674261)
	x.Int(int32(len(m.Getscores())))
	for _, v := range m.Getscores() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_highScores
func (m *TLmessages_highScores) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]HighScore, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = HighScore{}
		v0[i].Decode(dbuf)
	}
	m.Setscores(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_chatFull
//
func NewTLmessages_chatFull() *TLmessages_chatFull {
	return &TLmessages_chatFull{}
}

// CodecEncode:messages_chatFull
func (m *TLmessages_chatFull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-438840932)
	x.Bytes(m.Getfull_chat().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chatFull
func (m *TLmessages_chatFull) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChatFull{}
	m0.Decode(dbuf)
	m.Setfull_chat(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_affectedHistory
//
func NewTLmessages_affectedHistory() *TLmessages_affectedHistory {
	return &TLmessages_affectedHistory{}
}

// CodecEncode:messages_affectedHistory
func (m *TLmessages_affectedHistory) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1269012015)
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:messages_affectedHistory
func (m *TLmessages_affectedHistory) Decode(dbuf *code.DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:paymentCharge
//
func NewTLpaymentCharge() *TLpaymentCharge {
	return &TLpaymentCharge{}
}

// CodecEncode:paymentCharge
func (m *TLpaymentCharge) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-368917890)
	x.String(m.Getid())
	x.String(m.Getprovider_charge_id())
	return x.Buf
}

// CodecDecode:paymentCharge
func (m *TLpaymentCharge) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Setprovider_charge_id(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:importedContact
//
func NewTLimportedContact() *TLimportedContact {
	return &TLimportedContact{}
}

// CodecEncode:importedContact
func (m *TLimportedContact) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-805141448)
	x.Int(m.Getuser_id())
	x.Long(m.Getclient_id())
	return x.Buf
}

// CodecDecode:importedContact
func (m *TLimportedContact) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setclient_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputFolderPeer
//
func NewTLinputFolderPeer() *TLinputFolderPeer {
	return &TLinputFolderPeer{}
}

// CodecEncode:inputFolderPeer
func (m *TLinputFolderPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-70073706)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:inputFolderPeer
func (m *TLinputFolderPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stats_messageStats
//
func NewTLstats_messageStats() *TLstats_messageStats {
	return &TLstats_messageStats{}
}

// CodecEncode:stats_messageStats
func (m *TLstats_messageStats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1986399595)
	x.Bytes(m.Getviews_graph().Encode())
	return x.Buf
}

// CodecDecode:stats_messageStats
func (m *TLstats_messageStats) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StatsGraph{}
	m0.Decode(dbuf)
	m.Setviews_graph(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_autoDownloadSettings
//
func NewTLaccount_autoDownloadSettings() *TLaccount_autoDownloadSettings {
	return &TLaccount_autoDownloadSettings{}
}

// CodecEncode:account_autoDownloadSettings
func (m *TLaccount_autoDownloadSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1674235686)
	x.Bytes(m.Getlow().Encode())
	x.Bytes(m.Getmedium().Encode())
	x.Bytes(m.Gethigh().Encode())
	return x.Buf
}

// CodecDecode:account_autoDownloadSettings
func (m *TLaccount_autoDownloadSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &AutoDownloadSettings{}
	m0.Decode(dbuf)
	m.Setlow(m0)
	m1 := &AutoDownloadSettings{}
	m1.Decode(dbuf)
	m.Setmedium(m1)
	m2 := &AutoDownloadSettings{}
	m2.Decode(dbuf)
	m.Sethigh(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryBotsPM
//
func NewTLtopPeerCategoryBotsPM() *TLtopPeerCategoryBotsPM {
	return &TLtopPeerCategoryBotsPM{}
}

// CodecEncode:topPeerCategoryBotsPM
func (m *TLtopPeerCategoryBotsPM) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1419371685)
	return x.Buf
}

// CodecDecode:topPeerCategoryBotsPM
func (m *TLtopPeerCategoryBotsPM) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryBotsInline
//
func NewTLtopPeerCategoryBotsInline() *TLtopPeerCategoryBotsInline {
	return &TLtopPeerCategoryBotsInline{}
}

// CodecEncode:topPeerCategoryBotsInline
func (m *TLtopPeerCategoryBotsInline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(344356834)
	return x.Buf
}

// CodecDecode:topPeerCategoryBotsInline
func (m *TLtopPeerCategoryBotsInline) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryCorrespondents
//
func NewTLtopPeerCategoryCorrespondents() *TLtopPeerCategoryCorrespondents {
	return &TLtopPeerCategoryCorrespondents{}
}

// CodecEncode:topPeerCategoryCorrespondents
func (m *TLtopPeerCategoryCorrespondents) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(104314861)
	return x.Buf
}

// CodecDecode:topPeerCategoryCorrespondents
func (m *TLtopPeerCategoryCorrespondents) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryGroups
//
func NewTLtopPeerCategoryGroups() *TLtopPeerCategoryGroups {
	return &TLtopPeerCategoryGroups{}
}

// CodecEncode:topPeerCategoryGroups
func (m *TLtopPeerCategoryGroups) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1122524854)
	return x.Buf
}

// CodecDecode:topPeerCategoryGroups
func (m *TLtopPeerCategoryGroups) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryChannels
//
func NewTLtopPeerCategoryChannels() *TLtopPeerCategoryChannels {
	return &TLtopPeerCategoryChannels{}
}

// CodecEncode:topPeerCategoryChannels
func (m *TLtopPeerCategoryChannels) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(371037736)
	return x.Buf
}

// CodecDecode:topPeerCategoryChannels
func (m *TLtopPeerCategoryChannels) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryPhoneCalls
//
func NewTLtopPeerCategoryPhoneCalls() *TLtopPeerCategoryPhoneCalls {
	return &TLtopPeerCategoryPhoneCalls{}
}

// CodecEncode:topPeerCategoryPhoneCalls
func (m *TLtopPeerCategoryPhoneCalls) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(511092620)
	return x.Buf
}

// CodecDecode:topPeerCategoryPhoneCalls
func (m *TLtopPeerCategoryPhoneCalls) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryForwardUsers
//
func NewTLtopPeerCategoryForwardUsers() *TLtopPeerCategoryForwardUsers {
	return &TLtopPeerCategoryForwardUsers{}
}

// CodecEncode:topPeerCategoryForwardUsers
func (m *TLtopPeerCategoryForwardUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1472172887)
	return x.Buf
}

// CodecDecode:topPeerCategoryForwardUsers
func (m *TLtopPeerCategoryForwardUsers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:topPeerCategoryForwardChats
//
func NewTLtopPeerCategoryForwardChats() *TLtopPeerCategoryForwardChats {
	return &TLtopPeerCategoryForwardChats{}
}

// CodecEncode:topPeerCategoryForwardChats
func (m *TLtopPeerCategoryForwardChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-68239120)
	return x.Buf
}

// CodecDecode:topPeerCategoryForwardChats
func (m *TLtopPeerCategoryForwardChats) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatInviteEmpty
//
func NewTLchatInviteEmpty() *TLchatInviteEmpty {
	return &TLchatInviteEmpty{}
}

// CodecEncode:chatInviteEmpty
func (m *TLchatInviteEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1776236393)
	return x.Buf
}

// CodecDecode:chatInviteEmpty
func (m *TLchatInviteEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatInviteExported
//
func NewTLchatInviteExported() *TLchatInviteExported {
	return &TLchatInviteExported{}
}

// CodecEncode:chatInviteExported
func (m *TLchatInviteExported) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-64092740)
	x.String(m.Getlink())
	return x.Buf
}

// CodecDecode:chatInviteExported
func (m *TLchatInviteExported) Decode(dbuf *code.DecodeBuf) error {
	m.Setlink(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNewMessage
//
func NewTLupdateNewMessage() *TLupdateNewMessage {
	return &TLupdateNewMessage{}
}

// CodecEncode:updateNewMessage
func (m *TLupdateNewMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(522914557)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateNewMessage
func (m *TLupdateNewMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateMessageID
//
func NewTLupdateMessageID() *TLupdateMessageID {
	return &TLupdateMessageID{}
}

// CodecEncode:updateMessageID
func (m *TLupdateMessageID) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1318109142)
	x.Int(m.Getid())
	x.Long(m.Getrandom_id())
	return x.Buf
}

// CodecDecode:updateMessageID
func (m *TLupdateMessageID) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setrandom_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDeleteMessages
//
func NewTLupdateDeleteMessages() *TLupdateDeleteMessages {
	return &TLupdateDeleteMessages{}
}

// CodecEncode:updateDeleteMessages
func (m *TLupdateDeleteMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1576161051)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateDeleteMessages
func (m *TLupdateDeleteMessages) Decode(dbuf *code.DecodeBuf) error {
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateUserTyping
//
func NewTLupdateUserTyping() *TLupdateUserTyping {
	return &TLupdateUserTyping{}
}

// CodecEncode:updateUserTyping
func (m *TLupdateUserTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1548249383)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateUserTyping
func (m *TLupdateUserTyping) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &SendMessageAction{}
	m1.Decode(dbuf)
	m.Setaction(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatUserTyping
//
func NewTLupdateChatUserTyping() *TLupdateChatUserTyping {
	return &TLupdateChatUserTyping{}
}

// CodecEncode:updateChatUserTyping
func (m *TLupdateChatUserTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1704596961)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateChatUserTyping
func (m *TLupdateChatUserTyping) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m2 := &SendMessageAction{}
	m2.Decode(dbuf)
	m.Setaction(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatParticipants
//
func NewTLupdateChatParticipants() *TLupdateChatParticipants {
	return &TLupdateChatParticipants{}
}

// CodecEncode:updateChatParticipants
func (m *TLupdateChatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(125178264)
	x.Bytes(m.Getparticipants().Encode())
	return x.Buf
}

// CodecDecode:updateChatParticipants
func (m *TLupdateChatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChatParticipants{}
	m0.Decode(dbuf)
	m.Setparticipants(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateUserStatus
//
func NewTLupdateUserStatus() *TLupdateUserStatus {
	return &TLupdateUserStatus{}
}

// CodecEncode:updateUserStatus
func (m *TLupdateUserStatus) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(469489699)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getstatus().Encode())
	return x.Buf
}

// CodecDecode:updateUserStatus
func (m *TLupdateUserStatus) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &UserStatus{}
	m1.Decode(dbuf)
	m.Setstatus(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateUserName
//
func NewTLupdateUserName() *TLupdateUserName {
	return &TLupdateUserName{}
}

// CodecEncode:updateUserName
func (m *TLupdateUserName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1489818765)
	x.Int(m.Getuser_id())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:updateUserName
func (m *TLupdateUserName) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setusername(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateUserPhoto
//
func NewTLupdateUserPhoto() *TLupdateUserPhoto {
	return &TLupdateUserPhoto{}
}

// CodecEncode:updateUserPhoto
func (m *TLupdateUserPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1791935732)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getphoto().Encode())
	x.Bytes(m.Getprevious().Encode())
	return x.Buf
}

// CodecDecode:updateUserPhoto
func (m *TLupdateUserPhoto) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m2 := &UserProfilePhoto{}
	m2.Decode(dbuf)
	m.Setphoto(m2)
	m3 := &Bool{}
	m3.Decode(dbuf)
	m.Setprevious(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNewEncryptedMessage
//
func NewTLupdateNewEncryptedMessage() *TLupdateNewEncryptedMessage {
	return &TLupdateNewEncryptedMessage{}
}

// CodecEncode:updateNewEncryptedMessage
func (m *TLupdateNewEncryptedMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(314359194)
	x.Bytes(m.Getmessage_18().Encode())
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updateNewEncryptedMessage
func (m *TLupdateNewEncryptedMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &EncryptedMessage{}
	m0.Decode(dbuf)
	m.Setmessage_18(m0)
	m.Setqts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateEncryptedChatTyping
//
func NewTLupdateEncryptedChatTyping() *TLupdateEncryptedChatTyping {
	return &TLupdateEncryptedChatTyping{}
}

// CodecEncode:updateEncryptedChatTyping
func (m *TLupdateEncryptedChatTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(386986326)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:updateEncryptedChatTyping
func (m *TLupdateEncryptedChatTyping) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateEncryption
//
func NewTLupdateEncryption() *TLupdateEncryption {
	return &TLupdateEncryption{}
}

// CodecEncode:updateEncryption
func (m *TLupdateEncryption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1264392051)
	x.Bytes(m.Getchat().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateEncryption
func (m *TLupdateEncryption) Decode(dbuf *code.DecodeBuf) error {
	m0 := &EncryptedChat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateEncryptedMessagesRead
//
func NewTLupdateEncryptedMessagesRead() *TLupdateEncryptedMessagesRead {
	return &TLupdateEncryptedMessagesRead{}
}

// CodecEncode:updateEncryptedMessagesRead
func (m *TLupdateEncryptedMessagesRead) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(956179895)
	x.Int(m.Getchat_id())
	x.Int(m.Getmax_date())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateEncryptedMessagesRead
func (m *TLupdateEncryptedMessagesRead) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatParticipantAdd
//
func NewTLupdateChatParticipantAdd() *TLupdateChatParticipantAdd {
	return &TLupdateChatParticipantAdd{}
}

// CodecEncode:updateChatParticipantAdd
func (m *TLupdateChatParticipantAdd) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-364179876)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantAdd
func (m *TLupdateChatParticipantAdd) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatParticipantDelete
//
func NewTLupdateChatParticipantDelete() *TLupdateChatParticipantDelete {
	return &TLupdateChatParticipantDelete{}
}

// CodecEncode:updateChatParticipantDelete
func (m *TLupdateChatParticipantDelete) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1851755554)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantDelete
func (m *TLupdateChatParticipantDelete) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDcOptions
//
func NewTLupdateDcOptions() *TLupdateDcOptions {
	return &TLupdateDcOptions{}
}

// CodecEncode:updateDcOptions
func (m *TLupdateDcOptions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1906403213)
	x.Int(481674261)
	x.Int(int32(len(m.Getdc_options())))
	for _, v := range m.Getdc_options() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateDcOptions
func (m *TLupdateDcOptions) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]DcOption, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = DcOption{}
		v0[i].Decode(dbuf)
	}
	m.Setdc_options(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNotifySettings
//
func NewTLupdateNotifySettings() *TLupdateNotifySettings {
	return &TLupdateNotifySettings{}
}

// CodecEncode:updateNotifySettings
func (m *TLupdateNotifySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1094555409)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getnotify_settings().Encode())
	return x.Buf
}

// CodecDecode:updateNotifySettings
func (m *TLupdateNotifySettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &NotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &PeerNotifySettings{}
	m1.Decode(dbuf)
	m.Setnotify_settings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateServiceNotification
//
func NewTLupdateServiceNotification() *TLupdateServiceNotification {
	return &TLupdateServiceNotification{}
}

// CodecEncode:updateServiceNotification
func (m *TLupdateServiceNotification) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-337352679)
	var flags uint32 = 0
	if m.Getpopup() != false {
		flags |= 0 << 0
	}
	if m.Getinbox_date() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getinbox_date() != 0 {
		x.Int(m.Getinbox_date())
	}
	x.String(m.Gettype())
	x.String(m.Getmessage_30())
	x.Bytes(m.Getmedia().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateServiceNotification
func (m *TLupdateServiceNotification) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpopup(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setinbox_date(dbuf.Int())
	}
	m.Settype(dbuf.String())
	m.Setmessage_30(dbuf.String())
	m4 := &MessageMedia{}
	m4.Decode(dbuf)
	m.Setmedia(m4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]MessageEntity, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = MessageEntity{}
		v5[i].Decode(dbuf)
	}
	m.Setentities(v5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePrivacy
//
func NewTLupdatePrivacy() *TLupdatePrivacy {
	return &TLupdatePrivacy{}
}

// CodecEncode:updatePrivacy
func (m *TLupdatePrivacy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-298113238)
	x.Bytes(m.Getkey_key().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updatePrivacy
func (m *TLupdatePrivacy) Decode(dbuf *code.DecodeBuf) error {
	m0 := &PrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey_key(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PrivacyRule, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PrivacyRule{}
		v1[i].Decode(dbuf)
	}
	m.Setrules(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateUserPhone
//
func NewTLupdateUserPhone() *TLupdateUserPhone {
	return &TLupdateUserPhone{}
}

// CodecEncode:updateUserPhone
func (m *TLupdateUserPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(314130811)
	x.Int(m.Getuser_id())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:updateUserPhone
func (m *TLupdateUserPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setphone(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadHistoryInbox
//
func NewTLupdateReadHistoryInbox() *TLupdateReadHistoryInbox {
	return &TLupdateReadHistoryInbox{}
}

// CodecEncode:updateReadHistoryInbox
func (m *TLupdateReadHistoryInbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1667805217)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getstill_unread_count())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadHistoryInbox
func (m *TLupdateReadHistoryInbox) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setpeer_37(m1)
	m.Setmax_id(dbuf.Int())
	m.Setstill_unread_count(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadHistoryOutbox
//
func NewTLupdateReadHistoryOutbox() *TLupdateReadHistoryOutbox {
	return &TLupdateReadHistoryOutbox{}
}

// CodecEncode:updateReadHistoryOutbox
func (m *TLupdateReadHistoryOutbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(791617983)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadHistoryOutbox
func (m *TLupdateReadHistoryOutbox) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmax_id(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateWebPage
//
func NewTLupdateWebPage() *TLupdateWebPage {
	return &TLupdateWebPage{}
}

// CodecEncode:updateWebPage
func (m *TLupdateWebPage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2139689491)
	x.Bytes(m.Getwebpage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateWebPage
func (m *TLupdateWebPage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &WebPage{}
	m0.Decode(dbuf)
	m.Setwebpage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadMessagesContents
//
func NewTLupdateReadMessagesContents() *TLupdateReadMessagesContents {
	return &TLupdateReadMessagesContents{}
}

// CodecEncode:updateReadMessagesContents
func (m *TLupdateReadMessagesContents) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1757493555)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadMessagesContents
func (m *TLupdateReadMessagesContents) Decode(dbuf *code.DecodeBuf) error {
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelTooLong
//
func NewTLupdateChannelTooLong() *TLupdateChannelTooLong {
	return &TLupdateChannelTooLong{}
}

// CodecEncode:updateChannelTooLong
func (m *TLupdateChannelTooLong) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-352032773)
	var flags uint32 = 0
	if m.Getpts() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	if m.Getpts() != 0 {
		x.Int(m.Getpts())
	}
	return x.Buf
}

// CodecDecode:updateChannelTooLong
func (m *TLupdateChannelTooLong) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Setpts(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannel
//
func NewTLupdateChannel() *TLupdateChannel {
	return &TLupdateChannel{}
}

// CodecEncode:updateChannel
func (m *TLupdateChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1227598250)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:updateChannel
func (m *TLupdateChannel) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNewChannelMessage
//
func NewTLupdateNewChannelMessage() *TLupdateNewChannelMessage {
	return &TLupdateNewChannelMessage{}
}

// CodecEncode:updateNewChannelMessage
func (m *TLupdateNewChannelMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1656358105)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateNewChannelMessage
func (m *TLupdateNewChannelMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadChannelInbox
//
func NewTLupdateReadChannelInbox() *TLupdateReadChannelInbox {
	return &TLupdateReadChannelInbox{}
}

// CodecEncode:updateReadChannelInbox
func (m *TLupdateReadChannelInbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(856380452)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getchannel_id())
	x.Int(m.Getmax_id())
	x.Int(m.Getstill_unread_count())
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:updateReadChannelInbox
func (m *TLupdateReadChannelInbox) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setchannel_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setstill_unread_count(dbuf.Int())
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDeleteChannelMessages
//
func NewTLupdateDeleteChannelMessages() *TLupdateDeleteChannelMessages {
	return &TLupdateDeleteChannelMessages{}
}

// CodecEncode:updateDeleteChannelMessages
func (m *TLupdateDeleteChannelMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1015733815)
	x.Int(m.Getchannel_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateDeleteChannelMessages
func (m *TLupdateDeleteChannelMessages) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelMessageViews
//
func NewTLupdateChannelMessageViews() *TLupdateChannelMessageViews {
	return &TLupdateChannelMessageViews{}
}

// CodecEncode:updateChannelMessageViews
func (m *TLupdateChannelMessageViews) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1734268085)
	x.Int(m.Getchannel_id())
	x.Int(m.Getid())
	x.Int(m.Getviews())
	return x.Buf
}

// CodecDecode:updateChannelMessageViews
func (m *TLupdateChannelMessageViews) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setid(dbuf.Int())
	m.Setviews(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatParticipantAdmin
//
func NewTLupdateChatParticipantAdmin() *TLupdateChatParticipantAdmin {
	return &TLupdateChatParticipantAdmin{}
}

// CodecEncode:updateChatParticipantAdmin
func (m *TLupdateChatParticipantAdmin) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1232070311)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getis_admin().Encode())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantAdmin
func (m *TLupdateChatParticipantAdmin) Decode(dbuf *code.DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setis_admin(m2)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNewStickerSet
//
func NewTLupdateNewStickerSet() *TLupdateNewStickerSet {
	return &TLupdateNewStickerSet{}
}

// CodecEncode:updateNewStickerSet
func (m *TLupdateNewStickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1753886890)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:updateNewStickerSet
func (m *TLupdateNewStickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Messages_StickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateStickerSetsOrder
//
func NewTLupdateStickerSetsOrder() *TLupdateStickerSetsOrder {
	return &TLupdateStickerSetsOrder{}
}

// CodecEncode:updateStickerSetsOrder
func (m *TLupdateStickerSetsOrder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(196268545)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getorder())))
	for _, v := range m.Getorder() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateStickerSetsOrder
func (m *TLupdateStickerSetsOrder) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setorder(dbuf.VectorLong())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateStickerSets
//
func NewTLupdateStickerSets() *TLupdateStickerSets {
	return &TLupdateStickerSets{}
}

// CodecEncode:updateStickerSets
func (m *TLupdateStickerSets) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1135492588)
	return x.Buf
}

// CodecDecode:updateStickerSets
func (m *TLupdateStickerSets) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateSavedGifs
//
func NewTLupdateSavedGifs() *TLupdateSavedGifs {
	return &TLupdateSavedGifs{}
}

// CodecEncode:updateSavedGifs
func (m *TLupdateSavedGifs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1821035490)
	return x.Buf
}

// CodecDecode:updateSavedGifs
func (m *TLupdateSavedGifs) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotInlineQuery
//
func NewTLupdateBotInlineQuery() *TLupdateBotInlineQuery {
	return &TLupdateBotInlineQuery{}
}

// CodecEncode:updateBotInlineQuery
func (m *TLupdateBotInlineQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1417832080)
	var flags uint32 = 0
	if m.Getgeo().Constructor != 0 {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.String(m.Getquery())
	if m.Getgeo().Constructor != 0 {
		x.Bytes(m.Getgeo().Encode())
	}
	x.String(m.Getoffset())
	return x.Buf
}

// CodecDecode:updateBotInlineQuery
func (m *TLupdateBotInlineQuery) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setquery(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		m3 := &GeoPoint{}
		m3.Decode(dbuf)
		m.Setgeo(m3)
	}
	m.Setoffset(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotInlineSend
//
func NewTLupdateBotInlineSend() *TLupdateBotInlineSend {
	return &TLupdateBotInlineSend{}
}

// CodecEncode:updateBotInlineSend
func (m *TLupdateBotInlineSend) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(239663460)
	var flags uint32 = 0
	if m.Getgeo().Constructor != 0 {
		flags |= 0 << 2
	}
	if m.Getmsg_id().Constructor != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.String(m.Getquery())
	if m.Getgeo().Constructor != 0 {
		x.Bytes(m.Getgeo().Encode())
	}
	x.String(m.Getid_51())
	if m.Getmsg_id().Constructor != 0 {
		x.Bytes(m.Getmsg_id().Encode())
	}
	return x.Buf
}

// CodecDecode:updateBotInlineSend
func (m *TLupdateBotInlineSend) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setuser_id(dbuf.Int())
	m.Setquery(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &GeoPoint{}
		m2.Decode(dbuf)
		m.Setgeo(m2)
	}
	m.Setid_51(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m4 := &InputBotInlineMessageID{}
		m4.Decode(dbuf)
		m.Setmsg_id(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateEditChannelMessage
//
func NewTLupdateEditChannelMessage() *TLupdateEditChannelMessage {
	return &TLupdateEditChannelMessage{}
}

// CodecEncode:updateEditChannelMessage
func (m *TLupdateEditChannelMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(457133559)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateEditChannelMessage
func (m *TLupdateEditChannelMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotCallbackQuery
//
func NewTLupdateBotCallbackQuery() *TLupdateBotCallbackQuery {
	return &TLupdateBotCallbackQuery{}
}

// CodecEncode:updateBotCallbackQuery
func (m *TLupdateBotCallbackQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-415938591)
	var flags uint32 = 0
	if len(m.Getdata()) > 0 {
		flags |= 0 << 5
	}
	if m.Getgame_short_name() != "" {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmsg_id_53())
	x.Long(m.Getchat_instance())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getgame_short_name() != "" {
		x.String(m.Getgame_short_name())
	}
	return x.Buf
}

// CodecDecode:updateBotCallbackQuery
func (m *TLupdateBotCallbackQuery) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer_37(m2)
	m.Setmsg_id_53(dbuf.Int())
	m.Setchat_instance(dbuf.Long())
	if (flags & (1 << 5)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setgame_short_name(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateEditMessage
//
func NewTLupdateEditMessage() *TLupdateEditMessage {
	return &TLupdateEditMessage{}
}

// CodecEncode:updateEditMessage
func (m *TLupdateEditMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-469536605)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateEditMessage
func (m *TLupdateEditMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateInlineBotCallbackQuery
//
func NewTLupdateInlineBotCallbackQuery() *TLupdateInlineBotCallbackQuery {
	return &TLupdateInlineBotCallbackQuery{}
}

// CodecEncode:updateInlineBotCallbackQuery
func (m *TLupdateInlineBotCallbackQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-103646630)
	var flags uint32 = 0
	if len(m.Getdata()) > 0 {
		flags |= 0 << 4
	}
	if m.Getgame_short_name() != "" {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getmsg_id().Encode())
	x.Long(m.Getchat_instance())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getgame_short_name() != "" {
		x.String(m.Getgame_short_name())
	}
	return x.Buf
}

// CodecDecode:updateInlineBotCallbackQuery
func (m *TLupdateInlineBotCallbackQuery) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m2 := &InputBotInlineMessageID{}
	m2.Decode(dbuf)
	m.Setmsg_id(m2)
	m.Setchat_instance(dbuf.Long())
	if (flags & (1 << 4)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setgame_short_name(dbuf.String())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadChannelOutbox
//
func NewTLupdateReadChannelOutbox() *TLupdateReadChannelOutbox {
	return &TLupdateReadChannelOutbox{}
}

// CodecEncode:updateReadChannelOutbox
func (m *TLupdateReadChannelOutbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(634833351)
	x.Int(m.Getchannel_id())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:updateReadChannelOutbox
func (m *TLupdateReadChannelOutbox) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDraftMessage
//
func NewTLupdateDraftMessage() *TLupdateDraftMessage {
	return &TLupdateDraftMessage{}
}

// CodecEncode:updateDraftMessage
func (m *TLupdateDraftMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-299124375)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getdraft().Encode())
	return x.Buf
}

// CodecDecode:updateDraftMessage
func (m *TLupdateDraftMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &DraftMessage{}
	m1.Decode(dbuf)
	m.Setdraft(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadFeaturedStickers
//
func NewTLupdateReadFeaturedStickers() *TLupdateReadFeaturedStickers {
	return &TLupdateReadFeaturedStickers{}
}

// CodecEncode:updateReadFeaturedStickers
func (m *TLupdateReadFeaturedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1461528386)
	return x.Buf
}

// CodecDecode:updateReadFeaturedStickers
func (m *TLupdateReadFeaturedStickers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateRecentStickers
//
func NewTLupdateRecentStickers() *TLupdateRecentStickers {
	return &TLupdateRecentStickers{}
}

// CodecEncode:updateRecentStickers
func (m *TLupdateRecentStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1706939360)
	return x.Buf
}

// CodecDecode:updateRecentStickers
func (m *TLupdateRecentStickers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateConfig
//
func NewTLupdateConfig() *TLupdateConfig {
	return &TLupdateConfig{}
}

// CodecEncode:updateConfig
func (m *TLupdateConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1574314746)
	return x.Buf
}

// CodecDecode:updateConfig
func (m *TLupdateConfig) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePtsChanged
//
func NewTLupdatePtsChanged() *TLupdatePtsChanged {
	return &TLupdatePtsChanged{}
}

// CodecEncode:updatePtsChanged
func (m *TLupdatePtsChanged) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(861169551)
	return x.Buf
}

// CodecDecode:updatePtsChanged
func (m *TLupdatePtsChanged) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelWebPage
//
func NewTLupdateChannelWebPage() *TLupdateChannelWebPage {
	return &TLupdateChannelWebPage{}
}

// CodecEncode:updateChannelWebPage
func (m *TLupdateChannelWebPage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1081547008)
	x.Int(m.Getchannel_id())
	x.Bytes(m.Getwebpage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateChannelWebPage
func (m *TLupdateChannelWebPage) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m1 := &WebPage{}
	m1.Decode(dbuf)
	m.Setwebpage(m1)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDialogPinned
//
func NewTLupdateDialogPinned() *TLupdateDialogPinned {
	return &TLupdateDialogPinned{}
}

// CodecEncode:updateDialogPinned
func (m *TLupdateDialogPinned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1852826908)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 0 << 0
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Bytes(m.Getpeer_59().Encode())
	return x.Buf
}

// CodecDecode:updateDialogPinned
func (m *TLupdateDialogPinned) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m2 := &DialogPeer{}
	m2.Decode(dbuf)
	m.Setpeer_59(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePinnedDialogs
//
func NewTLupdatePinnedDialogs() *TLupdatePinnedDialogs {
	return &TLupdatePinnedDialogs{}
}

// CodecEncode:updatePinnedDialogs
func (m *TLupdatePinnedDialogs) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-99664734)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 0
	}
	if len(m.Getorder_60()) > 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	if len(m.Getorder_60()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getorder_60())))
		for _, v := range m.Getorder_60() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updatePinnedDialogs
func (m *TLupdatePinnedDialogs) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]DialogPeer, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = DialogPeer{}
			v1[i].Decode(dbuf)
		}
		m.Setorder_60(v1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotWebhookJSON
//
func NewTLupdateBotWebhookJSON() *TLupdateBotWebhookJSON {
	return &TLupdateBotWebhookJSON{}
}

// CodecEncode:updateBotWebhookJSON
func (m *TLupdateBotWebhookJSON) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2095595325)
	x.Bytes(m.Getdata_61().Encode())
	return x.Buf
}

// CodecDecode:updateBotWebhookJSON
func (m *TLupdateBotWebhookJSON) Decode(dbuf *code.DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setdata_61(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotWebhookJSONQuery
//
func NewTLupdateBotWebhookJSONQuery() *TLupdateBotWebhookJSONQuery {
	return &TLupdateBotWebhookJSONQuery{}
}

// CodecEncode:updateBotWebhookJSONQuery
func (m *TLupdateBotWebhookJSONQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1684914010)
	x.Long(m.Getquery_id())
	x.Bytes(m.Getdata_61().Encode())
	x.Int(m.Gettimeout())
	return x.Buf
}

// CodecDecode:updateBotWebhookJSONQuery
func (m *TLupdateBotWebhookJSONQuery) Decode(dbuf *code.DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata_61(m1)
	m.Settimeout(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotShippingQuery
//
func NewTLupdateBotShippingQuery() *TLupdateBotShippingQuery {
	return &TLupdateBotShippingQuery{}
}

// CodecEncode:updateBotShippingQuery
func (m *TLupdateBotShippingQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-523384512)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpayload())
	x.Bytes(m.Getshipping_address().Encode())
	return x.Buf
}

// CodecDecode:updateBotShippingQuery
func (m *TLupdateBotShippingQuery) Decode(dbuf *code.DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setpayload(dbuf.StringBytes())
	m3 := &PostAddress{}
	m3.Decode(dbuf)
	m.Setshipping_address(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateBotPrecheckoutQuery
//
func NewTLupdateBotPrecheckoutQuery() *TLupdateBotPrecheckoutQuery {
	return &TLupdateBotPrecheckoutQuery{}
}

// CodecEncode:updateBotPrecheckoutQuery
func (m *TLupdateBotPrecheckoutQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1563376297)
	var flags uint32 = 0
	if m.Getinfo().Constructor != 0 {
		flags |= 0 << 3
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpayload())
	if m.Getinfo().Constructor != 0 {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	return x.Buf
}

// CodecDecode:updateBotPrecheckoutQuery
func (m *TLupdateBotPrecheckoutQuery) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setpayload(dbuf.StringBytes())
	if (flags & (1 << 3)) != 0 {
		m3 := &PaymentRequestedInfo{}
		m3.Decode(dbuf)
		m.Setinfo(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePhoneCall
//
func NewTLupdatePhoneCall() *TLupdatePhoneCall {
	return &TLupdatePhoneCall{}
}

// CodecEncode:updatePhoneCall
func (m *TLupdatePhoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1425052898)
	x.Bytes(m.Getphone_call().Encode())
	return x.Buf
}

// CodecDecode:updatePhoneCall
func (m *TLupdatePhoneCall) Decode(dbuf *code.DecodeBuf) error {
	m0 := &PhoneCall{}
	m0.Decode(dbuf)
	m.Setphone_call(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateLangPackTooLong
//
func NewTLupdateLangPackTooLong() *TLupdateLangPackTooLong {
	return &TLupdateLangPackTooLong{}
}

// CodecEncode:updateLangPackTooLong
func (m *TLupdateLangPackTooLong) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1180041828)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:updateLangPackTooLong
func (m *TLupdateLangPackTooLong) Decode(dbuf *code.DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateLangPack
//
func NewTLupdateLangPack() *TLupdateLangPack {
	return &TLupdateLangPack{}
}

// CodecEncode:updateLangPack
func (m *TLupdateLangPack) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1442983757)
	x.Bytes(m.Getdifference().Encode())
	return x.Buf
}

// CodecDecode:updateLangPack
func (m *TLupdateLangPack) Decode(dbuf *code.DecodeBuf) error {
	m0 := &LangPackDifference{}
	m0.Decode(dbuf)
	m.Setdifference(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateFavedStickers
//
func NewTLupdateFavedStickers() *TLupdateFavedStickers {
	return &TLupdateFavedStickers{}
}

// CodecEncode:updateFavedStickers
func (m *TLupdateFavedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-451831443)
	return x.Buf
}

// CodecDecode:updateFavedStickers
func (m *TLupdateFavedStickers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelReadMessagesContents
//
func NewTLupdateChannelReadMessagesContents() *TLupdateChannelReadMessagesContents {
	return &TLupdateChannelReadMessagesContents{}
}

// CodecEncode:updateChannelReadMessagesContents
func (m *TLupdateChannelReadMessagesContents) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1987495099)
	x.Int(m.Getchannel_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateChannelReadMessagesContents
func (m *TLupdateChannelReadMessagesContents) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateContactsReset
//
func NewTLupdateContactsReset() *TLupdateContactsReset {
	return &TLupdateContactsReset{}
}

// CodecEncode:updateContactsReset
func (m *TLupdateContactsReset) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1887741886)
	return x.Buf
}

// CodecDecode:updateContactsReset
func (m *TLupdateContactsReset) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelAvailableMessages
//
func NewTLupdateChannelAvailableMessages() *TLupdateChannelAvailableMessages {
	return &TLupdateChannelAvailableMessages{}
}

// CodecEncode:updateChannelAvailableMessages
func (m *TLupdateChannelAvailableMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1893427255)
	x.Int(m.Getchannel_id())
	x.Int(m.Getavailable_min_id())
	return x.Buf
}

// CodecDecode:updateChannelAvailableMessages
func (m *TLupdateChannelAvailableMessages) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setavailable_min_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDialogUnreadMark
//
func NewTLupdateDialogUnreadMark() *TLupdateDialogUnreadMark {
	return &TLupdateDialogUnreadMark{}
}

// CodecEncode:updateDialogUnreadMark
func (m *TLupdateDialogUnreadMark) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-513517117)
	var flags uint32 = 0
	if m.Getunread() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer_59().Encode())
	return x.Buf
}

// CodecDecode:updateDialogUnreadMark
func (m *TLupdateDialogUnreadMark) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setunread(true)
	}
	m1 := &DialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer_59(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateMessagePoll
//
func NewTLupdateMessagePoll() *TLupdateMessagePoll {
	return &TLupdateMessagePoll{}
}

// CodecEncode:updateMessagePoll
func (m *TLupdateMessagePoll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1398708869)
	var flags uint32 = 0
	if m.Getpoll().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Long(m.Getpoll_id())
	if m.Getpoll().Constructor != 0 {
		x.Bytes(m.Getpoll().Encode())
	}
	x.Bytes(m.Getresults().Encode())
	return x.Buf
}

// CodecDecode:updateMessagePoll
func (m *TLupdateMessagePoll) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setpoll_id(dbuf.Long())
	if (flags & (1 << 1)) != 0 {
		m1 := &Poll{}
		m1.Decode(dbuf)
		m.Setpoll(m1)
	}
	m2 := &PollResults{}
	m2.Decode(dbuf)
	m.Setresults(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChatDefaultBannedRights
//
func NewTLupdateChatDefaultBannedRights() *TLupdateChatDefaultBannedRights {
	return &TLupdateChatDefaultBannedRights{}
}

// CodecEncode:updateChatDefaultBannedRights
func (m *TLupdateChatDefaultBannedRights) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1421875280)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getdefault_banned_rights().Encode())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatDefaultBannedRights
func (m *TLupdateChatDefaultBannedRights) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setdefault_banned_rights(m1)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateFolderPeers
//
func NewTLupdateFolderPeers() *TLupdateFolderPeers {
	return &TLupdateFolderPeers{}
}

// CodecEncode:updateFolderPeers
func (m *TLupdateFolderPeers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(422972864)
	x.Int(481674261)
	x.Int(int32(len(m.Getfolder_peers())))
	for _, v := range m.Getfolder_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateFolderPeers
func (m *TLupdateFolderPeers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]FolderPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = FolderPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setfolder_peers(v0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePeerSettings
//
func NewTLupdatePeerSettings() *TLupdatePeerSettings {
	return &TLupdatePeerSettings{}
}

// CodecEncode:updatePeerSettings
func (m *TLupdatePeerSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1786671974)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:updatePeerSettings
func (m *TLupdatePeerSettings) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &PeerSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePeerLocated
//
func NewTLupdatePeerLocated() *TLupdatePeerLocated {
	return &TLupdatePeerLocated{}
}

// CodecEncode:updatePeerLocated
func (m *TLupdatePeerLocated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1263546448)
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updatePeerLocated
func (m *TLupdatePeerLocated) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PeerLocated, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PeerLocated{}
		v0[i].Decode(dbuf)
	}
	m.Setpeers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateNewScheduledMessage
//
func NewTLupdateNewScheduledMessage() *TLupdateNewScheduledMessage {
	return &TLupdateNewScheduledMessage{}
}

// CodecEncode:updateNewScheduledMessage
func (m *TLupdateNewScheduledMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(967122427)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:updateNewScheduledMessage
func (m *TLupdateNewScheduledMessage) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDeleteScheduledMessages
//
func NewTLupdateDeleteScheduledMessages() *TLupdateDeleteScheduledMessages {
	return &TLupdateDeleteScheduledMessages{}
}

// CodecEncode:updateDeleteScheduledMessages
func (m *TLupdateDeleteScheduledMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1870238482)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateDeleteScheduledMessages
func (m *TLupdateDeleteScheduledMessages) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmessages(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateTheme
//
func NewTLupdateTheme() *TLupdateTheme {
	return &TLupdateTheme{}
}

// CodecEncode:updateTheme
func (m *TLupdateTheme) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2112423005)
	x.Bytes(m.Gettheme().Encode())
	return x.Buf
}

// CodecDecode:updateTheme
func (m *TLupdateTheme) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Theme{}
	m0.Decode(dbuf)
	m.Settheme(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateGeoLiveViewed
//
func NewTLupdateGeoLiveViewed() *TLupdateGeoLiveViewed {
	return &TLupdateGeoLiveViewed{}
}

// CodecEncode:updateGeoLiveViewed
func (m *TLupdateGeoLiveViewed) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2027964103)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmsg_id_53())
	return x.Buf
}

// CodecDecode:updateGeoLiveViewed
func (m *TLupdateGeoLiveViewed) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmsg_id_53(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateLoginToken
//
func NewTLupdateLoginToken() *TLupdateLoginToken {
	return &TLupdateLoginToken{}
}

// CodecEncode:updateLoginToken
func (m *TLupdateLoginToken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1448076945)
	return x.Buf
}

// CodecDecode:updateLoginToken
func (m *TLupdateLoginToken) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateMessagePollVote
//
func NewTLupdateMessagePollVote() *TLupdateMessagePollVote {
	return &TLupdateMessagePollVote{}
}

// CodecEncode:updateMessagePollVote
func (m *TLupdateMessagePollVote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1123585836)
	x.Long(m.Getpoll_id())
	x.Int(m.Getuser_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	return x.Buf
}

// CodecDecode:updateMessagePollVote
func (m *TLupdateMessagePollVote) Decode(dbuf *code.DecodeBuf) error {
	m.Setpoll_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]byte, l2)
	for i := int32(0); i < l2; i++ {
		v2[i].Bytes(dbuf)
	}
	m.Setoptions(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDialogFilter
//
func NewTLupdateDialogFilter() *TLupdateDialogFilter {
	return &TLupdateDialogFilter{}
}

// CodecEncode:updateDialogFilter
func (m *TLupdateDialogFilter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(654302845)
	var flags uint32 = 0
	if m.Getfilter().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfilter().Constructor != 0 {
		x.Bytes(m.Getfilter().Encode())
	}
	return x.Buf
}

// CodecDecode:updateDialogFilter
func (m *TLupdateDialogFilter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m1 := &DialogFilter{}
		m1.Decode(dbuf)
		m.Setfilter(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDialogFilterOrder
//
func NewTLupdateDialogFilterOrder() *TLupdateDialogFilterOrder {
	return &TLupdateDialogFilterOrder{}
}

// CodecEncode:updateDialogFilterOrder
func (m *TLupdateDialogFilterOrder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1512627963)
	x.Int(481674261)
	x.Int(int32(len(m.Getorder_84())))
	for _, v := range m.Getorder_84() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateDialogFilterOrder
func (m *TLupdateDialogFilterOrder) Decode(dbuf *code.DecodeBuf) error {
	m.Setorder_84(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateDialogFilters
//
func NewTLupdateDialogFilters() *TLupdateDialogFilters {
	return &TLupdateDialogFilters{}
}

// CodecEncode:updateDialogFilters
func (m *TLupdateDialogFilters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(889491791)
	return x.Buf
}

// CodecDecode:updateDialogFilters
func (m *TLupdateDialogFilters) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePhoneCallSignalingData
//
func NewTLupdatePhoneCallSignalingData() *TLupdatePhoneCallSignalingData {
	return &TLupdatePhoneCallSignalingData{}
}

// CodecEncode:updatePhoneCallSignalingData
func (m *TLupdatePhoneCallSignalingData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(643940105)
	x.Long(m.Getphone_call_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:updatePhoneCallSignalingData
func (m *TLupdatePhoneCallSignalingData) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone_call_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelParticipant
//
func NewTLupdateChannelParticipant() *TLupdateChannelParticipant {
	return &TLupdateChannelParticipant{}
}

// CodecEncode:updateChannelParticipant
func (m *TLupdateChannelParticipant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1708307556)
	var flags uint32 = 0
	if m.Getprev_participant().Constructor != 0 {
		flags |= 0 << 3
	}
	if m.Getnew_participant().Constructor != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.Int(m.Getdate())
	x.Int(m.Getuser_id())
	if m.Getprev_participant().Constructor != 0 {
		x.Bytes(m.Getprev_participant().Encode())
	}
	if m.Getnew_participant().Constructor != 0 {
		x.Bytes(m.Getnew_participant().Encode())
	}
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updateChannelParticipant
func (m *TLupdateChannelParticipant) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m3 := &ChannelParticipant{}
		m3.Decode(dbuf)
		m.Setprev_participant(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &ChannelParticipant{}
		m4.Decode(dbuf)
		m.Setnew_participant(m4)
	}
	m.Setqts(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelMessageForwards
//
func NewTLupdateChannelMessageForwards() *TLupdateChannelMessageForwards {
	return &TLupdateChannelMessageForwards{}
}

// CodecEncode:updateChannelMessageForwards
func (m *TLupdateChannelMessageForwards) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1854571743)
	x.Int(m.Getchannel_id())
	x.Int(m.Getid())
	x.Int(m.Getforwards())
	return x.Buf
}

// CodecDecode:updateChannelMessageForwards
func (m *TLupdateChannelMessageForwards) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setid(dbuf.Int())
	m.Setforwards(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadChannelDiscussionInbox
//
func NewTLupdateReadChannelDiscussionInbox() *TLupdateReadChannelDiscussionInbox {
	return &TLupdateReadChannelDiscussionInbox{}
}

// CodecEncode:updateReadChannelDiscussionInbox
func (m *TLupdateReadChannelDiscussionInbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(482860628)
	var flags uint32 = 0
	if m.Getbroadcast_id() != 0 {
		flags |= 0 << 3
	}
	if m.Getbroadcast_post() != 0 {
		flags |= 0 << 4
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.Int(m.Gettop_msg_id())
	x.Int(m.Getread_max_id())
	if m.Getbroadcast_id() != 0 {
		x.Int(m.Getbroadcast_id())
	}
	if m.Getbroadcast_post() != 0 {
		x.Int(m.Getbroadcast_post())
	}
	return x.Buf
}

// CodecDecode:updateReadChannelDiscussionInbox
func (m *TLupdateReadChannelDiscussionInbox) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	m.Settop_msg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	if (flags & (1 << 3)) != 0 {
		m.Setbroadcast_id(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setbroadcast_post(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateReadChannelDiscussionOutbox
//
func NewTLupdateReadChannelDiscussionOutbox() *TLupdateReadChannelDiscussionOutbox {
	return &TLupdateReadChannelDiscussionOutbox{}
}

// CodecEncode:updateReadChannelDiscussionOutbox
func (m *TLupdateReadChannelDiscussionOutbox) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1178116716)
	x.Int(m.Getchannel_id())
	x.Int(m.Gettop_msg_id())
	x.Int(m.Getread_max_id())
	return x.Buf
}

// CodecDecode:updateReadChannelDiscussionOutbox
func (m *TLupdateReadChannelDiscussionOutbox) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Settop_msg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePeerBlocked
//
func NewTLupdatePeerBlocked() *TLupdatePeerBlocked {
	return &TLupdatePeerBlocked{}
}

// CodecEncode:updatePeerBlocked
func (m *TLupdatePeerBlocked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(610945826)
	x.Bytes(m.Getpeer_id().Encode())
	x.Bytes(m.Getblocked().Encode())
	return x.Buf
}

// CodecDecode:updatePeerBlocked
func (m *TLupdatePeerBlocked) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_id(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setblocked(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updateChannelUserTyping
//
func NewTLupdateChannelUserTyping() *TLupdateChannelUserTyping {
	return &TLupdateChannelUserTyping{}
}

// CodecEncode:updateChannelUserTyping
func (m *TLupdateChannelUserTyping) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-13975905)
	var flags uint32 = 0
	if m.Gettop_msg_id() != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateChannelUserTyping
func (m *TLupdateChannelUserTyping) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m.Setuser_id(dbuf.Int())
	m3 := &SendMessageAction{}
	m3.Decode(dbuf)
	m.Setaction(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePinnedMessages
//
func NewTLupdatePinnedMessages() *TLupdatePinnedMessages {
	return &TLupdatePinnedMessages{}
}

// CodecEncode:updatePinnedMessages
func (m *TLupdatePinnedMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-309990731)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updatePinnedMessages
func (m *TLupdatePinnedMessages) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setpeer_37(m1)
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:updatePinnedChannelMessages
//
func NewTLupdatePinnedChannelMessages() *TLupdatePinnedChannelMessages {
	return &TLupdatePinnedChannelMessages{}
}

// CodecEncode:updatePinnedChannelMessages
func (m *TLupdatePinnedChannelMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2054649973)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updatePinnedChannelMessages
func (m *TLupdatePinnedChannelMessages) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_countriesListNotModified
//
func NewTLhelp_countriesListNotModified() *TLhelp_countriesListNotModified {
	return &TLhelp_countriesListNotModified{}
}

// CodecEncode:help_countriesListNotModified
func (m *TLhelp_countriesListNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1815339214)
	return x.Buf
}

// CodecDecode:help_countriesListNotModified
func (m *TLhelp_countriesListNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_countriesList
//
func NewTLhelp_countriesList() *TLhelp_countriesList {
	return &TLhelp_countriesList{}
}

// CodecEncode:help_countriesList
func (m *TLhelp_countriesList) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2016381538)
	x.Int(481674261)
	x.Int(int32(len(m.Getcountries())))
	for _, v := range m.Getcountries() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_countriesList
func (m *TLhelp_countriesList) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Help_Country, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Help_Country{}
		v0[i].Decode(dbuf)
	}
	m.Setcountries(v0)
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputFile
//
func NewTLinputFile() *TLinputFile {
	return &TLinputFile{}
}

// CodecEncode:inputFile
func (m *TLinputFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-181407105)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getname())
	x.String(m.Getmd5_checksum())
	return x.Buf
}

// CodecDecode:inputFile
func (m *TLinputFile) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setname(dbuf.String())
	m.Setmd5_checksum(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputFileBig
//
func NewTLinputFileBig() *TLinputFileBig {
	return &TLinputFileBig{}
}

// CodecEncode:inputFileBig
func (m *TLinputFileBig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-95482955)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:inputFileBig
func (m *TLinputFileBig) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setname(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValue
//
func NewTLsecureValue() *TLsecureValue {
	return &TLsecureValue{}
}

// CodecEncode:secureValue
func (m *TLsecureValue) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(411017418)
	var flags uint32 = 0
	if m.Getdata().Constructor != 0 {
		flags |= 0 << 1
	}
	if m.Getfront_side().Constructor != 0 {
		flags |= 1 << 2
	}
	if m.Getreverse_side().Constructor != 0 {
		flags |= 2 << 3
	}
	if m.Getselfie().Constructor != 0 {
		flags |= 3 << 4
	}
	if len(m.Gettranslation()) > 0 {
		flags |= 6 << 5
	}
	if len(m.Getfiles()) > 0 {
		flags |= 4 << 6
	}
	if m.Getplain_data().Constructor != 0 {
		flags |= 5 << 7
	}
	x.UInt(flags)
	x.Bytes(m.Gettype().Encode())
	if m.Getdata().Constructor != 0 {
		x.Bytes(m.Getdata().Encode())
	}
	if m.Getfront_side().Constructor != 0 {
		x.Bytes(m.Getfront_side().Encode())
	}
	if m.Getreverse_side().Constructor != 0 {
		x.Bytes(m.Getreverse_side().Encode())
	}
	if m.Getselfie().Constructor != 0 {
		x.Bytes(m.Getselfie().Encode())
	}
	if len(m.Gettranslation()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Gettranslation())))
		for _, v := range m.Gettranslation() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getfiles()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getfiles())))
		for _, v := range m.Getfiles() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getplain_data().Constructor != 0 {
		x.Bytes(m.Getplain_data().Encode())
	}
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:secureValue
func (m *TLsecureValue) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	if (flags & (1 << 1)) != 0 {
		m1 := &SecureData{}
		m1.Decode(dbuf)
		m.Setdata(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &SecureFile{}
		m2.Decode(dbuf)
		m.Setfront_side(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &SecureFile{}
		m3.Decode(dbuf)
		m.Setreverse_side(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &SecureFile{}
		m4.Decode(dbuf)
		m.Setselfie(m4)
	}
	if (flags & (1 << 5)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]SecureFile, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = SecureFile{}
			v5[i].Decode(dbuf)
		}
		m.Settranslation(v5)
	}
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]SecureFile, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = SecureFile{}
			v6[i].Decode(dbuf)
		}
		m.Setfiles(v6)
	}
	if (flags & (1 << 7)) != 0 {
		m7 := &SecurePlainData{}
		m7.Decode(dbuf)
		m.Setplain_data(m7)
	}
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_themesNotModified
//
func NewTLaccount_themesNotModified() *TLaccount_themesNotModified {
	return &TLaccount_themesNotModified{}
}

// CodecEncode:account_themesNotModified
func (m *TLaccount_themesNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-199313886)
	return x.Buf
}

// CodecDecode:account_themesNotModified
func (m *TLaccount_themesNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_themes
//
func NewTLaccount_themes() *TLaccount_themes {
	return &TLaccount_themes{}
}

// CodecEncode:account_themes
func (m *TLaccount_themes) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2137482273)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getthemes())))
	for _, v := range m.Getthemes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_themes
func (m *TLaccount_themes) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Theme, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Theme{}
		v1[i].Decode(dbuf)
	}
	m.Setthemes(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:documentEmpty
//
func NewTLdocumentEmpty() *TLdocumentEmpty {
	return &TLdocumentEmpty{}
}

// CodecEncode:documentEmpty
func (m *TLdocumentEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(922273905)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:documentEmpty
func (m *TLdocumentEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:document
//
func NewTLdocument() *TLdocument {
	return &TLdocument{}
}

// CodecEncode:document
func (m *TLdocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(512177195)
	var flags uint32 = 0
	if len(m.Getthumbs()) > 0 {
		flags |= 0 << 6
	}
	if len(m.Getvideo_thumbs()) > 0 {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Int(m.Getdate())
	x.String(m.Getmime_type())
	x.Int(m.Getsize())
	if len(m.Getthumbs()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getthumbs())))
		for _, v := range m.Getthumbs() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getvideo_thumbs()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getvideo_thumbs())))
		for _, v := range m.Getvideo_thumbs() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdc_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:document
func (m *TLdocument) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	m.Setmime_type(dbuf.String())
	m.Setsize(dbuf.Int())
	if (flags & (1 << 6)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]PhotoSize, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = PhotoSize{}
			v6[i].Decode(dbuf)
		}
		m.Setthumbs(v6)
	}
	if (flags & (1 << 7)) != 0 {
		c7 := dbuf.Int()
		if c7 != 481674261 {
			return dbuf.Err
		}
		l7 := dbuf.Int()
		v7 := make([]VideoSize, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = VideoSize{}
			v7[i].Decode(dbuf)
		}
		m.Setvideo_thumbs(v7)
	}
	m.Setdc_id(dbuf.Int())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]DocumentAttribute, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = DocumentAttribute{}
		v9[i].Decode(dbuf)
	}
	m.Setattributes(v9)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyStatusTimestamp
//
func NewTLinputPrivacyKeyStatusTimestamp() *TLinputPrivacyKeyStatusTimestamp {
	return &TLinputPrivacyKeyStatusTimestamp{}
}

// CodecEncode:inputPrivacyKeyStatusTimestamp
func (m *TLinputPrivacyKeyStatusTimestamp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1335282456)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyStatusTimestamp
func (m *TLinputPrivacyKeyStatusTimestamp) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyChatInvite
//
func NewTLinputPrivacyKeyChatInvite() *TLinputPrivacyKeyChatInvite {
	return &TLinputPrivacyKeyChatInvite{}
}

// CodecEncode:inputPrivacyKeyChatInvite
func (m *TLinputPrivacyKeyChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1107622874)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyChatInvite
func (m *TLinputPrivacyKeyChatInvite) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyPhoneCall
//
func NewTLinputPrivacyKeyPhoneCall() *TLinputPrivacyKeyPhoneCall {
	return &TLinputPrivacyKeyPhoneCall{}
}

// CodecEncode:inputPrivacyKeyPhoneCall
func (m *TLinputPrivacyKeyPhoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-88417185)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneCall
func (m *TLinputPrivacyKeyPhoneCall) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyPhoneP2P
//
func NewTLinputPrivacyKeyPhoneP2P() *TLinputPrivacyKeyPhoneP2P {
	return &TLinputPrivacyKeyPhoneP2P{}
}

// CodecEncode:inputPrivacyKeyPhoneP2P
func (m *TLinputPrivacyKeyPhoneP2P) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-610373422)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneP2P
func (m *TLinputPrivacyKeyPhoneP2P) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyForwards
//
func NewTLinputPrivacyKeyForwards() *TLinputPrivacyKeyForwards {
	return &TLinputPrivacyKeyForwards{}
}

// CodecEncode:inputPrivacyKeyForwards
func (m *TLinputPrivacyKeyForwards) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1529000952)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyForwards
func (m *TLinputPrivacyKeyForwards) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyProfilePhoto
//
func NewTLinputPrivacyKeyProfilePhoto() *TLinputPrivacyKeyProfilePhoto {
	return &TLinputPrivacyKeyProfilePhoto{}
}

// CodecEncode:inputPrivacyKeyProfilePhoto
func (m *TLinputPrivacyKeyProfilePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1461304012)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyProfilePhoto
func (m *TLinputPrivacyKeyProfilePhoto) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyPhoneNumber
//
func NewTLinputPrivacyKeyPhoneNumber() *TLinputPrivacyKeyPhoneNumber {
	return &TLinputPrivacyKeyPhoneNumber{}
}

// CodecEncode:inputPrivacyKeyPhoneNumber
func (m *TLinputPrivacyKeyPhoneNumber) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(55761658)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneNumber
func (m *TLinputPrivacyKeyPhoneNumber) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyKeyAddedByPhone
//
func NewTLinputPrivacyKeyAddedByPhone() *TLinputPrivacyKeyAddedByPhone {
	return &TLinputPrivacyKeyAddedByPhone{}
}

// CodecEncode:inputPrivacyKeyAddedByPhone
func (m *TLinputPrivacyKeyAddedByPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-786326563)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyAddedByPhone
func (m *TLinputPrivacyKeyAddedByPhone) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_allStickersNotModified
//
func NewTLmessages_allStickersNotModified() *TLmessages_allStickersNotModified {
	return &TLmessages_allStickersNotModified{}
}

// CodecEncode:messages_allStickersNotModified
func (m *TLmessages_allStickersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-395967805)
	return x.Buf
}

// CodecDecode:messages_allStickersNotModified
func (m *TLmessages_allStickersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_allStickers
//
func NewTLmessages_allStickers() *TLmessages_allStickers {
	return &TLmessages_allStickers{}
}

// CodecEncode:messages_allStickers
func (m *TLmessages_allStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-302170017)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_allStickers
func (m *TLmessages_allStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerSet, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerSet{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:securePlainPhone
//
func NewTLsecurePlainPhone() *TLsecurePlainPhone {
	return &TLsecurePlainPhone{}
}

// CodecEncode:securePlainPhone
func (m *TLsecurePlainPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2103482845)
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:securePlainPhone
func (m *TLsecurePlainPhone) Decode(dbuf *code.DecodeBuf) error {
	m.Setphone(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:securePlainEmail
//
func NewTLsecurePlainEmail() *TLsecurePlainEmail {
	return &TLsecurePlainEmail{}
}

// CodecEncode:securePlainEmail
func (m *TLsecurePlainEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(569137759)
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:securePlainEmail
func (m *TLsecurePlainEmail) Decode(dbuf *code.DecodeBuf) error {
	m.Setemail(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_inviteText
//
func NewTLhelp_inviteText() *TLhelp_inviteText {
	return &TLhelp_inviteText{}
}

// CodecEncode:help_inviteText
func (m *TLhelp_inviteText) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(415997816)
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:help_inviteText
func (m *TLhelp_inviteText) Decode(dbuf *code.DecodeBuf) error {
	m.Setmessage(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessageID
//
func NewTLinputMessageID() *TLinputMessageID {
	return &TLinputMessageID{}
}

// CodecEncode:inputMessageID
func (m *TLinputMessageID) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1502174430)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:inputMessageID
func (m *TLinputMessageID) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessageReplyTo
//
func NewTLinputMessageReplyTo() *TLinputMessageReplyTo {
	return &TLinputMessageReplyTo{}
}

// CodecEncode:inputMessageReplyTo
func (m *TLinputMessageReplyTo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1160215659)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:inputMessageReplyTo
func (m *TLinputMessageReplyTo) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessagePinned
//
func NewTLinputMessagePinned() *TLinputMessagePinned {
	return &TLinputMessagePinned{}
}

// CodecEncode:inputMessagePinned
func (m *TLinputMessagePinned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2037963464)
	return x.Buf
}

// CodecDecode:inputMessagePinned
func (m *TLinputMessagePinned) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputMessageCallbackQuery
//
func NewTLinputMessageCallbackQuery() *TLinputMessageCallbackQuery {
	return &TLinputMessageCallbackQuery{}
}

// CodecEncode:inputMessageCallbackQuery
func (m *TLinputMessageCallbackQuery) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1392895362)
	x.Int(m.Getid())
	x.Long(m.Getquery_id())
	return x.Buf
}

// CodecDecode:inputMessageCallbackQuery
func (m *TLinputMessageCallbackQuery) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setquery_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_passwordInputSettings
//
func NewTLaccount_passwordInputSettings() *TLaccount_passwordInputSettings {
	return &TLaccount_passwordInputSettings{}
}

// CodecEncode:account_passwordInputSettings
func (m *TLaccount_passwordInputSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1036572727)
	var flags uint32 = 0
	if m.Getnew_algo().Constructor != 0 {
		flags |= 0 << 0
	}
	if len(m.Getnew_password_hash()) > 0 {
		flags |= 0 << 1
	}
	if m.Gethint() != "" {
		flags |= 0 << 2
	}
	if m.Getemail() != "" {
		flags |= 1 << 3
	}
	if m.Getnew_secure_settings().Constructor != 0 {
		flags |= 2 << 4
	}
	x.UInt(flags)
	if m.Getnew_algo().Constructor != 0 {
		x.Bytes(m.Getnew_algo().Encode())
	}
	if m.Getnew_password_hash() != nil {
		x.Bytes(m.Getnew_password_hash())
	}
	if m.Gethint() != "" {
		x.String(m.Gethint())
	}
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getnew_secure_settings().Constructor != 0 {
		x.Bytes(m.Getnew_secure_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_passwordInputSettings
func (m *TLaccount_passwordInputSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &PasswordKdfAlgo{}
		m0.Decode(dbuf)
		m.Setnew_algo(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setnew_password_hash(dbuf.StringBytes())
	}
	if (flags & (1 << 2)) != 0 {
		m.Sethint(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m4 := &SecureSecretSettings{}
		m4.Decode(dbuf)
		m.Setnew_secure_settings(m4)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputDocumentEmpty
//
func NewTLinputDocumentEmpty() *TLinputDocumentEmpty {
	return &TLinputDocumentEmpty{}
}

// CodecEncode:inputDocumentEmpty
func (m *TLinputDocumentEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1928391342)
	return x.Buf
}

// CodecDecode:inputDocumentEmpty
func (m *TLinputDocumentEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputDocument
//
func NewTLinputDocument() *TLinputDocument {
	return &TLinputDocument{}
}

// CodecEncode:inputDocument
func (m *TLinputDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(448771445)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputDocument
func (m *TLinputDocument) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsDateRangeDays
//
func NewTLstatsDateRangeDays() *TLstatsDateRangeDays {
	return &TLstatsDateRangeDays{}
}

// CodecEncode:statsDateRangeDays
func (m *TLstatsDateRangeDays) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1237848657)
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	return x.Buf
}

// CodecDecode:statsDateRangeDays
func (m *TLstatsDateRangeDays) Decode(dbuf *code.DecodeBuf) error {
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:emojiURL
//
func NewTLemojiURL() *TLemojiURL {
	return &TLemojiURL{}
}

// CodecEncode:emojiURL
func (m *TLemojiURL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1519029347)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:emojiURL
func (m *TLemojiURL) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pollResults
//
func NewTLpollResults() *TLpollResults {
	return &TLpollResults{}
}

// CodecEncode:pollResults
func (m *TLpollResults) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1159937629)
	var flags uint32 = 0
	if m.Getmin() != false {
		flags |= 0 << 0
	}
	if len(m.Getresults()) > 0 {
		flags |= 1 << 1
	}
	if m.Gettotal_voters() != 0 {
		flags |= 2 << 2
	}
	if m.Getrecent_voters() != 0 {
		flags |= 3 << 3
	}
	if m.Getsolution() != "" {
		flags |= 4 << 4
	}
	if len(m.Getsolution_entities()) > 0 {
		flags |= 4 << 5
	}
	x.UInt(flags)
	if len(m.Getresults()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getresults())))
		for _, v := range m.Getresults() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Gettotal_voters() != 0 {
		x.Int(m.Gettotal_voters())
	}
	if len(m.Getrecent_voters()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrecent_voters())))
		for _, v := range m.Getrecent_voters() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getsolution() != "" {
		x.String(m.Getsolution())
	}
	if len(m.Getsolution_entities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getsolution_entities())))
		for _, v := range m.Getsolution_entities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:pollResults
func (m *TLpollResults) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]PollAnswerVoters, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = PollAnswerVoters{}
			v1[i].Decode(dbuf)
		}
		m.Setresults(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settotal_voters(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setrecent_voters(dbuf.VectorInt())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsolution(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]MessageEntity, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = MessageEntity{}
			v5[i].Decode(dbuf)
		}
		m.Setsolution_entities(v5)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonNull
//
func NewTLjsonNull() *TLjsonNull {
	return &TLjsonNull{}
}

// CodecEncode:jsonNull
func (m *TLjsonNull) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1064139624)
	return x.Buf
}

// CodecDecode:jsonNull
func (m *TLjsonNull) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonBool
//
func NewTLjsonBool() *TLjsonBool {
	return &TLjsonBool{}
}

// CodecEncode:jsonBool
func (m *TLjsonBool) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-952869270)
	x.Bytes(m.Getvalue().Encode())
	return x.Buf
}

// CodecDecode:jsonBool
func (m *TLjsonBool) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setvalue(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonNumber
//
func NewTLjsonNumber() *TLjsonNumber {
	return &TLjsonNumber{}
}

// CodecEncode:jsonNumber
func (m *TLjsonNumber) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(736157604)
	x.Bytes(m.Getvalue_2().Encode())
	return x.Buf
}

// CodecDecode:jsonNumber
func (m *TLjsonNumber) Decode(dbuf *code.DecodeBuf) error {
	m.Setvalue_2(dbuf.Double())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonString
//
func NewTLjsonString() *TLjsonString {
	return &TLjsonString{}
}

// CodecEncode:jsonString
func (m *TLjsonString) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1222740358)
	x.String(m.Getvalue_3())
	return x.Buf
}

// CodecDecode:jsonString
func (m *TLjsonString) Decode(dbuf *code.DecodeBuf) error {
	m.Setvalue_3(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonArray
//
func NewTLjsonArray() *TLjsonArray {
	return &TLjsonArray{}
}

// CodecEncode:jsonArray
func (m *TLjsonArray) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-146520221)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_4())))
	for _, v := range m.Getvalue_4() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:jsonArray
func (m *TLjsonArray) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]JSONValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = JSONValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalue_4(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:jsonObject
//
func NewTLjsonObject() *TLjsonObject {
	return &TLjsonObject{}
}

// CodecEncode:jsonObject
func (m *TLjsonObject) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1715350371)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_5())))
	for _, v := range m.Getvalue_5() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:jsonObject
func (m *TLjsonObject) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]JSONObjectValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = JSONObjectValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalue_5(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:cdnConfig
//
func NewTLcdnConfig() *TLcdnConfig {
	return &TLcdnConfig{}
}

// CodecEncode:cdnConfig
func (m *TLcdnConfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1462101002)
	x.Int(481674261)
	x.Int(int32(len(m.Getpublic_keys())))
	for _, v := range m.Getpublic_keys() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:cdnConfig
func (m *TLcdnConfig) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]CdnPublicKey, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = CdnPublicKey{}
		v0[i].Decode(dbuf)
	}
	m.Setpublic_keys(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_searchCounter
//
func NewTLmessages_searchCounter() *TLmessages_searchCounter {
	return &TLmessages_searchCounter{}
}

// CodecEncode:messages_searchCounter
func (m *TLmessages_searchCounter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-398136321)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_searchCounter
func (m *TLmessages_searchCounter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setinexact(true)
	}
	m1 := &MessagesFilter{}
	m1.Decode(dbuf)
	m.Setfilter(m1)
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:bankCardOpenUrl
//
func NewTLbankCardOpenUrl() *TLbankCardOpenUrl {
	return &TLbankCardOpenUrl{}
}

// CodecEncode:bankCardOpenUrl
func (m *TLbankCardOpenUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-177732982)
	x.String(m.Geturl())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:bankCardOpenUrl
func (m *TLbankCardOpenUrl) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setname(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:codeSettings
//
func NewTLcodeSettings() *TLcodeSettings {
	return &TLcodeSettings{}
}

// CodecEncode:codeSettings
func (m *TLcodeSettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-557924733)
	var flags uint32 = 0
	if m.Getallow_flashcall() != false {
		flags |= 0 << 0
	}
	if m.Getcurrent_number() != false {
		flags |= 1 << 1
	}
	if m.Getallow_app_hash() != false {
		flags |= 4 << 2
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:codeSettings
func (m *TLcodeSettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setallow_flashcall(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcurrent_number(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setallow_app_hash(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:error
//
func NewTLerror() *TLerror {
	return &TLerror{}
}

// CodecEncode:error
func (m *TLerror) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-994444869)
	x.Int(m.Getcode())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:error
func (m *TLerror) Decode(dbuf *code.DecodeBuf) error {
	m.Setcode(dbuf.Int())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageTableCell
//
func NewTLpageTableCell() *TLpageTableCell {
	return &TLpageTableCell{}
}

// CodecEncode:pageTableCell
func (m *TLpageTableCell) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(878078826)
	var flags uint32 = 0
	if m.Getheader() != false {
		flags |= 0 << 0
	}
	if m.Getalign_center() != false {
		flags |= 3 << 1
	}
	if m.Getalign_right() != false {
		flags |= 4 << 2
	}
	if m.Getvalign_middle() != false {
		flags |= 5 << 3
	}
	if m.Getvalign_bottom() != false {
		flags |= 6 << 4
	}
	if m.Gettext().Constructor != 0 {
		flags |= 7 << 5
	}
	if m.Getcolspan() != 0 {
		flags |= 1 << 6
	}
	if m.Getrowspan() != 0 {
		flags |= 2 << 7
	}
	x.UInt(flags)
	if m.Gettext().Constructor != 0 {
		x.Bytes(m.Gettext().Encode())
	}
	if m.Getcolspan() != 0 {
		x.Int(m.Getcolspan())
	}
	if m.Getrowspan() != 0 {
		x.Int(m.Getrowspan())
	}
	return x.Buf
}

// CodecDecode:pageTableCell
func (m *TLpageTableCell) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setheader(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setalign_center(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setalign_right(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setvalign_middle(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setvalign_bottom(true)
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &RichText{}
		m5.Decode(dbuf)
		m.Settext(m5)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setcolspan(dbuf.Int())
	}
	if (flags & (1 << 7)) != 0 {
		m.Setrowspan(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:config
//
func NewTLconfig() *TLconfig {
	return &TLconfig{}
}

// CodecEncode:config
func (m *TLconfig) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(856375399)
	var flags uint32 = 0
	if m.Getphonecalls_enabled() != false {
		flags |= 1 << 0
	}
	if m.Getdefault_p2p_contacts() != false {
		flags |= 3 << 1
	}
	if m.Getpreload_featured_stickers() != false {
		flags |= 4 << 2
	}
	if m.Getignore_phone_entities() != false {
		flags |= 5 << 3
	}
	if m.Getrevoke_pm_inbox() != false {
		flags |= 6 << 4
	}
	if m.Getblocked_mode() != false {
		flags |= 8 << 5
	}
	if m.Getpfs_enabled() != false {
		flags |= 13 << 6
	}
	if m.Gettmp_sessions() != 0 {
		flags |= 0 << 32
	}
	if m.Getautoupdate_url_prefix() != "" {
		flags |= 7 << 40
	}
	if m.Getgif_search_username() != "" {
		flags |= 9 << 41
	}
	if m.Getvenue_search_username() != "" {
		flags |= 10 << 42
	}
	if m.Getimg_search_username() != "" {
		flags |= 11 << 43
	}
	if m.Getstatic_maps_provider() != "" {
		flags |= 12 << 44
	}
	if m.Getsuggested_lang_code() != "" {
		flags |= 2 << 48
	}
	if m.Getlang_pack_version() != 0 {
		flags |= 2 << 49
	}
	if m.Getbase_lang_pack_version() != 0 {
		flags |= 2 << 50
	}
	x.UInt(flags)
	x.Int(m.Getdate())
	x.Int(m.Getexpires())
	x.Bytes(m.Gettest_mode().Encode())
	x.Int(m.Getthis_dc())
	x.Int(481674261)
	x.Int(int32(len(m.Getdc_options())))
	for _, v := range m.Getdc_options() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Getdc_txt_domain_name())
	x.Int(m.Getchat_size_max())
	x.Int(m.Getmegagroup_size_max())
	x.Int(m.Getforwarded_count_max())
	x.Int(m.Getonline_update_period_ms())
	x.Int(m.Getoffline_blur_timeout_ms())
	x.Int(m.Getoffline_idle_timeout_ms())
	x.Int(m.Getonline_cloud_timeout_ms())
	x.Int(m.Getnotify_cloud_delay_ms())
	x.Int(m.Getnotify_default_delay_ms())
	x.Int(m.Getpush_chat_period_ms())
	x.Int(m.Getpush_chat_limit())
	x.Int(m.Getsaved_gifs_limit())
	x.Int(m.Getedit_time_limit())
	x.Int(m.Getrevoke_time_limit())
	x.Int(m.Getrevoke_pm_time_limit())
	x.Int(m.Getrating_e_decay())
	x.Int(m.Getstickers_recent_limit())
	x.Int(m.Getstickers_faved_limit())
	x.Int(m.Getchannels_read_media_period())
	if m.Gettmp_sessions() != 0 {
		x.Int(m.Gettmp_sessions())
	}
	x.Int(m.Getpinned_dialogs_count_max())
	x.Int(m.Getpinned_infolder_count_max())
	x.Int(m.Getcall_receive_timeout_ms())
	x.Int(m.Getcall_ring_timeout_ms())
	x.Int(m.Getcall_connect_timeout_ms())
	x.Int(m.Getcall_packet_timeout_ms())
	x.String(m.Getme_url_prefix())
	if m.Getautoupdate_url_prefix() != "" {
		x.String(m.Getautoupdate_url_prefix())
	}
	if m.Getgif_search_username() != "" {
		x.String(m.Getgif_search_username())
	}
	if m.Getvenue_search_username() != "" {
		x.String(m.Getvenue_search_username())
	}
	if m.Getimg_search_username() != "" {
		x.String(m.Getimg_search_username())
	}
	if m.Getstatic_maps_provider() != "" {
		x.String(m.Getstatic_maps_provider())
	}
	x.Int(m.Getcaption_length_max())
	x.Int(m.Getmessage_length_max())
	x.Int(m.Getwebfile_dc_id())
	if m.Getsuggested_lang_code() != "" {
		x.String(m.Getsuggested_lang_code())
	}
	if m.Getlang_pack_version() != 0 {
		x.Int(m.Getlang_pack_version())
	}
	if m.Getbase_lang_pack_version() != 0 {
		x.Int(m.Getbase_lang_pack_version())
	}
	return x.Buf
}

// CodecDecode:config
func (m *TLconfig) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setphonecalls_enabled(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdefault_p2p_contacts(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpreload_featured_stickers(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setignore_phone_entities(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setrevoke_pm_inbox(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setblocked_mode(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpfs_enabled(true)
	}
	m.Setdate(dbuf.Int())
	m.Setexpires(dbuf.Int())
	m9 := &Bool{}
	m9.Decode(dbuf)
	m.Settest_mode(m9)
	m.Setthis_dc(dbuf.Int())
	c11 := dbuf.Int()
	if c11 != 481674261 {
		return dbuf.Err
	}
	l11 := dbuf.Int()
	v11 := make([]DcOption, l11)
	for i := int32(0); i < l11; i++ {
		v11[i] = DcOption{}
		v11[i].Decode(dbuf)
	}
	m.Setdc_options(v11)
	m.Setdc_txt_domain_name(dbuf.String())
	m.Setchat_size_max(dbuf.Int())
	m.Setmegagroup_size_max(dbuf.Int())
	m.Setforwarded_count_max(dbuf.Int())
	m.Setonline_update_period_ms(dbuf.Int())
	m.Setoffline_blur_timeout_ms(dbuf.Int())
	m.Setoffline_idle_timeout_ms(dbuf.Int())
	m.Setonline_cloud_timeout_ms(dbuf.Int())
	m.Setnotify_cloud_delay_ms(dbuf.Int())
	m.Setnotify_default_delay_ms(dbuf.Int())
	m.Setpush_chat_period_ms(dbuf.Int())
	m.Setpush_chat_limit(dbuf.Int())
	m.Setsaved_gifs_limit(dbuf.Int())
	m.Setedit_time_limit(dbuf.Int())
	m.Setrevoke_time_limit(dbuf.Int())
	m.Setrevoke_pm_time_limit(dbuf.Int())
	m.Setrating_e_decay(dbuf.Int())
	m.Setstickers_recent_limit(dbuf.Int())
	m.Setstickers_faved_limit(dbuf.Int())
	m.Setchannels_read_media_period(dbuf.Int())
	if (flags & (1 << 32)) != 0 {
		m.Settmp_sessions(dbuf.Int())
	}
	m.Setpinned_dialogs_count_max(dbuf.Int())
	m.Setpinned_infolder_count_max(dbuf.Int())
	m.Setcall_receive_timeout_ms(dbuf.Int())
	m.Setcall_ring_timeout_ms(dbuf.Int())
	m.Setcall_connect_timeout_ms(dbuf.Int())
	m.Setcall_packet_timeout_ms(dbuf.Int())
	m.Setme_url_prefix(dbuf.String())
	if (flags & (1 << 40)) != 0 {
		m.Setautoupdate_url_prefix(dbuf.String())
	}
	if (flags & (1 << 41)) != 0 {
		m.Setgif_search_username(dbuf.String())
	}
	if (flags & (1 << 42)) != 0 {
		m.Setvenue_search_username(dbuf.String())
	}
	if (flags & (1 << 43)) != 0 {
		m.Setimg_search_username(dbuf.String())
	}
	if (flags & (1 << 44)) != 0 {
		m.Setstatic_maps_provider(dbuf.String())
	}
	m.Setcaption_length_max(dbuf.Int())
	m.Setmessage_length_max(dbuf.Int())
	m.Setwebfile_dc_id(dbuf.Int())
	if (flags & (1 << 48)) != 0 {
		m.Setsuggested_lang_code(dbuf.String())
	}
	if (flags & (1 << 49)) != 0 {
		m.Setlang_pack_version(dbuf.Int())
	}
	if (flags & (1 << 50)) != 0 {
		m.Setbase_lang_pack_version(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:game
//
func NewTLgame() *TLgame {
	return &TLgame{}
}

// CodecEncode:game
func (m *TLgame) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1107729093)
	var flags uint32 = 0
	if m.Getdocument().Constructor != 0 {
		flags |= 0 << 6
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getshort_name())
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	x.Bytes(m.Getphoto().Encode())
	if m.Getdocument().Constructor != 0 {
		x.Bytes(m.Getdocument().Encode())
	}
	return x.Buf
}

// CodecDecode:game
func (m *TLgame) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setshort_name(dbuf.String())
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	m5 := &Photo{}
	m5.Decode(dbuf)
	m.Setphoto(m5)
	if (flags & (1 << 6)) != 0 {
		m6 := &Document{}
		m6.Decode(dbuf)
		m.Setdocument(m6)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyStatusTimestamp
//
func NewTLprivacyKeyStatusTimestamp() *TLprivacyKeyStatusTimestamp {
	return &TLprivacyKeyStatusTimestamp{}
}

// CodecEncode:privacyKeyStatusTimestamp
func (m *TLprivacyKeyStatusTimestamp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1137792208)
	return x.Buf
}

// CodecDecode:privacyKeyStatusTimestamp
func (m *TLprivacyKeyStatusTimestamp) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyChatInvite
//
func NewTLprivacyKeyChatInvite() *TLprivacyKeyChatInvite {
	return &TLprivacyKeyChatInvite{}
}

// CodecEncode:privacyKeyChatInvite
func (m *TLprivacyKeyChatInvite) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1343122938)
	return x.Buf
}

// CodecDecode:privacyKeyChatInvite
func (m *TLprivacyKeyChatInvite) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyPhoneCall
//
func NewTLprivacyKeyPhoneCall() *TLprivacyKeyPhoneCall {
	return &TLprivacyKeyPhoneCall{}
}

// CodecEncode:privacyKeyPhoneCall
func (m *TLprivacyKeyPhoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1030105979)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneCall
func (m *TLprivacyKeyPhoneCall) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyPhoneP2P
//
func NewTLprivacyKeyPhoneP2P() *TLprivacyKeyPhoneP2P {
	return &TLprivacyKeyPhoneP2P{}
}

// CodecEncode:privacyKeyPhoneP2P
func (m *TLprivacyKeyPhoneP2P) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(961092808)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneP2P
func (m *TLprivacyKeyPhoneP2P) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyForwards
//
func NewTLprivacyKeyForwards() *TLprivacyKeyForwards {
	return &TLprivacyKeyForwards{}
}

// CodecEncode:privacyKeyForwards
func (m *TLprivacyKeyForwards) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1777096355)
	return x.Buf
}

// CodecDecode:privacyKeyForwards
func (m *TLprivacyKeyForwards) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyProfilePhoto
//
func NewTLprivacyKeyProfilePhoto() *TLprivacyKeyProfilePhoto {
	return &TLprivacyKeyProfilePhoto{}
}

// CodecEncode:privacyKeyProfilePhoto
func (m *TLprivacyKeyProfilePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1777000467)
	return x.Buf
}

// CodecDecode:privacyKeyProfilePhoto
func (m *TLprivacyKeyProfilePhoto) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyPhoneNumber
//
func NewTLprivacyKeyPhoneNumber() *TLprivacyKeyPhoneNumber {
	return &TLprivacyKeyPhoneNumber{}
}

// CodecEncode:privacyKeyPhoneNumber
func (m *TLprivacyKeyPhoneNumber) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-778378131)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneNumber
func (m *TLprivacyKeyPhoneNumber) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:privacyKeyAddedByPhone
//
func NewTLprivacyKeyAddedByPhone() *TLprivacyKeyAddedByPhone {
	return &TLprivacyKeyAddedByPhone{}
}

// CodecEncode:privacyKeyAddedByPhone
func (m *TLprivacyKeyAddedByPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1124062251)
	return x.Buf
}

// CodecDecode:privacyKeyAddedByPhone
func (m *TLprivacyKeyAddedByPhone) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webDocument
//
func NewTLwebDocument() *TLwebDocument {
	return &TLwebDocument{}
}

// CodecEncode:webDocument
func (m *TLwebDocument) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(475467473)
	x.String(m.Geturl())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:webDocument
func (m *TLwebDocument) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]DocumentAttribute, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = DocumentAttribute{}
		v4[i].Decode(dbuf)
	}
	m.Setattributes(v4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:webDocumentNoProxy
//
func NewTLwebDocumentNoProxy() *TLwebDocumentNoProxy {
	return &TLwebDocumentNoProxy{}
}

// CodecEncode:webDocumentNoProxy
func (m *TLwebDocumentNoProxy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-104284986)
	x.String(m.Geturl())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:webDocumentNoProxy
func (m *TLwebDocumentNoProxy) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]DocumentAttribute, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = DocumentAttribute{}
		v3[i].Decode(dbuf)
	}
	m.Setattributes(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stickerSetCovered
//
func NewTLstickerSetCovered() *TLstickerSetCovered {
	return &TLstickerSetCovered{}
}

// CodecEncode:stickerSetCovered
func (m *TLstickerSetCovered) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1678812626)
	x.Bytes(m.Getset().Encode())
	x.Bytes(m.Getcover().Encode())
	return x.Buf
}

// CodecDecode:stickerSetCovered
func (m *TLstickerSetCovered) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	m1 := &Document{}
	m1.Decode(dbuf)
	m.Setcover(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:stickerSetMultiCovered
//
func NewTLstickerSetMultiCovered() *TLstickerSetMultiCovered {
	return &TLstickerSetMultiCovered{}
}

// CodecEncode:stickerSetMultiCovered
func (m *TLstickerSetMultiCovered) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(872932635)
	x.Bytes(m.Getset().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getcovers())))
	for _, v := range m.Getcovers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stickerSetMultiCovered
func (m *TLstickerSetMultiCovered) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Document{}
		v1[i].Decode(dbuf)
	}
	m.Setcovers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:notifyPeer
//
func NewTLnotifyPeer() *TLnotifyPeer {
	return &TLnotifyPeer{}
}

// CodecEncode:notifyPeer
func (m *TLnotifyPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1613493288)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:notifyPeer
func (m *TLnotifyPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:notifyUsers
//
func NewTLnotifyUsers() *TLnotifyUsers {
	return &TLnotifyUsers{}
}

// CodecEncode:notifyUsers
func (m *TLnotifyUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1261946036)
	return x.Buf
}

// CodecDecode:notifyUsers
func (m *TLnotifyUsers) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:notifyChats
//
func NewTLnotifyChats() *TLnotifyChats {
	return &TLnotifyChats{}
}

// CodecEncode:notifyChats
func (m *TLnotifyChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1073230141)
	return x.Buf
}

// CodecDecode:notifyChats
func (m *TLnotifyChats) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:notifyBroadcasts
//
func NewTLnotifyBroadcasts() *TLnotifyBroadcasts {
	return &TLnotifyBroadcasts{}
}

// CodecEncode:notifyBroadcasts
func (m *TLnotifyBroadcasts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-703403793)
	return x.Buf
}

// CodecDecode:notifyBroadcasts
func (m *TLnotifyBroadcasts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_stickerSet
//
func NewTLmessages_stickerSet() *TLmessages_stickerSet {
	return &TLmessages_stickerSet{}
}

// CodecEncode:messages_stickerSet
func (m *TLmessages_stickerSet) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1240849242)
	x.Bytes(m.Getset().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getdocuments())))
	for _, v := range m.Getdocuments() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickerSet
func (m *TLmessages_stickerSet) Decode(dbuf *code.DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = Document{}
		v2[i].Decode(dbuf)
	}
	m.Setdocuments(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionEmpty
//
func NewTLmessageActionEmpty() *TLmessageActionEmpty {
	return &TLmessageActionEmpty{}
}

// CodecEncode:messageActionEmpty
func (m *TLmessageActionEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1230047312)
	return x.Buf
}

// CodecDecode:messageActionEmpty
func (m *TLmessageActionEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatCreate
//
func NewTLmessageActionChatCreate() *TLmessageActionChatCreate {
	return &TLmessageActionChatCreate{}
}

// CodecEncode:messageActionChatCreate
func (m *TLmessageActionChatCreate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1503425638)
	x.String(m.Gettitle())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messageActionChatCreate
func (m *TLmessageActionChatCreate) Decode(dbuf *code.DecodeBuf) error {
	m.Settitle(dbuf.String())
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatEditTitle
//
func NewTLmessageActionChatEditTitle() *TLmessageActionChatEditTitle {
	return &TLmessageActionChatEditTitle{}
}

// CodecEncode:messageActionChatEditTitle
func (m *TLmessageActionChatEditTitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1247687078)
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messageActionChatEditTitle
func (m *TLmessageActionChatEditTitle) Decode(dbuf *code.DecodeBuf) error {
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatEditPhoto
//
func NewTLmessageActionChatEditPhoto() *TLmessageActionChatEditPhoto {
	return &TLmessageActionChatEditPhoto{}
}

// CodecEncode:messageActionChatEditPhoto
func (m *TLmessageActionChatEditPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2144015272)
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:messageActionChatEditPhoto
func (m *TLmessageActionChatEditPhoto) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setphoto(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatDeletePhoto
//
func NewTLmessageActionChatDeletePhoto() *TLmessageActionChatDeletePhoto {
	return &TLmessageActionChatDeletePhoto{}
}

// CodecEncode:messageActionChatDeletePhoto
func (m *TLmessageActionChatDeletePhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1780220945)
	return x.Buf
}

// CodecDecode:messageActionChatDeletePhoto
func (m *TLmessageActionChatDeletePhoto) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatAddUser
//
func NewTLmessageActionChatAddUser() *TLmessageActionChatAddUser {
	return &TLmessageActionChatAddUser{}
}

// CodecEncode:messageActionChatAddUser
func (m *TLmessageActionChatAddUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1217033015)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messageActionChatAddUser
func (m *TLmessageActionChatAddUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatDeleteUser
//
func NewTLmessageActionChatDeleteUser() *TLmessageActionChatDeleteUser {
	return &TLmessageActionChatDeleteUser{}
}

// CodecEncode:messageActionChatDeleteUser
func (m *TLmessageActionChatDeleteUser) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1297179892)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageActionChatDeleteUser
func (m *TLmessageActionChatDeleteUser) Decode(dbuf *code.DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatJoinedByLink
//
func NewTLmessageActionChatJoinedByLink() *TLmessageActionChatJoinedByLink {
	return &TLmessageActionChatJoinedByLink{}
}

// CodecEncode:messageActionChatJoinedByLink
func (m *TLmessageActionChatJoinedByLink) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-123931160)
	x.Int(m.Getinviter_id())
	return x.Buf
}

// CodecDecode:messageActionChatJoinedByLink
func (m *TLmessageActionChatJoinedByLink) Decode(dbuf *code.DecodeBuf) error {
	m.Setinviter_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChannelCreate
//
func NewTLmessageActionChannelCreate() *TLmessageActionChannelCreate {
	return &TLmessageActionChannelCreate{}
}

// CodecEncode:messageActionChannelCreate
func (m *TLmessageActionChannelCreate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1781355374)
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messageActionChannelCreate
func (m *TLmessageActionChannelCreate) Decode(dbuf *code.DecodeBuf) error {
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChatMigrateTo
//
func NewTLmessageActionChatMigrateTo() *TLmessageActionChatMigrateTo {
	return &TLmessageActionChatMigrateTo{}
}

// CodecEncode:messageActionChatMigrateTo
func (m *TLmessageActionChatMigrateTo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1371385889)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:messageActionChatMigrateTo
func (m *TLmessageActionChatMigrateTo) Decode(dbuf *code.DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionChannelMigrateFrom
//
func NewTLmessageActionChannelMigrateFrom() *TLmessageActionChannelMigrateFrom {
	return &TLmessageActionChannelMigrateFrom{}
}

// CodecEncode:messageActionChannelMigrateFrom
func (m *TLmessageActionChannelMigrateFrom) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1336546578)
	x.String(m.Gettitle())
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messageActionChannelMigrateFrom
func (m *TLmessageActionChannelMigrateFrom) Decode(dbuf *code.DecodeBuf) error {
	m.Settitle(dbuf.String())
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionPinMessage
//
func NewTLmessageActionPinMessage() *TLmessageActionPinMessage {
	return &TLmessageActionPinMessage{}
}

// CodecEncode:messageActionPinMessage
func (m *TLmessageActionPinMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1799538451)
	return x.Buf
}

// CodecDecode:messageActionPinMessage
func (m *TLmessageActionPinMessage) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionHistoryClear
//
func NewTLmessageActionHistoryClear() *TLmessageActionHistoryClear {
	return &TLmessageActionHistoryClear{}
}

// CodecEncode:messageActionHistoryClear
func (m *TLmessageActionHistoryClear) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1615153660)
	return x.Buf
}

// CodecDecode:messageActionHistoryClear
func (m *TLmessageActionHistoryClear) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionGameScore
//
func NewTLmessageActionGameScore() *TLmessageActionGameScore {
	return &TLmessageActionGameScore{}
}

// CodecEncode:messageActionGameScore
func (m *TLmessageActionGameScore) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1834538890)
	x.Long(m.Getgame_id())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messageActionGameScore
func (m *TLmessageActionGameScore) Decode(dbuf *code.DecodeBuf) error {
	m.Setgame_id(dbuf.Long())
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionPaymentSentMe
//
func NewTLmessageActionPaymentSentMe() *TLmessageActionPaymentSentMe {
	return &TLmessageActionPaymentSentMe{}
}

// CodecEncode:messageActionPaymentSentMe
func (m *TLmessageActionPaymentSentMe) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1892568281)
	var flags uint32 = 0
	if m.Getinfo().Constructor != 0 {
		flags |= 0 << 3
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.Bytes(m.Getpayload())
	if m.Getinfo().Constructor != 0 {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.Bytes(m.Getcharge().Encode())
	return x.Buf
}

// CodecDecode:messageActionPaymentSentMe
func (m *TLmessageActionPaymentSentMe) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setpayload(dbuf.StringBytes())
	if (flags & (1 << 3)) != 0 {
		m3 := &PaymentRequestedInfo{}
		m3.Decode(dbuf)
		m.Setinfo(m3)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m5 := &PaymentCharge{}
	m5.Decode(dbuf)
	m.Setcharge(m5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionPaymentSent
//
func NewTLmessageActionPaymentSent() *TLmessageActionPaymentSent {
	return &TLmessageActionPaymentSent{}
}

// CodecEncode:messageActionPaymentSent
func (m *TLmessageActionPaymentSent) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1080663248)
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	return x.Buf
}

// CodecDecode:messageActionPaymentSent
func (m *TLmessageActionPaymentSent) Decode(dbuf *code.DecodeBuf) error {
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionPhoneCall
//
func NewTLmessageActionPhoneCall() *TLmessageActionPhoneCall {
	return &TLmessageActionPhoneCall{}
}

// CodecEncode:messageActionPhoneCall
func (m *TLmessageActionPhoneCall) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2132731265)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 2 << 0
	}
	if m.Getreason().Constructor != 0 {
		flags |= 0 << 2
	}
	if m.Getduration() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Long(m.Getcall_id())
	if m.Getreason().Constructor != 0 {
		x.Bytes(m.Getreason().Encode())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	return x.Buf
}

// CodecDecode:messageActionPhoneCall
func (m *TLmessageActionPhoneCall) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m.Setcall_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m2 := &PhoneCallDiscardReason{}
		m2.Decode(dbuf)
		m.Setreason(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setduration(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionScreenshotTaken
//
func NewTLmessageActionScreenshotTaken() *TLmessageActionScreenshotTaken {
	return &TLmessageActionScreenshotTaken{}
}

// CodecEncode:messageActionScreenshotTaken
func (m *TLmessageActionScreenshotTaken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1200788123)
	return x.Buf
}

// CodecDecode:messageActionScreenshotTaken
func (m *TLmessageActionScreenshotTaken) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionCustomAction
//
func NewTLmessageActionCustomAction() *TLmessageActionCustomAction {
	return &TLmessageActionCustomAction{}
}

// CodecEncode:messageActionCustomAction
func (m *TLmessageActionCustomAction) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-85549226)
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:messageActionCustomAction
func (m *TLmessageActionCustomAction) Decode(dbuf *code.DecodeBuf) error {
	m.Setmessage(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionBotAllowed
//
func NewTLmessageActionBotAllowed() *TLmessageActionBotAllowed {
	return &TLmessageActionBotAllowed{}
}

// CodecEncode:messageActionBotAllowed
func (m *TLmessageActionBotAllowed) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1410748418)
	x.String(m.Getdomain())
	return x.Buf
}

// CodecDecode:messageActionBotAllowed
func (m *TLmessageActionBotAllowed) Decode(dbuf *code.DecodeBuf) error {
	m.Setdomain(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionSecureValuesSentMe
//
func NewTLmessageActionSecureValuesSentMe() *TLmessageActionSecureValuesSentMe {
	return &TLmessageActionSecureValuesSentMe{}
}

// CodecEncode:messageActionSecureValuesSentMe
func (m *TLmessageActionSecureValuesSentMe) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(455635795)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalues())))
	for _, v := range m.Getvalues() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:messageActionSecureValuesSentMe
func (m *TLmessageActionSecureValuesSentMe) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalues(v0)
	m1 := &SecureCredentialsEncrypted{}
	m1.Decode(dbuf)
	m.Setcredentials(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionSecureValuesSent
//
func NewTLmessageActionSecureValuesSent() *TLmessageActionSecureValuesSent {
	return &TLmessageActionSecureValuesSent{}
}

// CodecEncode:messageActionSecureValuesSent
func (m *TLmessageActionSecureValuesSent) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-648257196)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messageActionSecureValuesSent
func (m *TLmessageActionSecureValuesSent) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionContactSignUp
//
func NewTLmessageActionContactSignUp() *TLmessageActionContactSignUp {
	return &TLmessageActionContactSignUp{}
}

// CodecEncode:messageActionContactSignUp
func (m *TLmessageActionContactSignUp) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-202219658)
	return x.Buf
}

// CodecDecode:messageActionContactSignUp
func (m *TLmessageActionContactSignUp) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageActionGeoProximityReached
//
func NewTLmessageActionGeoProximityReached() *TLmessageActionGeoProximityReached {
	return &TLmessageActionGeoProximityReached{}
}

// CodecEncode:messageActionGeoProximityReached
func (m *TLmessageActionGeoProximityReached) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1730095465)
	x.Bytes(m.Getfrom_id().Encode())
	x.Bytes(m.Getto_id().Encode())
	x.Int(m.Getdistance())
	return x.Buf
}

// CodecDecode:messageActionGeoProximityReached
func (m *TLmessageActionGeoProximityReached) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setfrom_id(m0)
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setto_id(m1)
	m.Setdistance(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerLocated
//
func NewTLpeerLocated() *TLpeerLocated {
	return &TLpeerLocated{}
}

// CodecEncode:peerLocated
func (m *TLpeerLocated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-901375139)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getexpires())
	x.Int(m.Getdistance())
	return x.Buf
}

// CodecDecode:peerLocated
func (m *TLpeerLocated) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setexpires(dbuf.Int())
	m.Setdistance(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:peerSelfLocated
//
func NewTLpeerSelfLocated() *TLpeerSelfLocated {
	return &TLpeerSelfLocated{}
}

// CodecEncode:peerSelfLocated
func (m *TLpeerSelfLocated) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-118740917)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:peerSelfLocated
func (m *TLpeerSelfLocated) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_chats
//
func NewTLmessages_chats() *TLmessages_chats {
	return &TLmessages_chats{}
}

// CodecEncode:messages_chats
func (m *TLmessages_chats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1694474197)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chats
func (m *TLmessages_chats) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Chat, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Chat{}
		v0[i].Decode(dbuf)
	}
	m.Setchats(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_chatsSlice
//
func NewTLmessages_chatsSlice() *TLmessages_chatsSlice {
	return &TLmessages_chatsSlice{}
}

// CodecEncode:messages_chatsSlice
func (m *TLmessages_chatsSlice) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1663561404)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chatsSlice
func (m *TLmessages_chatsSlice) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageReplyHeader
//
func NewTLmessageReplyHeader() *TLmessageReplyHeader {
	return &TLmessageReplyHeader{}
}

// CodecEncode:messageReplyHeader
func (m *TLmessageReplyHeader) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1495959709)
	var flags uint32 = 0
	if m.Getreply_to_peer_id().Constructor != 0 {
		flags |= 0 << 1
	}
	if m.Getreply_to_top_id() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getreply_to_msg_id())
	if m.Getreply_to_peer_id().Constructor != 0 {
		x.Bytes(m.Getreply_to_peer_id().Encode())
	}
	if m.Getreply_to_top_id() != 0 {
		x.Int(m.Getreply_to_top_id())
	}
	return x.Buf
}

// CodecDecode:messageReplyHeader
func (m *TLmessageReplyHeader) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setreply_to_msg_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m1 := &Peer{}
		m1.Decode(dbuf)
		m.Setreply_to_peer_id(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setreply_to_top_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_affectedMessages
//
func NewTLmessages_affectedMessages() *TLmessages_affectedMessages {
	return &TLmessages_affectedMessages{}
}

// CodecEncode:messages_affectedMessages
func (m *TLmessages_affectedMessages) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2066640507)
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:messages_affectedMessages
func (m *TLmessages_affectedMessages) Decode(dbuf *code.DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:statsAbsValueAndPrev
//
func NewTLstatsAbsValueAndPrev() *TLstatsAbsValueAndPrev {
	return &TLstatsAbsValueAndPrev{}
}

// CodecEncode:statsAbsValueAndPrev
func (m *TLstatsAbsValueAndPrev) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-884757282)
	x.Bytes(m.Getcurrent().Encode())
	x.Bytes(m.Getprevious().Encode())
	return x.Buf
}

// CodecDecode:statsAbsValueAndPrev
func (m *TLstatsAbsValueAndPrev) Decode(dbuf *code.DecodeBuf) error {
	m.Setcurrent(dbuf.Double())
	m.Setprevious(dbuf.Double())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:paymentSavedCredentialsCard
//
func NewTLpaymentSavedCredentialsCard() *TLpaymentSavedCredentialsCard {
	return &TLpaymentSavedCredentialsCard{}
}

// CodecEncode:paymentSavedCredentialsCard
func (m *TLpaymentSavedCredentialsCard) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-842892769)
	x.String(m.Getid())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:paymentSavedCredentialsCard
func (m *TLpaymentSavedCredentialsCard) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorData
//
func NewTLsecureValueErrorData() *TLsecureValueErrorData {
	return &TLsecureValueErrorData{}
}

// CodecEncode:secureValueErrorData
func (m *TLsecureValueErrorData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-391902247)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getdata_hash())
	x.String(m.Getfield())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorData
func (m *TLsecureValueErrorData) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setdata_hash(dbuf.StringBytes())
	m.Setfield(dbuf.String())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorFrontSide
//
func NewTLsecureValueErrorFrontSide() *TLsecureValueErrorFrontSide {
	return &TLsecureValueErrorFrontSide{}
}

// CodecEncode:secureValueErrorFrontSide
func (m *TLsecureValueErrorFrontSide) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(12467706)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFrontSide
func (m *TLsecureValueErrorFrontSide) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorReverseSide
//
func NewTLsecureValueErrorReverseSide() *TLsecureValueErrorReverseSide {
	return &TLsecureValueErrorReverseSide{}
}

// CodecEncode:secureValueErrorReverseSide
func (m *TLsecureValueErrorReverseSide) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2037765467)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorReverseSide
func (m *TLsecureValueErrorReverseSide) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorSelfie
//
func NewTLsecureValueErrorSelfie() *TLsecureValueErrorSelfie {
	return &TLsecureValueErrorSelfie{}
}

// CodecEncode:secureValueErrorSelfie
func (m *TLsecureValueErrorSelfie) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-449327402)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorSelfie
func (m *TLsecureValueErrorSelfie) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorFile
//
func NewTLsecureValueErrorFile() *TLsecureValueErrorFile {
	return &TLsecureValueErrorFile{}
}

// CodecEncode:secureValueErrorFile
func (m *TLsecureValueErrorFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2054162547)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFile
func (m *TLsecureValueErrorFile) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorFiles
//
func NewTLsecureValueErrorFiles() *TLsecureValueErrorFiles {
	return &TLsecureValueErrorFiles{}
}

// CodecEncode:secureValueErrorFiles
func (m *TLsecureValueErrorFiles) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1717706985)
	x.Bytes(m.Gettype().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hash_6())))
	for _, v := range m.Getfile_hash_6() {
		x.Buf = append(x.Buf, v...)
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFiles
func (m *TLsecureValueErrorFiles) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i].Bytes(dbuf)
	}
	m.Setfile_hash_6(v1)
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueError
//
func NewTLsecureValueError() *TLsecureValueError {
	return &TLsecureValueError{}
}

// CodecEncode:secureValueError
func (m *TLsecureValueError) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2036501105)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Gethash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueError
func (m *TLsecureValueError) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Sethash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorTranslationFile
//
func NewTLsecureValueErrorTranslationFile() *TLsecureValueErrorTranslationFile {
	return &TLsecureValueErrorTranslationFile{}
}

// CodecEncode:secureValueErrorTranslationFile
func (m *TLsecureValueErrorTranslationFile) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1592506512)
	x.Bytes(m.Gettype().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorTranslationFile
func (m *TLsecureValueErrorTranslationFile) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueErrorTranslationFiles
//
func NewTLsecureValueErrorTranslationFiles() *TLsecureValueErrorTranslationFiles {
	return &TLsecureValueErrorTranslationFiles{}
}

// CodecEncode:secureValueErrorTranslationFiles
func (m *TLsecureValueErrorTranslationFiles) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(878931416)
	x.Bytes(m.Gettype().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hash_6())))
	for _, v := range m.Getfile_hash_6() {
		x.Buf = append(x.Buf, v...)
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorTranslationFiles
func (m *TLsecureValueErrorTranslationFiles) Decode(dbuf *code.DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i].Bytes(dbuf)
	}
	m.Setfile_hash_6(v1)
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputGameID
//
func NewTLinputGameID() *TLinputGameID {
	return &TLinputGameID{}
}

// CodecEncode:inputGameID
func (m *TLinputGameID) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(53231223)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputGameID
func (m *TLinputGameID) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputGameShortName
//
func NewTLinputGameShortName() *TLinputGameShortName {
	return &TLinputGameShortName{}
}

// CodecEncode:inputGameShortName
func (m *TLinputGameShortName) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1020139510)
	x.Bytes(m.Getbot_id().Encode())
	x.String(m.Getshort_name())
	return x.Buf
}

// CodecDecode:inputGameShortName
func (m *TLinputGameShortName) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot_id(m0)
	m.Setshort_name(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallDiscardReasonMissed
//
func NewTLphoneCallDiscardReasonMissed() *TLphoneCallDiscardReasonMissed {
	return &TLphoneCallDiscardReasonMissed{}
}

// CodecEncode:phoneCallDiscardReasonMissed
func (m *TLphoneCallDiscardReasonMissed) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2048646399)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonMissed
func (m *TLphoneCallDiscardReasonMissed) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallDiscardReasonDisconnect
//
func NewTLphoneCallDiscardReasonDisconnect() *TLphoneCallDiscardReasonDisconnect {
	return &TLphoneCallDiscardReasonDisconnect{}
}

// CodecEncode:phoneCallDiscardReasonDisconnect
func (m *TLphoneCallDiscardReasonDisconnect) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-527056480)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonDisconnect
func (m *TLphoneCallDiscardReasonDisconnect) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallDiscardReasonHangup
//
func NewTLphoneCallDiscardReasonHangup() *TLphoneCallDiscardReasonHangup {
	return &TLphoneCallDiscardReasonHangup{}
}

// CodecEncode:phoneCallDiscardReasonHangup
func (m *TLphoneCallDiscardReasonHangup) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1471006352)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonHangup
func (m *TLphoneCallDiscardReasonHangup) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:phoneCallDiscardReasonBusy
//
func NewTLphoneCallDiscardReasonBusy() *TLphoneCallDiscardReasonBusy {
	return &TLphoneCallDiscardReasonBusy{}
}

// CodecEncode:phoneCallDiscardReasonBusy
func (m *TLphoneCallDiscardReasonBusy) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-84416311)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonBusy
func (m *TLphoneCallDiscardReasonBusy) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:globalPrivacySettings
//
func NewTLglobalPrivacySettings() *TLglobalPrivacySettings {
	return &TLglobalPrivacySettings{}
}

// CodecEncode:globalPrivacySettings
func (m *TLglobalPrivacySettings) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1096616924)
	var flags uint32 = 0
	if m.Getarchive_and_mute_new_noncontact_peers().Constructor != 0 {
		flags |= 0 << 0
	}
	x.UInt(flags)
	if m.Getarchive_and_mute_new_noncontact_peers().Constructor != 0 {
		x.Bytes(m.Getarchive_and_mute_new_noncontact_peers().Encode())
	}
	return x.Buf
}

// CodecDecode:globalPrivacySettings
func (m *TLglobalPrivacySettings) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setarchive_and_mute_new_noncontact_peers(m0)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channels_channelParticipant
//
func NewTLchannels_channelParticipant() *TLchannels_channelParticipant {
	return &TLchannels_channelParticipant{}
}

// CodecEncode:channels_channelParticipant
func (m *TLchannels_channelParticipant) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-791039645)
	x.Bytes(m.Getparticipant().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_channelParticipant
func (m *TLchannels_channelParticipant) Decode(dbuf *code.DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setparticipant(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_savedInfo
//
func NewTLpayments_savedInfo() *TLpayments_savedInfo {
	return &TLpayments_savedInfo{}
}

// CodecEncode:payments_savedInfo
func (m *TLpayments_savedInfo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-74456004)
	var flags uint32 = 0
	if m.Gethas_saved_credentials() != false {
		flags |= 1 << 0
	}
	if m.Getsaved_info().Constructor != 0 {
		flags |= 0 << 1
	}
	x.UInt(flags)
	if m.Getsaved_info().Constructor != 0 {
		x.Bytes(m.Getsaved_info().Encode())
	}
	return x.Buf
}

// CodecDecode:payments_savedInfo
func (m *TLpayments_savedInfo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_saved_credentials(true)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &PaymentRequestedInfo{}
		m1.Decode(dbuf)
		m.Setsaved_info(m1)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsRecent
//
func NewTLchannelParticipantsRecent() *TLchannelParticipantsRecent {
	return &TLchannelParticipantsRecent{}
}

// CodecEncode:channelParticipantsRecent
func (m *TLchannelParticipantsRecent) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-566281095)
	return x.Buf
}

// CodecDecode:channelParticipantsRecent
func (m *TLchannelParticipantsRecent) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsAdmins
//
func NewTLchannelParticipantsAdmins() *TLchannelParticipantsAdmins {
	return &TLchannelParticipantsAdmins{}
}

// CodecEncode:channelParticipantsAdmins
func (m *TLchannelParticipantsAdmins) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1268741783)
	return x.Buf
}

// CodecDecode:channelParticipantsAdmins
func (m *TLchannelParticipantsAdmins) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsKicked
//
func NewTLchannelParticipantsKicked() *TLchannelParticipantsKicked {
	return &TLchannelParticipantsKicked{}
}

// CodecEncode:channelParticipantsKicked
func (m *TLchannelParticipantsKicked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1548400251)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsKicked
func (m *TLchannelParticipantsKicked) Decode(dbuf *code.DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsBots
//
func NewTLchannelParticipantsBots() *TLchannelParticipantsBots {
	return &TLchannelParticipantsBots{}
}

// CodecEncode:channelParticipantsBots
func (m *TLchannelParticipantsBots) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1328445861)
	return x.Buf
}

// CodecDecode:channelParticipantsBots
func (m *TLchannelParticipantsBots) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsBanned
//
func NewTLchannelParticipantsBanned() *TLchannelParticipantsBanned {
	return &TLchannelParticipantsBanned{}
}

// CodecEncode:channelParticipantsBanned
func (m *TLchannelParticipantsBanned) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(338142689)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsBanned
func (m *TLchannelParticipantsBanned) Decode(dbuf *code.DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsSearch
//
func NewTLchannelParticipantsSearch() *TLchannelParticipantsSearch {
	return &TLchannelParticipantsSearch{}
}

// CodecEncode:channelParticipantsSearch
func (m *TLchannelParticipantsSearch) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(106343499)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsSearch
func (m *TLchannelParticipantsSearch) Decode(dbuf *code.DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsContacts
//
func NewTLchannelParticipantsContacts() *TLchannelParticipantsContacts {
	return &TLchannelParticipantsContacts{}
}

// CodecEncode:channelParticipantsContacts
func (m *TLchannelParticipantsContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1150621555)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsContacts
func (m *TLchannelParticipantsContacts) Decode(dbuf *code.DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelParticipantsMentions
//
func NewTLchannelParticipantsMentions() *TLchannelParticipantsMentions {
	return &TLchannelParticipantsMentions{}
}

// CodecEncode:channelParticipantsMentions
func (m *TLchannelParticipantsMentions) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-531931925)
	var flags uint32 = 0
	if m.Getq() != "" {
		flags |= 0 << 0
	}
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getq() != "" {
		x.String(m.Getq())
	}
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	return x.Buf
}

// CodecDecode:channelParticipantsMentions
func (m *TLchannelParticipantsMentions) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setq(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputDialogPeer
//
func NewTLinputDialogPeer() *TLinputDialogPeer {
	return &TLinputDialogPeer{}
}

// CodecEncode:inputDialogPeer
func (m *TLinputDialogPeer) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-55902537)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:inputDialogPeer
func (m *TLinputDialogPeer) Decode(dbuf *code.DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputDialogPeerFolder
//
func NewTLinputDialogPeerFolder() *TLinputDialogPeerFolder {
	return &TLinputDialogPeerFolder{}
}

// CodecEncode:inputDialogPeerFolder
func (m *TLinputDialogPeerFolder) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1684014375)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:inputDialogPeerFolder
func (m *TLinputDialogPeerFolder) Decode(dbuf *code.DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:accountDaysTTL
//
func NewTLaccountDaysTTL() *TLaccountDaysTTL {
	return &TLaccountDaysTTL{}
}

// CodecEncode:accountDaysTTL
func (m *TLaccountDaysTTL) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1194283041)
	x.Int(m.Getdays())
	return x.Buf
}

// CodecDecode:accountDaysTTL
func (m *TLaccountDaysTTL) Decode(dbuf *code.DecodeBuf) error {
	m.Setdays(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockUnsupported
//
func NewTLpageBlockUnsupported() *TLpageBlockUnsupported {
	return &TLpageBlockUnsupported{}
}

// CodecEncode:pageBlockUnsupported
func (m *TLpageBlockUnsupported) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(324435594)
	return x.Buf
}

// CodecDecode:pageBlockUnsupported
func (m *TLpageBlockUnsupported) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockTitle
//
func NewTLpageBlockTitle() *TLpageBlockTitle {
	return &TLpageBlockTitle{}
}

// CodecEncode:pageBlockTitle
func (m *TLpageBlockTitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1890305021)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockTitle
func (m *TLpageBlockTitle) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockSubtitle
//
func NewTLpageBlockSubtitle() *TLpageBlockSubtitle {
	return &TLpageBlockSubtitle{}
}

// CodecEncode:pageBlockSubtitle
func (m *TLpageBlockSubtitle) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1879401953)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSubtitle
func (m *TLpageBlockSubtitle) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockAuthorDate
//
func NewTLpageBlockAuthorDate() *TLpageBlockAuthorDate {
	return &TLpageBlockAuthorDate{}
}

// CodecEncode:pageBlockAuthorDate
func (m *TLpageBlockAuthorDate) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1162877472)
	x.Bytes(m.Getauthor().Encode())
	x.Int(m.Getpublished_date())
	return x.Buf
}

// CodecDecode:pageBlockAuthorDate
func (m *TLpageBlockAuthorDate) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Setauthor(m0)
	m.Setpublished_date(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockHeader
//
func NewTLpageBlockHeader() *TLpageBlockHeader {
	return &TLpageBlockHeader{}
}

// CodecEncode:pageBlockHeader
func (m *TLpageBlockHeader) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1076861716)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockHeader
func (m *TLpageBlockHeader) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockSubheader
//
func NewTLpageBlockSubheader() *TLpageBlockSubheader {
	return &TLpageBlockSubheader{}
}

// CodecEncode:pageBlockSubheader
func (m *TLpageBlockSubheader) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-248793375)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSubheader
func (m *TLpageBlockSubheader) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockParagraph
//
func NewTLpageBlockParagraph() *TLpageBlockParagraph {
	return &TLpageBlockParagraph{}
}

// CodecEncode:pageBlockParagraph
func (m *TLpageBlockParagraph) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1182402406)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockParagraph
func (m *TLpageBlockParagraph) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockPreformatted
//
func NewTLpageBlockPreformatted() *TLpageBlockPreformatted {
	return &TLpageBlockPreformatted{}
}

// CodecEncode:pageBlockPreformatted
func (m *TLpageBlockPreformatted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1066346178)
	x.Bytes(m.Gettext().Encode())
	x.String(m.Getlanguage())
	return x.Buf
}

// CodecDecode:pageBlockPreformatted
func (m *TLpageBlockPreformatted) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m.Setlanguage(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockFooter
//
func NewTLpageBlockFooter() *TLpageBlockFooter {
	return &TLpageBlockFooter{}
}

// CodecEncode:pageBlockFooter
func (m *TLpageBlockFooter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1216809369)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockFooter
func (m *TLpageBlockFooter) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockDivider
//
func NewTLpageBlockDivider() *TLpageBlockDivider {
	return &TLpageBlockDivider{}
}

// CodecEncode:pageBlockDivider
func (m *TLpageBlockDivider) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-618614392)
	return x.Buf
}

// CodecDecode:pageBlockDivider
func (m *TLpageBlockDivider) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockAnchor
//
func NewTLpageBlockAnchor() *TLpageBlockAnchor {
	return &TLpageBlockAnchor{}
}

// CodecEncode:pageBlockAnchor
func (m *TLpageBlockAnchor) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-837994576)
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:pageBlockAnchor
func (m *TLpageBlockAnchor) Decode(dbuf *code.DecodeBuf) error {
	m.Setname(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockList
//
func NewTLpageBlockList() *TLpageBlockList {
	return &TLpageBlockList{}
}

// CodecEncode:pageBlockList
func (m *TLpageBlockList) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-454524911)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems())))
	for _, v := range m.Getitems() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockList
func (m *TLpageBlockList) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageListItem, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageListItem{}
		v0[i].Decode(dbuf)
	}
	m.Setitems(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockBlockquote
//
func NewTLpageBlockBlockquote() *TLpageBlockBlockquote {
	return &TLpageBlockBlockquote{}
}

// CodecEncode:pageBlockBlockquote
func (m *TLpageBlockBlockquote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(641563686)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcaption().Encode())
	return x.Buf
}

// CodecDecode:pageBlockBlockquote
func (m *TLpageBlockBlockquote) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcaption(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockPullquote
//
func NewTLpageBlockPullquote() *TLpageBlockPullquote {
	return &TLpageBlockPullquote{}
}

// CodecEncode:pageBlockPullquote
func (m *TLpageBlockPullquote) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1329878739)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcaption().Encode())
	return x.Buf
}

// CodecDecode:pageBlockPullquote
func (m *TLpageBlockPullquote) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcaption(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockPhoto
//
func NewTLpageBlockPhoto() *TLpageBlockPhoto {
	return &TLpageBlockPhoto{}
}

// CodecEncode:pageBlockPhoto
func (m *TLpageBlockPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(391759200)
	var flags uint32 = 0
	if m.Geturl() != "" {
		flags |= 0 << 2
	}
	if m.Getwebpage_id().Constructor != 0 {
		flags |= 0 << 3
	}
	x.UInt(flags)
	x.Long(m.Getphoto_id())
	x.Bytes(m.Getcaption_9().Encode())
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getwebpage_id() != 0 {
		x.Long(m.Getwebpage_id())
	}
	return x.Buf
}

// CodecDecode:pageBlockPhoto
func (m *TLpageBlockPhoto) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphoto_id(dbuf.Long())
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	if (flags & (1 << 2)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setwebpage_id(dbuf.Long())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockVideo
//
func NewTLpageBlockVideo() *TLpageBlockVideo {
	return &TLpageBlockVideo{}
}

// CodecEncode:pageBlockVideo
func (m *TLpageBlockVideo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2089805750)
	var flags uint32 = 0
	if m.Getautoplay() != false {
		flags |= 0 << 0
	}
	if m.Getloop() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getvideo_id())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockVideo
func (m *TLpageBlockVideo) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setautoplay(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setloop(true)
	}
	m.Setvideo_id(dbuf.Long())
	m3 := &PageCaption{}
	m3.Decode(dbuf)
	m.Setcaption_9(m3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockCover
//
func NewTLpageBlockCover() *TLpageBlockCover {
	return &TLpageBlockCover{}
}

// CodecEncode:pageBlockCover
func (m *TLpageBlockCover) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(972174080)
	x.Bytes(m.Getcover().Encode())
	return x.Buf
}

// CodecDecode:pageBlockCover
func (m *TLpageBlockCover) Decode(dbuf *code.DecodeBuf) error {
	m0 := &PageBlock{}
	m0.Decode(dbuf)
	m.Setcover(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockEmbed
//
func NewTLpageBlockEmbed() *TLpageBlockEmbed {
	return &TLpageBlockEmbed{}
}

// CodecEncode:pageBlockEmbed
func (m *TLpageBlockEmbed) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1468953147)
	var flags uint32 = 0
	if m.Getfull_width() != false {
		flags |= 0 << 0
	}
	if m.Getallow_scrolling() != false {
		flags |= 3 << 1
	}
	if m.Geturl() != "" {
		flags |= 1 << 2
	}
	if m.Gethtml() != "" {
		flags |= 2 << 3
	}
	if m.Getposter_photo_id().Constructor != 0 {
		flags |= 4 << 4
	}
	if m.Getw() != 0 {
		flags |= 5 << 5
	}
	if m.Geth() != 0 {
		flags |= 5 << 6
	}
	x.UInt(flags)
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Gethtml() != "" {
		x.String(m.Gethtml())
	}
	if m.Getposter_photo_id() != 0 {
		x.Long(m.Getposter_photo_id())
	}
	if m.Getw() != 0 {
		x.Int(m.Getw())
	}
	if m.Geth() != 0 {
		x.Int(m.Geth())
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockEmbed
func (m *TLpageBlockEmbed) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfull_width(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setallow_scrolling(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Sethtml(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setposter_photo_id(dbuf.Long())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setw(dbuf.Int())
	}
	if (flags & (1 << 6)) != 0 {
		m.Seth(dbuf.Int())
	}
	m7 := &PageCaption{}
	m7.Decode(dbuf)
	m.Setcaption_9(m7)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockEmbedPost
//
func NewTLpageBlockEmbedPost() *TLpageBlockEmbedPost {
	return &TLpageBlockEmbedPost{}
}

// CodecEncode:pageBlockEmbedPost
func (m *TLpageBlockEmbedPost) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-229005301)
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	x.Long(m.Getauthor_photo_id())
	x.String(m.Getauthor_23())
	x.Int(m.Getdate())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockEmbedPost
func (m *TLpageBlockEmbedPost) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	m.Setauthor_photo_id(dbuf.Long())
	m.Setauthor_23(dbuf.String())
	m.Setdate(dbuf.Int())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]PageBlock, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = PageBlock{}
		v5[i].Decode(dbuf)
	}
	m.Setblocks(v5)
	m6 := &PageCaption{}
	m6.Decode(dbuf)
	m.Setcaption_9(m6)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockCollage
//
func NewTLpageBlockCollage() *TLpageBlockCollage {
	return &TLpageBlockCollage{}
}

// CodecEncode:pageBlockCollage
func (m *TLpageBlockCollage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1705048653)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_26())))
	for _, v := range m.Getitems_26() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockCollage
func (m *TLpageBlockCollage) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_26(v0)
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockSlideshow
//
func NewTLpageBlockSlideshow() *TLpageBlockSlideshow {
	return &TLpageBlockSlideshow{}
}

// CodecEncode:pageBlockSlideshow
func (m *TLpageBlockSlideshow) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(52401552)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_26())))
	for _, v := range m.Getitems_26() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSlideshow
func (m *TLpageBlockSlideshow) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_26(v0)
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockChannel
//
func NewTLpageBlockChannel() *TLpageBlockChannel {
	return &TLpageBlockChannel{}
}

// CodecEncode:pageBlockChannel
func (m *TLpageBlockChannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-283684427)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:pageBlockChannel
func (m *TLpageBlockChannel) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockAudio
//
func NewTLpageBlockAudio() *TLpageBlockAudio {
	return &TLpageBlockAudio{}
}

// CodecEncode:pageBlockAudio
func (m *TLpageBlockAudio) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-2143067670)
	x.Long(m.Getaudio_id())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockAudio
func (m *TLpageBlockAudio) Decode(dbuf *code.DecodeBuf) error {
	m.Setaudio_id(dbuf.Long())
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockKicker
//
func NewTLpageBlockKicker() *TLpageBlockKicker {
	return &TLpageBlockKicker{}
}

// CodecEncode:pageBlockKicker
func (m *TLpageBlockKicker) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(504660880)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockKicker
func (m *TLpageBlockKicker) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockTable
//
func NewTLpageBlockTable() *TLpageBlockTable {
	return &TLpageBlockTable{}
}

// CodecEncode:pageBlockTable
func (m *TLpageBlockTable) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1085412734)
	var flags uint32 = 0
	if m.Getbordered() != false {
		flags |= 0 << 0
	}
	if m.Getstriped() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Gettitle().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockTable
func (m *TLpageBlockTable) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbordered(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setstriped(true)
	}
	m2 := &RichText{}
	m2.Decode(dbuf)
	m.Settitle(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]PageTableRow, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = PageTableRow{}
		v3[i].Decode(dbuf)
	}
	m.Setrows(v3)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockOrderedList
//
func NewTLpageBlockOrderedList() *TLpageBlockOrderedList {
	return &TLpageBlockOrderedList{}
}

// CodecEncode:pageBlockOrderedList
func (m *TLpageBlockOrderedList) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1702174239)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_33())))
	for _, v := range m.Getitems_33() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockOrderedList
func (m *TLpageBlockOrderedList) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]PageListOrderedItem, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = PageListOrderedItem{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_33(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockDetails
//
func NewTLpageBlockDetails() *TLpageBlockDetails {
	return &TLpageBlockDetails{}
}

// CodecEncode:pageBlockDetails
func (m *TLpageBlockDetails) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1987480557)
	var flags uint32 = 0
	if m.Getopen() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Gettitle().Encode())
	return x.Buf
}

// CodecDecode:pageBlockDetails
func (m *TLpageBlockDetails) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setopen(true)
	}
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PageBlock, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PageBlock{}
		v1[i].Decode(dbuf)
	}
	m.Setblocks(v1)
	m2 := &RichText{}
	m2.Decode(dbuf)
	m.Settitle(m2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockRelatedArticles
//
func NewTLpageBlockRelatedArticles() *TLpageBlockRelatedArticles {
	return &TLpageBlockRelatedArticles{}
}

// CodecEncode:pageBlockRelatedArticles
func (m *TLpageBlockRelatedArticles) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(370236054)
	x.Bytes(m.Gettitle().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getarticles())))
	for _, v := range m.Getarticles() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockRelatedArticles
func (m *TLpageBlockRelatedArticles) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settitle(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]PageRelatedArticle, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = PageRelatedArticle{}
		v1[i].Decode(dbuf)
	}
	m.Setarticles(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageBlockMap
//
func NewTLpageBlockMap() *TLpageBlockMap {
	return &TLpageBlockMap{}
}

// CodecEncode:pageBlockMap
func (m *TLpageBlockMap) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1538310410)
	x.Bytes(m.Getgeo().Encode())
	x.Int(m.Getzoom())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockMap
func (m *TLpageBlockMap) Decode(dbuf *code.DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Setzoom(dbuf.Int())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m4 := &PageCaption{}
	m4.Decode(dbuf)
	m.Setcaption_9(m4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_paymentReceipt
//
func NewTLpayments_paymentReceipt() *TLpayments_paymentReceipt {
	return &TLpayments_paymentReceipt{}
}

// CodecEncode:payments_paymentReceipt
func (m *TLpayments_paymentReceipt) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1342771681)
	var flags uint32 = 0
	if m.Getinfo().Constructor != 0 {
		flags |= 0 << 4
	}
	if m.Getshipping().Constructor != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Int(m.Getdate())
	x.Int(m.Getbot_id())
	x.Bytes(m.Getinvoice().Encode())
	x.Int(m.Getprovider_id())
	if m.Getinfo().Constructor != 0 {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping().Constructor != 0 {
		x.Bytes(m.Getshipping().Encode())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.String(m.Getcredentials_title())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_paymentReceipt
func (m *TLpayments_paymentReceipt) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setdate(dbuf.Int())
	m.Setbot_id(dbuf.Int())
	m2 := &Invoice{}
	m2.Decode(dbuf)
	m.Setinvoice(m2)
	m.Setprovider_id(dbuf.Int())
	if (flags & (1 << 4)) != 0 {
		m4 := &PaymentRequestedInfo{}
		m4.Decode(dbuf)
		m.Setinfo(m4)
	}
	if (flags & (1 << 5)) != 0 {
		m5 := &ShippingOption{}
		m5.Decode(dbuf)
		m.Setshipping(m5)
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setcredentials_title(dbuf.String())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]User, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = User{}
		v9[i].Decode(dbuf)
	}
	m.Setusers(v9)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueAllowContacts
//
func NewTLinputPrivacyValueAllowContacts() *TLinputPrivacyValueAllowContacts {
	return &TLinputPrivacyValueAllowContacts{}
}

// CodecEncode:inputPrivacyValueAllowContacts
func (m *TLinputPrivacyValueAllowContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(218751099)
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowContacts
func (m *TLinputPrivacyValueAllowContacts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueAllowAll
//
func NewTLinputPrivacyValueAllowAll() *TLinputPrivacyValueAllowAll {
	return &TLinputPrivacyValueAllowAll{}
}

// CodecEncode:inputPrivacyValueAllowAll
func (m *TLinputPrivacyValueAllowAll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(407582158)
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowAll
func (m *TLinputPrivacyValueAllowAll) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueAllowUsers
//
func NewTLinputPrivacyValueAllowUsers() *TLinputPrivacyValueAllowUsers {
	return &TLinputPrivacyValueAllowUsers{}
}

// CodecEncode:inputPrivacyValueAllowUsers
func (m *TLinputPrivacyValueAllowUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(320652927)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowUsers
func (m *TLinputPrivacyValueAllowUsers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueDisallowContacts
//
func NewTLinputPrivacyValueDisallowContacts() *TLinputPrivacyValueDisallowContacts {
	return &TLinputPrivacyValueDisallowContacts{}
}

// CodecEncode:inputPrivacyValueDisallowContacts
func (m *TLinputPrivacyValueDisallowContacts) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(195371015)
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowContacts
func (m *TLinputPrivacyValueDisallowContacts) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueDisallowAll
//
func NewTLinputPrivacyValueDisallowAll() *TLinputPrivacyValueDisallowAll {
	return &TLinputPrivacyValueDisallowAll{}
}

// CodecEncode:inputPrivacyValueDisallowAll
func (m *TLinputPrivacyValueDisallowAll) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-697604407)
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowAll
func (m *TLinputPrivacyValueDisallowAll) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueDisallowUsers
//
func NewTLinputPrivacyValueDisallowUsers() *TLinputPrivacyValueDisallowUsers {
	return &TLinputPrivacyValueDisallowUsers{}
}

// CodecEncode:inputPrivacyValueDisallowUsers
func (m *TLinputPrivacyValueDisallowUsers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1877932953)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowUsers
func (m *TLinputPrivacyValueDisallowUsers) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueAllowChatParticipants
//
func NewTLinputPrivacyValueAllowChatParticipants() *TLinputPrivacyValueAllowChatParticipants {
	return &TLinputPrivacyValueAllowChatParticipants{}
}

// CodecEncode:inputPrivacyValueAllowChatParticipants
func (m *TLinputPrivacyValueAllowChatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1283572154)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowChatParticipants
func (m *TLinputPrivacyValueAllowChatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPrivacyValueDisallowChatParticipants
//
func NewTLinputPrivacyValueDisallowChatParticipants() *TLinputPrivacyValueDisallowChatParticipants {
	return &TLinputPrivacyValueDisallowChatParticipants{}
}

// CodecEncode:inputPrivacyValueDisallowChatParticipants
func (m *TLinputPrivacyValueDisallowChatParticipants) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-668769361)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowChatParticipants
func (m *TLinputPrivacyValueDisallowChatParticipants) Decode(dbuf *code.DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:upload_file
//
func NewTLupload_file() *TLupload_file {
	return &TLupload_file{}
}

// CodecEncode:upload_file
func (m *TLupload_file) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(157948117)
	x.Bytes(m.Gettype().Encode())
	x.Int(m.Getmtime())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_file
func (m *TLupload_file) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Storage_FileType{}
	m0.Decode(dbuf)
	m.Settype(m0)
	m.Setmtime(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:upload_fileCdnRedirect
//
func NewTLupload_fileCdnRedirect() *TLupload_fileCdnRedirect {
	return &TLupload_fileCdnRedirect{}
}

// CodecEncode:upload_fileCdnRedirect
func (m *TLupload_fileCdnRedirect) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-242427324)
	x.Int(m.Getdc_id())
	x.Bytes(m.Getfile_token())
	x.Bytes(m.Getencryption_key())
	x.Bytes(m.Getencryption_iv())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hashes())))
	for _, v := range m.Getfile_hashes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:upload_fileCdnRedirect
func (m *TLupload_fileCdnRedirect) Decode(dbuf *code.DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setfile_token(dbuf.StringBytes())
	m.Setencryption_key(dbuf.StringBytes())
	m.Setencryption_iv(dbuf.StringBytes())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]FileHash, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = FileHash{}
		v4[i].Decode(dbuf)
	}
	m.Setfile_hashes(v4)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:dialogFilterSuggested
//
func NewTLdialogFilterSuggested() *TLdialogFilterSuggested {
	return &TLdialogFilterSuggested{}
}

// CodecEncode:dialogFilterSuggested
func (m *TLdialogFilterSuggested) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2004110666)
	x.Bytes(m.Getfilter().Encode())
	x.String(m.Getdescription())
	return x.Buf
}

// CodecDecode:dialogFilterSuggested
func (m *TLdialogFilterSuggested) Decode(dbuf *code.DecodeBuf) error {
	m0 := &DialogFilter{}
	m0.Decode(dbuf)
	m.Setfilter(m0)
	m.Setdescription(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textEmpty
//
func NewTLtextEmpty() *TLtextEmpty {
	return &TLtextEmpty{}
}

// CodecEncode:textEmpty
func (m *TLtextEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-599948721)
	return x.Buf
}

// CodecDecode:textEmpty
func (m *TLtextEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textPlain
//
func NewTLtextPlain() *TLtextPlain {
	return &TLtextPlain{}
}

// CodecEncode:textPlain
func (m *TLtextPlain) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1950782688)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:textPlain
func (m *TLtextPlain) Decode(dbuf *code.DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textBold
//
func NewTLtextBold() *TLtextBold {
	return &TLtextBold{}
}

// CodecEncode:textBold
func (m *TLtextBold) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1730456516)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textBold
func (m *TLtextBold) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textItalic
//
func NewTLtextItalic() *TLtextItalic {
	return &TLtextItalic{}
}

// CodecEncode:textItalic
func (m *TLtextItalic) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-653089380)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textItalic
func (m *TLtextItalic) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textUnderline
//
func NewTLtextUnderline() *TLtextUnderline {
	return &TLtextUnderline{}
}

// CodecEncode:textUnderline
func (m *TLtextUnderline) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1054465340)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textUnderline
func (m *TLtextUnderline) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textStrike
//
func NewTLtextStrike() *TLtextStrike {
	return &TLtextStrike{}
}

// CodecEncode:textStrike
func (m *TLtextStrike) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1678197867)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textStrike
func (m *TLtextStrike) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textFixed
//
func NewTLtextFixed() *TLtextFixed {
	return &TLtextFixed{}
}

// CodecEncode:textFixed
func (m *TLtextFixed) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1816074681)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textFixed
func (m *TLtextFixed) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textUrl
//
func NewTLtextUrl() *TLtextUrl {
	return &TLtextUrl{}
}

// CodecEncode:textUrl
func (m *TLtextUrl) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1009288385)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	return x.Buf
}

// CodecDecode:textUrl
func (m *TLtextUrl) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textEmail
//
func NewTLtextEmail() *TLtextEmail {
	return &TLtextEmail{}
}

// CodecEncode:textEmail
func (m *TLtextEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-564523562)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:textEmail
func (m *TLtextEmail) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setemail(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textConcat
//
func NewTLtextConcat() *TLtextConcat {
	return &TLtextConcat{}
}

// CodecEncode:textConcat
func (m *TLtextConcat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2120376535)
	x.Int(481674261)
	x.Int(int32(len(m.Gettexts())))
	for _, v := range m.Gettexts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:textConcat
func (m *TLtextConcat) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]RichText, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = RichText{}
		v0[i].Decode(dbuf)
	}
	m.Settexts(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textSubscript
//
func NewTLtextSubscript() *TLtextSubscript {
	return &TLtextSubscript{}
}

// CodecEncode:textSubscript
func (m *TLtextSubscript) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-311786236)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textSubscript
func (m *TLtextSubscript) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textSuperscript
//
func NewTLtextSuperscript() *TLtextSuperscript {
	return &TLtextSuperscript{}
}

// CodecEncode:textSuperscript
func (m *TLtextSuperscript) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-939827711)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textSuperscript
func (m *TLtextSuperscript) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textMarked
//
func NewTLtextMarked() *TLtextMarked {
	return &TLtextMarked{}
}

// CodecEncode:textMarked
func (m *TLtextMarked) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(55281185)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textMarked
func (m *TLtextMarked) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textPhone
//
func NewTLtextPhone() *TLtextPhone {
	return &TLtextPhone{}
}

// CodecEncode:textPhone
func (m *TLtextPhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(483104362)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:textPhone
func (m *TLtextPhone) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setphone(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textImage
//
func NewTLtextImage() *TLtextImage {
	return &TLtextImage{}
}

// CodecEncode:textImage
func (m *TLtextImage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(136105807)
	x.Long(m.Getdocument_id())
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:textImage
func (m *TLtextImage) Decode(dbuf *code.DecodeBuf) error {
	m.Setdocument_id(dbuf.Long())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:textAnchor
//
func NewTLtextAnchor() *TLtextAnchor {
	return &TLtextAnchor{}
}

// CodecEncode:textAnchor
func (m *TLtextAnchor) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(894777186)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:textAnchor
func (m *TLtextAnchor) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setname(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypePersonalDetails
//
func NewTLsecureValueTypePersonalDetails() *TLsecureValueTypePersonalDetails {
	return &TLsecureValueTypePersonalDetails{}
}

// CodecEncode:secureValueTypePersonalDetails
func (m *TLsecureValueTypePersonalDetails) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1658158621)
	return x.Buf
}

// CodecDecode:secureValueTypePersonalDetails
func (m *TLsecureValueTypePersonalDetails) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypePassport
//
func NewTLsecureValueTypePassport() *TLsecureValueTypePassport {
	return &TLsecureValueTypePassport{}
}

// CodecEncode:secureValueTypePassport
func (m *TLsecureValueTypePassport) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1034709504)
	return x.Buf
}

// CodecDecode:secureValueTypePassport
func (m *TLsecureValueTypePassport) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeDriverLicense
//
func NewTLsecureValueTypeDriverLicense() *TLsecureValueTypeDriverLicense {
	return &TLsecureValueTypeDriverLicense{}
}

// CodecEncode:secureValueTypeDriverLicense
func (m *TLsecureValueTypeDriverLicense) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(115615172)
	return x.Buf
}

// CodecDecode:secureValueTypeDriverLicense
func (m *TLsecureValueTypeDriverLicense) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeIdentityCard
//
func NewTLsecureValueTypeIdentityCard() *TLsecureValueTypeIdentityCard {
	return &TLsecureValueTypeIdentityCard{}
}

// CodecEncode:secureValueTypeIdentityCard
func (m *TLsecureValueTypeIdentityCard) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1596951477)
	return x.Buf
}

// CodecDecode:secureValueTypeIdentityCard
func (m *TLsecureValueTypeIdentityCard) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeInternalPassport
//
func NewTLsecureValueTypeInternalPassport() *TLsecureValueTypeInternalPassport {
	return &TLsecureValueTypeInternalPassport{}
}

// CodecEncode:secureValueTypeInternalPassport
func (m *TLsecureValueTypeInternalPassport) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1717268701)
	return x.Buf
}

// CodecDecode:secureValueTypeInternalPassport
func (m *TLsecureValueTypeInternalPassport) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeAddress
//
func NewTLsecureValueTypeAddress() *TLsecureValueTypeAddress {
	return &TLsecureValueTypeAddress{}
}

// CodecEncode:secureValueTypeAddress
func (m *TLsecureValueTypeAddress) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-874308058)
	return x.Buf
}

// CodecDecode:secureValueTypeAddress
func (m *TLsecureValueTypeAddress) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeUtilityBill
//
func NewTLsecureValueTypeUtilityBill() *TLsecureValueTypeUtilityBill {
	return &TLsecureValueTypeUtilityBill{}
}

// CodecEncode:secureValueTypeUtilityBill
func (m *TLsecureValueTypeUtilityBill) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-63531698)
	return x.Buf
}

// CodecDecode:secureValueTypeUtilityBill
func (m *TLsecureValueTypeUtilityBill) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeBankStatement
//
func NewTLsecureValueTypeBankStatement() *TLsecureValueTypeBankStatement {
	return &TLsecureValueTypeBankStatement{}
}

// CodecEncode:secureValueTypeBankStatement
func (m *TLsecureValueTypeBankStatement) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1995211763)
	return x.Buf
}

// CodecDecode:secureValueTypeBankStatement
func (m *TLsecureValueTypeBankStatement) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeRentalAgreement
//
func NewTLsecureValueTypeRentalAgreement() *TLsecureValueTypeRentalAgreement {
	return &TLsecureValueTypeRentalAgreement{}
}

// CodecEncode:secureValueTypeRentalAgreement
func (m *TLsecureValueTypeRentalAgreement) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1954007928)
	return x.Buf
}

// CodecDecode:secureValueTypeRentalAgreement
func (m *TLsecureValueTypeRentalAgreement) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypePassportRegistration
//
func NewTLsecureValueTypePassportRegistration() *TLsecureValueTypePassportRegistration {
	return &TLsecureValueTypePassportRegistration{}
}

// CodecEncode:secureValueTypePassportRegistration
func (m *TLsecureValueTypePassportRegistration) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1713143702)
	return x.Buf
}

// CodecDecode:secureValueTypePassportRegistration
func (m *TLsecureValueTypePassportRegistration) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeTemporaryRegistration
//
func NewTLsecureValueTypeTemporaryRegistration() *TLsecureValueTypeTemporaryRegistration {
	return &TLsecureValueTypeTemporaryRegistration{}
}

// CodecEncode:secureValueTypeTemporaryRegistration
func (m *TLsecureValueTypeTemporaryRegistration) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-368907213)
	return x.Buf
}

// CodecDecode:secureValueTypeTemporaryRegistration
func (m *TLsecureValueTypeTemporaryRegistration) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypePhone
//
func NewTLsecureValueTypePhone() *TLsecureValueTypePhone {
	return &TLsecureValueTypePhone{}
}

// CodecEncode:secureValueTypePhone
func (m *TLsecureValueTypePhone) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1289704741)
	return x.Buf
}

// CodecDecode:secureValueTypePhone
func (m *TLsecureValueTypePhone) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureValueTypeEmail
//
func NewTLsecureValueTypeEmail() *TLsecureValueTypeEmail {
	return &TLsecureValueTypeEmail{}
}

// CodecEncode:secureValueTypeEmail
func (m *TLsecureValueTypeEmail) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1908627474)
	return x.Buf
}

// CodecDecode:secureValueTypeEmail
func (m *TLsecureValueTypeEmail) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_inactiveChats
//
func NewTLmessages_inactiveChats() *TLmessages_inactiveChats {
	return &TLmessages_inactiveChats{}
}

// CodecEncode:messages_inactiveChats
func (m *TLmessages_inactiveChats) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1456996667)
	x.Int(481674261)
	x.Int(int32(len(m.Getdates())))
	for _, v := range m.Getdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_inactiveChats
func (m *TLmessages_inactiveChats) Decode(dbuf *code.DecodeBuf) error {
	m.Setdates(dbuf.VectorInt())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:help_countryCode
//
func NewTLhelp_countryCode() *TLhelp_countryCode {
	return &TLhelp_countryCode{}
}

// CodecEncode:help_countryCode
func (m *TLhelp_countryCode) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1107543535)
	var flags uint32 = 0
	if m.Getprefixes() != 0 {
		flags |= 0 << 1
	}
	if m.Getpatterns() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getcountry_code())
	if len(m.Getprefixes()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getprefixes())))
		for _, v := range m.Getprefixes() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getpatterns()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getpatterns())))
		for _, v := range m.Getpatterns() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:help_countryCode
func (m *TLhelp_countryCode) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcountry_code(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setprefixes(dbuf.VectorString())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpatterns(dbuf.VectorString())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:account_authorizations
//
func NewTLaccount_authorizations() *TLaccount_authorizations {
	return &TLaccount_authorizations{}
}

// CodecEncode:account_authorizations
func (m *TLaccount_authorizations) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(307276766)
	x.Int(481674261)
	x.Int(int32(len(m.Getauthorizations())))
	for _, v := range m.Getauthorizations() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_authorizations
func (m *TLaccount_authorizations) Decode(dbuf *code.DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Authorization, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Authorization{}
		v0[i].Decode(dbuf)
	}
	m.Setauthorizations(v0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatOnlines
//
func NewTLchatOnlines() *TLchatOnlines {
	return &TLchatOnlines{}
}

// CodecEncode:chatOnlines
func (m *TLchatOnlines) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-264117680)
	x.Int(m.Getonlines())
	return x.Buf
}

// CodecDecode:chatOnlines
func (m *TLchatOnlines) Decode(dbuf *code.DecodeBuf) error {
	m.Setonlines(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhotoEmpty
//
func NewTLinputPhotoEmpty() *TLinputPhotoEmpty {
	return &TLinputPhotoEmpty{}
}

// CodecEncode:inputPhotoEmpty
func (m *TLinputPhotoEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(483901197)
	return x.Buf
}

// CodecDecode:inputPhotoEmpty
func (m *TLinputPhotoEmpty) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:inputPhoto
//
func NewTLinputPhoto() *TLinputPhoto {
	return &TLinputPhoto{}
}

// CodecEncode:inputPhoto
func (m *TLinputPhoto) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1001634122)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputPhoto
func (m *TLinputPhoto) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelAdminLogEventsFilter
//
func NewTLchannelAdminLogEventsFilter() *TLchannelAdminLogEventsFilter {
	return &TLchannelAdminLogEventsFilter{}
}

// CodecEncode:channelAdminLogEventsFilter
func (m *TLchannelAdminLogEventsFilter) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-368018716)
	var flags uint32 = 0
	if m.Getjoin() != false {
		flags |= 0 << 0
	}
	if m.Getleave() != false {
		flags |= 1 << 1
	}
	if m.Getinvite() != false {
		flags |= 2 << 2
	}
	if m.Getban() != false {
		flags |= 3 << 3
	}
	if m.Getunban() != false {
		flags |= 4 << 4
	}
	if m.Getkick() != false {
		flags |= 5 << 5
	}
	if m.Getunkick() != false {
		flags |= 6 << 6
	}
	if m.Getpromote() != false {
		flags |= 7 << 7
	}
	if m.Getdemote() != false {
		flags |= 8 << 8
	}
	if m.Getinfo() != false {
		flags |= 9 << 9
	}
	if m.Getsettings() != false {
		flags |= 10 << 10
	}
	if m.Getpinned() != false {
		flags |= 11 << 11
	}
	if m.Getedit() != false {
		flags |= 12 << 12
	}
	if m.Getdelete() != false {
		flags |= 13 << 13
	}
	if m.Getgroup_call() != false {
		flags |= 14 << 14
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:channelAdminLogEventsFilter
func (m *TLchannelAdminLogEventsFilter) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setjoin(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setleave(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setinvite(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setban(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setunban(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setkick(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setunkick(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setpromote(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setdemote(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setinfo(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setsettings(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setedit(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setdelete(true)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setgroup_call(true)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatEmpty
//
func NewTLchatEmpty() *TLchatEmpty {
	return &TLchatEmpty{}
}

// CodecEncode:chatEmpty
func (m *TLchatEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1683826688)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:chatEmpty
func (m *TLchatEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chat
//
func NewTLchat() *TLchat {
	return &TLchat{}
}

// CodecEncode:chat
func (m *TLchat) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1004149726)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 0 << 0
	}
	if m.Getkicked() != false {
		flags |= 1 << 1
	}
	if m.Getleft() != false {
		flags |= 2 << 2
	}
	if m.Getdeactivated() != false {
		flags |= 5 << 3
	}
	if m.Getcall_active() != false {
		flags |= 23 << 4
	}
	if m.Getcall_not_empty() != false {
		flags |= 24 << 5
	}
	if m.Getmigrated_to().Constructor != 0 {
		flags |= 6 << 12
	}
	if m.Getadmin_rights().Constructor != 0 {
		flags |= 14 << 13
	}
	if m.Getdefault_banned_rights().Constructor != 0 {
		flags |= 18 << 14
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getparticipants_count())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	if m.Getmigrated_to().Constructor != 0 {
		x.Bytes(m.Getmigrated_to().Encode())
	}
	if m.Getadmin_rights().Constructor != 0 {
		x.Bytes(m.Getadmin_rights().Encode())
	}
	if m.Getdefault_banned_rights().Constructor != 0 {
		x.Bytes(m.Getdefault_banned_rights().Encode())
	}
	return x.Buf
}

// CodecDecode:chat
func (m *TLchat) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setkicked(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setleft(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdeactivated(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setcall_active(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setcall_not_empty(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	m8 := &ChatPhoto{}
	m8.Decode(dbuf)
	m.Setphoto(m8)
	m.Setparticipants_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	if (flags & (1 << 12)) != 0 {
		m12 := &InputChannel{}
		m12.Decode(dbuf)
		m.Setmigrated_to(m12)
	}
	if (flags & (1 << 13)) != 0 {
		m13 := &ChatAdminRights{}
		m13.Decode(dbuf)
		m.Setadmin_rights(m13)
	}
	if (flags & (1 << 14)) != 0 {
		m14 := &ChatBannedRights{}
		m14.Decode(dbuf)
		m.Setdefault_banned_rights(m14)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:chatForbidden
//
func NewTLchatForbidden() *TLchatForbidden {
	return &TLchatForbidden{}
}

// CodecEncode:chatForbidden
func (m *TLchatForbidden) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(120753115)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:chatForbidden
func (m *TLchatForbidden) Decode(dbuf *code.DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channel
//
func NewTLchannel() *TLchannel {
	return &TLchannel{}
}

// CodecEncode:channel
func (m *TLchannel) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-753232354)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 0 << 0
	}
	if m.Getleft() != false {
		flags |= 2 << 1
	}
	if m.Getbroadcast() != false {
		flags |= 5 << 2
	}
	if m.Getverified() != false {
		flags |= 7 << 3
	}
	if m.Getmegagroup() != false {
		flags |= 8 << 4
	}
	if m.Getrestricted() != false {
		flags |= 9 << 5
	}
	if m.Getsignatures() != false {
		flags |= 11 << 6
	}
	if m.Getmin() != false {
		flags |= 12 << 7
	}
	if m.Getscam() != false {
		flags |= 19 << 8
	}
	if m.Gethas_link() != false {
		flags |= 20 << 9
	}
	if m.Gethas_geo() != false {
		flags |= 21 << 10
	}
	if m.Getslowmode_enabled() != false {
		flags |= 22 << 11
	}
	if m.Getcall_active() != false {
		flags |= 23 << 12
	}
	if m.Getcall_not_empty() != false {
		flags |= 24 << 13
	}
	if m.Getaccess_hash().Constructor != 0 {
		flags |= 13 << 15
	}
	if m.Getusername() != "" {
		flags |= 6 << 17
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 9 << 21
	}
	if m.Getadmin_rights().Constructor != 0 {
		flags |= 14 << 22
	}
	if m.Getbanned_rights().Constructor != 0 {
		flags |= 15 << 23
	}
	if m.Getdefault_banned_rights().Constructor != 0 {
		flags |= 18 << 24
	}
	if m.Getparticipants_count() != 0 {
		flags |= 17 << 25
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getaccess_hash() != 0 {
		x.Long(m.Getaccess_hash())
	}
	x.String(m.Gettitle())
	if m.Getusername() != "" {
		x.String(m.Getusername())
	}
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getadmin_rights().Constructor != 0 {
		x.Bytes(m.Getadmin_rights().Encode())
	}
	if m.Getbanned_rights().Constructor != 0 {
		x.Bytes(m.Getbanned_rights().Encode())
	}
	if m.Getdefault_banned_rights().Constructor != 0 {
		x.Bytes(m.Getdefault_banned_rights().Encode())
	}
	if m.Getparticipants_count() != 0 {
		x.Int(m.Getparticipants_count())
	}
	return x.Buf
}

// CodecDecode:channel
func (m *TLchannel) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setleft(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setverified(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmegagroup(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setrestricted(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setsignatures(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setscam(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Sethas_link(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Sethas_geo(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setslowmode_enabled(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setcall_active(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setcall_not_empty(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 15)) != 0 {
		m.Setaccess_hash(dbuf.Long())
	}
	m.Settitle(dbuf.String())
	if (flags & (1 << 17)) != 0 {
		m.Setusername(dbuf.String())
	}
	m18 := &ChatPhoto{}
	m18.Decode(dbuf)
	m.Setphoto(m18)
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	if (flags & (1 << 21)) != 0 {
		c21 := dbuf.Int()
		if c21 != 481674261 {
			return dbuf.Err
		}
		l21 := dbuf.Int()
		v21 := make([]RestrictionReason, l21)
		for i := int32(0); i < l21; i++ {
			v21[i] = RestrictionReason{}
			v21[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v21)
	}
	if (flags & (1 << 22)) != 0 {
		m22 := &ChatAdminRights{}
		m22.Decode(dbuf)
		m.Setadmin_rights(m22)
	}
	if (flags & (1 << 23)) != 0 {
		m23 := &ChatBannedRights{}
		m23.Decode(dbuf)
		m.Setbanned_rights(m23)
	}
	if (flags & (1 << 24)) != 0 {
		m24 := &ChatBannedRights{}
		m24.Decode(dbuf)
		m.Setdefault_banned_rights(m24)
	}
	if (flags & (1 << 25)) != 0 {
		m.Setparticipants_count(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:channelForbidden
//
func NewTLchannelForbidden() *TLchannelForbidden {
	return &TLchannelForbidden{}
}

// CodecEncode:channelForbidden
func (m *TLchannelForbidden) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(681420594)
	var flags uint32 = 0
	if m.Getbroadcast() != false {
		flags |= 5 << 0
	}
	if m.Getmegagroup() != false {
		flags |= 8 << 1
	}
	if m.Getuntil_date() != 0 {
		flags |= 16 << 5
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Gettitle())
	if m.Getuntil_date() != 0 {
		x.Int(m.Getuntil_date())
	}
	return x.Buf
}

// CodecDecode:channelForbidden
func (m *TLchannelForbidden) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmegagroup(true)
	}
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Settitle(dbuf.String())
	if (flags & (1 << 5)) != 0 {
		m.Setuntil_date(dbuf.Int())
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:urlAuthResultRequest
//
func NewTLurlAuthResultRequest() *TLurlAuthResultRequest {
	return &TLurlAuthResultRequest{}
}

// CodecEncode:urlAuthResultRequest
func (m *TLurlAuthResultRequest) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1831650802)
	var flags uint32 = 0
	if m.Getrequest_write_access() != false {
		flags |= 0 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getbot().Encode())
	x.String(m.Getdomain())
	return x.Buf
}

// CodecDecode:urlAuthResultRequest
func (m *TLurlAuthResultRequest) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequest_write_access(true)
	}
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setbot(m1)
	m.Setdomain(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:urlAuthResultAccepted
//
func NewTLurlAuthResultAccepted() *TLurlAuthResultAccepted {
	return &TLurlAuthResultAccepted{}
}

// CodecEncode:urlAuthResultAccepted
func (m *TLurlAuthResultAccepted) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1886646706)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:urlAuthResultAccepted
func (m *TLurlAuthResultAccepted) Decode(dbuf *code.DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:urlAuthResultDefault
//
func NewTLurlAuthResultDefault() *TLurlAuthResultDefault {
	return &TLurlAuthResultDefault{}
}

// CodecEncode:urlAuthResultDefault
func (m *TLurlAuthResultDefault) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1445536993)
	return x.Buf
}

// CodecDecode:urlAuthResultDefault
func (m *TLurlAuthResultDefault) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:secureData
//
func NewTLsecureData() *TLsecureData {
	return &TLsecureData{}
}

// CodecEncode:secureData
func (m *TLsecureData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1964327229)
	x.Bytes(m.Getdata())
	x.Bytes(m.Getdata_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureData
func (m *TLsecureData) Decode(dbuf *code.DecodeBuf) error {
	m.Setdata(dbuf.StringBytes())
	m.Setdata_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_foundStickerSetsNotModified
//
func NewTLmessages_foundStickerSetsNotModified() *TLmessages_foundStickerSetsNotModified {
	return &TLmessages_foundStickerSetsNotModified{}
}

// CodecEncode:messages_foundStickerSetsNotModified
func (m *TLmessages_foundStickerSetsNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(223655517)
	return x.Buf
}

// CodecDecode:messages_foundStickerSetsNotModified
func (m *TLmessages_foundStickerSetsNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_foundStickerSets
//
func NewTLmessages_foundStickerSets() *TLmessages_foundStickerSets {
	return &TLmessages_foundStickerSets{}
}

// CodecEncode:messages_foundStickerSets
func (m *TLmessages_foundStickerSets) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1359533640)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_foundStickerSets
func (m *TLmessages_foundStickerSets) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerSetCovered, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerSetCovered{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:payments_bankCardData
//
func NewTLpayments_bankCardData() *TLpayments_bankCardData {
	return &TLpayments_bankCardData{}
}

// CodecEncode:payments_bankCardData
func (m *TLpayments_bankCardData) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1042605427)
	x.String(m.Gettitle())
	x.Int(481674261)
	x.Int(int32(len(m.Getopen_urls())))
	for _, v := range m.Getopen_urls() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_bankCardData
func (m *TLpayments_bankCardData) Decode(dbuf *code.DecodeBuf) error {
	m.Settitle(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]BankCardOpenUrl, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = BankCardOpenUrl{}
		v1[i].Decode(dbuf)
	}
	m.Setopen_urls(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageInteractionCounters
//
func NewTLmessageInteractionCounters() *TLmessageInteractionCounters {
	return &TLmessageInteractionCounters{}
}

// CodecEncode:messageInteractionCounters
func (m *TLmessageInteractionCounters) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-1387279939)
	x.Int(m.Getmsg_id())
	x.Int(m.Getviews())
	x.Int(m.Getforwards())
	return x.Buf
}

// CodecDecode:messageInteractionCounters
func (m *TLmessageInteractionCounters) Decode(dbuf *code.DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	m.Setviews(dbuf.Int())
	m.Setforwards(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoSizeEmpty
//
func NewTLphotoSizeEmpty() *TLphotoSizeEmpty {
	return &TLphotoSizeEmpty{}
}

// CodecEncode:photoSizeEmpty
func (m *TLphotoSizeEmpty) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(236446268)
	x.String(m.Gettype())
	return x.Buf
}

// CodecDecode:photoSizeEmpty
func (m *TLphotoSizeEmpty) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoSize
//
func NewTLphotoSize() *TLphotoSize {
	return &TLphotoSize{}
}

// CodecEncode:photoSize
func (m *TLphotoSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(2009052699)
	x.String(m.Gettype())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getsize())
	return x.Buf
}

// CodecDecode:photoSize
func (m *TLphotoSize) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsize(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoCachedSize
//
func NewTLphotoCachedSize() *TLphotoCachedSize {
	return &TLphotoCachedSize{}
}

// CodecEncode:photoCachedSize
func (m *TLphotoCachedSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-374917894)
	x.String(m.Gettype())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoCachedSize
func (m *TLphotoCachedSize) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoStrippedSize
//
func NewTLphotoStrippedSize() *TLphotoStrippedSize {
	return &TLphotoStrippedSize{}
}

// CodecEncode:photoStrippedSize
func (m *TLphotoStrippedSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-525288402)
	x.String(m.Gettype())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoStrippedSize
func (m *TLphotoStrippedSize) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoSizeProgressive
//
func NewTLphotoSizeProgressive() *TLphotoSizeProgressive {
	return &TLphotoSizeProgressive{}
}

// CodecEncode:photoSizeProgressive
func (m *TLphotoSizeProgressive) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1520986705)
	x.String(m.Gettype())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(481674261)
	x.Int(int32(len(m.Getsizes())))
	for _, v := range m.Getsizes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photoSizeProgressive
func (m *TLphotoSizeProgressive) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsizes(dbuf.VectorInt())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:photoPathSize
//
func NewTLphotoPathSize() *TLphotoPathSize {
	return &TLphotoPathSize{}
}

// CodecEncode:photoPathSize
func (m *TLphotoPathSize) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-668906175)
	x.String(m.Gettype())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoPathSize
func (m *TLphotoPathSize) Decode(dbuf *code.DecodeBuf) error {
	m.Settype(dbuf.String())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:exportedMessageLink
//
func NewTLexportedMessageLink() *TLexportedMessageLink {
	return &TLexportedMessageLink{}
}

// CodecEncode:exportedMessageLink
func (m *TLexportedMessageLink) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1571494644)
	x.String(m.Getlink())
	x.String(m.Gethtml())
	return x.Buf
}

// CodecDecode:exportedMessageLink
func (m *TLexportedMessageLink) Decode(dbuf *code.DecodeBuf) error {
	m.Setlink(dbuf.String())
	m.Sethtml(dbuf.String())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_stickersNotModified
//
func NewTLmessages_stickersNotModified() *TLmessages_stickersNotModified {
	return &TLmessages_stickersNotModified{}
}

// CodecEncode:messages_stickersNotModified
func (m *TLmessages_stickersNotModified) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-244016606)
	return x.Buf
}

// CodecDecode:messages_stickersNotModified
func (m *TLmessages_stickersNotModified) Decode(dbuf *code.DecodeBuf) error {
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_stickers
//
func NewTLmessages_stickers() *TLmessages_stickers {
	return &TLmessages_stickers{}
}

// CodecEncode:messages_stickers
func (m *TLmessages_stickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-463889475)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickers
func (m *TLmessages_stickers) Decode(dbuf *code.DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = Document{}
		v1[i].Decode(dbuf)
	}
	m.Setstickers(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:pageCaption
//
func NewTLpageCaption() *TLpageCaption {
	return &TLpageCaption{}
}

// CodecEncode:pageCaption
func (m *TLpageCaption) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1869903447)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcredit().Encode())
	return x.Buf
}

// CodecDecode:pageCaption
func (m *TLpageCaption) Decode(dbuf *code.DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcredit(m1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_archivedStickers
//
func NewTLmessages_archivedStickers() *TLmessages_archivedStickers {
	return &TLmessages_archivedStickers{}
}

// CodecEncode:messages_archivedStickers
func (m *TLmessages_archivedStickers) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1338747336)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_archivedStickers
func (m *TLmessages_archivedStickers) Decode(dbuf *code.DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]StickerSetCovered, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = StickerSetCovered{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_loginToken
//
func NewTLauth_loginToken() *TLauth_loginToken {
	return &TLauth_loginToken{}
}

// CodecEncode:auth_loginToken
func (m *TLauth_loginToken) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1654593920)
	x.Int(m.Getexpires())
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_loginToken
func (m *TLauth_loginToken) Decode(dbuf *code.DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_loginTokenMigrateTo
//
func NewTLauth_loginTokenMigrateTo() *TLauth_loginTokenMigrateTo {
	return &TLauth_loginTokenMigrateTo{}
}

// CodecEncode:auth_loginTokenMigrateTo
func (m *TLauth_loginTokenMigrateTo) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(110008598)
	x.Int(m.Getdc_id())
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_loginTokenMigrateTo
func (m *TLauth_loginTokenMigrateTo) Decode(dbuf *code.DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:auth_loginTokenSuccess
//
func NewTLauth_loginTokenSuccess() *TLauth_loginTokenSuccess {
	return &TLauth_loginTokenSuccess{}
}

// CodecEncode:auth_loginTokenSuccess
func (m *TLauth_loginTokenSuccess) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(957176926)
	x.Bytes(m.Getauthorization().Encode())
	return x.Buf
}

// CodecDecode:auth_loginTokenSuccess
func (m *TLauth_loginTokenSuccess) Decode(dbuf *code.DecodeBuf) error {
	m0 := &Auth_Authorization{}
	m0.Decode(dbuf)
	m.Setauthorization(m0)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messageViews
//
func NewTLmessageViews() *TLmessageViews {
	return &TLmessageViews{}
}

// CodecEncode:messageViews
func (m *TLmessageViews) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(1163625789)
	var flags uint32 = 0
	if m.Getviews() != 0 {
		flags |= 0 << 0
	}
	if m.Getforwards() != 0 {
		flags |= 1 << 1
	}
	if m.Getreplies().Constructor != 0 {
		flags |= 2 << 2
	}
	x.UInt(flags)
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	if m.Getforwards() != 0 {
		x.Int(m.Getforwards())
	}
	if m.Getreplies().Constructor != 0 {
		x.Bytes(m.Getreplies().Encode())
	}
	return x.Buf
}

// CodecDecode:messageViews
func (m *TLmessageViews) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setviews(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforwards(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &MessageReplies{}
		m2.Decode(dbuf)
		m.Setreplies(m2)
	}
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:New:messages_discussionMessage
//
func NewTLmessages_discussionMessage() *TLmessages_discussionMessage {
	return &TLmessages_discussionMessage{}
}

// CodecEncode:messages_discussionMessage
func (m *TLmessages_discussionMessage) Encode() []byte {
	x := code.NewEncodeBuf(512)
	x.Int(-170029155)
	var flags uint32 = 0
	if m.Getmax_id() != 0 {
		flags |= 0 << 1
	}
	if m.Getread_inbox_max_id() != 0 {
		flags |= 1 << 2
	}
	if m.Getread_outbox_max_id() != 0 {
		flags |= 2 << 3
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmax_id() != 0 {
		x.Int(m.Getmax_id())
	}
	if m.Getread_inbox_max_id() != 0 {
		x.Int(m.Getread_inbox_max_id())
	}
	if m.Getread_outbox_max_id() != 0 {
		x.Int(m.Getread_outbox_max_id())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_discussionMessage
func (m *TLmessages_discussionMessage) Decode(dbuf *code.DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = Message{}
		v0[i].Decode(dbuf)
	}
	m.Setmessages(v0)
	if (flags & (1 << 1)) != 0 {
		m.Setmax_id(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setread_inbox_max_id(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setread_outbox_max_id(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]Chat, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = Chat{}
		v4[i].Decode(dbuf)
	}
	m.Setchats(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]User, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = User{}
		v5[i].Decode(dbuf)
	}
	m.Setusers(v5)
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackLanguage
//
func (m LangPackLanguage) Encode() []byte {
	switch m.Constructor {
	case -288727837:
		t := m.To_langPackLanguage()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackLanguage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -288727837:
		m2 := &TLlangPackLanguage{Data: LangPackLanguage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m LangPackLanguage) To_langPackLanguage() *TLlangPackLanguage {
	return &TLlangPackLanguage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PopularContact
//
func (m PopularContact) Encode() []byte {
	switch m.Constructor {
	case 1558266229:
		t := m.To_popularContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m PopularContact) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1558266229:
		m2 := &TLpopularContact{Data: PopularContact_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PopularContact) To_popularContact() *TLpopularContact {
	return &TLpopularContact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWebFileLocation
//
func (m InputWebFileLocation) Encode() []byte {
	switch m.Constructor {
	case -1036396922:
		t := m.To_inputWebFileLocation()
		return t.Encode()
	case -1625153079:
		t := m.To_inputWebFileGeoPointLocation()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWebFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1036396922:
		m2 := &TLinputWebFileLocation{Data: InputWebFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1625153079:
		m2 := &TLinputWebFileGeoPointLocation{Data: InputWebFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputWebFileLocation) To_inputWebFileLocation() *TLinputWebFileLocation {
	return &TLinputWebFileLocation{
		Data: m.Data,
	}
}
func (m InputWebFileLocation) To_inputWebFileGeoPointLocation() *TLinputWebFileGeoPointLocation {
	return &TLinputWebFileGeoPointLocation{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureFile
//
func (m SecureFile) Encode() []byte {
	switch m.Constructor {
	case 1679398724:
		t := m.To_secureFileEmpty()
		return t.Encode()
	case -534283678:
		t := m.To_secureFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1679398724:
		m2 := &TLsecureFileEmpty{Data: SecureFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -534283678:
		m2 := &TLsecureFile{Data: SecureFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureFile) To_secureFileEmpty() *TLsecureFileEmpty {
	return &TLsecureFileEmpty{
		Data: m.Data,
	}
}
func (m SecureFile) To_secureFile() *TLsecureFile {
	return &TLsecureFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecurePasswordKdfAlgo
//
func (m SecurePasswordKdfAlgo) Encode() []byte {
	switch m.Constructor {
	case 4883767:
		t := m.To_securePasswordKdfAlgoUnknown()
		return t.Encode()
	case -1141711456:
		t := m.To_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000()
		return t.Encode()
	case -2042159726:
		t := m.To_securePasswordKdfAlgoSHA512()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecurePasswordKdfAlgo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 4883767:
		m2 := &TLsecurePasswordKdfAlgoUnknown{Data: SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1141711456:
		m2 := &TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{Data: SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2042159726:
		m2 := &TLsecurePasswordKdfAlgoSHA512{Data: SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoUnknown() *TLsecurePasswordKdfAlgoUnknown {
	return &TLsecurePasswordKdfAlgoUnknown{
		Data: m.Data,
	}
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000() *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 {
	return &TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{
		Data: m.Data,
	}
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoSHA512() *TLsecurePasswordKdfAlgoSHA512 {
	return &TLsecurePasswordKdfAlgoSHA512{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserStatus
//
func (m UserStatus) Encode() []byte {
	switch m.Constructor {
	case 164646985:
		t := m.To_userStatusEmpty()
		return t.Encode()
	case -306628279:
		t := m.To_userStatusOnline()
		return t.Encode()
	case 9203775:
		t := m.To_userStatusOffline()
		return t.Encode()
	case -496024847:
		t := m.To_userStatusRecently()
		return t.Encode()
	case 129960444:
		t := m.To_userStatusLastWeek()
		return t.Encode()
	case 2011940674:
		t := m.To_userStatusLastMonth()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserStatus) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 164646985:
		m2 := &TLuserStatusEmpty{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -306628279:
		m2 := &TLuserStatusOnline{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 9203775:
		m2 := &TLuserStatusOffline{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -496024847:
		m2 := &TLuserStatusRecently{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 129960444:
		m2 := &TLuserStatusLastWeek{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2011940674:
		m2 := &TLuserStatusLastMonth{Data: UserStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m UserStatus) To_userStatusEmpty() *TLuserStatusEmpty {
	return &TLuserStatusEmpty{
		Data: m.Data,
	}
}
func (m UserStatus) To_userStatusOnline() *TLuserStatusOnline {
	return &TLuserStatusOnline{
		Data: m.Data,
	}
}
func (m UserStatus) To_userStatusOffline() *TLuserStatusOffline {
	return &TLuserStatusOffline{
		Data: m.Data,
	}
}
func (m UserStatus) To_userStatusRecently() *TLuserStatusRecently {
	return &TLuserStatusRecently{
		Data: m.Data,
	}
}
func (m UserStatus) To_userStatusLastWeek() *TLuserStatusLastWeek {
	return &TLuserStatusLastWeek{
		Data: m.Data,
	}
}
func (m UserStatus) To_userStatusLastMonth() *TLuserStatusLastMonth {
	return &TLuserStatusLastMonth{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWallPaper
//
func (m InputWallPaper) Encode() []byte {
	switch m.Constructor {
	case -433014407:
		t := m.To_inputWallPaper()
		return t.Encode()
	case 1913199744:
		t := m.To_inputWallPaperSlug()
		return t.Encode()
	case -2077770836:
		t := m.To_inputWallPaperNoFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWallPaper) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -433014407:
		m2 := &TLinputWallPaper{Data: InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1913199744:
		m2 := &TLinputWallPaperSlug{Data: InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2077770836:
		m2 := &TLinputWallPaperNoFile{Data: InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputWallPaper) To_inputWallPaper() *TLinputWallPaper {
	return &TLinputWallPaper{
		Data: m.Data,
	}
}
func (m InputWallPaper) To_inputWallPaperSlug() *TLinputWallPaperSlug {
	return &TLinputWallPaperSlug{
		Data: m.Data,
	}
}
func (m InputWallPaper) To_inputWallPaperNoFile() *TLinputWallPaperNoFile {
	return &TLinputWallPaperNoFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInlineMessage
//
func (m BotInlineMessage) Encode() []byte {
	switch m.Constructor {
	case 1984755728:
		t := m.To_botInlineMessageMediaAuto()
		return t.Encode()
	case -1937807902:
		t := m.To_botInlineMessageText()
		return t.Encode()
	case 85477117:
		t := m.To_botInlineMessageMediaGeo()
		return t.Encode()
	case -1970903652:
		t := m.To_botInlineMessageMediaVenue()
		return t.Encode()
	case 416402882:
		t := m.To_botInlineMessageMediaContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInlineMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1984755728:
		m2 := &TLbotInlineMessageMediaAuto{Data: BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1937807902:
		m2 := &TLbotInlineMessageText{Data: BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 85477117:
		m2 := &TLbotInlineMessageMediaGeo{Data: BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1970903652:
		m2 := &TLbotInlineMessageMediaVenue{Data: BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 416402882:
		m2 := &TLbotInlineMessageMediaContact{Data: BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BotInlineMessage) To_botInlineMessageMediaAuto() *TLbotInlineMessageMediaAuto {
	return &TLbotInlineMessageMediaAuto{
		Data: m.Data,
	}
}
func (m BotInlineMessage) To_botInlineMessageText() *TLbotInlineMessageText {
	return &TLbotInlineMessageText{
		Data: m.Data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaGeo() *TLbotInlineMessageMediaGeo {
	return &TLbotInlineMessageMediaGeo{
		Data: m.Data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaVenue() *TLbotInlineMessageMediaVenue {
	return &TLbotInlineMessageMediaVenue{
		Data: m.Data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaContact() *TLbotInlineMessageMediaContact {
	return &TLbotInlineMessageMediaContact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_AppUpdate
//
func (m Help_AppUpdate) Encode() []byte {
	switch m.Constructor {
	case 497489295:
		t := m.To_help_appUpdate()
		return t.Encode()
	case -1000708810:
		t := m.To_help_noAppUpdate()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_AppUpdate) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 497489295:
		m2 := &TLhelp_appUpdate{Data: Help_AppUpdate_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1000708810:
		m2 := &TLhelp_noAppUpdate{Data: Help_AppUpdate_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_AppUpdate) To_help_appUpdate() *TLhelp_appUpdate {
	return &TLhelp_appUpdate{
		Data: m.Data,
	}
}
func (m Help_AppUpdate) To_help_noAppUpdate() *TLhelp_noAppUpdate {
	return &TLhelp_noAppUpdate{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SavedGifs
//
func (m Messages_SavedGifs) Encode() []byte {
	switch m.Constructor {
	case -402498398:
		t := m.To_messages_savedGifsNotModified()
		return t.Encode()
	case 772213157:
		t := m.To_messages_savedGifs()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_SavedGifs) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -402498398:
		m2 := &TLmessages_savedGifsNotModified{Data: Messages_SavedGifs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 772213157:
		m2 := &TLmessages_savedGifs{Data: Messages_SavedGifs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_SavedGifs) To_messages_savedGifsNotModified() *TLmessages_savedGifsNotModified {
	return &TLmessages_savedGifsNotModified{
		Data: m.Data,
	}
}
func (m Messages_SavedGifs) To_messages_savedGifs() *TLmessages_savedGifs {
	return &TLmessages_savedGifs{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerPack
//
func (m StickerPack) Encode() []byte {
	switch m.Constructor {
	case 313694676:
		t := m.To_stickerPack()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerPack) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 313694676:
		m2 := &TLstickerPack{Data: StickerPack_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StickerPack) To_stickerPack() *TLstickerPack {
	return &TLstickerPack{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BaseTheme
//
func (m BaseTheme) Encode() []byte {
	switch m.Constructor {
	case -1012849566:
		t := m.To_baseThemeClassic()
		return t.Encode()
	case -69724536:
		t := m.To_baseThemeDay()
		return t.Encode()
	case -1212997976:
		t := m.To_baseThemeNight()
		return t.Encode()
	case 1834973166:
		t := m.To_baseThemeTinted()
		return t.Encode()
	case 1527845466:
		t := m.To_baseThemeArctic()
		return t.Encode()
	default:
		return nil
	}
}
func (m BaseTheme) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1012849566:
		m2 := &TLbaseThemeClassic{Data: BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -69724536:
		m2 := &TLbaseThemeDay{Data: BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1212997976:
		m2 := &TLbaseThemeNight{Data: BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1834973166:
		m2 := &TLbaseThemeTinted{Data: BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1527845466:
		m2 := &TLbaseThemeArctic{Data: BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BaseTheme) To_baseThemeClassic() *TLbaseThemeClassic {
	return &TLbaseThemeClassic{
		Data: m.Data,
	}
}
func (m BaseTheme) To_baseThemeDay() *TLbaseThemeDay {
	return &TLbaseThemeDay{
		Data: m.Data,
	}
}
func (m BaseTheme) To_baseThemeNight() *TLbaseThemeNight {
	return &TLbaseThemeNight{
		Data: m.Data,
	}
}
func (m BaseTheme) To_baseThemeTinted() *TLbaseThemeTinted {
	return &TLbaseThemeTinted{
		Data: m.Data,
	}
}
func (m BaseTheme) To_baseThemeArctic() *TLbaseThemeArctic {
	return &TLbaseThemeArctic{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_ValidatedRequestedInfo
//
func (m Payments_ValidatedRequestedInfo) Encode() []byte {
	switch m.Constructor {
	case -784000893:
		t := m.To_payments_validatedRequestedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_ValidatedRequestedInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -784000893:
		m2 := &TLpayments_validatedRequestedInfo{Data: Payments_ValidatedRequestedInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_ValidatedRequestedInfo) To_payments_validatedRequestedInfo() *TLpayments_validatedRequestedInfo {
	return &TLpayments_validatedRequestedInfo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollAnswer
//
func (m PollAnswer) Encode() []byte {
	switch m.Constructor {
	case 1823064809:
		t := m.To_pollAnswer()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollAnswer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1823064809:
		m2 := &TLpollAnswer{Data: PollAnswer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PollAnswer) To_pollAnswer() *TLpollAnswer {
	return &TLpollAnswer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueHash
//
func (m SecureValueHash) Encode() []byte {
	switch m.Constructor {
	case -316748368:
		t := m.To_secureValueHash()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueHash) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -316748368:
		m2 := &TLsecureValueHash{Data: SecureValueHash_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureValueHash) To_secureValueHash() *TLsecureValueHash {
	return &TLsecureValueHash{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:storage_FileType
//
func (m Storage_FileType) Encode() []byte {
	switch m.Constructor {
	case -1432995067:
		t := m.To_storage_fileUnknown()
		return t.Encode()
	case 1086091090:
		t := m.To_storage_filePartial()
		return t.Encode()
	case 8322574:
		t := m.To_storage_fileJpeg()
		return t.Encode()
	case -891180321:
		t := m.To_storage_fileGif()
		return t.Encode()
	case 172975040:
		t := m.To_storage_filePng()
		return t.Encode()
	case -1373745011:
		t := m.To_storage_filePdf()
		return t.Encode()
	case 1384777335:
		t := m.To_storage_fileMp3()
		return t.Encode()
	case 1258941372:
		t := m.To_storage_fileMov()
		return t.Encode()
	case -1278304028:
		t := m.To_storage_fileMp4()
		return t.Encode()
	case 276907596:
		t := m.To_storage_fileWebp()
		return t.Encode()
	default:
		return nil
	}
}
func (m Storage_FileType) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1432995067:
		m2 := &TLstorage_fileUnknown{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1086091090:
		m2 := &TLstorage_filePartial{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 8322574:
		m2 := &TLstorage_fileJpeg{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -891180321:
		m2 := &TLstorage_fileGif{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 172975040:
		m2 := &TLstorage_filePng{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1373745011:
		m2 := &TLstorage_filePdf{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1384777335:
		m2 := &TLstorage_fileMp3{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1258941372:
		m2 := &TLstorage_fileMov{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1278304028:
		m2 := &TLstorage_fileMp4{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 276907596:
		m2 := &TLstorage_fileWebp{Data: Storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Storage_FileType) To_storage_fileUnknown() *TLstorage_fileUnknown {
	return &TLstorage_fileUnknown{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_filePartial() *TLstorage_filePartial {
	return &TLstorage_filePartial{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileJpeg() *TLstorage_fileJpeg {
	return &TLstorage_fileJpeg{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileGif() *TLstorage_fileGif {
	return &TLstorage_fileGif{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_filePng() *TLstorage_filePng {
	return &TLstorage_filePng{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_filePdf() *TLstorage_filePdf {
	return &TLstorage_filePdf{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileMp3() *TLstorage_fileMp3 {
	return &TLstorage_fileMp3{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileMov() *TLstorage_fileMov {
	return &TLstorage_fileMov{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileMp4() *TLstorage_fileMp4 {
	return &TLstorage_fileMp4{
		Data: m.Data,
	}
}
func (m Storage_FileType) To_storage_fileWebp() *TLstorage_fileWebp {
	return &TLstorage_fileWebp{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineResult
//
func (m InputBotInlineResult) Encode() []byte {
	switch m.Constructor {
	case -2000710887:
		t := m.To_inputBotInlineResult()
		return t.Encode()
	case -1462213465:
		t := m.To_inputBotInlineResultPhoto()
		return t.Encode()
	case -459324:
		t := m.To_inputBotInlineResultDocument()
		return t.Encode()
	case 1336154098:
		t := m.To_inputBotInlineResultGame()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineResult) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2000710887:
		m2 := &TLinputBotInlineResult{Data: InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1462213465:
		m2 := &TLinputBotInlineResultPhoto{Data: InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -459324:
		m2 := &TLinputBotInlineResultDocument{Data: InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1336154098:
		m2 := &TLinputBotInlineResultGame{Data: InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineResult) To_inputBotInlineResult() *TLinputBotInlineResult {
	return &TLinputBotInlineResult{
		Data: m.Data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultPhoto() *TLinputBotInlineResultPhoto {
	return &TLinputBotInlineResultPhoto{
		Data: m.Data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultDocument() *TLinputBotInlineResultDocument {
	return &TLinputBotInlineResultDocument{
		Data: m.Data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultGame() *TLinputBotInlineResultGame {
	return &TLinputBotInlineResultGame{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentForm
//
func (m Payments_PaymentForm) Encode() []byte {
	switch m.Constructor {
	case 1062645411:
		t := m.To_payments_paymentForm()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_PaymentForm) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1062645411:
		m2 := &TLpayments_paymentForm{Data: Payments_PaymentForm_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_PaymentForm) To_payments_paymentForm() *TLpayments_paymentForm {
	return &TLpayments_paymentForm{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_ResolvedPeer
//
func (m Contacts_ResolvedPeer) Encode() []byte {
	switch m.Constructor {
	case 2131196633:
		t := m.To_contacts_resolvedPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_ResolvedPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2131196633:
		m2 := &TLcontacts_resolvedPeer{Data: Contacts_ResolvedPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_ResolvedPeer) To_contacts_resolvedPeer() *TLcontacts_resolvedPeer {
	return &TLcontacts_resolvedPeer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_CodeType
//
func (m Auth_CodeType) Encode() []byte {
	switch m.Constructor {
	case 1923290508:
		t := m.To_auth_codeTypeSms()
		return t.Encode()
	case 1948046307:
		t := m.To_auth_codeTypeCall()
		return t.Encode()
	case 577556219:
		t := m.To_auth_codeTypeFlashCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_CodeType) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1923290508:
		m2 := &TLauth_codeTypeSms{Data: Auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1948046307:
		m2 := &TLauth_codeTypeCall{Data: Auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 577556219:
		m2 := &TLauth_codeTypeFlashCall{Data: Auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_CodeType) To_auth_codeTypeSms() *TLauth_codeTypeSms {
	return &TLauth_codeTypeSms{
		Data: m.Data,
	}
}
func (m Auth_CodeType) To_auth_codeTypeCall() *TLauth_codeTypeCall {
	return &TLauth_codeTypeCall{
		Data: m.Data,
	}
}
func (m Auth_CodeType) To_auth_codeTypeFlashCall() *TLauth_codeTypeFlashCall {
	return &TLauth_codeTypeFlashCall{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_ChannelParticipants
//
func (m Channels_ChannelParticipants) Encode() []byte {
	switch m.Constructor {
	case -177282392:
		t := m.To_channels_channelParticipants()
		return t.Encode()
	case -266911767:
		t := m.To_channels_channelParticipantsNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m Channels_ChannelParticipants) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -177282392:
		m2 := &TLchannels_channelParticipants{Data: Channels_ChannelParticipants_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -266911767:
		m2 := &TLchannels_channelParticipantsNotModified{Data: Channels_ChannelParticipants_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Channels_ChannelParticipants) To_channels_channelParticipants() *TLchannels_channelParticipants {
	return &TLchannels_channelParticipants{
		Data: m.Data,
	}
}
func (m Channels_ChannelParticipants) To_channels_channelParticipantsNotModified() *TLchannels_channelParticipantsNotModified {
	return &TLchannels_channelParticipantsNotModified{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatParticipant
//
func (m ChatParticipant) Encode() []byte {
	switch m.Constructor {
	case -925415106:
		t := m.To_chatParticipant()
		return t.Encode()
	case -636267638:
		t := m.To_chatParticipantCreator()
		return t.Encode()
	case -489233354:
		t := m.To_chatParticipantAdmin()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatParticipant) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -925415106:
		m2 := &TLchatParticipant{Data: ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -636267638:
		m2 := &TLchatParticipantCreator{Data: ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -489233354:
		m2 := &TLchatParticipantAdmin{Data: ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatParticipant) To_chatParticipant() *TLchatParticipant {
	return &TLchatParticipant{
		Data: m.Data,
	}
}
func (m ChatParticipant) To_chatParticipantCreator() *TLchatParticipantCreator {
	return &TLchatParticipantCreator{
		Data: m.Data,
	}
}
func (m ChatParticipant) To_chatParticipantAdmin() *TLchatParticipantAdmin {
	return &TLchatParticipantAdmin{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FolderPeer
//
func (m FolderPeer) Encode() []byte {
	switch m.Constructor {
	case -373643672:
		t := m.To_folderPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m FolderPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -373643672:
		m2 := &TLfolderPeer{Data: FolderPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m FolderPeer) To_folderPeer() *TLfolderPeer {
	return &TLfolderPeer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageEntity
//
func (m MessageEntity) Encode() []byte {
	switch m.Constructor {
	case -1148011883:
		t := m.To_messageEntityUnknown()
		return t.Encode()
	case -100378723:
		t := m.To_messageEntityMention()
		return t.Encode()
	case 1868782349:
		t := m.To_messageEntityHashtag()
		return t.Encode()
	case 1827637959:
		t := m.To_messageEntityBotCommand()
		return t.Encode()
	case 1859134776:
		t := m.To_messageEntityUrl()
		return t.Encode()
	case 1692693954:
		t := m.To_messageEntityEmail()
		return t.Encode()
	case -1117713463:
		t := m.To_messageEntityBold()
		return t.Encode()
	case -2106619040:
		t := m.To_messageEntityItalic()
		return t.Encode()
	case 681706865:
		t := m.To_messageEntityCode()
		return t.Encode()
	case 1938967520:
		t := m.To_messageEntityPre()
		return t.Encode()
	case 1990644519:
		t := m.To_messageEntityTextUrl()
		return t.Encode()
	case 892193368:
		t := m.To_messageEntityMentionName()
		return t.Encode()
	case 546203849:
		t := m.To_inputMessageEntityMentionName()
		return t.Encode()
	case -1687559349:
		t := m.To_messageEntityPhone()
		return t.Encode()
	case 1280209983:
		t := m.To_messageEntityCashtag()
		return t.Encode()
	case -1672577397:
		t := m.To_messageEntityUnderline()
		return t.Encode()
	case -1090087980:
		t := m.To_messageEntityStrike()
		return t.Encode()
	case 34469328:
		t := m.To_messageEntityBlockquote()
		return t.Encode()
	case 1981704948:
		t := m.To_messageEntityBankCard()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageEntity) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1148011883:
		m2 := &TLmessageEntityUnknown{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -100378723:
		m2 := &TLmessageEntityMention{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1868782349:
		m2 := &TLmessageEntityHashtag{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1827637959:
		m2 := &TLmessageEntityBotCommand{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1859134776:
		m2 := &TLmessageEntityUrl{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1692693954:
		m2 := &TLmessageEntityEmail{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1117713463:
		m2 := &TLmessageEntityBold{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2106619040:
		m2 := &TLmessageEntityItalic{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 681706865:
		m2 := &TLmessageEntityCode{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1938967520:
		m2 := &TLmessageEntityPre{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1990644519:
		m2 := &TLmessageEntityTextUrl{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 892193368:
		m2 := &TLmessageEntityMentionName{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 546203849:
		m2 := &TLinputMessageEntityMentionName{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1687559349:
		m2 := &TLmessageEntityPhone{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1280209983:
		m2 := &TLmessageEntityCashtag{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1672577397:
		m2 := &TLmessageEntityUnderline{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1090087980:
		m2 := &TLmessageEntityStrike{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 34469328:
		m2 := &TLmessageEntityBlockquote{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1981704948:
		m2 := &TLmessageEntityBankCard{Data: MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageEntity) To_messageEntityUnknown() *TLmessageEntityUnknown {
	return &TLmessageEntityUnknown{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityMention() *TLmessageEntityMention {
	return &TLmessageEntityMention{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityHashtag() *TLmessageEntityHashtag {
	return &TLmessageEntityHashtag{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityBotCommand() *TLmessageEntityBotCommand {
	return &TLmessageEntityBotCommand{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityUrl() *TLmessageEntityUrl {
	return &TLmessageEntityUrl{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityEmail() *TLmessageEntityEmail {
	return &TLmessageEntityEmail{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityBold() *TLmessageEntityBold {
	return &TLmessageEntityBold{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityItalic() *TLmessageEntityItalic {
	return &TLmessageEntityItalic{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityCode() *TLmessageEntityCode {
	return &TLmessageEntityCode{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityPre() *TLmessageEntityPre {
	return &TLmessageEntityPre{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityTextUrl() *TLmessageEntityTextUrl {
	return &TLmessageEntityTextUrl{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityMentionName() *TLmessageEntityMentionName {
	return &TLmessageEntityMentionName{
		Data: m.Data,
	}
}
func (m MessageEntity) To_inputMessageEntityMentionName() *TLinputMessageEntityMentionName {
	return &TLinputMessageEntityMentionName{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityPhone() *TLmessageEntityPhone {
	return &TLmessageEntityPhone{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityCashtag() *TLmessageEntityCashtag {
	return &TLmessageEntityCashtag{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityUnderline() *TLmessageEntityUnderline {
	return &TLmessageEntityUnderline{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityStrike() *TLmessageEntityStrike {
	return &TLmessageEntityStrike{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityBlockquote() *TLmessageEntityBlockquote {
	return &TLmessageEntityBlockquote{
		Data: m.Data,
	}
}
func (m MessageEntity) To_messageEntityBankCard() *TLmessageEntityBankCard {
	return &TLmessageEntityBankCard{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:True
//
func (m True) Encode() []byte {
	switch m.Constructor {
	case 1072550713:
		t := m.To_true()
		return t.Encode()
	default:
		return nil
	}
}
func (m True) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1072550713:
		m2 := &TLtrue{Data: True_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m True) To_true() *TLtrue {
	return &TLtrue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEvent
//
func (m ChannelAdminLogEvent) Encode() []byte {
	switch m.Constructor {
	case 995769920:
		t := m.To_channelAdminLogEvent()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEvent) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 995769920:
		m2 := &TLchannelAdminLogEvent{Data: ChannelAdminLogEvent_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEvent) To_channelAdminLogEvent() *TLchannelAdminLogEvent {
	return &TLchannelAdminLogEvent{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFileLocation
//
func (m InputFileLocation) Encode() []byte {
	switch m.Constructor {
	case -539317279:
		t := m.To_inputFileLocation()
		return t.Encode()
	case -182231723:
		t := m.To_inputEncryptedFileLocation()
		return t.Encode()
	case -1160743548:
		t := m.To_inputDocumentFileLocation()
		return t.Encode()
	case -876089816:
		t := m.To_inputSecureFileLocation()
		return t.Encode()
	case 700340377:
		t := m.To_inputTakeoutFileLocation()
		return t.Encode()
	case 1075322878:
		t := m.To_inputPhotoFileLocation()
		return t.Encode()
	case -667654413:
		t := m.To_inputPhotoLegacyFileLocation()
		return t.Encode()
	case 668375447:
		t := m.To_inputPeerPhotoFileLocation()
		return t.Encode()
	case 230353641:
		t := m.To_inputStickerSetThumb()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -539317279:
		m2 := &TLinputFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -182231723:
		m2 := &TLinputEncryptedFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1160743548:
		m2 := &TLinputDocumentFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -876089816:
		m2 := &TLinputSecureFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 700340377:
		m2 := &TLinputTakeoutFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1075322878:
		m2 := &TLinputPhotoFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -667654413:
		m2 := &TLinputPhotoLegacyFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 668375447:
		m2 := &TLinputPeerPhotoFileLocation{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 230353641:
		m2 := &TLinputStickerSetThumb{Data: InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputFileLocation) To_inputFileLocation() *TLinputFileLocation {
	return &TLinputFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputEncryptedFileLocation() *TLinputEncryptedFileLocation {
	return &TLinputEncryptedFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputDocumentFileLocation() *TLinputDocumentFileLocation {
	return &TLinputDocumentFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputSecureFileLocation() *TLinputSecureFileLocation {
	return &TLinputSecureFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputTakeoutFileLocation() *TLinputTakeoutFileLocation {
	return &TLinputTakeoutFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputPhotoFileLocation() *TLinputPhotoFileLocation {
	return &TLinputPhotoFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputPhotoLegacyFileLocation() *TLinputPhotoLegacyFileLocation {
	return &TLinputPhotoLegacyFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputPeerPhotoFileLocation() *TLinputPeerPhotoFileLocation {
	return &TLinputPeerPhotoFileLocation{
		Data: m.Data,
	}
}
func (m InputFileLocation) To_inputStickerSetThumb() *TLinputStickerSetThumb {
	return &TLinputStickerSetThumb{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebPage
//
func (m WebPage) Encode() []byte {
	switch m.Constructor {
	case -350980120:
		t := m.To_webPageEmpty()
		return t.Encode()
	case -981018084:
		t := m.To_webPagePending()
		return t.Encode()
	case -392411726:
		t := m.To_webPage()
		return t.Encode()
	case 1930545681:
		t := m.To_webPageNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebPage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -350980120:
		m2 := &TLwebPageEmpty{Data: WebPage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -981018084:
		m2 := &TLwebPagePending{Data: WebPage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -392411726:
		m2 := &TLwebPage{Data: WebPage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1930545681:
		m2 := &TLwebPageNotModified{Data: WebPage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WebPage) To_webPageEmpty() *TLwebPageEmpty {
	return &TLwebPageEmpty{
		Data: m.Data,
	}
}
func (m WebPage) To_webPagePending() *TLwebPagePending {
	return &TLwebPagePending{
		Data: m.Data,
	}
}
func (m WebPage) To_webPage() *TLwebPage {
	return &TLwebPage{
		Data: m.Data,
	}
}
func (m WebPage) To_webPageNotModified() *TLwebPageNotModified {
	return &TLwebPageNotModified{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputTheme
//
func (m InputTheme) Encode() []byte {
	switch m.Constructor {
	case 1012306921:
		t := m.To_inputTheme()
		return t.Encode()
	case -175567375:
		t := m.To_inputThemeSlug()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputTheme) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1012306921:
		m2 := &TLinputTheme{Data: InputTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -175567375:
		m2 := &TLinputThemeSlug{Data: InputTheme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputTheme) To_inputTheme() *TLinputTheme {
	return &TLinputTheme{
		Data: m.Data,
	}
}
func (m InputTheme) To_inputThemeSlug() *TLinputThemeSlug {
	return &TLinputThemeSlug{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInfo
//
func (m BotInfo) Encode() []byte {
	switch m.Constructor {
	case -1729618630:
		t := m.To_botInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1729618630:
		m2 := &TLbotInfo{Data: BotInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BotInfo) To_botInfo() *TLbotInfo {
	return &TLbotInfo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Contacts
//
func (m Contacts_Contacts) Encode() []byte {
	switch m.Constructor {
	case -1219778094:
		t := m.To_contacts_contactsNotModified()
		return t.Encode()
	case -353862078:
		t := m.To_contacts_contacts()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_Contacts) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1219778094:
		m2 := &TLcontacts_contactsNotModified{Data: Contacts_Contacts_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -353862078:
		m2 := &TLcontacts_contacts{Data: Contacts_Contacts_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_Contacts) To_contacts_contactsNotModified() *TLcontacts_contactsNotModified {
	return &TLcontacts_contactsNotModified{
		Data: m.Data,
	}
}
func (m Contacts_Contacts) To_contacts_contacts() *TLcontacts_contacts {
	return &TLcontacts_contacts{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:JSONObjectValue
//
func (m JSONObjectValue) Encode() []byte {
	switch m.Constructor {
	case -1059185703:
		t := m.To_jsonObjectValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m JSONObjectValue) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1059185703:
		m2 := &TLjsonObjectValue{Data: JSONObjectValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m JSONObjectValue) To_jsonObjectValue() *TLjsonObjectValue {
	return &TLjsonObjectValue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DraftMessage
//
func (m DraftMessage) Encode() []byte {
	switch m.Constructor {
	case 453805082:
		t := m.To_draftMessageEmpty()
		return t.Encode()
	case -40996577:
		t := m.To_draftMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m DraftMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 453805082:
		m2 := &TLdraftMessageEmpty{Data: DraftMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -40996577:
		m2 := &TLdraftMessage{Data: DraftMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DraftMessage) To_draftMessageEmpty() *TLdraftMessageEmpty {
	return &TLdraftMessageEmpty{
		Data: m.Data,
	}
}
func (m DraftMessage) To_draftMessage() *TLdraftMessage {
	return &TLdraftMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogFilter
//
func (m DialogFilter) Encode() []byte {
	switch m.Constructor {
	case 1949890536:
		t := m.To_dialogFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogFilter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1949890536:
		m2 := &TLdialogFilter{Data: DialogFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DialogFilter) To_dialogFilter() *TLdialogFilter {
	return &TLdialogFilter{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Authorization
//
func (m Authorization) Encode() []byte {
	switch m.Constructor {
	case -1392388579:
		t := m.To_authorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m Authorization) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1392388579:
		m2 := &TLauthorization{Data: Authorization_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Authorization) To_authorization() *TLauthorization {
	return &TLauthorization{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_CdnFile
//
func (m Upload_CdnFile) Encode() []byte {
	switch m.Constructor {
	case -290921362:
		t := m.To_upload_cdnFileReuploadNeeded()
		return t.Encode()
	case -1449145777:
		t := m.To_upload_cdnFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m Upload_CdnFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -290921362:
		m2 := &TLupload_cdnFileReuploadNeeded{Data: Upload_CdnFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1449145777:
		m2 := &TLupload_cdnFile{Data: Upload_CdnFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Upload_CdnFile) To_upload_cdnFileReuploadNeeded() *TLupload_cdnFileReuploadNeeded {
	return &TLupload_cdnFileReuploadNeeded{
		Data: m.Data,
	}
}
func (m Upload_CdnFile) To_upload_cdnFile() *TLupload_cdnFile {
	return &TLupload_cdnFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_RecentStickers
//
func (m Messages_RecentStickers) Encode() []byte {
	switch m.Constructor {
	case 186120336:
		t := m.To_messages_recentStickersNotModified()
		return t.Encode()
	case 586395571:
		t := m.To_messages_recentStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_RecentStickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 186120336:
		m2 := &TLmessages_recentStickersNotModified{Data: Messages_RecentStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 586395571:
		m2 := &TLmessages_recentStickers{Data: Messages_RecentStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_RecentStickers) To_messages_recentStickersNotModified() *TLmessages_recentStickersNotModified {
	return &TLmessages_recentStickersNotModified{
		Data: m.Data,
	}
}
func (m Messages_RecentStickers) To_messages_recentStickers() *TLmessages_recentStickers {
	return &TLmessages_recentStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_WallPapers
//
func (m Account_WallPapers) Encode() []byte {
	switch m.Constructor {
	case 471437699:
		t := m.To_account_wallPapersNotModified()
		return t.Encode()
	case 1881892265:
		t := m.To_account_wallPapers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_WallPapers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 471437699:
		m2 := &TLaccount_wallPapersNotModified{Data: Account_WallPapers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1881892265:
		m2 := &TLaccount_wallPapers{Data: Account_WallPapers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_WallPapers) To_account_wallPapersNotModified() *TLaccount_wallPapersNotModified {
	return &TLaccount_wallPapersNotModified{
		Data: m.Data,
	}
}
func (m Account_WallPapers) To_account_wallPapers() *TLaccount_wallPapers {
	return &TLaccount_wallPapers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatPhoto
//
func (m ChatPhoto) Encode() []byte {
	switch m.Constructor {
	case 935395612:
		t := m.To_chatPhotoEmpty()
		return t.Encode()
	case -770990276:
		t := m.To_chatPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatPhoto) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 935395612:
		m2 := &TLchatPhotoEmpty{Data: ChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -770990276:
		m2 := &TLchatPhoto{Data: ChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatPhoto) To_chatPhotoEmpty() *TLchatPhotoEmpty {
	return &TLchatPhotoEmpty{
		Data: m.Data,
	}
}
func (m ChatPhoto) To_chatPhoto() *TLchatPhoto {
	return &TLchatPhoto{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageReplies
//
func (m MessageReplies) Encode() []byte {
	switch m.Constructor {
	case 1093204652:
		t := m.To_messageReplies()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageReplies) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1093204652:
		m2 := &TLmessageReplies{Data: MessageReplies_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageReplies) To_messageReplies() *TLmessageReplies {
	return &TLmessageReplies{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SavedContact
//
func (m SavedContact) Encode() []byte {
	switch m.Constructor {
	case 289586518:
		t := m.To_savedPhoneContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m SavedContact) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 289586518:
		m2 := &TLsavedPhoneContact{Data: SavedContact_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SavedContact) To_savedPhoneContact() *TLsavedPhoneContact {
	return &TLsavedPhoneContact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiKeywordsDifference
//
func (m EmojiKeywordsDifference) Encode() []byte {
	switch m.Constructor {
	case 1556570557:
		t := m.To_emojiKeywordsDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiKeywordsDifference) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1556570557:
		m2 := &TLemojiKeywordsDifference{Data: EmojiKeywordsDifference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EmojiKeywordsDifference) To_emojiKeywordsDifference() *TLemojiKeywordsDifference {
	return &TLemojiKeywordsDifference{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:photos_Photos
//
func (m Photos_Photos) Encode() []byte {
	switch m.Constructor {
	case -1916114267:
		t := m.To_photos_photos()
		return t.Encode()
	case 352657236:
		t := m.To_photos_photosSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m Photos_Photos) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1916114267:
		m2 := &TLphotos_photos{Data: Photos_Photos_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 352657236:
		m2 := &TLphotos_photosSlice{Data: Photos_Photos_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Photos_Photos) To_photos_photos() *TLphotos_photos {
	return &TLphotos_photos{
		Data: m.Data,
	}
}
func (m Photos_Photos) To_photos_photosSlice() *TLphotos_photosSlice {
	return &TLphotos_photosSlice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackDifference
//
func (m LangPackDifference) Encode() []byte {
	switch m.Constructor {
	case -209337866:
		t := m.To_langPackDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackDifference) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -209337866:
		m2 := &TLlangPackDifference{Data: LangPackDifference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m LangPackDifference) To_langPackDifference() *TLlangPackDifference {
	return &TLlangPackDifference{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatAdminRights
//
func (m ChatAdminRights) Encode() []byte {
	switch m.Constructor {
	case 1605510357:
		t := m.To_chatAdminRights()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatAdminRights) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1605510357:
		m2 := &TLchatAdminRights{Data: ChatAdminRights_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatAdminRights) To_chatAdminRights() *TLchatAdminRights {
	return &TLchatAdminRights{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_DhConfig
//
func (m Messages_DhConfig) Encode() []byte {
	switch m.Constructor {
	case -1058912715:
		t := m.To_messages_dhConfigNotModified()
		return t.Encode()
	case 740433629:
		t := m.To_messages_dhConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_DhConfig) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1058912715:
		m2 := &TLmessages_dhConfigNotModified{Data: Messages_DhConfig_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 740433629:
		m2 := &TLmessages_dhConfig{Data: Messages_DhConfig_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_DhConfig) To_messages_dhConfigNotModified() *TLmessages_dhConfigNotModified {
	return &TLmessages_dhConfigNotModified{
		Data: m.Data,
	}
}
func (m Messages_DhConfig) To_messages_dhConfig() *TLmessages_dhConfig {
	return &TLmessages_dhConfig{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackString
//
func (m LangPackString) Encode() []byte {
	switch m.Constructor {
	case -892239370:
		t := m.To_langPackString()
		return t.Encode()
	case 1816636575:
		t := m.To_langPackStringPluralized()
		return t.Encode()
	case 695856818:
		t := m.To_langPackStringDeleted()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackString) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -892239370:
		m2 := &TLlangPackString{Data: LangPackString_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1816636575:
		m2 := &TLlangPackStringPluralized{Data: LangPackString_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 695856818:
		m2 := &TLlangPackStringDeleted{Data: LangPackString_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m LangPackString) To_langPackString() *TLlangPackString {
	return &TLlangPackString{
		Data: m.Data,
	}
}
func (m LangPackString) To_langPackStringPluralized() *TLlangPackStringPluralized {
	return &TLlangPackStringPluralized{
		Data: m.Data,
	}
}
func (m LangPackString) To_langPackStringDeleted() *TLlangPackStringDeleted {
	return &TLlangPackStringDeleted{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_Difference
//
func (m Updates_Difference) Encode() []byte {
	switch m.Constructor {
	case 1567990072:
		t := m.To_updates_differenceEmpty()
		return t.Encode()
	case 16030880:
		t := m.To_updates_difference()
		return t.Encode()
	case -1459938943:
		t := m.To_updates_differenceSlice()
		return t.Encode()
	case 1258196845:
		t := m.To_updates_differenceTooLong()
		return t.Encode()
	default:
		return nil
	}
}
func (m Updates_Difference) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1567990072:
		m2 := &TLupdates_differenceEmpty{Data: Updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 16030880:
		m2 := &TLupdates_difference{Data: Updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1459938943:
		m2 := &TLupdates_differenceSlice{Data: Updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1258196845:
		m2 := &TLupdates_differenceTooLong{Data: Updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Updates_Difference) To_updates_differenceEmpty() *TLupdates_differenceEmpty {
	return &TLupdates_differenceEmpty{
		Data: m.Data,
	}
}
func (m Updates_Difference) To_updates_difference() *TLupdates_difference {
	return &TLupdates_difference{
		Data: m.Data,
	}
}
func (m Updates_Difference) To_updates_differenceSlice() *TLupdates_differenceSlice {
	return &TLupdates_differenceSlice{
		Data: m.Data,
	}
}
func (m Updates_Difference) To_updates_differenceTooLong() *TLupdates_differenceTooLong {
	return &TLupdates_differenceTooLong{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageFwdHeader
//
func (m MessageFwdHeader) Encode() []byte {
	switch m.Constructor {
	case 1601666510:
		t := m.To_messageFwdHeader()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageFwdHeader) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1601666510:
		m2 := &TLmessageFwdHeader{Data: MessageFwdHeader_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageFwdHeader) To_messageFwdHeader() *TLmessageFwdHeader {
	return &TLmessageFwdHeader{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:GeoPoint
//
func (m GeoPoint) Encode() []byte {
	switch m.Constructor {
	case 286776671:
		t := m.To_geoPointEmpty()
		return t.Encode()
	case -1297942941:
		t := m.To_geoPoint()
		return t.Encode()
	default:
		return nil
	}
}
func (m GeoPoint) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 286776671:
		m2 := &TLgeoPointEmpty{Data: GeoPoint_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1297942941:
		m2 := &TLgeoPoint{Data: GeoPoint_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m GeoPoint) To_geoPointEmpty() *TLgeoPointEmpty {
	return &TLgeoPointEmpty{
		Data: m.Data,
	}
}
func (m GeoPoint) To_geoPoint() *TLgeoPoint {
	return &TLgeoPoint{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DcOption
//
func (m DcOption) Encode() []byte {
	switch m.Constructor {
	case 414687501:
		t := m.To_dcOption()
		return t.Encode()
	default:
		return nil
	}
}
func (m DcOption) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 414687501:
		m2 := &TLdcOption{Data: DcOption_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DcOption) To_dcOption() *TLdcOption {
	return &TLdcOption{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_TermsOfServiceUpdate
//
func (m Help_TermsOfServiceUpdate) Encode() []byte {
	switch m.Constructor {
	case -483352705:
		t := m.To_help_termsOfServiceUpdateEmpty()
		return t.Encode()
	case 686618977:
		t := m.To_help_termsOfServiceUpdate()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_TermsOfServiceUpdate) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -483352705:
		m2 := &TLhelp_termsOfServiceUpdateEmpty{Data: Help_TermsOfServiceUpdate_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 686618977:
		m2 := &TLhelp_termsOfServiceUpdate{Data: Help_TermsOfServiceUpdate_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_TermsOfServiceUpdate) To_help_termsOfServiceUpdateEmpty() *TLhelp_termsOfServiceUpdateEmpty {
	return &TLhelp_termsOfServiceUpdateEmpty{
		Data: m.Data,
	}
}
func (m Help_TermsOfServiceUpdate) To_help_termsOfServiceUpdate() *TLhelp_termsOfServiceUpdate {
	return &TLhelp_termsOfServiceUpdate{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_SentCode
//
func (m Auth_SentCode) Encode() []byte {
	switch m.Constructor {
	case 1577067778:
		t := m.To_auth_sentCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_SentCode) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1577067778:
		m2 := &TLauth_sentCode{Data: Auth_SentCode_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_SentCode) To_auth_sentCode() *TLauth_sentCode {
	return &TLauth_sentCode{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatBannedRights
//
func (m ChatBannedRights) Encode() []byte {
	switch m.Constructor {
	case -1626209256:
		t := m.To_chatBannedRights()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatBannedRights) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1626209256:
		m2 := &TLchatBannedRights{Data: ChatBannedRights_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatBannedRights) To_chatBannedRights() *TLchatBannedRights {
	return &TLchatBannedRights{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RestrictionReason
//
func (m RestrictionReason) Encode() []byte {
	switch m.Constructor {
	case -797791052:
		t := m.To_restrictionReason()
		return t.Encode()
	default:
		return nil
	}
}
func (m RestrictionReason) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -797791052:
		m2 := &TLrestrictionReason{Data: RestrictionReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m RestrictionReason) To_restrictionReason() *TLrestrictionReason {
	return &TLrestrictionReason{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:phone_PhoneCall
//
func (m Phone_PhoneCall) Encode() []byte {
	switch m.Constructor {
	case -326966976:
		t := m.To_phone_phoneCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m Phone_PhoneCall) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -326966976:
		m2 := &TLphone_phoneCall{Data: Phone_PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Phone_PhoneCall) To_phone_phoneCall() *TLphone_phoneCall {
	return &TLphone_phoneCall{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_BroadcastStats
//
func (m Stats_BroadcastStats) Encode() []byte {
	switch m.Constructor {
	case -1107852396:
		t := m.To_stats_broadcastStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m Stats_BroadcastStats) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1107852396:
		m2 := &TLstats_broadcastStats{Data: Stats_BroadcastStats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Stats_BroadcastStats) To_stats_broadcastStats() *TLstats_broadcastStats {
	return &TLstats_broadcastStats{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_PasswordRecovery
//
func (m Auth_PasswordRecovery) Encode() []byte {
	switch m.Constructor {
	case 326715557:
		t := m.To_auth_passwordRecovery()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_PasswordRecovery) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 326715557:
		m2 := &TLauth_passwordRecovery{Data: Auth_PasswordRecovery_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_PasswordRecovery) To_auth_passwordRecovery() *TLauth_passwordRecovery {
	return &TLauth_passwordRecovery{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PrivacyRules
//
func (m Account_PrivacyRules) Encode() []byte {
	switch m.Constructor {
	case 1352683077:
		t := m.To_account_privacyRules()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_PrivacyRules) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1352683077:
		m2 := &TLaccount_privacyRules{Data: Account_PrivacyRules_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_PrivacyRules) To_account_privacyRules() *TLaccount_privacyRules {
	return &TLaccount_privacyRules{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureSecretSettings
//
func (m SecureSecretSettings) Encode() []byte {
	switch m.Constructor {
	case 354925740:
		t := m.To_secureSecretSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureSecretSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 354925740:
		m2 := &TLsecureSecretSettings{Data: SecureSecretSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureSecretSettings) To_secureSecretSettings() *TLsecureSecretSettings {
	return &TLsecureSecretSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Theme
//
func (m Theme) Encode() []byte {
	switch m.Constructor {
	case 42930452:
		t := m.To_theme()
		return t.Encode()
	default:
		return nil
	}
}
func (m Theme) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 42930452:
		m2 := &TLtheme{Data: Theme_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Theme) To_theme() *TLtheme {
	return &TLtheme{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_TermsOfService
//
func (m Help_TermsOfService) Encode() []byte {
	switch m.Constructor {
	case 2013922064:
		t := m.To_help_termsOfService()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_TermsOfService) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2013922064:
		m2 := &TLhelp_termsOfService{Data: Help_TermsOfService_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_TermsOfService) To_help_termsOfService() *TLhelp_termsOfService {
	return &TLhelp_termsOfService{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelMessagesFilter
//
func (m ChannelMessagesFilter) Encode() []byte {
	switch m.Constructor {
	case -1798033689:
		t := m.To_channelMessagesFilterEmpty()
		return t.Encode()
	case -847783593:
		t := m.To_channelMessagesFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelMessagesFilter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1798033689:
		m2 := &TLchannelMessagesFilterEmpty{Data: ChannelMessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -847783593:
		m2 := &TLchannelMessagesFilter{Data: ChannelMessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelMessagesFilter) To_channelMessagesFilterEmpty() *TLchannelMessagesFilterEmpty {
	return &TLchannelMessagesFilterEmpty{
		Data: m.Data,
	}
}
func (m ChannelMessagesFilter) To_channelMessagesFilter() *TLchannelMessagesFilter {
	return &TLchannelMessagesFilter{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Invoice
//
func (m Invoice) Encode() []byte {
	switch m.Constructor {
	case -1022713000:
		t := m.To_invoice()
		return t.Encode()
	default:
		return nil
	}
}
func (m Invoice) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1022713000:
		m2 := &TLinvoice{Data: Invoice_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Invoice) To_invoice() *TLinvoice {
	return &TLinvoice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEventAction
//
func (m ChannelAdminLogEventAction) Encode() []byte {
	switch m.Constructor {
	case -421545947:
		t := m.To_channelAdminLogEventActionChangeTitle()
		return t.Encode()
	case 1427671598:
		t := m.To_channelAdminLogEventActionChangeAbout()
		return t.Encode()
	case 1783299128:
		t := m.To_channelAdminLogEventActionChangeUsername()
		return t.Encode()
	case 1129042607:
		t := m.To_channelAdminLogEventActionChangePhoto()
		return t.Encode()
	case 460916654:
		t := m.To_channelAdminLogEventActionToggleInvites()
		return t.Encode()
	case 648939889:
		t := m.To_channelAdminLogEventActionToggleSignatures()
		return t.Encode()
	case -370660328:
		t := m.To_channelAdminLogEventActionUpdatePinned()
		return t.Encode()
	case 1889215493:
		t := m.To_channelAdminLogEventActionEditMessage()
		return t.Encode()
	case 1121994683:
		t := m.To_channelAdminLogEventActionDeleteMessage()
		return t.Encode()
	case 405815507:
		t := m.To_channelAdminLogEventActionParticipantJoin()
		return t.Encode()
	case -124291086:
		t := m.To_channelAdminLogEventActionParticipantLeave()
		return t.Encode()
	case -484690728:
		t := m.To_channelAdminLogEventActionParticipantInvite()
		return t.Encode()
	case -422036098:
		t := m.To_channelAdminLogEventActionParticipantToggleBan()
		return t.Encode()
	case -714643696:
		t := m.To_channelAdminLogEventActionParticipantToggleAdmin()
		return t.Encode()
	case -1312568665:
		t := m.To_channelAdminLogEventActionChangeStickerSet()
		return t.Encode()
	case 1599903217:
		t := m.To_channelAdminLogEventActionTogglePreHistoryHidden()
		return t.Encode()
	case 771095562:
		t := m.To_channelAdminLogEventActionDefaultBannedRights()
		return t.Encode()
	case -1895328189:
		t := m.To_channelAdminLogEventActionStopPoll()
		return t.Encode()
	case -1569748965:
		t := m.To_channelAdminLogEventActionChangeLinkedChat()
		return t.Encode()
	case 241923758:
		t := m.To_channelAdminLogEventActionChangeLocation()
		return t.Encode()
	case 1401984889:
		t := m.To_channelAdminLogEventActionToggleSlowMode()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEventAction) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -421545947:
		m2 := &TLchannelAdminLogEventActionChangeTitle{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1427671598:
		m2 := &TLchannelAdminLogEventActionChangeAbout{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1783299128:
		m2 := &TLchannelAdminLogEventActionChangeUsername{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1129042607:
		m2 := &TLchannelAdminLogEventActionChangePhoto{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 460916654:
		m2 := &TLchannelAdminLogEventActionToggleInvites{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 648939889:
		m2 := &TLchannelAdminLogEventActionToggleSignatures{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -370660328:
		m2 := &TLchannelAdminLogEventActionUpdatePinned{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1889215493:
		m2 := &TLchannelAdminLogEventActionEditMessage{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1121994683:
		m2 := &TLchannelAdminLogEventActionDeleteMessage{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 405815507:
		m2 := &TLchannelAdminLogEventActionParticipantJoin{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -124291086:
		m2 := &TLchannelAdminLogEventActionParticipantLeave{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -484690728:
		m2 := &TLchannelAdminLogEventActionParticipantInvite{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -422036098:
		m2 := &TLchannelAdminLogEventActionParticipantToggleBan{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -714643696:
		m2 := &TLchannelAdminLogEventActionParticipantToggleAdmin{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1312568665:
		m2 := &TLchannelAdminLogEventActionChangeStickerSet{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1599903217:
		m2 := &TLchannelAdminLogEventActionTogglePreHistoryHidden{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 771095562:
		m2 := &TLchannelAdminLogEventActionDefaultBannedRights{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1895328189:
		m2 := &TLchannelAdminLogEventActionStopPoll{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1569748965:
		m2 := &TLchannelAdminLogEventActionChangeLinkedChat{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 241923758:
		m2 := &TLchannelAdminLogEventActionChangeLocation{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1401984889:
		m2 := &TLchannelAdminLogEventActionToggleSlowMode{Data: ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeTitle() *TLchannelAdminLogEventActionChangeTitle {
	return &TLchannelAdminLogEventActionChangeTitle{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeAbout() *TLchannelAdminLogEventActionChangeAbout {
	return &TLchannelAdminLogEventActionChangeAbout{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeUsername() *TLchannelAdminLogEventActionChangeUsername {
	return &TLchannelAdminLogEventActionChangeUsername{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangePhoto() *TLchannelAdminLogEventActionChangePhoto {
	return &TLchannelAdminLogEventActionChangePhoto{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleInvites() *TLchannelAdminLogEventActionToggleInvites {
	return &TLchannelAdminLogEventActionToggleInvites{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleSignatures() *TLchannelAdminLogEventActionToggleSignatures {
	return &TLchannelAdminLogEventActionToggleSignatures{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionUpdatePinned() *TLchannelAdminLogEventActionUpdatePinned {
	return &TLchannelAdminLogEventActionUpdatePinned{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionEditMessage() *TLchannelAdminLogEventActionEditMessage {
	return &TLchannelAdminLogEventActionEditMessage{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionDeleteMessage() *TLchannelAdminLogEventActionDeleteMessage {
	return &TLchannelAdminLogEventActionDeleteMessage{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantJoin() *TLchannelAdminLogEventActionParticipantJoin {
	return &TLchannelAdminLogEventActionParticipantJoin{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantLeave() *TLchannelAdminLogEventActionParticipantLeave {
	return &TLchannelAdminLogEventActionParticipantLeave{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantInvite() *TLchannelAdminLogEventActionParticipantInvite {
	return &TLchannelAdminLogEventActionParticipantInvite{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantToggleBan() *TLchannelAdminLogEventActionParticipantToggleBan {
	return &TLchannelAdminLogEventActionParticipantToggleBan{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantToggleAdmin() *TLchannelAdminLogEventActionParticipantToggleAdmin {
	return &TLchannelAdminLogEventActionParticipantToggleAdmin{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeStickerSet() *TLchannelAdminLogEventActionChangeStickerSet {
	return &TLchannelAdminLogEventActionChangeStickerSet{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionTogglePreHistoryHidden() *TLchannelAdminLogEventActionTogglePreHistoryHidden {
	return &TLchannelAdminLogEventActionTogglePreHistoryHidden{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionDefaultBannedRights() *TLchannelAdminLogEventActionDefaultBannedRights {
	return &TLchannelAdminLogEventActionDefaultBannedRights{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionStopPoll() *TLchannelAdminLogEventActionStopPoll {
	return &TLchannelAdminLogEventActionStopPoll{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeLinkedChat() *TLchannelAdminLogEventActionChangeLinkedChat {
	return &TLchannelAdminLogEventActionChangeLinkedChat{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeLocation() *TLchannelAdminLogEventActionChangeLocation {
	return &TLchannelAdminLogEventActionChangeLocation{
		Data: m.Data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleSlowMode() *TLchannelAdminLogEventActionToggleSlowMode {
	return &TLchannelAdminLogEventActionToggleSlowMode{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_SentCodeType
//
func (m Auth_SentCodeType) Encode() []byte {
	switch m.Constructor {
	case 1035688326:
		t := m.To_auth_sentCodeTypeApp()
		return t.Encode()
	case -1073693790:
		t := m.To_auth_sentCodeTypeSms()
		return t.Encode()
	case 1398007207:
		t := m.To_auth_sentCodeTypeCall()
		return t.Encode()
	case -1425815847:
		t := m.To_auth_sentCodeTypeFlashCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_SentCodeType) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1035688326:
		m2 := &TLauth_sentCodeTypeApp{Data: Auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1073693790:
		m2 := &TLauth_sentCodeTypeSms{Data: Auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1398007207:
		m2 := &TLauth_sentCodeTypeCall{Data: Auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1425815847:
		m2 := &TLauth_sentCodeTypeFlashCall{Data: Auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_SentCodeType) To_auth_sentCodeTypeApp() *TLauth_sentCodeTypeApp {
	return &TLauth_sentCodeTypeApp{
		Data: m.Data,
	}
}
func (m Auth_SentCodeType) To_auth_sentCodeTypeSms() *TLauth_sentCodeTypeSms {
	return &TLauth_sentCodeTypeSms{
		Data: m.Data,
	}
}
func (m Auth_SentCodeType) To_auth_sentCodeTypeCall() *TLauth_sentCodeTypeCall {
	return &TLauth_sentCodeTypeCall{
		Data: m.Data,
	}
}
func (m Auth_SentCodeType) To_auth_sentCodeTypeFlashCall() *TLauth_sentCodeTypeFlashCall {
	return &TLauth_sentCodeTypeFlashCall{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Poll
//
func (m Poll) Encode() []byte {
	switch m.Constructor {
	case -2032041631:
		t := m.To_poll()
		return t.Encode()
	default:
		return nil
	}
}
func (m Poll) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2032041631:
		m2 := &TLpoll{Data: Poll_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Poll) To_poll() *TLpoll {
	return &TLpoll{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCallProtocol
//
func (m PhoneCallProtocol) Encode() []byte {
	switch m.Constructor {
	case -58224696:
		t := m.To_phoneCallProtocol()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCallProtocol) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -58224696:
		m2 := &TLphoneCallProtocol{Data: PhoneCallProtocol_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PhoneCallProtocol) To_phoneCallProtocol() *TLphoneCallProtocol {
	return &TLphoneCallProtocol{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedChat
//
func (m EncryptedChat) Encode() []byte {
	switch m.Constructor {
	case -1417756512:
		t := m.To_encryptedChatEmpty()
		return t.Encode()
	case 1006044124:
		t := m.To_encryptedChatWaiting()
		return t.Encode()
	case 1651608194:
		t := m.To_encryptedChatRequested()
		return t.Encode()
	case -94974410:
		t := m.To_encryptedChat()
		return t.Encode()
	case 332848423:
		t := m.To_encryptedChatDiscarded()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedChat) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1417756512:
		m2 := &TLencryptedChatEmpty{Data: EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1006044124:
		m2 := &TLencryptedChatWaiting{Data: EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1651608194:
		m2 := &TLencryptedChatRequested{Data: EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -94974410:
		m2 := &TLencryptedChat{Data: EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 332848423:
		m2 := &TLencryptedChatDiscarded{Data: EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EncryptedChat) To_encryptedChatEmpty() *TLencryptedChatEmpty {
	return &TLencryptedChatEmpty{
		Data: m.Data,
	}
}
func (m EncryptedChat) To_encryptedChatWaiting() *TLencryptedChatWaiting {
	return &TLencryptedChatWaiting{
		Data: m.Data,
	}
}
func (m EncryptedChat) To_encryptedChatRequested() *TLencryptedChatRequested {
	return &TLencryptedChatRequested{
		Data: m.Data,
	}
}
func (m EncryptedChat) To_encryptedChat() *TLencryptedChat {
	return &TLencryptedChat{
		Data: m.Data,
	}
}
func (m EncryptedChat) To_encryptedChatDiscarded() *TLencryptedChatDiscarded {
	return &TLencryptedChatDiscarded{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DataJSON
//
func (m DataJSON) Encode() []byte {
	switch m.Constructor {
	case 2104790276:
		t := m.To_dataJSON()
		return t.Encode()
	default:
		return nil
	}
}
func (m DataJSON) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2104790276:
		m2 := &TLdataJSON{Data: DataJSON_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DataJSON) To_dataJSON() *TLdataJSON {
	return &TLdataJSON{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:KeyboardButtonRow
//
func (m KeyboardButtonRow) Encode() []byte {
	switch m.Constructor {
	case 2002815875:
		t := m.To_keyboardButtonRow()
		return t.Encode()
	default:
		return nil
	}
}
func (m KeyboardButtonRow) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2002815875:
		m2 := &TLkeyboardButtonRow{Data: KeyboardButtonRow_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m KeyboardButtonRow) To_keyboardButtonRow() *TLkeyboardButtonRow {
	return &TLkeyboardButtonRow{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsURL
//
func (m StatsURL) Encode() []byte {
	switch m.Constructor {
	case 1202287072:
		t := m.To_statsURL()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsURL) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1202287072:
		m2 := &TLstatsURL{Data: StatsURL_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsURL) To_statsURL() *TLstatsURL {
	return &TLstatsURL{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_PassportConfig
//
func (m Help_PassportConfig) Encode() []byte {
	switch m.Constructor {
	case -1078332329:
		t := m.To_help_passportConfigNotModified()
		return t.Encode()
	case -1600596305:
		t := m.To_help_passportConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_PassportConfig) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1078332329:
		m2 := &TLhelp_passportConfigNotModified{Data: Help_PassportConfig_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1600596305:
		m2 := &TLhelp_passportConfig{Data: Help_PassportConfig_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_PassportConfig) To_help_passportConfigNotModified() *TLhelp_passportConfigNotModified {
	return &TLhelp_passportConfigNotModified{
		Data: m.Data,
	}
}
func (m Help_PassportConfig) To_help_passportConfig() *TLhelp_passportConfig {
	return &TLhelp_passportConfig{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogPeer
//
func (m DialogPeer) Encode() []byte {
	switch m.Constructor {
	case -445792507:
		t := m.To_dialogPeer()
		return t.Encode()
	case 1363483106:
		t := m.To_dialogPeerFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -445792507:
		m2 := &TLdialogPeer{Data: DialogPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1363483106:
		m2 := &TLdialogPeerFolder{Data: DialogPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DialogPeer) To_dialogPeer() *TLdialogPeer {
	return &TLdialogPeer{
		Data: m.Data,
	}
}
func (m DialogPeer) To_dialogPeerFolder() *TLdialogPeerFolder {
	return &TLdialogPeerFolder{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PrivacyRule
//
func (m PrivacyRule) Encode() []byte {
	switch m.Constructor {
	case -123988:
		t := m.To_privacyValueAllowContacts()
		return t.Encode()
	case 1698855810:
		t := m.To_privacyValueAllowAll()
		return t.Encode()
	case 1297858060:
		t := m.To_privacyValueAllowUsers()
		return t.Encode()
	case -125240806:
		t := m.To_privacyValueDisallowContacts()
		return t.Encode()
	case -1955338397:
		t := m.To_privacyValueDisallowAll()
		return t.Encode()
	case 209668535:
		t := m.To_privacyValueDisallowUsers()
		return t.Encode()
	case 415136107:
		t := m.To_privacyValueAllowChatParticipants()
		return t.Encode()
	case -1397881200:
		t := m.To_privacyValueDisallowChatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m PrivacyRule) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -123988:
		m2 := &TLprivacyValueAllowContacts{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1698855810:
		m2 := &TLprivacyValueAllowAll{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1297858060:
		m2 := &TLprivacyValueAllowUsers{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -125240806:
		m2 := &TLprivacyValueDisallowContacts{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1955338397:
		m2 := &TLprivacyValueDisallowAll{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 209668535:
		m2 := &TLprivacyValueDisallowUsers{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 415136107:
		m2 := &TLprivacyValueAllowChatParticipants{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1397881200:
		m2 := &TLprivacyValueDisallowChatParticipants{Data: PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PrivacyRule) To_privacyValueAllowContacts() *TLprivacyValueAllowContacts {
	return &TLprivacyValueAllowContacts{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueAllowAll() *TLprivacyValueAllowAll {
	return &TLprivacyValueAllowAll{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueAllowUsers() *TLprivacyValueAllowUsers {
	return &TLprivacyValueAllowUsers{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowContacts() *TLprivacyValueDisallowContacts {
	return &TLprivacyValueDisallowContacts{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowAll() *TLprivacyValueDisallowAll {
	return &TLprivacyValueDisallowAll{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowUsers() *TLprivacyValueDisallowUsers {
	return &TLprivacyValueDisallowUsers{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueAllowChatParticipants() *TLprivacyValueAllowChatParticipants {
	return &TLprivacyValueAllowChatParticipants{
		Data: m.Data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowChatParticipants() *TLprivacyValueDisallowChatParticipants {
	return &TLprivacyValueDisallowChatParticipants{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputMedia
//
func (m InputMedia) Encode() []byte {
	switch m.Constructor {
	case -1771768449:
		t := m.To_inputMediaEmpty()
		return t.Encode()
	case 505969924:
		t := m.To_inputMediaUploadedPhoto()
		return t.Encode()
	case -1279654347:
		t := m.To_inputMediaPhoto()
		return t.Encode()
	case -104578748:
		t := m.To_inputMediaGeoPoint()
		return t.Encode()
	case -122978821:
		t := m.To_inputMediaContact()
		return t.Encode()
	case 1530447553:
		t := m.To_inputMediaUploadedDocument()
		return t.Encode()
	case 598418386:
		t := m.To_inputMediaDocument()
		return t.Encode()
	case -1052959727:
		t := m.To_inputMediaVenue()
		return t.Encode()
	case -440664550:
		t := m.To_inputMediaPhotoExternal()
		return t.Encode()
	case -78455655:
		t := m.To_inputMediaDocumentExternal()
		return t.Encode()
	case -750828557:
		t := m.To_inputMediaGame()
		return t.Encode()
	case -186607933:
		t := m.To_inputMediaInvoice()
		return t.Encode()
	case -1759532989:
		t := m.To_inputMediaGeoLive()
		return t.Encode()
	case 261416433:
		t := m.To_inputMediaPoll()
		return t.Encode()
	case -428884101:
		t := m.To_inputMediaDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputMedia) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1771768449:
		m2 := &TLinputMediaEmpty{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 505969924:
		m2 := &TLinputMediaUploadedPhoto{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1279654347:
		m2 := &TLinputMediaPhoto{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -104578748:
		m2 := &TLinputMediaGeoPoint{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -122978821:
		m2 := &TLinputMediaContact{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1530447553:
		m2 := &TLinputMediaUploadedDocument{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 598418386:
		m2 := &TLinputMediaDocument{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1052959727:
		m2 := &TLinputMediaVenue{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -440664550:
		m2 := &TLinputMediaPhotoExternal{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -78455655:
		m2 := &TLinputMediaDocumentExternal{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -750828557:
		m2 := &TLinputMediaGame{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -186607933:
		m2 := &TLinputMediaInvoice{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1759532989:
		m2 := &TLinputMediaGeoLive{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 261416433:
		m2 := &TLinputMediaPoll{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -428884101:
		m2 := &TLinputMediaDice{Data: InputMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputMedia) To_inputMediaEmpty() *TLinputMediaEmpty {
	return &TLinputMediaEmpty{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaUploadedPhoto() *TLinputMediaUploadedPhoto {
	return &TLinputMediaUploadedPhoto{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaPhoto() *TLinputMediaPhoto {
	return &TLinputMediaPhoto{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaGeoPoint() *TLinputMediaGeoPoint {
	return &TLinputMediaGeoPoint{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaContact() *TLinputMediaContact {
	return &TLinputMediaContact{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaUploadedDocument() *TLinputMediaUploadedDocument {
	return &TLinputMediaUploadedDocument{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaDocument() *TLinputMediaDocument {
	return &TLinputMediaDocument{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaVenue() *TLinputMediaVenue {
	return &TLinputMediaVenue{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaPhotoExternal() *TLinputMediaPhotoExternal {
	return &TLinputMediaPhotoExternal{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaDocumentExternal() *TLinputMediaDocumentExternal {
	return &TLinputMediaDocumentExternal{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaGame() *TLinputMediaGame {
	return &TLinputMediaGame{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaInvoice() *TLinputMediaInvoice {
	return &TLinputMediaInvoice{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaGeoLive() *TLinputMediaGeoLive {
	return &TLinputMediaGeoLive{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaPoll() *TLinputMediaPoll {
	return &TLinputMediaPoll{
		Data: m.Data,
	}
}
func (m InputMedia) To_inputMediaDice() *TLinputMediaDice {
	return &TLinputMediaDice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Takeout
//
func (m Account_Takeout) Encode() []byte {
	switch m.Constructor {
	case 1304052993:
		t := m.To_account_takeout()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_Takeout) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1304052993:
		m2 := &TLaccount_takeout{Data: Account_Takeout_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_Takeout) To_account_takeout() *TLaccount_takeout {
	return &TLaccount_takeout{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelLocation
//
func (m ChannelLocation) Encode() []byte {
	switch m.Constructor {
	case -1078612597:
		t := m.To_channelLocationEmpty()
		return t.Encode()
	case 547062491:
		t := m.To_channelLocation()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelLocation) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1078612597:
		m2 := &TLchannelLocationEmpty{Data: ChannelLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 547062491:
		m2 := &TLchannelLocation{Data: ChannelLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelLocation) To_channelLocationEmpty() *TLchannelLocationEmpty {
	return &TLchannelLocationEmpty{
		Data: m.Data,
	}
}
func (m ChannelLocation) To_channelLocation() *TLchannelLocation {
	return &TLchannelLocation{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_Country
//
func (m Help_Country) Encode() []byte {
	switch m.Constructor {
	case -1014526429:
		t := m.To_help_country()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_Country) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1014526429:
		m2 := &TLhelp_country{Data: Help_Country_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_Country) To_help_country() *TLhelp_country {
	return &TLhelp_country{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputContact
//
func (m InputContact) Encode() []byte {
	switch m.Constructor {
	case -208488460:
		t := m.To_inputPhoneContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputContact) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -208488460:
		m2 := &TLinputPhoneContact{Data: InputContact_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputContact) To_inputPhoneContact() *TLinputPhoneContact {
	return &TLinputPhoneContact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PasswordSettings
//
func (m Account_PasswordSettings) Encode() []byte {
	switch m.Constructor {
	case -1705233435:
		t := m.To_account_passwordSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_PasswordSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1705233435:
		m2 := &TLaccount_passwordSettings{Data: Account_PasswordSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_PasswordSettings) To_account_passwordSettings() *TLaccount_passwordSettings {
	return &TLaccount_passwordSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputGeoPoint
//
func (m InputGeoPoint) Encode() []byte {
	switch m.Constructor {
	case -457104426:
		t := m.To_inputGeoPointEmpty()
		return t.Encode()
	case 1210199983:
		t := m.To_inputGeoPoint()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputGeoPoint) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -457104426:
		m2 := &TLinputGeoPointEmpty{Data: InputGeoPoint_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1210199983:
		m2 := &TLinputGeoPoint{Data: InputGeoPoint_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputGeoPoint) To_inputGeoPointEmpty() *TLinputGeoPointEmpty {
	return &TLinputGeoPointEmpty{
		Data: m.Data,
	}
}
func (m InputGeoPoint) To_inputGeoPoint() *TLinputGeoPoint {
	return &TLinputGeoPoint{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageMedia
//
func (m MessageMedia) Encode() []byte {
	switch m.Constructor {
	case 1038967584:
		t := m.To_messageMediaEmpty()
		return t.Encode()
	case 1766936791:
		t := m.To_messageMediaPhoto()
		return t.Encode()
	case 1457575028:
		t := m.To_messageMediaGeo()
		return t.Encode()
	case -873313984:
		t := m.To_messageMediaContact()
		return t.Encode()
	case -1618676578:
		t := m.To_messageMediaUnsupported()
		return t.Encode()
	case -1666158377:
		t := m.To_messageMediaDocument()
		return t.Encode()
	case -1557277184:
		t := m.To_messageMediaWebPage()
		return t.Encode()
	case 784356159:
		t := m.To_messageMediaVenue()
		return t.Encode()
	case -38694904:
		t := m.To_messageMediaGame()
		return t.Encode()
	case -2074799289:
		t := m.To_messageMediaInvoice()
		return t.Encode()
	case -1186937242:
		t := m.To_messageMediaGeoLive()
		return t.Encode()
	case 1272375192:
		t := m.To_messageMediaPoll()
		return t.Encode()
	case 1065280907:
		t := m.To_messageMediaDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageMedia) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1038967584:
		m2 := &TLmessageMediaEmpty{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1766936791:
		m2 := &TLmessageMediaPhoto{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1457575028:
		m2 := &TLmessageMediaGeo{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -873313984:
		m2 := &TLmessageMediaContact{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1618676578:
		m2 := &TLmessageMediaUnsupported{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1666158377:
		m2 := &TLmessageMediaDocument{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1557277184:
		m2 := &TLmessageMediaWebPage{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 784356159:
		m2 := &TLmessageMediaVenue{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -38694904:
		m2 := &TLmessageMediaGame{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2074799289:
		m2 := &TLmessageMediaInvoice{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1186937242:
		m2 := &TLmessageMediaGeoLive{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1272375192:
		m2 := &TLmessageMediaPoll{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1065280907:
		m2 := &TLmessageMediaDice{Data: MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageMedia) To_messageMediaEmpty() *TLmessageMediaEmpty {
	return &TLmessageMediaEmpty{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaPhoto() *TLmessageMediaPhoto {
	return &TLmessageMediaPhoto{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaGeo() *TLmessageMediaGeo {
	return &TLmessageMediaGeo{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaContact() *TLmessageMediaContact {
	return &TLmessageMediaContact{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaUnsupported() *TLmessageMediaUnsupported {
	return &TLmessageMediaUnsupported{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaDocument() *TLmessageMediaDocument {
	return &TLmessageMediaDocument{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaWebPage() *TLmessageMediaWebPage {
	return &TLmessageMediaWebPage{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaVenue() *TLmessageMediaVenue {
	return &TLmessageMediaVenue{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaGame() *TLmessageMediaGame {
	return &TLmessageMediaGame{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaInvoice() *TLmessageMediaInvoice {
	return &TLmessageMediaInvoice{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaGeoLive() *TLmessageMediaGeoLive {
	return &TLmessageMediaGeoLive{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaPoll() *TLmessageMediaPoll {
	return &TLmessageMediaPoll{
		Data: m.Data,
	}
}
func (m MessageMedia) To_messageMediaDice() *TLmessageMediaDice {
	return &TLmessageMediaDice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Bool
//
func (m Bool) Encode() []byte {
	switch m.Constructor {
	case -1132882121:
		t := m.To_boolFalse()
		return t.Encode()
	case -1720552011:
		t := m.To_boolTrue()
		return t.Encode()
	default:
		return nil
	}
}
func (m Bool) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1132882121:
		m2 := &TLboolFalse{Data: Bool_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1720552011:
		m2 := &TLboolTrue{Data: Bool_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Bool) To_boolFalse() *TLboolFalse {
	return &TLboolFalse{
		Data: m.Data,
	}
}
func (m Bool) To_boolTrue() *TLboolTrue {
	return &TLboolTrue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPaymentCredentials
//
func (m InputPaymentCredentials) Encode() []byte {
	switch m.Constructor {
	case -1056001329:
		t := m.To_inputPaymentCredentialsSaved()
		return t.Encode()
	case 873977640:
		t := m.To_inputPaymentCredentials()
		return t.Encode()
	case 178373535:
		t := m.To_inputPaymentCredentialsApplePay()
		return t.Encode()
	case -905587442:
		t := m.To_inputPaymentCredentialsAndroidPay()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPaymentCredentials) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1056001329:
		m2 := &TLinputPaymentCredentialsSaved{Data: InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 873977640:
		m2 := &TLinputPaymentCredentials{Data: InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 178373535:
		m2 := &TLinputPaymentCredentialsApplePay{Data: InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -905587442:
		m2 := &TLinputPaymentCredentialsAndroidPay{Data: InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsSaved() *TLinputPaymentCredentialsSaved {
	return &TLinputPaymentCredentialsSaved{
		Data: m.Data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentials() *TLinputPaymentCredentials {
	return &TLinputPaymentCredentials{
		Data: m.Data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsApplePay() *TLinputPaymentCredentialsApplePay {
	return &TLinputPaymentCredentialsApplePay{
		Data: m.Data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsAndroidPay() *TLinputPaymentCredentialsAndroidPay {
	return &TLinputPaymentCredentialsAndroidPay{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_ImportedContacts
//
func (m Contacts_ImportedContacts) Encode() []byte {
	switch m.Constructor {
	case 2010127419:
		t := m.To_contacts_importedContacts()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_ImportedContacts) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2010127419:
		m2 := &TLcontacts_importedContacts{Data: Contacts_ImportedContacts_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_ImportedContacts) To_contacts_importedContacts() *TLcontacts_importedContacts {
	return &TLcontacts_importedContacts{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_SentEmailCode
//
func (m Account_SentEmailCode) Encode() []byte {
	switch m.Constructor {
	case -2128640689:
		t := m.To_account_sentEmailCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_SentEmailCode) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2128640689:
		m2 := &TLaccount_sentEmailCode{Data: Account_SentEmailCode_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_SentEmailCode) To_account_sentEmailCode() *TLaccount_sentEmailCode {
	return &TLaccount_sentEmailCode{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AffectedHistory
//
func (m Messages_AffectedHistory) Encode() []byte {
	switch m.Constructor {
	case -1269012015:
		t := m.To_messages_affectedHistory()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_AffectedHistory) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1269012015:
		m2 := &TLmessages_affectedHistory{Data: Messages_AffectedHistory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_AffectedHistory) To_messages_affectedHistory() *TLmessages_affectedHistory {
	return &TLmessages_affectedHistory{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentCharge
//
func (m PaymentCharge) Encode() []byte {
	switch m.Constructor {
	case -368917890:
		t := m.To_paymentCharge()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentCharge) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -368917890:
		m2 := &TLpaymentCharge{Data: PaymentCharge_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PaymentCharge) To_paymentCharge() *TLpaymentCharge {
	return &TLpaymentCharge{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ImportedContact
//
func (m ImportedContact) Encode() []byte {
	switch m.Constructor {
	case -805141448:
		t := m.To_importedContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m ImportedContact) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -805141448:
		m2 := &TLimportedContact{Data: ImportedContact_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ImportedContact) To_importedContact() *TLimportedContact {
	return &TLimportedContact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputEncryptedChat
//
func (m InputEncryptedChat) Encode() []byte {
	switch m.Constructor {
	case -247351839:
		t := m.To_inputEncryptedChat()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputEncryptedChat) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -247351839:
		m2 := &TLinputEncryptedChat{Data: InputEncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputEncryptedChat) To_inputEncryptedChat() *TLinputEncryptedChat {
	return &TLinputEncryptedChat{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputEncryptedFile
//
func (m InputEncryptedFile) Encode() []byte {
	switch m.Constructor {
	case 406307684:
		t := m.To_inputEncryptedFileEmpty()
		return t.Encode()
	case 1690108678:
		t := m.To_inputEncryptedFileUploaded()
		return t.Encode()
	case 1511503333:
		t := m.To_inputEncryptedFile()
		return t.Encode()
	case 767652808:
		t := m.To_inputEncryptedFileBigUploaded()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputEncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 406307684:
		m2 := &TLinputEncryptedFileEmpty{Data: InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1690108678:
		m2 := &TLinputEncryptedFileUploaded{Data: InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1511503333:
		m2 := &TLinputEncryptedFile{Data: InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 767652808:
		m2 := &TLinputEncryptedFileBigUploaded{Data: InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputEncryptedFile) To_inputEncryptedFileEmpty() *TLinputEncryptedFileEmpty {
	return &TLinputEncryptedFileEmpty{
		Data: m.Data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFileUploaded() *TLinputEncryptedFileUploaded {
	return &TLinputEncryptedFileUploaded{
		Data: m.Data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFile() *TLinputEncryptedFile {
	return &TLinputEncryptedFile{
		Data: m.Data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFileBigUploaded() *TLinputEncryptedFileBigUploaded {
	return &TLinputEncryptedFileBigUploaded{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_HighScores
//
func (m Messages_HighScores) Encode() []byte {
	switch m.Constructor {
	case -1707344487:
		t := m.To_messages_highScores()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_HighScores) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1707344487:
		m2 := &TLmessages_highScores{Data: Messages_HighScores_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_HighScores) To_messages_highScores() *TLmessages_highScores {
	return &TLmessages_highScores{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_ChatFull
//
func (m Messages_ChatFull) Encode() []byte {
	switch m.Constructor {
	case -438840932:
		t := m.To_messages_chatFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_ChatFull) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -438840932:
		m2 := &TLmessages_chatFull{Data: Messages_ChatFull_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_ChatFull) To_messages_chatFull() *TLmessages_chatFull {
	return &TLmessages_chatFull{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_MessageStats
//
func (m Stats_MessageStats) Encode() []byte {
	switch m.Constructor {
	case -1986399595:
		t := m.To_stats_messageStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m Stats_MessageStats) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1986399595:
		m2 := &TLstats_messageStats{Data: Stats_MessageStats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Stats_MessageStats) To_stats_messageStats() *TLstats_messageStats {
	return &TLstats_messageStats{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_AutoDownloadSettings
//
func (m Account_AutoDownloadSettings) Encode() []byte {
	switch m.Constructor {
	case 1674235686:
		t := m.To_account_autoDownloadSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_AutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1674235686:
		m2 := &TLaccount_autoDownloadSettings{Data: Account_AutoDownloadSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_AutoDownloadSettings) To_account_autoDownloadSettings() *TLaccount_autoDownloadSettings {
	return &TLaccount_autoDownloadSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFolderPeer
//
func (m InputFolderPeer) Encode() []byte {
	switch m.Constructor {
	case -70073706:
		t := m.To_inputFolderPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFolderPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -70073706:
		m2 := &TLinputFolderPeer{Data: InputFolderPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputFolderPeer) To_inputFolderPeer() *TLinputFolderPeer {
	return &TLinputFolderPeer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ExportedChatInvite
//
func (m ExportedChatInvite) Encode() []byte {
	switch m.Constructor {
	case 1776236393:
		t := m.To_chatInviteEmpty()
		return t.Encode()
	case -64092740:
		t := m.To_chatInviteExported()
		return t.Encode()
	default:
		return nil
	}
}
func (m ExportedChatInvite) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1776236393:
		m2 := &TLchatInviteEmpty{Data: ExportedChatInvite_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -64092740:
		m2 := &TLchatInviteExported{Data: ExportedChatInvite_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ExportedChatInvite) To_chatInviteEmpty() *TLchatInviteEmpty {
	return &TLchatInviteEmpty{
		Data: m.Data,
	}
}
func (m ExportedChatInvite) To_chatInviteExported() *TLchatInviteExported {
	return &TLchatInviteExported{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Update
//
func (m Update) Encode() []byte {
	switch m.Constructor {
	case 522914557:
		t := m.To_updateNewMessage()
		return t.Encode()
	case 1318109142:
		t := m.To_updateMessageID()
		return t.Encode()
	case -1576161051:
		t := m.To_updateDeleteMessages()
		return t.Encode()
	case 1548249383:
		t := m.To_updateUserTyping()
		return t.Encode()
	case -1704596961:
		t := m.To_updateChatUserTyping()
		return t.Encode()
	case 125178264:
		t := m.To_updateChatParticipants()
		return t.Encode()
	case 469489699:
		t := m.To_updateUserStatus()
		return t.Encode()
	case -1489818765:
		t := m.To_updateUserName()
		return t.Encode()
	case -1791935732:
		t := m.To_updateUserPhoto()
		return t.Encode()
	case 314359194:
		t := m.To_updateNewEncryptedMessage()
		return t.Encode()
	case 386986326:
		t := m.To_updateEncryptedChatTyping()
		return t.Encode()
	case -1264392051:
		t := m.To_updateEncryption()
		return t.Encode()
	case 956179895:
		t := m.To_updateEncryptedMessagesRead()
		return t.Encode()
	case -364179876:
		t := m.To_updateChatParticipantAdd()
		return t.Encode()
	case 1851755554:
		t := m.To_updateChatParticipantDelete()
		return t.Encode()
	case -1906403213:
		t := m.To_updateDcOptions()
		return t.Encode()
	case -1094555409:
		t := m.To_updateNotifySettings()
		return t.Encode()
	case -337352679:
		t := m.To_updateServiceNotification()
		return t.Encode()
	case -298113238:
		t := m.To_updatePrivacy()
		return t.Encode()
	case 314130811:
		t := m.To_updateUserPhone()
		return t.Encode()
	case -1667805217:
		t := m.To_updateReadHistoryInbox()
		return t.Encode()
	case 791617983:
		t := m.To_updateReadHistoryOutbox()
		return t.Encode()
	case 2139689491:
		t := m.To_updateWebPage()
		return t.Encode()
	case 1757493555:
		t := m.To_updateReadMessagesContents()
		return t.Encode()
	case -352032773:
		t := m.To_updateChannelTooLong()
		return t.Encode()
	case -1227598250:
		t := m.To_updateChannel()
		return t.Encode()
	case 1656358105:
		t := m.To_updateNewChannelMessage()
		return t.Encode()
	case 856380452:
		t := m.To_updateReadChannelInbox()
		return t.Encode()
	case -1015733815:
		t := m.To_updateDeleteChannelMessages()
		return t.Encode()
	case -1734268085:
		t := m.To_updateChannelMessageViews()
		return t.Encode()
	case -1232070311:
		t := m.To_updateChatParticipantAdmin()
		return t.Encode()
	case 1753886890:
		t := m.To_updateNewStickerSet()
		return t.Encode()
	case 196268545:
		t := m.To_updateStickerSetsOrder()
		return t.Encode()
	case 1135492588:
		t := m.To_updateStickerSets()
		return t.Encode()
	case -1821035490:
		t := m.To_updateSavedGifs()
		return t.Encode()
	case 1417832080:
		t := m.To_updateBotInlineQuery()
		return t.Encode()
	case 239663460:
		t := m.To_updateBotInlineSend()
		return t.Encode()
	case 457133559:
		t := m.To_updateEditChannelMessage()
		return t.Encode()
	case -415938591:
		t := m.To_updateBotCallbackQuery()
		return t.Encode()
	case -469536605:
		t := m.To_updateEditMessage()
		return t.Encode()
	case -103646630:
		t := m.To_updateInlineBotCallbackQuery()
		return t.Encode()
	case 634833351:
		t := m.To_updateReadChannelOutbox()
		return t.Encode()
	case -299124375:
		t := m.To_updateDraftMessage()
		return t.Encode()
	case 1461528386:
		t := m.To_updateReadFeaturedStickers()
		return t.Encode()
	case -1706939360:
		t := m.To_updateRecentStickers()
		return t.Encode()
	case -1574314746:
		t := m.To_updateConfig()
		return t.Encode()
	case 861169551:
		t := m.To_updatePtsChanged()
		return t.Encode()
	case 1081547008:
		t := m.To_updateChannelWebPage()
		return t.Encode()
	case 1852826908:
		t := m.To_updateDialogPinned()
		return t.Encode()
	case -99664734:
		t := m.To_updatePinnedDialogs()
		return t.Encode()
	case -2095595325:
		t := m.To_updateBotWebhookJSON()
		return t.Encode()
	case -1684914010:
		t := m.To_updateBotWebhookJSONQuery()
		return t.Encode()
	case -523384512:
		t := m.To_updateBotShippingQuery()
		return t.Encode()
	case 1563376297:
		t := m.To_updateBotPrecheckoutQuery()
		return t.Encode()
	case -1425052898:
		t := m.To_updatePhoneCall()
		return t.Encode()
	case 1180041828:
		t := m.To_updateLangPackTooLong()
		return t.Encode()
	case 1442983757:
		t := m.To_updateLangPack()
		return t.Encode()
	case -451831443:
		t := m.To_updateFavedStickers()
		return t.Encode()
	case -1987495099:
		t := m.To_updateChannelReadMessagesContents()
		return t.Encode()
	case 1887741886:
		t := m.To_updateContactsReset()
		return t.Encode()
	case 1893427255:
		t := m.To_updateChannelAvailableMessages()
		return t.Encode()
	case -513517117:
		t := m.To_updateDialogUnreadMark()
		return t.Encode()
	case -1398708869:
		t := m.To_updateMessagePoll()
		return t.Encode()
	case 1421875280:
		t := m.To_updateChatDefaultBannedRights()
		return t.Encode()
	case 422972864:
		t := m.To_updateFolderPeers()
		return t.Encode()
	case 1786671974:
		t := m.To_updatePeerSettings()
		return t.Encode()
	case -1263546448:
		t := m.To_updatePeerLocated()
		return t.Encode()
	case 967122427:
		t := m.To_updateNewScheduledMessage()
		return t.Encode()
	case -1870238482:
		t := m.To_updateDeleteScheduledMessages()
		return t.Encode()
	case -2112423005:
		t := m.To_updateTheme()
		return t.Encode()
	case -2027964103:
		t := m.To_updateGeoLiveViewed()
		return t.Encode()
	case 1448076945:
		t := m.To_updateLoginToken()
		return t.Encode()
	case 1123585836:
		t := m.To_updateMessagePollVote()
		return t.Encode()
	case 654302845:
		t := m.To_updateDialogFilter()
		return t.Encode()
	case -1512627963:
		t := m.To_updateDialogFilterOrder()
		return t.Encode()
	case 889491791:
		t := m.To_updateDialogFilters()
		return t.Encode()
	case 643940105:
		t := m.To_updatePhoneCallSignalingData()
		return t.Encode()
	case 1708307556:
		t := m.To_updateChannelParticipant()
		return t.Encode()
	case 1854571743:
		t := m.To_updateChannelMessageForwards()
		return t.Encode()
	case 482860628:
		t := m.To_updateReadChannelDiscussionInbox()
		return t.Encode()
	case 1178116716:
		t := m.To_updateReadChannelDiscussionOutbox()
		return t.Encode()
	case 610945826:
		t := m.To_updatePeerBlocked()
		return t.Encode()
	case -13975905:
		t := m.To_updateChannelUserTyping()
		return t.Encode()
	case -309990731:
		t := m.To_updatePinnedMessages()
		return t.Encode()
	case -2054649973:
		t := m.To_updatePinnedChannelMessages()
		return t.Encode()
	default:
		return nil
	}
}
func (m Update) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 522914557:
		m2 := &TLupdateNewMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1318109142:
		m2 := &TLupdateMessageID{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1576161051:
		m2 := &TLupdateDeleteMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1548249383:
		m2 := &TLupdateUserTyping{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1704596961:
		m2 := &TLupdateChatUserTyping{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 125178264:
		m2 := &TLupdateChatParticipants{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 469489699:
		m2 := &TLupdateUserStatus{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1489818765:
		m2 := &TLupdateUserName{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1791935732:
		m2 := &TLupdateUserPhoto{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 314359194:
		m2 := &TLupdateNewEncryptedMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 386986326:
		m2 := &TLupdateEncryptedChatTyping{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1264392051:
		m2 := &TLupdateEncryption{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 956179895:
		m2 := &TLupdateEncryptedMessagesRead{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -364179876:
		m2 := &TLupdateChatParticipantAdd{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1851755554:
		m2 := &TLupdateChatParticipantDelete{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1906403213:
		m2 := &TLupdateDcOptions{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1094555409:
		m2 := &TLupdateNotifySettings{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -337352679:
		m2 := &TLupdateServiceNotification{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -298113238:
		m2 := &TLupdatePrivacy{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 314130811:
		m2 := &TLupdateUserPhone{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1667805217:
		m2 := &TLupdateReadHistoryInbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 791617983:
		m2 := &TLupdateReadHistoryOutbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2139689491:
		m2 := &TLupdateWebPage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1757493555:
		m2 := &TLupdateReadMessagesContents{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -352032773:
		m2 := &TLupdateChannelTooLong{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1227598250:
		m2 := &TLupdateChannel{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1656358105:
		m2 := &TLupdateNewChannelMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 856380452:
		m2 := &TLupdateReadChannelInbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1015733815:
		m2 := &TLupdateDeleteChannelMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1734268085:
		m2 := &TLupdateChannelMessageViews{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1232070311:
		m2 := &TLupdateChatParticipantAdmin{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1753886890:
		m2 := &TLupdateNewStickerSet{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 196268545:
		m2 := &TLupdateStickerSetsOrder{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1135492588:
		m2 := &TLupdateStickerSets{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1821035490:
		m2 := &TLupdateSavedGifs{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1417832080:
		m2 := &TLupdateBotInlineQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 239663460:
		m2 := &TLupdateBotInlineSend{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 457133559:
		m2 := &TLupdateEditChannelMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -415938591:
		m2 := &TLupdateBotCallbackQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -469536605:
		m2 := &TLupdateEditMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -103646630:
		m2 := &TLupdateInlineBotCallbackQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 634833351:
		m2 := &TLupdateReadChannelOutbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -299124375:
		m2 := &TLupdateDraftMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1461528386:
		m2 := &TLupdateReadFeaturedStickers{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1706939360:
		m2 := &TLupdateRecentStickers{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1574314746:
		m2 := &TLupdateConfig{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 861169551:
		m2 := &TLupdatePtsChanged{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1081547008:
		m2 := &TLupdateChannelWebPage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1852826908:
		m2 := &TLupdateDialogPinned{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -99664734:
		m2 := &TLupdatePinnedDialogs{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2095595325:
		m2 := &TLupdateBotWebhookJSON{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1684914010:
		m2 := &TLupdateBotWebhookJSONQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -523384512:
		m2 := &TLupdateBotShippingQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1563376297:
		m2 := &TLupdateBotPrecheckoutQuery{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1425052898:
		m2 := &TLupdatePhoneCall{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1180041828:
		m2 := &TLupdateLangPackTooLong{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1442983757:
		m2 := &TLupdateLangPack{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -451831443:
		m2 := &TLupdateFavedStickers{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1987495099:
		m2 := &TLupdateChannelReadMessagesContents{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1887741886:
		m2 := &TLupdateContactsReset{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1893427255:
		m2 := &TLupdateChannelAvailableMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -513517117:
		m2 := &TLupdateDialogUnreadMark{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1398708869:
		m2 := &TLupdateMessagePoll{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1421875280:
		m2 := &TLupdateChatDefaultBannedRights{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 422972864:
		m2 := &TLupdateFolderPeers{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1786671974:
		m2 := &TLupdatePeerSettings{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1263546448:
		m2 := &TLupdatePeerLocated{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 967122427:
		m2 := &TLupdateNewScheduledMessage{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1870238482:
		m2 := &TLupdateDeleteScheduledMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2112423005:
		m2 := &TLupdateTheme{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2027964103:
		m2 := &TLupdateGeoLiveViewed{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1448076945:
		m2 := &TLupdateLoginToken{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1123585836:
		m2 := &TLupdateMessagePollVote{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 654302845:
		m2 := &TLupdateDialogFilter{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1512627963:
		m2 := &TLupdateDialogFilterOrder{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 889491791:
		m2 := &TLupdateDialogFilters{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 643940105:
		m2 := &TLupdatePhoneCallSignalingData{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1708307556:
		m2 := &TLupdateChannelParticipant{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1854571743:
		m2 := &TLupdateChannelMessageForwards{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 482860628:
		m2 := &TLupdateReadChannelDiscussionInbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1178116716:
		m2 := &TLupdateReadChannelDiscussionOutbox{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 610945826:
		m2 := &TLupdatePeerBlocked{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -13975905:
		m2 := &TLupdateChannelUserTyping{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -309990731:
		m2 := &TLupdatePinnedMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2054649973:
		m2 := &TLupdatePinnedChannelMessages{Data: Update_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Update) To_updateNewMessage() *TLupdateNewMessage {
	return &TLupdateNewMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateMessageID() *TLupdateMessageID {
	return &TLupdateMessageID{
		Data: m.Data,
	}
}
func (m Update) To_updateDeleteMessages() *TLupdateDeleteMessages {
	return &TLupdateDeleteMessages{
		Data: m.Data,
	}
}
func (m Update) To_updateUserTyping() *TLupdateUserTyping {
	return &TLupdateUserTyping{
		Data: m.Data,
	}
}
func (m Update) To_updateChatUserTyping() *TLupdateChatUserTyping {
	return &TLupdateChatUserTyping{
		Data: m.Data,
	}
}
func (m Update) To_updateChatParticipants() *TLupdateChatParticipants {
	return &TLupdateChatParticipants{
		Data: m.Data,
	}
}
func (m Update) To_updateUserStatus() *TLupdateUserStatus {
	return &TLupdateUserStatus{
		Data: m.Data,
	}
}
func (m Update) To_updateUserName() *TLupdateUserName {
	return &TLupdateUserName{
		Data: m.Data,
	}
}
func (m Update) To_updateUserPhoto() *TLupdateUserPhoto {
	return &TLupdateUserPhoto{
		Data: m.Data,
	}
}
func (m Update) To_updateNewEncryptedMessage() *TLupdateNewEncryptedMessage {
	return &TLupdateNewEncryptedMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateEncryptedChatTyping() *TLupdateEncryptedChatTyping {
	return &TLupdateEncryptedChatTyping{
		Data: m.Data,
	}
}
func (m Update) To_updateEncryption() *TLupdateEncryption {
	return &TLupdateEncryption{
		Data: m.Data,
	}
}
func (m Update) To_updateEncryptedMessagesRead() *TLupdateEncryptedMessagesRead {
	return &TLupdateEncryptedMessagesRead{
		Data: m.Data,
	}
}
func (m Update) To_updateChatParticipantAdd() *TLupdateChatParticipantAdd {
	return &TLupdateChatParticipantAdd{
		Data: m.Data,
	}
}
func (m Update) To_updateChatParticipantDelete() *TLupdateChatParticipantDelete {
	return &TLupdateChatParticipantDelete{
		Data: m.Data,
	}
}
func (m Update) To_updateDcOptions() *TLupdateDcOptions {
	return &TLupdateDcOptions{
		Data: m.Data,
	}
}
func (m Update) To_updateNotifySettings() *TLupdateNotifySettings {
	return &TLupdateNotifySettings{
		Data: m.Data,
	}
}
func (m Update) To_updateServiceNotification() *TLupdateServiceNotification {
	return &TLupdateServiceNotification{
		Data: m.Data,
	}
}
func (m Update) To_updatePrivacy() *TLupdatePrivacy {
	return &TLupdatePrivacy{
		Data: m.Data,
	}
}
func (m Update) To_updateUserPhone() *TLupdateUserPhone {
	return &TLupdateUserPhone{
		Data: m.Data,
	}
}
func (m Update) To_updateReadHistoryInbox() *TLupdateReadHistoryInbox {
	return &TLupdateReadHistoryInbox{
		Data: m.Data,
	}
}
func (m Update) To_updateReadHistoryOutbox() *TLupdateReadHistoryOutbox {
	return &TLupdateReadHistoryOutbox{
		Data: m.Data,
	}
}
func (m Update) To_updateWebPage() *TLupdateWebPage {
	return &TLupdateWebPage{
		Data: m.Data,
	}
}
func (m Update) To_updateReadMessagesContents() *TLupdateReadMessagesContents {
	return &TLupdateReadMessagesContents{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelTooLong() *TLupdateChannelTooLong {
	return &TLupdateChannelTooLong{
		Data: m.Data,
	}
}
func (m Update) To_updateChannel() *TLupdateChannel {
	return &TLupdateChannel{
		Data: m.Data,
	}
}
func (m Update) To_updateNewChannelMessage() *TLupdateNewChannelMessage {
	return &TLupdateNewChannelMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateReadChannelInbox() *TLupdateReadChannelInbox {
	return &TLupdateReadChannelInbox{
		Data: m.Data,
	}
}
func (m Update) To_updateDeleteChannelMessages() *TLupdateDeleteChannelMessages {
	return &TLupdateDeleteChannelMessages{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelMessageViews() *TLupdateChannelMessageViews {
	return &TLupdateChannelMessageViews{
		Data: m.Data,
	}
}
func (m Update) To_updateChatParticipantAdmin() *TLupdateChatParticipantAdmin {
	return &TLupdateChatParticipantAdmin{
		Data: m.Data,
	}
}
func (m Update) To_updateNewStickerSet() *TLupdateNewStickerSet {
	return &TLupdateNewStickerSet{
		Data: m.Data,
	}
}
func (m Update) To_updateStickerSetsOrder() *TLupdateStickerSetsOrder {
	return &TLupdateStickerSetsOrder{
		Data: m.Data,
	}
}
func (m Update) To_updateStickerSets() *TLupdateStickerSets {
	return &TLupdateStickerSets{
		Data: m.Data,
	}
}
func (m Update) To_updateSavedGifs() *TLupdateSavedGifs {
	return &TLupdateSavedGifs{
		Data: m.Data,
	}
}
func (m Update) To_updateBotInlineQuery() *TLupdateBotInlineQuery {
	return &TLupdateBotInlineQuery{
		Data: m.Data,
	}
}
func (m Update) To_updateBotInlineSend() *TLupdateBotInlineSend {
	return &TLupdateBotInlineSend{
		Data: m.Data,
	}
}
func (m Update) To_updateEditChannelMessage() *TLupdateEditChannelMessage {
	return &TLupdateEditChannelMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateBotCallbackQuery() *TLupdateBotCallbackQuery {
	return &TLupdateBotCallbackQuery{
		Data: m.Data,
	}
}
func (m Update) To_updateEditMessage() *TLupdateEditMessage {
	return &TLupdateEditMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateInlineBotCallbackQuery() *TLupdateInlineBotCallbackQuery {
	return &TLupdateInlineBotCallbackQuery{
		Data: m.Data,
	}
}
func (m Update) To_updateReadChannelOutbox() *TLupdateReadChannelOutbox {
	return &TLupdateReadChannelOutbox{
		Data: m.Data,
	}
}
func (m Update) To_updateDraftMessage() *TLupdateDraftMessage {
	return &TLupdateDraftMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateReadFeaturedStickers() *TLupdateReadFeaturedStickers {
	return &TLupdateReadFeaturedStickers{
		Data: m.Data,
	}
}
func (m Update) To_updateRecentStickers() *TLupdateRecentStickers {
	return &TLupdateRecentStickers{
		Data: m.Data,
	}
}
func (m Update) To_updateConfig() *TLupdateConfig {
	return &TLupdateConfig{
		Data: m.Data,
	}
}
func (m Update) To_updatePtsChanged() *TLupdatePtsChanged {
	return &TLupdatePtsChanged{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelWebPage() *TLupdateChannelWebPage {
	return &TLupdateChannelWebPage{
		Data: m.Data,
	}
}
func (m Update) To_updateDialogPinned() *TLupdateDialogPinned {
	return &TLupdateDialogPinned{
		Data: m.Data,
	}
}
func (m Update) To_updatePinnedDialogs() *TLupdatePinnedDialogs {
	return &TLupdatePinnedDialogs{
		Data: m.Data,
	}
}
func (m Update) To_updateBotWebhookJSON() *TLupdateBotWebhookJSON {
	return &TLupdateBotWebhookJSON{
		Data: m.Data,
	}
}
func (m Update) To_updateBotWebhookJSONQuery() *TLupdateBotWebhookJSONQuery {
	return &TLupdateBotWebhookJSONQuery{
		Data: m.Data,
	}
}
func (m Update) To_updateBotShippingQuery() *TLupdateBotShippingQuery {
	return &TLupdateBotShippingQuery{
		Data: m.Data,
	}
}
func (m Update) To_updateBotPrecheckoutQuery() *TLupdateBotPrecheckoutQuery {
	return &TLupdateBotPrecheckoutQuery{
		Data: m.Data,
	}
}
func (m Update) To_updatePhoneCall() *TLupdatePhoneCall {
	return &TLupdatePhoneCall{
		Data: m.Data,
	}
}
func (m Update) To_updateLangPackTooLong() *TLupdateLangPackTooLong {
	return &TLupdateLangPackTooLong{
		Data: m.Data,
	}
}
func (m Update) To_updateLangPack() *TLupdateLangPack {
	return &TLupdateLangPack{
		Data: m.Data,
	}
}
func (m Update) To_updateFavedStickers() *TLupdateFavedStickers {
	return &TLupdateFavedStickers{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelReadMessagesContents() *TLupdateChannelReadMessagesContents {
	return &TLupdateChannelReadMessagesContents{
		Data: m.Data,
	}
}
func (m Update) To_updateContactsReset() *TLupdateContactsReset {
	return &TLupdateContactsReset{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelAvailableMessages() *TLupdateChannelAvailableMessages {
	return &TLupdateChannelAvailableMessages{
		Data: m.Data,
	}
}
func (m Update) To_updateDialogUnreadMark() *TLupdateDialogUnreadMark {
	return &TLupdateDialogUnreadMark{
		Data: m.Data,
	}
}
func (m Update) To_updateMessagePoll() *TLupdateMessagePoll {
	return &TLupdateMessagePoll{
		Data: m.Data,
	}
}
func (m Update) To_updateChatDefaultBannedRights() *TLupdateChatDefaultBannedRights {
	return &TLupdateChatDefaultBannedRights{
		Data: m.Data,
	}
}
func (m Update) To_updateFolderPeers() *TLupdateFolderPeers {
	return &TLupdateFolderPeers{
		Data: m.Data,
	}
}
func (m Update) To_updatePeerSettings() *TLupdatePeerSettings {
	return &TLupdatePeerSettings{
		Data: m.Data,
	}
}
func (m Update) To_updatePeerLocated() *TLupdatePeerLocated {
	return &TLupdatePeerLocated{
		Data: m.Data,
	}
}
func (m Update) To_updateNewScheduledMessage() *TLupdateNewScheduledMessage {
	return &TLupdateNewScheduledMessage{
		Data: m.Data,
	}
}
func (m Update) To_updateDeleteScheduledMessages() *TLupdateDeleteScheduledMessages {
	return &TLupdateDeleteScheduledMessages{
		Data: m.Data,
	}
}
func (m Update) To_updateTheme() *TLupdateTheme {
	return &TLupdateTheme{
		Data: m.Data,
	}
}
func (m Update) To_updateGeoLiveViewed() *TLupdateGeoLiveViewed {
	return &TLupdateGeoLiveViewed{
		Data: m.Data,
	}
}
func (m Update) To_updateLoginToken() *TLupdateLoginToken {
	return &TLupdateLoginToken{
		Data: m.Data,
	}
}
func (m Update) To_updateMessagePollVote() *TLupdateMessagePollVote {
	return &TLupdateMessagePollVote{
		Data: m.Data,
	}
}
func (m Update) To_updateDialogFilter() *TLupdateDialogFilter {
	return &TLupdateDialogFilter{
		Data: m.Data,
	}
}
func (m Update) To_updateDialogFilterOrder() *TLupdateDialogFilterOrder {
	return &TLupdateDialogFilterOrder{
		Data: m.Data,
	}
}
func (m Update) To_updateDialogFilters() *TLupdateDialogFilters {
	return &TLupdateDialogFilters{
		Data: m.Data,
	}
}
func (m Update) To_updatePhoneCallSignalingData() *TLupdatePhoneCallSignalingData {
	return &TLupdatePhoneCallSignalingData{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelParticipant() *TLupdateChannelParticipant {
	return &TLupdateChannelParticipant{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelMessageForwards() *TLupdateChannelMessageForwards {
	return &TLupdateChannelMessageForwards{
		Data: m.Data,
	}
}
func (m Update) To_updateReadChannelDiscussionInbox() *TLupdateReadChannelDiscussionInbox {
	return &TLupdateReadChannelDiscussionInbox{
		Data: m.Data,
	}
}
func (m Update) To_updateReadChannelDiscussionOutbox() *TLupdateReadChannelDiscussionOutbox {
	return &TLupdateReadChannelDiscussionOutbox{
		Data: m.Data,
	}
}
func (m Update) To_updatePeerBlocked() *TLupdatePeerBlocked {
	return &TLupdatePeerBlocked{
		Data: m.Data,
	}
}
func (m Update) To_updateChannelUserTyping() *TLupdateChannelUserTyping {
	return &TLupdateChannelUserTyping{
		Data: m.Data,
	}
}
func (m Update) To_updatePinnedMessages() *TLupdatePinnedMessages {
	return &TLupdatePinnedMessages{
		Data: m.Data,
	}
}
func (m Update) To_updatePinnedChannelMessages() *TLupdatePinnedChannelMessages {
	return &TLupdatePinnedChannelMessages{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_CountriesList
//
func (m Help_CountriesList) Encode() []byte {
	switch m.Constructor {
	case -1815339214:
		t := m.To_help_countriesListNotModified()
		return t.Encode()
	case -2016381538:
		t := m.To_help_countriesList()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_CountriesList) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1815339214:
		m2 := &TLhelp_countriesListNotModified{Data: Help_CountriesList_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2016381538:
		m2 := &TLhelp_countriesList{Data: Help_CountriesList_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_CountriesList) To_help_countriesListNotModified() *TLhelp_countriesListNotModified {
	return &TLhelp_countriesListNotModified{
		Data: m.Data,
	}
}
func (m Help_CountriesList) To_help_countriesList() *TLhelp_countriesList {
	return &TLhelp_countriesList{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeerCategory
//
func (m TopPeerCategory) Encode() []byte {
	switch m.Constructor {
	case -1419371685:
		t := m.To_topPeerCategoryBotsPM()
		return t.Encode()
	case 344356834:
		t := m.To_topPeerCategoryBotsInline()
		return t.Encode()
	case 104314861:
		t := m.To_topPeerCategoryCorrespondents()
		return t.Encode()
	case -1122524854:
		t := m.To_topPeerCategoryGroups()
		return t.Encode()
	case 371037736:
		t := m.To_topPeerCategoryChannels()
		return t.Encode()
	case 511092620:
		t := m.To_topPeerCategoryPhoneCalls()
		return t.Encode()
	case -1472172887:
		t := m.To_topPeerCategoryForwardUsers()
		return t.Encode()
	case -68239120:
		t := m.To_topPeerCategoryForwardChats()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeerCategory) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1419371685:
		m2 := &TLtopPeerCategoryBotsPM{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 344356834:
		m2 := &TLtopPeerCategoryBotsInline{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 104314861:
		m2 := &TLtopPeerCategoryCorrespondents{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1122524854:
		m2 := &TLtopPeerCategoryGroups{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 371037736:
		m2 := &TLtopPeerCategoryChannels{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 511092620:
		m2 := &TLtopPeerCategoryPhoneCalls{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1472172887:
		m2 := &TLtopPeerCategoryForwardUsers{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -68239120:
		m2 := &TLtopPeerCategoryForwardChats{Data: TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m TopPeerCategory) To_topPeerCategoryBotsPM() *TLtopPeerCategoryBotsPM {
	return &TLtopPeerCategoryBotsPM{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryBotsInline() *TLtopPeerCategoryBotsInline {
	return &TLtopPeerCategoryBotsInline{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryCorrespondents() *TLtopPeerCategoryCorrespondents {
	return &TLtopPeerCategoryCorrespondents{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryGroups() *TLtopPeerCategoryGroups {
	return &TLtopPeerCategoryGroups{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryChannels() *TLtopPeerCategoryChannels {
	return &TLtopPeerCategoryChannels{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryPhoneCalls() *TLtopPeerCategoryPhoneCalls {
	return &TLtopPeerCategoryPhoneCalls{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryForwardUsers() *TLtopPeerCategoryForwardUsers {
	return &TLtopPeerCategoryForwardUsers{
		Data: m.Data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryForwardChats() *TLtopPeerCategoryForwardChats {
	return &TLtopPeerCategoryForwardChats{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFile
//
func (m InputFile) Encode() []byte {
	switch m.Constructor {
	case -181407105:
		t := m.To_inputFile()
		return t.Encode()
	case -95482955:
		t := m.To_inputFileBig()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -181407105:
		m2 := &TLinputFile{Data: InputFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -95482955:
		m2 := &TLinputFileBig{Data: InputFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputFile) To_inputFile() *TLinputFile {
	return &TLinputFile{
		Data: m.Data,
	}
}
func (m InputFile) To_inputFileBig() *TLinputFileBig {
	return &TLinputFileBig{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Themes
//
func (m Account_Themes) Encode() []byte {
	switch m.Constructor {
	case -199313886:
		t := m.To_account_themesNotModified()
		return t.Encode()
	case 2137482273:
		t := m.To_account_themes()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_Themes) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -199313886:
		m2 := &TLaccount_themesNotModified{Data: Account_Themes_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2137482273:
		m2 := &TLaccount_themes{Data: Account_Themes_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_Themes) To_account_themesNotModified() *TLaccount_themesNotModified {
	return &TLaccount_themesNotModified{
		Data: m.Data,
	}
}
func (m Account_Themes) To_account_themes() *TLaccount_themes {
	return &TLaccount_themes{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Document
//
func (m Document) Encode() []byte {
	switch m.Constructor {
	case 922273905:
		t := m.To_documentEmpty()
		return t.Encode()
	case 512177195:
		t := m.To_document()
		return t.Encode()
	default:
		return nil
	}
}
func (m Document) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 922273905:
		m2 := &TLdocumentEmpty{Data: Document_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 512177195:
		m2 := &TLdocument{Data: Document_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Document) To_documentEmpty() *TLdocumentEmpty {
	return &TLdocumentEmpty{
		Data: m.Data,
	}
}
func (m Document) To_document() *TLdocument {
	return &TLdocument{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPrivacyKey
//
func (m InputPrivacyKey) Encode() []byte {
	switch m.Constructor {
	case 1335282456:
		t := m.To_inputPrivacyKeyStatusTimestamp()
		return t.Encode()
	case -1107622874:
		t := m.To_inputPrivacyKeyChatInvite()
		return t.Encode()
	case -88417185:
		t := m.To_inputPrivacyKeyPhoneCall()
		return t.Encode()
	case -610373422:
		t := m.To_inputPrivacyKeyPhoneP2P()
		return t.Encode()
	case -1529000952:
		t := m.To_inputPrivacyKeyForwards()
		return t.Encode()
	case 1461304012:
		t := m.To_inputPrivacyKeyProfilePhoto()
		return t.Encode()
	case 55761658:
		t := m.To_inputPrivacyKeyPhoneNumber()
		return t.Encode()
	case -786326563:
		t := m.To_inputPrivacyKeyAddedByPhone()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPrivacyKey) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1335282456:
		m2 := &TLinputPrivacyKeyStatusTimestamp{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1107622874:
		m2 := &TLinputPrivacyKeyChatInvite{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -88417185:
		m2 := &TLinputPrivacyKeyPhoneCall{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -610373422:
		m2 := &TLinputPrivacyKeyPhoneP2P{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1529000952:
		m2 := &TLinputPrivacyKeyForwards{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1461304012:
		m2 := &TLinputPrivacyKeyProfilePhoto{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 55761658:
		m2 := &TLinputPrivacyKeyPhoneNumber{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -786326563:
		m2 := &TLinputPrivacyKeyAddedByPhone{Data: InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPrivacyKey) To_inputPrivacyKeyStatusTimestamp() *TLinputPrivacyKeyStatusTimestamp {
	return &TLinputPrivacyKeyStatusTimestamp{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyChatInvite() *TLinputPrivacyKeyChatInvite {
	return &TLinputPrivacyKeyChatInvite{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneCall() *TLinputPrivacyKeyPhoneCall {
	return &TLinputPrivacyKeyPhoneCall{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneP2P() *TLinputPrivacyKeyPhoneP2P {
	return &TLinputPrivacyKeyPhoneP2P{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyForwards() *TLinputPrivacyKeyForwards {
	return &TLinputPrivacyKeyForwards{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyProfilePhoto() *TLinputPrivacyKeyProfilePhoto {
	return &TLinputPrivacyKeyProfilePhoto{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneNumber() *TLinputPrivacyKeyPhoneNumber {
	return &TLinputPrivacyKeyPhoneNumber{
		Data: m.Data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyAddedByPhone() *TLinputPrivacyKeyAddedByPhone {
	return &TLinputPrivacyKeyAddedByPhone{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValue
//
func (m SecureValue) Encode() []byte {
	switch m.Constructor {
	case 411017418:
		t := m.To_secureValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValue) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 411017418:
		m2 := &TLsecureValue{Data: SecureValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureValue) To_secureValue() *TLsecureValue {
	return &TLsecureValue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecurePlainData
//
func (m SecurePlainData) Encode() []byte {
	switch m.Constructor {
	case 2103482845:
		t := m.To_securePlainPhone()
		return t.Encode()
	case 569137759:
		t := m.To_securePlainEmail()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecurePlainData) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2103482845:
		m2 := &TLsecurePlainPhone{Data: SecurePlainData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 569137759:
		m2 := &TLsecurePlainEmail{Data: SecurePlainData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecurePlainData) To_securePlainPhone() *TLsecurePlainPhone {
	return &TLsecurePlainPhone{
		Data: m.Data,
	}
}
func (m SecurePlainData) To_securePlainEmail() *TLsecurePlainEmail {
	return &TLsecurePlainEmail{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AllStickers
//
func (m Messages_AllStickers) Encode() []byte {
	switch m.Constructor {
	case -395967805:
		t := m.To_messages_allStickersNotModified()
		return t.Encode()
	case -302170017:
		t := m.To_messages_allStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_AllStickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -395967805:
		m2 := &TLmessages_allStickersNotModified{Data: Messages_AllStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -302170017:
		m2 := &TLmessages_allStickers{Data: Messages_AllStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_AllStickers) To_messages_allStickersNotModified() *TLmessages_allStickersNotModified {
	return &TLmessages_allStickersNotModified{
		Data: m.Data,
	}
}
func (m Messages_AllStickers) To_messages_allStickers() *TLmessages_allStickers {
	return &TLmessages_allStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiURL
//
func (m EmojiURL) Encode() []byte {
	switch m.Constructor {
	case -1519029347:
		t := m.To_emojiURL()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiURL) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1519029347:
		m2 := &TLemojiURL{Data: EmojiURL_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EmojiURL) To_emojiURL() *TLemojiURL {
	return &TLemojiURL{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollResults
//
func (m PollResults) Encode() []byte {
	switch m.Constructor {
	case -1159937629:
		t := m.To_pollResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollResults) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1159937629:
		m2 := &TLpollResults{Data: PollResults_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PollResults) To_pollResults() *TLpollResults {
	return &TLpollResults{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:JSONValue
//
func (m JSONValue) Encode() []byte {
	switch m.Constructor {
	case 1064139624:
		t := m.To_jsonNull()
		return t.Encode()
	case -952869270:
		t := m.To_jsonBool()
		return t.Encode()
	case 736157604:
		t := m.To_jsonNumber()
		return t.Encode()
	case -1222740358:
		t := m.To_jsonString()
		return t.Encode()
	case -146520221:
		t := m.To_jsonArray()
		return t.Encode()
	case -1715350371:
		t := m.To_jsonObject()
		return t.Encode()
	default:
		return nil
	}
}
func (m JSONValue) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1064139624:
		m2 := &TLjsonNull{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -952869270:
		m2 := &TLjsonBool{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 736157604:
		m2 := &TLjsonNumber{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1222740358:
		m2 := &TLjsonString{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -146520221:
		m2 := &TLjsonArray{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1715350371:
		m2 := &TLjsonObject{Data: JSONValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m JSONValue) To_jsonNull() *TLjsonNull {
	return &TLjsonNull{
		Data: m.Data,
	}
}
func (m JSONValue) To_jsonBool() *TLjsonBool {
	return &TLjsonBool{
		Data: m.Data,
	}
}
func (m JSONValue) To_jsonNumber() *TLjsonNumber {
	return &TLjsonNumber{
		Data: m.Data,
	}
}
func (m JSONValue) To_jsonString() *TLjsonString {
	return &TLjsonString{
		Data: m.Data,
	}
}
func (m JSONValue) To_jsonArray() *TLjsonArray {
	return &TLjsonArray{
		Data: m.Data,
	}
}
func (m JSONValue) To_jsonObject() *TLjsonObject {
	return &TLjsonObject{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_InviteText
//
func (m Help_InviteText) Encode() []byte {
	switch m.Constructor {
	case 415997816:
		t := m.To_help_inviteText()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_InviteText) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 415997816:
		m2 := &TLhelp_inviteText{Data: Help_InviteText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_InviteText) To_help_inviteText() *TLhelp_inviteText {
	return &TLhelp_inviteText{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputMessage
//
func (m InputMessage) Encode() []byte {
	switch m.Constructor {
	case -1502174430:
		t := m.To_inputMessageID()
		return t.Encode()
	case -1160215659:
		t := m.To_inputMessageReplyTo()
		return t.Encode()
	case -2037963464:
		t := m.To_inputMessagePinned()
		return t.Encode()
	case -1392895362:
		t := m.To_inputMessageCallbackQuery()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1502174430:
		m2 := &TLinputMessageID{Data: InputMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1160215659:
		m2 := &TLinputMessageReplyTo{Data: InputMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2037963464:
		m2 := &TLinputMessagePinned{Data: InputMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1392895362:
		m2 := &TLinputMessageCallbackQuery{Data: InputMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputMessage) To_inputMessageID() *TLinputMessageID {
	return &TLinputMessageID{
		Data: m.Data,
	}
}
func (m InputMessage) To_inputMessageReplyTo() *TLinputMessageReplyTo {
	return &TLinputMessageReplyTo{
		Data: m.Data,
	}
}
func (m InputMessage) To_inputMessagePinned() *TLinputMessagePinned {
	return &TLinputMessagePinned{
		Data: m.Data,
	}
}
func (m InputMessage) To_inputMessageCallbackQuery() *TLinputMessageCallbackQuery {
	return &TLinputMessageCallbackQuery{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PasswordInputSettings
//
func (m Account_PasswordInputSettings) Encode() []byte {
	switch m.Constructor {
	case -1036572727:
		t := m.To_account_passwordInputSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_PasswordInputSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1036572727:
		m2 := &TLaccount_passwordInputSettings{Data: Account_PasswordInputSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_PasswordInputSettings) To_account_passwordInputSettings() *TLaccount_passwordInputSettings {
	return &TLaccount_passwordInputSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputDocument
//
func (m InputDocument) Encode() []byte {
	switch m.Constructor {
	case 1928391342:
		t := m.To_inputDocumentEmpty()
		return t.Encode()
	case 448771445:
		t := m.To_inputDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputDocument) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1928391342:
		m2 := &TLinputDocumentEmpty{Data: InputDocument_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 448771445:
		m2 := &TLinputDocument{Data: InputDocument_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputDocument) To_inputDocumentEmpty() *TLinputDocumentEmpty {
	return &TLinputDocumentEmpty{
		Data: m.Data,
	}
}
func (m InputDocument) To_inputDocument() *TLinputDocument {
	return &TLinputDocument{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsDateRangeDays
//
func (m StatsDateRangeDays) Encode() []byte {
	switch m.Constructor {
	case -1237848657:
		t := m.To_statsDateRangeDays()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsDateRangeDays) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1237848657:
		m2 := &TLstatsDateRangeDays{Data: StatsDateRangeDays_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsDateRangeDays) To_statsDateRangeDays() *TLstatsDateRangeDays {
	return &TLstatsDateRangeDays{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SearchCounter
//
func (m Messages_SearchCounter) Encode() []byte {
	switch m.Constructor {
	case -398136321:
		t := m.To_messages_searchCounter()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_SearchCounter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -398136321:
		m2 := &TLmessages_searchCounter{Data: Messages_SearchCounter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_SearchCounter) To_messages_searchCounter() *TLmessages_searchCounter {
	return &TLmessages_searchCounter{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CdnConfig
//
func (m CdnConfig) Encode() []byte {
	switch m.Constructor {
	case 1462101002:
		t := m.To_cdnConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m CdnConfig) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1462101002:
		m2 := &TLcdnConfig{Data: CdnConfig_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m CdnConfig) To_cdnConfig() *TLcdnConfig {
	return &TLcdnConfig{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CodeSettings
//
func (m CodeSettings) Encode() []byte {
	switch m.Constructor {
	case -557924733:
		t := m.To_codeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m CodeSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -557924733:
		m2 := &TLcodeSettings{Data: CodeSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m CodeSettings) To_codeSettings() *TLcodeSettings {
	return &TLcodeSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Error
//
func (m Error) Encode() []byte {
	switch m.Constructor {
	case -994444869:
		t := m.To_error()
		return t.Encode()
	default:
		return nil
	}
}
func (m Error) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -994444869:
		m2 := &TLerror{Data: Error_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Error) To_error() *TLerror {
	return &TLerror{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageTableCell
//
func (m PageTableCell) Encode() []byte {
	switch m.Constructor {
	case 878078826:
		t := m.To_pageTableCell()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageTableCell) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 878078826:
		m2 := &TLpageTableCell{Data: PageTableCell_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageTableCell) To_pageTableCell() *TLpageTableCell {
	return &TLpageTableCell{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BankCardOpenUrl
//
func (m BankCardOpenUrl) Encode() []byte {
	switch m.Constructor {
	case -177732982:
		t := m.To_bankCardOpenUrl()
		return t.Encode()
	default:
		return nil
	}
}
func (m BankCardOpenUrl) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -177732982:
		m2 := &TLbankCardOpenUrl{Data: BankCardOpenUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BankCardOpenUrl) To_bankCardOpenUrl() *TLbankCardOpenUrl {
	return &TLbankCardOpenUrl{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:NotifyPeer
//
func (m NotifyPeer) Encode() []byte {
	switch m.Constructor {
	case -1613493288:
		t := m.To_notifyPeer()
		return t.Encode()
	case -1261946036:
		t := m.To_notifyUsers()
		return t.Encode()
	case -1073230141:
		t := m.To_notifyChats()
		return t.Encode()
	case -703403793:
		t := m.To_notifyBroadcasts()
		return t.Encode()
	default:
		return nil
	}
}
func (m NotifyPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1613493288:
		m2 := &TLnotifyPeer{Data: NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1261946036:
		m2 := &TLnotifyUsers{Data: NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1073230141:
		m2 := &TLnotifyChats{Data: NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -703403793:
		m2 := &TLnotifyBroadcasts{Data: NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m NotifyPeer) To_notifyPeer() *TLnotifyPeer {
	return &TLnotifyPeer{
		Data: m.Data,
	}
}
func (m NotifyPeer) To_notifyUsers() *TLnotifyUsers {
	return &TLnotifyUsers{
		Data: m.Data,
	}
}
func (m NotifyPeer) To_notifyChats() *TLnotifyChats {
	return &TLnotifyChats{
		Data: m.Data,
	}
}
func (m NotifyPeer) To_notifyBroadcasts() *TLnotifyBroadcasts {
	return &TLnotifyBroadcasts{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_StickerSet
//
func (m Messages_StickerSet) Encode() []byte {
	switch m.Constructor {
	case -1240849242:
		t := m.To_messages_stickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_StickerSet) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1240849242:
		m2 := &TLmessages_stickerSet{Data: Messages_StickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_StickerSet) To_messages_stickerSet() *TLmessages_stickerSet {
	return &TLmessages_stickerSet{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageAction
//
func (m MessageAction) Encode() []byte {
	switch m.Constructor {
	case -1230047312:
		t := m.To_messageActionEmpty()
		return t.Encode()
	case -1503425638:
		t := m.To_messageActionChatCreate()
		return t.Encode()
	case -1247687078:
		t := m.To_messageActionChatEditTitle()
		return t.Encode()
	case 2144015272:
		t := m.To_messageActionChatEditPhoto()
		return t.Encode()
	case -1780220945:
		t := m.To_messageActionChatDeletePhoto()
		return t.Encode()
	case 1217033015:
		t := m.To_messageActionChatAddUser()
		return t.Encode()
	case -1297179892:
		t := m.To_messageActionChatDeleteUser()
		return t.Encode()
	case -123931160:
		t := m.To_messageActionChatJoinedByLink()
		return t.Encode()
	case -1781355374:
		t := m.To_messageActionChannelCreate()
		return t.Encode()
	case 1371385889:
		t := m.To_messageActionChatMigrateTo()
		return t.Encode()
	case -1336546578:
		t := m.To_messageActionChannelMigrateFrom()
		return t.Encode()
	case -1799538451:
		t := m.To_messageActionPinMessage()
		return t.Encode()
	case -1615153660:
		t := m.To_messageActionHistoryClear()
		return t.Encode()
	case -1834538890:
		t := m.To_messageActionGameScore()
		return t.Encode()
	case -1892568281:
		t := m.To_messageActionPaymentSentMe()
		return t.Encode()
	case 1080663248:
		t := m.To_messageActionPaymentSent()
		return t.Encode()
	case -2132731265:
		t := m.To_messageActionPhoneCall()
		return t.Encode()
	case 1200788123:
		t := m.To_messageActionScreenshotTaken()
		return t.Encode()
	case -85549226:
		t := m.To_messageActionCustomAction()
		return t.Encode()
	case -1410748418:
		t := m.To_messageActionBotAllowed()
		return t.Encode()
	case 455635795:
		t := m.To_messageActionSecureValuesSentMe()
		return t.Encode()
	case -648257196:
		t := m.To_messageActionSecureValuesSent()
		return t.Encode()
	case -202219658:
		t := m.To_messageActionContactSignUp()
		return t.Encode()
	case -1730095465:
		t := m.To_messageActionGeoProximityReached()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageAction) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1230047312:
		m2 := &TLmessageActionEmpty{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1503425638:
		m2 := &TLmessageActionChatCreate{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1247687078:
		m2 := &TLmessageActionChatEditTitle{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2144015272:
		m2 := &TLmessageActionChatEditPhoto{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1780220945:
		m2 := &TLmessageActionChatDeletePhoto{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1217033015:
		m2 := &TLmessageActionChatAddUser{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1297179892:
		m2 := &TLmessageActionChatDeleteUser{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -123931160:
		m2 := &TLmessageActionChatJoinedByLink{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1781355374:
		m2 := &TLmessageActionChannelCreate{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1371385889:
		m2 := &TLmessageActionChatMigrateTo{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1336546578:
		m2 := &TLmessageActionChannelMigrateFrom{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1799538451:
		m2 := &TLmessageActionPinMessage{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1615153660:
		m2 := &TLmessageActionHistoryClear{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1834538890:
		m2 := &TLmessageActionGameScore{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1892568281:
		m2 := &TLmessageActionPaymentSentMe{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1080663248:
		m2 := &TLmessageActionPaymentSent{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2132731265:
		m2 := &TLmessageActionPhoneCall{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1200788123:
		m2 := &TLmessageActionScreenshotTaken{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -85549226:
		m2 := &TLmessageActionCustomAction{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1410748418:
		m2 := &TLmessageActionBotAllowed{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 455635795:
		m2 := &TLmessageActionSecureValuesSentMe{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -648257196:
		m2 := &TLmessageActionSecureValuesSent{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -202219658:
		m2 := &TLmessageActionContactSignUp{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1730095465:
		m2 := &TLmessageActionGeoProximityReached{Data: MessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageAction) To_messageActionEmpty() *TLmessageActionEmpty {
	return &TLmessageActionEmpty{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatCreate() *TLmessageActionChatCreate {
	return &TLmessageActionChatCreate{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatEditTitle() *TLmessageActionChatEditTitle {
	return &TLmessageActionChatEditTitle{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatEditPhoto() *TLmessageActionChatEditPhoto {
	return &TLmessageActionChatEditPhoto{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatDeletePhoto() *TLmessageActionChatDeletePhoto {
	return &TLmessageActionChatDeletePhoto{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatAddUser() *TLmessageActionChatAddUser {
	return &TLmessageActionChatAddUser{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatDeleteUser() *TLmessageActionChatDeleteUser {
	return &TLmessageActionChatDeleteUser{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatJoinedByLink() *TLmessageActionChatJoinedByLink {
	return &TLmessageActionChatJoinedByLink{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChannelCreate() *TLmessageActionChannelCreate {
	return &TLmessageActionChannelCreate{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChatMigrateTo() *TLmessageActionChatMigrateTo {
	return &TLmessageActionChatMigrateTo{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionChannelMigrateFrom() *TLmessageActionChannelMigrateFrom {
	return &TLmessageActionChannelMigrateFrom{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionPinMessage() *TLmessageActionPinMessage {
	return &TLmessageActionPinMessage{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionHistoryClear() *TLmessageActionHistoryClear {
	return &TLmessageActionHistoryClear{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionGameScore() *TLmessageActionGameScore {
	return &TLmessageActionGameScore{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionPaymentSentMe() *TLmessageActionPaymentSentMe {
	return &TLmessageActionPaymentSentMe{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionPaymentSent() *TLmessageActionPaymentSent {
	return &TLmessageActionPaymentSent{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionPhoneCall() *TLmessageActionPhoneCall {
	return &TLmessageActionPhoneCall{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionScreenshotTaken() *TLmessageActionScreenshotTaken {
	return &TLmessageActionScreenshotTaken{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionCustomAction() *TLmessageActionCustomAction {
	return &TLmessageActionCustomAction{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionBotAllowed() *TLmessageActionBotAllowed {
	return &TLmessageActionBotAllowed{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionSecureValuesSentMe() *TLmessageActionSecureValuesSentMe {
	return &TLmessageActionSecureValuesSentMe{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionSecureValuesSent() *TLmessageActionSecureValuesSent {
	return &TLmessageActionSecureValuesSent{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionContactSignUp() *TLmessageActionContactSignUp {
	return &TLmessageActionContactSignUp{
		Data: m.Data,
	}
}
func (m MessageAction) To_messageActionGeoProximityReached() *TLmessageActionGeoProximityReached {
	return &TLmessageActionGeoProximityReached{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Config
//
func (m Config) Encode() []byte {
	switch m.Constructor {
	case 856375399:
		t := m.To_config()
		return t.Encode()
	default:
		return nil
	}
}
func (m Config) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 856375399:
		m2 := &TLconfig{Data: Config_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Config) To_config() *TLconfig {
	return &TLconfig{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Game
//
func (m Game) Encode() []byte {
	switch m.Constructor {
	case -1107729093:
		t := m.To_game()
		return t.Encode()
	default:
		return nil
	}
}
func (m Game) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1107729093:
		m2 := &TLgame{Data: Game_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Game) To_game() *TLgame {
	return &TLgame{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PrivacyKey
//
func (m PrivacyKey) Encode() []byte {
	switch m.Constructor {
	case -1137792208:
		t := m.To_privacyKeyStatusTimestamp()
		return t.Encode()
	case 1343122938:
		t := m.To_privacyKeyChatInvite()
		return t.Encode()
	case 1030105979:
		t := m.To_privacyKeyPhoneCall()
		return t.Encode()
	case 961092808:
		t := m.To_privacyKeyPhoneP2P()
		return t.Encode()
	case 1777096355:
		t := m.To_privacyKeyForwards()
		return t.Encode()
	case -1777000467:
		t := m.To_privacyKeyProfilePhoto()
		return t.Encode()
	case -778378131:
		t := m.To_privacyKeyPhoneNumber()
		return t.Encode()
	case 1124062251:
		t := m.To_privacyKeyAddedByPhone()
		return t.Encode()
	default:
		return nil
	}
}
func (m PrivacyKey) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1137792208:
		m2 := &TLprivacyKeyStatusTimestamp{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1343122938:
		m2 := &TLprivacyKeyChatInvite{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1030105979:
		m2 := &TLprivacyKeyPhoneCall{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 961092808:
		m2 := &TLprivacyKeyPhoneP2P{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1777096355:
		m2 := &TLprivacyKeyForwards{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1777000467:
		m2 := &TLprivacyKeyProfilePhoto{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -778378131:
		m2 := &TLprivacyKeyPhoneNumber{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1124062251:
		m2 := &TLprivacyKeyAddedByPhone{Data: PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PrivacyKey) To_privacyKeyStatusTimestamp() *TLprivacyKeyStatusTimestamp {
	return &TLprivacyKeyStatusTimestamp{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyChatInvite() *TLprivacyKeyChatInvite {
	return &TLprivacyKeyChatInvite{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneCall() *TLprivacyKeyPhoneCall {
	return &TLprivacyKeyPhoneCall{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneP2P() *TLprivacyKeyPhoneP2P {
	return &TLprivacyKeyPhoneP2P{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyForwards() *TLprivacyKeyForwards {
	return &TLprivacyKeyForwards{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyProfilePhoto() *TLprivacyKeyProfilePhoto {
	return &TLprivacyKeyProfilePhoto{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneNumber() *TLprivacyKeyPhoneNumber {
	return &TLprivacyKeyPhoneNumber{
		Data: m.Data,
	}
}
func (m PrivacyKey) To_privacyKeyAddedByPhone() *TLprivacyKeyAddedByPhone {
	return &TLprivacyKeyAddedByPhone{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebDocument
//
func (m WebDocument) Encode() []byte {
	switch m.Constructor {
	case 475467473:
		t := m.To_webDocument()
		return t.Encode()
	case -104284986:
		t := m.To_webDocumentNoProxy()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebDocument) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 475467473:
		m2 := &TLwebDocument{Data: WebDocument_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -104284986:
		m2 := &TLwebDocumentNoProxy{Data: WebDocument_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WebDocument) To_webDocument() *TLwebDocument {
	return &TLwebDocument{
		Data: m.Data,
	}
}
func (m WebDocument) To_webDocumentNoProxy() *TLwebDocumentNoProxy {
	return &TLwebDocumentNoProxy{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerSetCovered
//
func (m StickerSetCovered) Encode() []byte {
	switch m.Constructor {
	case 1678812626:
		t := m.To_stickerSetCovered()
		return t.Encode()
	case 872932635:
		t := m.To_stickerSetMultiCovered()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerSetCovered) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1678812626:
		m2 := &TLstickerSetCovered{Data: StickerSetCovered_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 872932635:
		m2 := &TLstickerSetMultiCovered{Data: StickerSetCovered_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StickerSetCovered) To_stickerSetCovered() *TLstickerSetCovered {
	return &TLstickerSetCovered{
		Data: m.Data,
	}
}
func (m StickerSetCovered) To_stickerSetMultiCovered() *TLstickerSetMultiCovered {
	return &TLstickerSetMultiCovered{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerLocated
//
func (m PeerLocated) Encode() []byte {
	switch m.Constructor {
	case -901375139:
		t := m.To_peerLocated()
		return t.Encode()
	case -118740917:
		t := m.To_peerSelfLocated()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerLocated) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -901375139:
		m2 := &TLpeerLocated{Data: PeerLocated_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -118740917:
		m2 := &TLpeerSelfLocated{Data: PeerLocated_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PeerLocated) To_peerLocated() *TLpeerLocated {
	return &TLpeerLocated{
		Data: m.Data,
	}
}
func (m PeerLocated) To_peerSelfLocated() *TLpeerSelfLocated {
	return &TLpeerSelfLocated{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageReplyHeader
//
func (m MessageReplyHeader) Encode() []byte {
	switch m.Constructor {
	case -1495959709:
		t := m.To_messageReplyHeader()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageReplyHeader) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1495959709:
		m2 := &TLmessageReplyHeader{Data: MessageReplyHeader_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageReplyHeader) To_messageReplyHeader() *TLmessageReplyHeader {
	return &TLmessageReplyHeader{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AffectedMessages
//
func (m Messages_AffectedMessages) Encode() []byte {
	switch m.Constructor {
	case -2066640507:
		t := m.To_messages_affectedMessages()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_AffectedMessages) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2066640507:
		m2 := &TLmessages_affectedMessages{Data: Messages_AffectedMessages_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_AffectedMessages) To_messages_affectedMessages() *TLmessages_affectedMessages {
	return &TLmessages_affectedMessages{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsAbsValueAndPrev
//
func (m StatsAbsValueAndPrev) Encode() []byte {
	switch m.Constructor {
	case -884757282:
		t := m.To_statsAbsValueAndPrev()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsAbsValueAndPrev) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -884757282:
		m2 := &TLstatsAbsValueAndPrev{Data: StatsAbsValueAndPrev_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsAbsValueAndPrev) To_statsAbsValueAndPrev() *TLstatsAbsValueAndPrev {
	return &TLstatsAbsValueAndPrev{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Chats
//
func (m Messages_Chats) Encode() []byte {
	switch m.Constructor {
	case 1694474197:
		t := m.To_messages_chats()
		return t.Encode()
	case -1663561404:
		t := m.To_messages_chatsSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_Chats) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1694474197:
		m2 := &TLmessages_chats{Data: Messages_Chats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1663561404:
		m2 := &TLmessages_chatsSlice{Data: Messages_Chats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_Chats) To_messages_chats() *TLmessages_chats {
	return &TLmessages_chats{
		Data: m.Data,
	}
}
func (m Messages_Chats) To_messages_chatsSlice() *TLmessages_chatsSlice {
	return &TLmessages_chatsSlice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCallDiscardReason
//
func (m PhoneCallDiscardReason) Encode() []byte {
	switch m.Constructor {
	case -2048646399:
		t := m.To_phoneCallDiscardReasonMissed()
		return t.Encode()
	case -527056480:
		t := m.To_phoneCallDiscardReasonDisconnect()
		return t.Encode()
	case 1471006352:
		t := m.To_phoneCallDiscardReasonHangup()
		return t.Encode()
	case -84416311:
		t := m.To_phoneCallDiscardReasonBusy()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCallDiscardReason) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2048646399:
		m2 := &TLphoneCallDiscardReasonMissed{Data: PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -527056480:
		m2 := &TLphoneCallDiscardReasonDisconnect{Data: PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1471006352:
		m2 := &TLphoneCallDiscardReasonHangup{Data: PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -84416311:
		m2 := &TLphoneCallDiscardReasonBusy{Data: PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonMissed() *TLphoneCallDiscardReasonMissed {
	return &TLphoneCallDiscardReasonMissed{
		Data: m.Data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonDisconnect() *TLphoneCallDiscardReasonDisconnect {
	return &TLphoneCallDiscardReasonDisconnect{
		Data: m.Data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonHangup() *TLphoneCallDiscardReasonHangup {
	return &TLphoneCallDiscardReasonHangup{
		Data: m.Data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonBusy() *TLphoneCallDiscardReasonBusy {
	return &TLphoneCallDiscardReasonBusy{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:GlobalPrivacySettings
//
func (m GlobalPrivacySettings) Encode() []byte {
	switch m.Constructor {
	case -1096616924:
		t := m.To_globalPrivacySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m GlobalPrivacySettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1096616924:
		m2 := &TLglobalPrivacySettings{Data: GlobalPrivacySettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m GlobalPrivacySettings) To_globalPrivacySettings() *TLglobalPrivacySettings {
	return &TLglobalPrivacySettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_ChannelParticipant
//
func (m Channels_ChannelParticipant) Encode() []byte {
	switch m.Constructor {
	case -791039645:
		t := m.To_channels_channelParticipant()
		return t.Encode()
	default:
		return nil
	}
}
func (m Channels_ChannelParticipant) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -791039645:
		m2 := &TLchannels_channelParticipant{Data: Channels_ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Channels_ChannelParticipant) To_channels_channelParticipant() *TLchannels_channelParticipant {
	return &TLchannels_channelParticipant{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentSavedCredentials
//
func (m PaymentSavedCredentials) Encode() []byte {
	switch m.Constructor {
	case -842892769:
		t := m.To_paymentSavedCredentialsCard()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentSavedCredentials) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -842892769:
		m2 := &TLpaymentSavedCredentialsCard{Data: PaymentSavedCredentials_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PaymentSavedCredentials) To_paymentSavedCredentialsCard() *TLpaymentSavedCredentialsCard {
	return &TLpaymentSavedCredentialsCard{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueError
//
func (m SecureValueError) Encode() []byte {
	switch m.Constructor {
	case -391902247:
		t := m.To_secureValueErrorData()
		return t.Encode()
	case 12467706:
		t := m.To_secureValueErrorFrontSide()
		return t.Encode()
	case -2037765467:
		t := m.To_secureValueErrorReverseSide()
		return t.Encode()
	case -449327402:
		t := m.To_secureValueErrorSelfie()
		return t.Encode()
	case 2054162547:
		t := m.To_secureValueErrorFile()
		return t.Encode()
	case 1717706985:
		t := m.To_secureValueErrorFiles()
		return t.Encode()
	case -2036501105:
		t := m.To_secureValueError()
		return t.Encode()
	case -1592506512:
		t := m.To_secureValueErrorTranslationFile()
		return t.Encode()
	case 878931416:
		t := m.To_secureValueErrorTranslationFiles()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueError) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -391902247:
		m2 := &TLsecureValueErrorData{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 12467706:
		m2 := &TLsecureValueErrorFrontSide{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2037765467:
		m2 := &TLsecureValueErrorReverseSide{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -449327402:
		m2 := &TLsecureValueErrorSelfie{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2054162547:
		m2 := &TLsecureValueErrorFile{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1717706985:
		m2 := &TLsecureValueErrorFiles{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2036501105:
		m2 := &TLsecureValueError{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1592506512:
		m2 := &TLsecureValueErrorTranslationFile{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 878931416:
		m2 := &TLsecureValueErrorTranslationFiles{Data: SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureValueError) To_secureValueErrorData() *TLsecureValueErrorData {
	return &TLsecureValueErrorData{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorFrontSide() *TLsecureValueErrorFrontSide {
	return &TLsecureValueErrorFrontSide{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorReverseSide() *TLsecureValueErrorReverseSide {
	return &TLsecureValueErrorReverseSide{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorSelfie() *TLsecureValueErrorSelfie {
	return &TLsecureValueErrorSelfie{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorFile() *TLsecureValueErrorFile {
	return &TLsecureValueErrorFile{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorFiles() *TLsecureValueErrorFiles {
	return &TLsecureValueErrorFiles{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueError() *TLsecureValueError {
	return &TLsecureValueError{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorTranslationFile() *TLsecureValueErrorTranslationFile {
	return &TLsecureValueErrorTranslationFile{
		Data: m.Data,
	}
}
func (m SecureValueError) To_secureValueErrorTranslationFiles() *TLsecureValueErrorTranslationFiles {
	return &TLsecureValueErrorTranslationFiles{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputGame
//
func (m InputGame) Encode() []byte {
	switch m.Constructor {
	case 53231223:
		t := m.To_inputGameID()
		return t.Encode()
	case -1020139510:
		t := m.To_inputGameShortName()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputGame) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 53231223:
		m2 := &TLinputGameID{Data: InputGame_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1020139510:
		m2 := &TLinputGameShortName{Data: InputGame_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputGame) To_inputGameID() *TLinputGameID {
	return &TLinputGameID{
		Data: m.Data,
	}
}
func (m InputGame) To_inputGameShortName() *TLinputGameShortName {
	return &TLinputGameShortName{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelParticipantsFilter
//
func (m ChannelParticipantsFilter) Encode() []byte {
	switch m.Constructor {
	case -566281095:
		t := m.To_channelParticipantsRecent()
		return t.Encode()
	case -1268741783:
		t := m.To_channelParticipantsAdmins()
		return t.Encode()
	case -1548400251:
		t := m.To_channelParticipantsKicked()
		return t.Encode()
	case -1328445861:
		t := m.To_channelParticipantsBots()
		return t.Encode()
	case 338142689:
		t := m.To_channelParticipantsBanned()
		return t.Encode()
	case 106343499:
		t := m.To_channelParticipantsSearch()
		return t.Encode()
	case -1150621555:
		t := m.To_channelParticipantsContacts()
		return t.Encode()
	case -531931925:
		t := m.To_channelParticipantsMentions()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelParticipantsFilter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -566281095:
		m2 := &TLchannelParticipantsRecent{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1268741783:
		m2 := &TLchannelParticipantsAdmins{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1548400251:
		m2 := &TLchannelParticipantsKicked{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1328445861:
		m2 := &TLchannelParticipantsBots{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 338142689:
		m2 := &TLchannelParticipantsBanned{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 106343499:
		m2 := &TLchannelParticipantsSearch{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1150621555:
		m2 := &TLchannelParticipantsContacts{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -531931925:
		m2 := &TLchannelParticipantsMentions{Data: ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelParticipantsFilter) To_channelParticipantsRecent() *TLchannelParticipantsRecent {
	return &TLchannelParticipantsRecent{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsAdmins() *TLchannelParticipantsAdmins {
	return &TLchannelParticipantsAdmins{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsKicked() *TLchannelParticipantsKicked {
	return &TLchannelParticipantsKicked{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsBots() *TLchannelParticipantsBots {
	return &TLchannelParticipantsBots{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsBanned() *TLchannelParticipantsBanned {
	return &TLchannelParticipantsBanned{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsSearch() *TLchannelParticipantsSearch {
	return &TLchannelParticipantsSearch{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsContacts() *TLchannelParticipantsContacts {
	return &TLchannelParticipantsContacts{
		Data: m.Data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsMentions() *TLchannelParticipantsMentions {
	return &TLchannelParticipantsMentions{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputDialogPeer
//
func (m InputDialogPeer) Encode() []byte {
	switch m.Constructor {
	case -55902537:
		t := m.To_inputDialogPeer()
		return t.Encode()
	case 1684014375:
		t := m.To_inputDialogPeerFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputDialogPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -55902537:
		m2 := &TLinputDialogPeer{Data: InputDialogPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1684014375:
		m2 := &TLinputDialogPeerFolder{Data: InputDialogPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputDialogPeer) To_inputDialogPeer() *TLinputDialogPeer {
	return &TLinputDialogPeer{
		Data: m.Data,
	}
}
func (m InputDialogPeer) To_inputDialogPeerFolder() *TLinputDialogPeerFolder {
	return &TLinputDialogPeerFolder{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_SavedInfo
//
func (m Payments_SavedInfo) Encode() []byte {
	switch m.Constructor {
	case -74456004:
		t := m.To_payments_savedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_SavedInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -74456004:
		m2 := &TLpayments_savedInfo{Data: Payments_SavedInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_SavedInfo) To_payments_savedInfo() *TLpayments_savedInfo {
	return &TLpayments_savedInfo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_File
//
func (m Upload_File) Encode() []byte {
	switch m.Constructor {
	case 157948117:
		t := m.To_upload_file()
		return t.Encode()
	case -242427324:
		t := m.To_upload_fileCdnRedirect()
		return t.Encode()
	default:
		return nil
	}
}
func (m Upload_File) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 157948117:
		m2 := &TLupload_file{Data: Upload_File_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -242427324:
		m2 := &TLupload_fileCdnRedirect{Data: Upload_File_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Upload_File) To_upload_file() *TLupload_file {
	return &TLupload_file{
		Data: m.Data,
	}
}
func (m Upload_File) To_upload_fileCdnRedirect() *TLupload_fileCdnRedirect {
	return &TLupload_fileCdnRedirect{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogFilterSuggested
//
func (m DialogFilterSuggested) Encode() []byte {
	switch m.Constructor {
	case 2004110666:
		t := m.To_dialogFilterSuggested()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogFilterSuggested) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2004110666:
		m2 := &TLdialogFilterSuggested{Data: DialogFilterSuggested_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DialogFilterSuggested) To_dialogFilterSuggested() *TLdialogFilterSuggested {
	return &TLdialogFilterSuggested{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RichText
//
func (m RichText) Encode() []byte {
	switch m.Constructor {
	case -599948721:
		t := m.To_textEmpty()
		return t.Encode()
	case 1950782688:
		t := m.To_textPlain()
		return t.Encode()
	case 1730456516:
		t := m.To_textBold()
		return t.Encode()
	case -653089380:
		t := m.To_textItalic()
		return t.Encode()
	case -1054465340:
		t := m.To_textUnderline()
		return t.Encode()
	case -1678197867:
		t := m.To_textStrike()
		return t.Encode()
	case 1816074681:
		t := m.To_textFixed()
		return t.Encode()
	case 1009288385:
		t := m.To_textUrl()
		return t.Encode()
	case -564523562:
		t := m.To_textEmail()
		return t.Encode()
	case 2120376535:
		t := m.To_textConcat()
		return t.Encode()
	case -311786236:
		t := m.To_textSubscript()
		return t.Encode()
	case -939827711:
		t := m.To_textSuperscript()
		return t.Encode()
	case 55281185:
		t := m.To_textMarked()
		return t.Encode()
	case 483104362:
		t := m.To_textPhone()
		return t.Encode()
	case 136105807:
		t := m.To_textImage()
		return t.Encode()
	case 894777186:
		t := m.To_textAnchor()
		return t.Encode()
	default:
		return nil
	}
}
func (m RichText) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -599948721:
		m2 := &TLtextEmpty{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1950782688:
		m2 := &TLtextPlain{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1730456516:
		m2 := &TLtextBold{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -653089380:
		m2 := &TLtextItalic{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1054465340:
		m2 := &TLtextUnderline{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1678197867:
		m2 := &TLtextStrike{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1816074681:
		m2 := &TLtextFixed{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1009288385:
		m2 := &TLtextUrl{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -564523562:
		m2 := &TLtextEmail{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2120376535:
		m2 := &TLtextConcat{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -311786236:
		m2 := &TLtextSubscript{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -939827711:
		m2 := &TLtextSuperscript{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 55281185:
		m2 := &TLtextMarked{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 483104362:
		m2 := &TLtextPhone{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 136105807:
		m2 := &TLtextImage{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 894777186:
		m2 := &TLtextAnchor{Data: RichText_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m RichText) To_textEmpty() *TLtextEmpty {
	return &TLtextEmpty{
		Data: m.Data,
	}
}
func (m RichText) To_textPlain() *TLtextPlain {
	return &TLtextPlain{
		Data: m.Data,
	}
}
func (m RichText) To_textBold() *TLtextBold {
	return &TLtextBold{
		Data: m.Data,
	}
}
func (m RichText) To_textItalic() *TLtextItalic {
	return &TLtextItalic{
		Data: m.Data,
	}
}
func (m RichText) To_textUnderline() *TLtextUnderline {
	return &TLtextUnderline{
		Data: m.Data,
	}
}
func (m RichText) To_textStrike() *TLtextStrike {
	return &TLtextStrike{
		Data: m.Data,
	}
}
func (m RichText) To_textFixed() *TLtextFixed {
	return &TLtextFixed{
		Data: m.Data,
	}
}
func (m RichText) To_textUrl() *TLtextUrl {
	return &TLtextUrl{
		Data: m.Data,
	}
}
func (m RichText) To_textEmail() *TLtextEmail {
	return &TLtextEmail{
		Data: m.Data,
	}
}
func (m RichText) To_textConcat() *TLtextConcat {
	return &TLtextConcat{
		Data: m.Data,
	}
}
func (m RichText) To_textSubscript() *TLtextSubscript {
	return &TLtextSubscript{
		Data: m.Data,
	}
}
func (m RichText) To_textSuperscript() *TLtextSuperscript {
	return &TLtextSuperscript{
		Data: m.Data,
	}
}
func (m RichText) To_textMarked() *TLtextMarked {
	return &TLtextMarked{
		Data: m.Data,
	}
}
func (m RichText) To_textPhone() *TLtextPhone {
	return &TLtextPhone{
		Data: m.Data,
	}
}
func (m RichText) To_textImage() *TLtextImage {
	return &TLtextImage{
		Data: m.Data,
	}
}
func (m RichText) To_textAnchor() *TLtextAnchor {
	return &TLtextAnchor{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:AccountDaysTTL
//
func (m AccountDaysTTL) Encode() []byte {
	switch m.Constructor {
	case -1194283041:
		t := m.To_accountDaysTTL()
		return t.Encode()
	default:
		return nil
	}
}
func (m AccountDaysTTL) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1194283041:
		m2 := &TLaccountDaysTTL{Data: AccountDaysTTL_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m AccountDaysTTL) To_accountDaysTTL() *TLaccountDaysTTL {
	return &TLaccountDaysTTL{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageBlock
//
func (m PageBlock) Encode() []byte {
	switch m.Constructor {
	case 324435594:
		t := m.To_pageBlockUnsupported()
		return t.Encode()
	case 1890305021:
		t := m.To_pageBlockTitle()
		return t.Encode()
	case -1879401953:
		t := m.To_pageBlockSubtitle()
		return t.Encode()
	case -1162877472:
		t := m.To_pageBlockAuthorDate()
		return t.Encode()
	case -1076861716:
		t := m.To_pageBlockHeader()
		return t.Encode()
	case -248793375:
		t := m.To_pageBlockSubheader()
		return t.Encode()
	case 1182402406:
		t := m.To_pageBlockParagraph()
		return t.Encode()
	case -1066346178:
		t := m.To_pageBlockPreformatted()
		return t.Encode()
	case 1216809369:
		t := m.To_pageBlockFooter()
		return t.Encode()
	case -618614392:
		t := m.To_pageBlockDivider()
		return t.Encode()
	case -837994576:
		t := m.To_pageBlockAnchor()
		return t.Encode()
	case -454524911:
		t := m.To_pageBlockList()
		return t.Encode()
	case 641563686:
		t := m.To_pageBlockBlockquote()
		return t.Encode()
	case 1329878739:
		t := m.To_pageBlockPullquote()
		return t.Encode()
	case 391759200:
		t := m.To_pageBlockPhoto()
		return t.Encode()
	case 2089805750:
		t := m.To_pageBlockVideo()
		return t.Encode()
	case 972174080:
		t := m.To_pageBlockCover()
		return t.Encode()
	case -1468953147:
		t := m.To_pageBlockEmbed()
		return t.Encode()
	case -229005301:
		t := m.To_pageBlockEmbedPost()
		return t.Encode()
	case 1705048653:
		t := m.To_pageBlockCollage()
		return t.Encode()
	case 52401552:
		t := m.To_pageBlockSlideshow()
		return t.Encode()
	case -283684427:
		t := m.To_pageBlockChannel()
		return t.Encode()
	case -2143067670:
		t := m.To_pageBlockAudio()
		return t.Encode()
	case 504660880:
		t := m.To_pageBlockKicker()
		return t.Encode()
	case -1085412734:
		t := m.To_pageBlockTable()
		return t.Encode()
	case -1702174239:
		t := m.To_pageBlockOrderedList()
		return t.Encode()
	case 1987480557:
		t := m.To_pageBlockDetails()
		return t.Encode()
	case 370236054:
		t := m.To_pageBlockRelatedArticles()
		return t.Encode()
	case -1538310410:
		t := m.To_pageBlockMap()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageBlock) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 324435594:
		m2 := &TLpageBlockUnsupported{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1890305021:
		m2 := &TLpageBlockTitle{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1879401953:
		m2 := &TLpageBlockSubtitle{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1162877472:
		m2 := &TLpageBlockAuthorDate{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1076861716:
		m2 := &TLpageBlockHeader{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -248793375:
		m2 := &TLpageBlockSubheader{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1182402406:
		m2 := &TLpageBlockParagraph{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1066346178:
		m2 := &TLpageBlockPreformatted{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1216809369:
		m2 := &TLpageBlockFooter{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -618614392:
		m2 := &TLpageBlockDivider{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -837994576:
		m2 := &TLpageBlockAnchor{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -454524911:
		m2 := &TLpageBlockList{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 641563686:
		m2 := &TLpageBlockBlockquote{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1329878739:
		m2 := &TLpageBlockPullquote{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 391759200:
		m2 := &TLpageBlockPhoto{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2089805750:
		m2 := &TLpageBlockVideo{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 972174080:
		m2 := &TLpageBlockCover{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1468953147:
		m2 := &TLpageBlockEmbed{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -229005301:
		m2 := &TLpageBlockEmbedPost{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1705048653:
		m2 := &TLpageBlockCollage{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 52401552:
		m2 := &TLpageBlockSlideshow{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -283684427:
		m2 := &TLpageBlockChannel{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2143067670:
		m2 := &TLpageBlockAudio{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 504660880:
		m2 := &TLpageBlockKicker{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1085412734:
		m2 := &TLpageBlockTable{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1702174239:
		m2 := &TLpageBlockOrderedList{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1987480557:
		m2 := &TLpageBlockDetails{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 370236054:
		m2 := &TLpageBlockRelatedArticles{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1538310410:
		m2 := &TLpageBlockMap{Data: PageBlock_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageBlock) To_pageBlockUnsupported() *TLpageBlockUnsupported {
	return &TLpageBlockUnsupported{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockTitle() *TLpageBlockTitle {
	return &TLpageBlockTitle{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockSubtitle() *TLpageBlockSubtitle {
	return &TLpageBlockSubtitle{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockAuthorDate() *TLpageBlockAuthorDate {
	return &TLpageBlockAuthorDate{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockHeader() *TLpageBlockHeader {
	return &TLpageBlockHeader{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockSubheader() *TLpageBlockSubheader {
	return &TLpageBlockSubheader{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockParagraph() *TLpageBlockParagraph {
	return &TLpageBlockParagraph{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockPreformatted() *TLpageBlockPreformatted {
	return &TLpageBlockPreformatted{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockFooter() *TLpageBlockFooter {
	return &TLpageBlockFooter{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockDivider() *TLpageBlockDivider {
	return &TLpageBlockDivider{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockAnchor() *TLpageBlockAnchor {
	return &TLpageBlockAnchor{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockList() *TLpageBlockList {
	return &TLpageBlockList{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockBlockquote() *TLpageBlockBlockquote {
	return &TLpageBlockBlockquote{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockPullquote() *TLpageBlockPullquote {
	return &TLpageBlockPullquote{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockPhoto() *TLpageBlockPhoto {
	return &TLpageBlockPhoto{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockVideo() *TLpageBlockVideo {
	return &TLpageBlockVideo{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockCover() *TLpageBlockCover {
	return &TLpageBlockCover{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockEmbed() *TLpageBlockEmbed {
	return &TLpageBlockEmbed{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockEmbedPost() *TLpageBlockEmbedPost {
	return &TLpageBlockEmbedPost{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockCollage() *TLpageBlockCollage {
	return &TLpageBlockCollage{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockSlideshow() *TLpageBlockSlideshow {
	return &TLpageBlockSlideshow{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockChannel() *TLpageBlockChannel {
	return &TLpageBlockChannel{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockAudio() *TLpageBlockAudio {
	return &TLpageBlockAudio{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockKicker() *TLpageBlockKicker {
	return &TLpageBlockKicker{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockTable() *TLpageBlockTable {
	return &TLpageBlockTable{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockOrderedList() *TLpageBlockOrderedList {
	return &TLpageBlockOrderedList{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockDetails() *TLpageBlockDetails {
	return &TLpageBlockDetails{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockRelatedArticles() *TLpageBlockRelatedArticles {
	return &TLpageBlockRelatedArticles{
		Data: m.Data,
	}
}
func (m PageBlock) To_pageBlockMap() *TLpageBlockMap {
	return &TLpageBlockMap{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentReceipt
//
func (m Payments_PaymentReceipt) Encode() []byte {
	switch m.Constructor {
	case 1342771681:
		t := m.To_payments_paymentReceipt()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_PaymentReceipt) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1342771681:
		m2 := &TLpayments_paymentReceipt{Data: Payments_PaymentReceipt_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_PaymentReceipt) To_payments_paymentReceipt() *TLpayments_paymentReceipt {
	return &TLpayments_paymentReceipt{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPrivacyRule
//
func (m InputPrivacyRule) Encode() []byte {
	switch m.Constructor {
	case 218751099:
		t := m.To_inputPrivacyValueAllowContacts()
		return t.Encode()
	case 407582158:
		t := m.To_inputPrivacyValueAllowAll()
		return t.Encode()
	case 320652927:
		t := m.To_inputPrivacyValueAllowUsers()
		return t.Encode()
	case 195371015:
		t := m.To_inputPrivacyValueDisallowContacts()
		return t.Encode()
	case -697604407:
		t := m.To_inputPrivacyValueDisallowAll()
		return t.Encode()
	case -1877932953:
		t := m.To_inputPrivacyValueDisallowUsers()
		return t.Encode()
	case 1283572154:
		t := m.To_inputPrivacyValueAllowChatParticipants()
		return t.Encode()
	case -668769361:
		t := m.To_inputPrivacyValueDisallowChatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPrivacyRule) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 218751099:
		m2 := &TLinputPrivacyValueAllowContacts{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 407582158:
		m2 := &TLinputPrivacyValueAllowAll{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 320652927:
		m2 := &TLinputPrivacyValueAllowUsers{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 195371015:
		m2 := &TLinputPrivacyValueDisallowContacts{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -697604407:
		m2 := &TLinputPrivacyValueDisallowAll{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1877932953:
		m2 := &TLinputPrivacyValueDisallowUsers{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1283572154:
		m2 := &TLinputPrivacyValueAllowChatParticipants{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -668769361:
		m2 := &TLinputPrivacyValueDisallowChatParticipants{Data: InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowContacts() *TLinputPrivacyValueAllowContacts {
	return &TLinputPrivacyValueAllowContacts{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowAll() *TLinputPrivacyValueAllowAll {
	return &TLinputPrivacyValueAllowAll{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowUsers() *TLinputPrivacyValueAllowUsers {
	return &TLinputPrivacyValueAllowUsers{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowContacts() *TLinputPrivacyValueDisallowContacts {
	return &TLinputPrivacyValueDisallowContacts{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowAll() *TLinputPrivacyValueDisallowAll {
	return &TLinputPrivacyValueDisallowAll{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowUsers() *TLinputPrivacyValueDisallowUsers {
	return &TLinputPrivacyValueDisallowUsers{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowChatParticipants() *TLinputPrivacyValueAllowChatParticipants {
	return &TLinputPrivacyValueAllowChatParticipants{
		Data: m.Data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowChatParticipants() *TLinputPrivacyValueDisallowChatParticipants {
	return &TLinputPrivacyValueDisallowChatParticipants{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_CountryCode
//
func (m Help_CountryCode) Encode() []byte {
	switch m.Constructor {
	case 1107543535:
		t := m.To_help_countryCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_CountryCode) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1107543535:
		m2 := &TLhelp_countryCode{Data: Help_CountryCode_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_CountryCode) To_help_countryCode() *TLhelp_countryCode {
	return &TLhelp_countryCode{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Authorizations
//
func (m Account_Authorizations) Encode() []byte {
	switch m.Constructor {
	case 307276766:
		t := m.To_account_authorizations()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_Authorizations) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 307276766:
		m2 := &TLaccount_authorizations{Data: Account_Authorizations_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_Authorizations) To_account_authorizations() *TLaccount_authorizations {
	return &TLaccount_authorizations{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatOnlines
//
func (m ChatOnlines) Encode() []byte {
	switch m.Constructor {
	case -264117680:
		t := m.To_chatOnlines()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatOnlines) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -264117680:
		m2 := &TLchatOnlines{Data: ChatOnlines_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatOnlines) To_chatOnlines() *TLchatOnlines {
	return &TLchatOnlines{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueType
//
func (m SecureValueType) Encode() []byte {
	switch m.Constructor {
	case -1658158621:
		t := m.To_secureValueTypePersonalDetails()
		return t.Encode()
	case 1034709504:
		t := m.To_secureValueTypePassport()
		return t.Encode()
	case 115615172:
		t := m.To_secureValueTypeDriverLicense()
		return t.Encode()
	case -1596951477:
		t := m.To_secureValueTypeIdentityCard()
		return t.Encode()
	case -1717268701:
		t := m.To_secureValueTypeInternalPassport()
		return t.Encode()
	case -874308058:
		t := m.To_secureValueTypeAddress()
		return t.Encode()
	case -63531698:
		t := m.To_secureValueTypeUtilityBill()
		return t.Encode()
	case -1995211763:
		t := m.To_secureValueTypeBankStatement()
		return t.Encode()
	case -1954007928:
		t := m.To_secureValueTypeRentalAgreement()
		return t.Encode()
	case -1713143702:
		t := m.To_secureValueTypePassportRegistration()
		return t.Encode()
	case -368907213:
		t := m.To_secureValueTypeTemporaryRegistration()
		return t.Encode()
	case -1289704741:
		t := m.To_secureValueTypePhone()
		return t.Encode()
	case -1908627474:
		t := m.To_secureValueTypeEmail()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueType) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1658158621:
		m2 := &TLsecureValueTypePersonalDetails{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1034709504:
		m2 := &TLsecureValueTypePassport{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 115615172:
		m2 := &TLsecureValueTypeDriverLicense{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1596951477:
		m2 := &TLsecureValueTypeIdentityCard{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1717268701:
		m2 := &TLsecureValueTypeInternalPassport{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -874308058:
		m2 := &TLsecureValueTypeAddress{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -63531698:
		m2 := &TLsecureValueTypeUtilityBill{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1995211763:
		m2 := &TLsecureValueTypeBankStatement{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1954007928:
		m2 := &TLsecureValueTypeRentalAgreement{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1713143702:
		m2 := &TLsecureValueTypePassportRegistration{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -368907213:
		m2 := &TLsecureValueTypeTemporaryRegistration{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1289704741:
		m2 := &TLsecureValueTypePhone{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1908627474:
		m2 := &TLsecureValueTypeEmail{Data: SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureValueType) To_secureValueTypePersonalDetails() *TLsecureValueTypePersonalDetails {
	return &TLsecureValueTypePersonalDetails{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypePassport() *TLsecureValueTypePassport {
	return &TLsecureValueTypePassport{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeDriverLicense() *TLsecureValueTypeDriverLicense {
	return &TLsecureValueTypeDriverLicense{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeIdentityCard() *TLsecureValueTypeIdentityCard {
	return &TLsecureValueTypeIdentityCard{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeInternalPassport() *TLsecureValueTypeInternalPassport {
	return &TLsecureValueTypeInternalPassport{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeAddress() *TLsecureValueTypeAddress {
	return &TLsecureValueTypeAddress{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeUtilityBill() *TLsecureValueTypeUtilityBill {
	return &TLsecureValueTypeUtilityBill{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeBankStatement() *TLsecureValueTypeBankStatement {
	return &TLsecureValueTypeBankStatement{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeRentalAgreement() *TLsecureValueTypeRentalAgreement {
	return &TLsecureValueTypeRentalAgreement{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypePassportRegistration() *TLsecureValueTypePassportRegistration {
	return &TLsecureValueTypePassportRegistration{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeTemporaryRegistration() *TLsecureValueTypeTemporaryRegistration {
	return &TLsecureValueTypeTemporaryRegistration{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypePhone() *TLsecureValueTypePhone {
	return &TLsecureValueTypePhone{
		Data: m.Data,
	}
}
func (m SecureValueType) To_secureValueTypeEmail() *TLsecureValueTypeEmail {
	return &TLsecureValueTypeEmail{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_InactiveChats
//
func (m Messages_InactiveChats) Encode() []byte {
	switch m.Constructor {
	case -1456996667:
		t := m.To_messages_inactiveChats()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_InactiveChats) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1456996667:
		m2 := &TLmessages_inactiveChats{Data: Messages_InactiveChats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_InactiveChats) To_messages_inactiveChats() *TLmessages_inactiveChats {
	return &TLmessages_inactiveChats{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEventsFilter
//
func (m ChannelAdminLogEventsFilter) Encode() []byte {
	switch m.Constructor {
	case -368018716:
		t := m.To_channelAdminLogEventsFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEventsFilter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -368018716:
		m2 := &TLchannelAdminLogEventsFilter{Data: ChannelAdminLogEventsFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEventsFilter) To_channelAdminLogEventsFilter() *TLchannelAdminLogEventsFilter {
	return &TLchannelAdminLogEventsFilter{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Chat
//
func (m Chat) Encode() []byte {
	switch m.Constructor {
	case -1683826688:
		t := m.To_chatEmpty()
		return t.Encode()
	case 1004149726:
		t := m.To_chat()
		return t.Encode()
	case 120753115:
		t := m.To_chatForbidden()
		return t.Encode()
	case -753232354:
		t := m.To_channel()
		return t.Encode()
	case 681420594:
		t := m.To_channelForbidden()
		return t.Encode()
	default:
		return nil
	}
}
func (m Chat) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1683826688:
		m2 := &TLchatEmpty{Data: Chat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1004149726:
		m2 := &TLchat{Data: Chat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 120753115:
		m2 := &TLchatForbidden{Data: Chat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -753232354:
		m2 := &TLchannel{Data: Chat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 681420594:
		m2 := &TLchannelForbidden{Data: Chat_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Chat) To_chatEmpty() *TLchatEmpty {
	return &TLchatEmpty{
		Data: m.Data,
	}
}
func (m Chat) To_chat() *TLchat {
	return &TLchat{
		Data: m.Data,
	}
}
func (m Chat) To_chatForbidden() *TLchatForbidden {
	return &TLchatForbidden{
		Data: m.Data,
	}
}
func (m Chat) To_channel() *TLchannel {
	return &TLchannel{
		Data: m.Data,
	}
}
func (m Chat) To_channelForbidden() *TLchannelForbidden {
	return &TLchannelForbidden{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPhoto
//
func (m InputPhoto) Encode() []byte {
	switch m.Constructor {
	case 483901197:
		t := m.To_inputPhotoEmpty()
		return t.Encode()
	case 1001634122:
		t := m.To_inputPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPhoto) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 483901197:
		m2 := &TLinputPhotoEmpty{Data: InputPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1001634122:
		m2 := &TLinputPhoto{Data: InputPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPhoto) To_inputPhotoEmpty() *TLinputPhotoEmpty {
	return &TLinputPhotoEmpty{
		Data: m.Data,
	}
}
func (m InputPhoto) To_inputPhoto() *TLinputPhoto {
	return &TLinputPhoto{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FoundStickerSets
//
func (m Messages_FoundStickerSets) Encode() []byte {
	switch m.Constructor {
	case 223655517:
		t := m.To_messages_foundStickerSetsNotModified()
		return t.Encode()
	case 1359533640:
		t := m.To_messages_foundStickerSets()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_FoundStickerSets) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 223655517:
		m2 := &TLmessages_foundStickerSetsNotModified{Data: Messages_FoundStickerSets_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1359533640:
		m2 := &TLmessages_foundStickerSets{Data: Messages_FoundStickerSets_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_FoundStickerSets) To_messages_foundStickerSetsNotModified() *TLmessages_foundStickerSetsNotModified {
	return &TLmessages_foundStickerSetsNotModified{
		Data: m.Data,
	}
}
func (m Messages_FoundStickerSets) To_messages_foundStickerSets() *TLmessages_foundStickerSets {
	return &TLmessages_foundStickerSets{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_BankCardData
//
func (m Payments_BankCardData) Encode() []byte {
	switch m.Constructor {
	case 1042605427:
		t := m.To_payments_bankCardData()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_BankCardData) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1042605427:
		m2 := &TLpayments_bankCardData{Data: Payments_BankCardData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_BankCardData) To_payments_bankCardData() *TLpayments_bankCardData {
	return &TLpayments_bankCardData{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageInteractionCounters
//
func (m MessageInteractionCounters) Encode() []byte {
	switch m.Constructor {
	case -1387279939:
		t := m.To_messageInteractionCounters()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageInteractionCounters) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1387279939:
		m2 := &TLmessageInteractionCounters{Data: MessageInteractionCounters_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageInteractionCounters) To_messageInteractionCounters() *TLmessageInteractionCounters {
	return &TLmessageInteractionCounters{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UrlAuthResult
//
func (m UrlAuthResult) Encode() []byte {
	switch m.Constructor {
	case -1831650802:
		t := m.To_urlAuthResultRequest()
		return t.Encode()
	case -1886646706:
		t := m.To_urlAuthResultAccepted()
		return t.Encode()
	case -1445536993:
		t := m.To_urlAuthResultDefault()
		return t.Encode()
	default:
		return nil
	}
}
func (m UrlAuthResult) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1831650802:
		m2 := &TLurlAuthResultRequest{Data: UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1886646706:
		m2 := &TLurlAuthResultAccepted{Data: UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1445536993:
		m2 := &TLurlAuthResultDefault{Data: UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m UrlAuthResult) To_urlAuthResultRequest() *TLurlAuthResultRequest {
	return &TLurlAuthResultRequest{
		Data: m.Data,
	}
}
func (m UrlAuthResult) To_urlAuthResultAccepted() *TLurlAuthResultAccepted {
	return &TLurlAuthResultAccepted{
		Data: m.Data,
	}
}
func (m UrlAuthResult) To_urlAuthResultDefault() *TLurlAuthResultDefault {
	return &TLurlAuthResultDefault{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureData
//
func (m SecureData) Encode() []byte {
	switch m.Constructor {
	case -1964327229:
		t := m.To_secureData()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureData) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1964327229:
		m2 := &TLsecureData{Data: SecureData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureData) To_secureData() *TLsecureData {
	return &TLsecureData{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ExportedMessageLink
//
func (m ExportedMessageLink) Encode() []byte {
	switch m.Constructor {
	case 1571494644:
		t := m.To_exportedMessageLink()
		return t.Encode()
	default:
		return nil
	}
}
func (m ExportedMessageLink) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1571494644:
		m2 := &TLexportedMessageLink{Data: ExportedMessageLink_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ExportedMessageLink) To_exportedMessageLink() *TLexportedMessageLink {
	return &TLexportedMessageLink{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhotoSize
//
func (m PhotoSize) Encode() []byte {
	switch m.Constructor {
	case 236446268:
		t := m.To_photoSizeEmpty()
		return t.Encode()
	case 2009052699:
		t := m.To_photoSize()
		return t.Encode()
	case -374917894:
		t := m.To_photoCachedSize()
		return t.Encode()
	case -525288402:
		t := m.To_photoStrippedSize()
		return t.Encode()
	case 1520986705:
		t := m.To_photoSizeProgressive()
		return t.Encode()
	case -668906175:
		t := m.To_photoPathSize()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhotoSize) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 236446268:
		m2 := &TLphotoSizeEmpty{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2009052699:
		m2 := &TLphotoSize{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -374917894:
		m2 := &TLphotoCachedSize{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -525288402:
		m2 := &TLphotoStrippedSize{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1520986705:
		m2 := &TLphotoSizeProgressive{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -668906175:
		m2 := &TLphotoPathSize{Data: PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PhotoSize) To_photoSizeEmpty() *TLphotoSizeEmpty {
	return &TLphotoSizeEmpty{
		Data: m.Data,
	}
}
func (m PhotoSize) To_photoSize() *TLphotoSize {
	return &TLphotoSize{
		Data: m.Data,
	}
}
func (m PhotoSize) To_photoCachedSize() *TLphotoCachedSize {
	return &TLphotoCachedSize{
		Data: m.Data,
	}
}
func (m PhotoSize) To_photoStrippedSize() *TLphotoStrippedSize {
	return &TLphotoStrippedSize{
		Data: m.Data,
	}
}
func (m PhotoSize) To_photoSizeProgressive() *TLphotoSizeProgressive {
	return &TLphotoSizeProgressive{
		Data: m.Data,
	}
}
func (m PhotoSize) To_photoPathSize() *TLphotoPathSize {
	return &TLphotoPathSize{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageCaption
//
func (m PageCaption) Encode() []byte {
	switch m.Constructor {
	case 1869903447:
		t := m.To_pageCaption()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageCaption) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1869903447:
		m2 := &TLpageCaption{Data: PageCaption_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageCaption) To_pageCaption() *TLpageCaption {
	return &TLpageCaption{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Stickers
//
func (m Messages_Stickers) Encode() []byte {
	switch m.Constructor {
	case -244016606:
		t := m.To_messages_stickersNotModified()
		return t.Encode()
	case -463889475:
		t := m.To_messages_stickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_Stickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -244016606:
		m2 := &TLmessages_stickersNotModified{Data: Messages_Stickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -463889475:
		m2 := &TLmessages_stickers{Data: Messages_Stickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_Stickers) To_messages_stickersNotModified() *TLmessages_stickersNotModified {
	return &TLmessages_stickersNotModified{
		Data: m.Data,
	}
}
func (m Messages_Stickers) To_messages_stickers() *TLmessages_stickers {
	return &TLmessages_stickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_LoginToken
//
func (m Auth_LoginToken) Encode() []byte {
	switch m.Constructor {
	case 1654593920:
		t := m.To_auth_loginToken()
		return t.Encode()
	case 110008598:
		t := m.To_auth_loginTokenMigrateTo()
		return t.Encode()
	case 957176926:
		t := m.To_auth_loginTokenSuccess()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_LoginToken) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1654593920:
		m2 := &TLauth_loginToken{Data: Auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 110008598:
		m2 := &TLauth_loginTokenMigrateTo{Data: Auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 957176926:
		m2 := &TLauth_loginTokenSuccess{Data: Auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_LoginToken) To_auth_loginToken() *TLauth_loginToken {
	return &TLauth_loginToken{
		Data: m.Data,
	}
}
func (m Auth_LoginToken) To_auth_loginTokenMigrateTo() *TLauth_loginTokenMigrateTo {
	return &TLauth_loginTokenMigrateTo{
		Data: m.Data,
	}
}
func (m Auth_LoginToken) To_auth_loginTokenSuccess() *TLauth_loginTokenSuccess {
	return &TLauth_loginTokenSuccess{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageViews
//
func (m MessageViews) Encode() []byte {
	switch m.Constructor {
	case 1163625789:
		t := m.To_messageViews()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageViews) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1163625789:
		m2 := &TLmessageViews{Data: MessageViews_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageViews) To_messageViews() *TLmessageViews {
	return &TLmessageViews{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_DiscussionMessage
//
func (m Messages_DiscussionMessage) Encode() []byte {
	switch m.Constructor {
	case -170029155:
		t := m.To_messages_discussionMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_DiscussionMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -170029155:
		m2 := &TLmessages_discussionMessage{Data: Messages_DiscussionMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_DiscussionMessage) To_messages_discussionMessage() *TLmessages_discussionMessage {
	return &TLmessages_discussionMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_ArchivedStickers
//
func (m Messages_ArchivedStickers) Encode() []byte {
	switch m.Constructor {
	case 1338747336:
		t := m.To_messages_archivedStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_ArchivedStickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1338747336:
		m2 := &TLmessages_archivedStickers{Data: Messages_ArchivedStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_ArchivedStickers) To_messages_archivedStickers() *TLmessages_archivedStickers {
	return &TLmessages_archivedStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:KeyboardButton
//
func (m KeyboardButton) Encode() []byte {
	switch m.Constructor {
	case -1560655744:
		t := m.To_keyboardButton()
		return t.Encode()
	case 629866245:
		t := m.To_keyboardButtonUrl()
		return t.Encode()
	case 901503851:
		t := m.To_keyboardButtonCallback()
		return t.Encode()
	case -1318425559:
		t := m.To_keyboardButtonRequestPhone()
		return t.Encode()
	case -59151553:
		t := m.To_keyboardButtonRequestGeoLocation()
		return t.Encode()
	case 90744648:
		t := m.To_keyboardButtonSwitchInline()
		return t.Encode()
	case 1358175439:
		t := m.To_keyboardButtonGame()
		return t.Encode()
	case -1344716869:
		t := m.To_keyboardButtonBuy()
		return t.Encode()
	case 280464681:
		t := m.To_keyboardButtonUrlAuth()
		return t.Encode()
	case -802258988:
		t := m.To_inputKeyboardButtonUrlAuth()
		return t.Encode()
	case -1144565411:
		t := m.To_keyboardButtonRequestPoll()
		return t.Encode()
	default:
		return nil
	}
}
func (m KeyboardButton) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1560655744:
		m2 := &TLkeyboardButton{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 629866245:
		m2 := &TLkeyboardButtonUrl{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 901503851:
		m2 := &TLkeyboardButtonCallback{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1318425559:
		m2 := &TLkeyboardButtonRequestPhone{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -59151553:
		m2 := &TLkeyboardButtonRequestGeoLocation{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 90744648:
		m2 := &TLkeyboardButtonSwitchInline{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1358175439:
		m2 := &TLkeyboardButtonGame{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1344716869:
		m2 := &TLkeyboardButtonBuy{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 280464681:
		m2 := &TLkeyboardButtonUrlAuth{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -802258988:
		m2 := &TLinputKeyboardButtonUrlAuth{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1144565411:
		m2 := &TLkeyboardButtonRequestPoll{Data: KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m KeyboardButton) To_keyboardButton() *TLkeyboardButton {
	return &TLkeyboardButton{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonUrl() *TLkeyboardButtonUrl {
	return &TLkeyboardButtonUrl{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonCallback() *TLkeyboardButtonCallback {
	return &TLkeyboardButtonCallback{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestPhone() *TLkeyboardButtonRequestPhone {
	return &TLkeyboardButtonRequestPhone{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestGeoLocation() *TLkeyboardButtonRequestGeoLocation {
	return &TLkeyboardButtonRequestGeoLocation{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonSwitchInline() *TLkeyboardButtonSwitchInline {
	return &TLkeyboardButtonSwitchInline{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonGame() *TLkeyboardButtonGame {
	return &TLkeyboardButtonGame{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonBuy() *TLkeyboardButtonBuy {
	return &TLkeyboardButtonBuy{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonUrlAuth() *TLkeyboardButtonUrlAuth {
	return &TLkeyboardButtonUrlAuth{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_inputKeyboardButtonUrlAuth() *TLinputKeyboardButtonUrlAuth {
	return &TLinputKeyboardButtonUrlAuth{
		Data: m.Data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestPoll() *TLkeyboardButtonRequestPoll {
	return &TLkeyboardButtonRequestPoll{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Message
//
func (m Message) Encode() []byte {
	switch m.Constructor {
	case -2082087340:
		t := m.To_messageEmpty()
		return t.Encode()
	case 1487813065:
		t := m.To_message()
		return t.Encode()
	case 678405636:
		t := m.To_messageService()
		return t.Encode()
	default:
		return nil
	}
}
func (m Message) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2082087340:
		m2 := &TLmessageEmpty{Data: Message_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1487813065:
		m2 := &TLmessage{Data: Message_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 678405636:
		m2 := &TLmessageService{Data: Message_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Message) To_messageEmpty() *TLmessageEmpty {
	return &TLmessageEmpty{
		Data: m.Data,
	}
}
func (m Message) To_message() *TLmessage {
	return &TLmessage{
		Data: m.Data,
	}
}
func (m Message) To_messageService() *TLmessageService {
	return &TLmessageService{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiKeyword
//
func (m EmojiKeyword) Encode() []byte {
	switch m.Constructor {
	case -709641735:
		t := m.To_emojiKeyword()
		return t.Encode()
	case 594408994:
		t := m.To_emojiKeywordDeleted()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiKeyword) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -709641735:
		m2 := &TLemojiKeyword{Data: EmojiKeyword_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 594408994:
		m2 := &TLemojiKeywordDeleted{Data: EmojiKeyword_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EmojiKeyword) To_emojiKeyword() *TLemojiKeyword {
	return &TLemojiKeyword{
		Data: m.Data,
	}
}
func (m EmojiKeyword) To_emojiKeywordDeleted() *TLemojiKeywordDeleted {
	return &TLemojiKeywordDeleted{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputAppEvent
//
func (m InputAppEvent) Encode() []byte {
	switch m.Constructor {
	case 488313413:
		t := m.To_inputAppEvent()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputAppEvent) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 488313413:
		m2 := &TLinputAppEvent{Data: InputAppEvent_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputAppEvent) To_inputAppEvent() *TLinputAppEvent {
	return &TLinputAppEvent{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedFile
//
func (m EncryptedFile) Encode() []byte {
	switch m.Constructor {
	case -1038136962:
		t := m.To_encryptedFileEmpty()
		return t.Encode()
	case 1248893260:
		t := m.To_encryptedFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1038136962:
		m2 := &TLencryptedFileEmpty{Data: EncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1248893260:
		m2 := &TLencryptedFile{Data: EncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EncryptedFile) To_encryptedFileEmpty() *TLencryptedFileEmpty {
	return &TLencryptedFileEmpty{
		Data: m.Data,
	}
}
func (m EncryptedFile) To_encryptedFile() *TLencryptedFile {
	return &TLencryptedFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputChannel
//
func (m InputChannel) Encode() []byte {
	switch m.Constructor {
	case -292807034:
		t := m.To_inputChannelEmpty()
		return t.Encode()
	case -1343524562:
		t := m.To_inputChannel()
		return t.Encode()
	case 707290417:
		t := m.To_inputChannelFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputChannel) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -292807034:
		m2 := &TLinputChannelEmpty{Data: InputChannel_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1343524562:
		m2 := &TLinputChannel{Data: InputChannel_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 707290417:
		m2 := &TLinputChannelFromMessage{Data: InputChannel_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputChannel) To_inputChannelEmpty() *TLinputChannelEmpty {
	return &TLinputChannelEmpty{
		Data: m.Data,
	}
}
func (m InputChannel) To_inputChannel() *TLinputChannel {
	return &TLinputChannel{
		Data: m.Data,
	}
}
func (m InputChannel) To_inputChannelFromMessage() *TLinputChannelFromMessage {
	return &TLinputChannelFromMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGraph
//
func (m StatsGraph) Encode() []byte {
	switch m.Constructor {
	case 1244130093:
		t := m.To_statsGraphAsync()
		return t.Encode()
	case -1092839390:
		t := m.To_statsGraphError()
		return t.Encode()
	case -1901828938:
		t := m.To_statsGraph()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGraph) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1244130093:
		m2 := &TLstatsGraphAsync{Data: StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1092839390:
		m2 := &TLstatsGraphError{Data: StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1901828938:
		m2 := &TLstatsGraph{Data: StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsGraph) To_statsGraphAsync() *TLstatsGraphAsync {
	return &TLstatsGraphAsync{
		Data: m.Data,
	}
}
func (m StatsGraph) To_statsGraphError() *TLstatsGraphError {
	return &TLstatsGraphError{
		Data: m.Data,
	}
}
func (m StatsGraph) To_statsGraph() *TLstatsGraph {
	return &TLstatsGraph{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeerCategoryPeers
//
func (m TopPeerCategoryPeers) Encode() []byte {
	switch m.Constructor {
	case -75283823:
		t := m.To_topPeerCategoryPeers()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeerCategoryPeers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -75283823:
		m2 := &TLtopPeerCategoryPeers{Data: TopPeerCategoryPeers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m TopPeerCategoryPeers) To_topPeerCategoryPeers() *TLtopPeerCategoryPeers {
	return &TLtopPeerCategoryPeers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InlineBotSwitchPM
//
func (m InlineBotSwitchPM) Encode() []byte {
	switch m.Constructor {
	case 1008755359:
		t := m.To_inlineBotSwitchPM()
		return t.Encode()
	default:
		return nil
	}
}
func (m InlineBotSwitchPM) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1008755359:
		m2 := &TLinlineBotSwitchPM{Data: InlineBotSwitchPM_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InlineBotSwitchPM) To_inlineBotSwitchPM() *TLinlineBotSwitchPM {
	return &TLinlineBotSwitchPM{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Contact
//
func (m Contact) Encode() []byte {
	switch m.Constructor {
	case -116274796:
		t := m.To_contact()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contact) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -116274796:
		m2 := &TLcontact{Data: Contact_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contact) To_contact() *TLcontact {
	return &TLcontact{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPeer
//
func (m InputPeer) Encode() []byte {
	switch m.Constructor {
	case 2134579434:
		t := m.To_inputPeerEmpty()
		return t.Encode()
	case 2107670217:
		t := m.To_inputPeerSelf()
		return t.Encode()
	case 396093539:
		t := m.To_inputPeerChat()
		return t.Encode()
	case 2072935910:
		t := m.To_inputPeerUser()
		return t.Encode()
	case 548253432:
		t := m.To_inputPeerChannel()
		return t.Encode()
	case 398123750:
		t := m.To_inputPeerUserFromMessage()
		return t.Encode()
	case -1667893317:
		t := m.To_inputPeerChannelFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 2134579434:
		m2 := &TLinputPeerEmpty{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2107670217:
		m2 := &TLinputPeerSelf{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 396093539:
		m2 := &TLinputPeerChat{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2072935910:
		m2 := &TLinputPeerUser{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 548253432:
		m2 := &TLinputPeerChannel{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 398123750:
		m2 := &TLinputPeerUserFromMessage{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1667893317:
		m2 := &TLinputPeerChannelFromMessage{Data: InputPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPeer) To_inputPeerEmpty() *TLinputPeerEmpty {
	return &TLinputPeerEmpty{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerSelf() *TLinputPeerSelf {
	return &TLinputPeerSelf{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerChat() *TLinputPeerChat {
	return &TLinputPeerChat{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerUser() *TLinputPeerUser {
	return &TLinputPeerUser{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerChannel() *TLinputPeerChannel {
	return &TLinputPeerChannel{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerUserFromMessage() *TLinputPeerUserFromMessage {
	return &TLinputPeerUserFromMessage{
		Data: m.Data,
	}
}
func (m InputPeer) To_inputPeerChannelFromMessage() *TLinputPeerChannelFromMessage {
	return &TLinputPeerChannelFromMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentResult
//
func (m Payments_PaymentResult) Encode() []byte {
	switch m.Constructor {
	case 1314881805:
		t := m.To_payments_paymentResult()
		return t.Encode()
	case -666824391:
		t := m.To_payments_paymentVerificationNeeded()
		return t.Encode()
	default:
		return nil
	}
}
func (m Payments_PaymentResult) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1314881805:
		m2 := &TLpayments_paymentResult{Data: Payments_PaymentResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -666824391:
		m2 := &TLpayments_paymentVerificationNeeded{Data: Payments_PaymentResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Payments_PaymentResult) To_payments_paymentResult() *TLpayments_paymentResult {
	return &TLpayments_paymentResult{
		Data: m.Data,
	}
}
func (m Payments_PaymentResult) To_payments_paymentVerificationNeeded() *TLpayments_paymentVerificationNeeded {
	return &TLpayments_paymentVerificationNeeded{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureCredentialsEncrypted
//
func (m SecureCredentialsEncrypted) Encode() []byte {
	switch m.Constructor {
	case 871426631:
		t := m.To_secureCredentialsEncrypted()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureCredentialsEncrypted) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 871426631:
		m2 := &TLsecureCredentialsEncrypted{Data: SecureCredentialsEncrypted_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureCredentialsEncrypted) To_secureCredentialsEncrypted() *TLsecureCredentialsEncrypted {
	return &TLsecureCredentialsEncrypted{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPeerNotifySettings
//
func (m InputPeerNotifySettings) Encode() []byte {
	switch m.Constructor {
	case -1673717362:
		t := m.To_inputPeerNotifySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1673717362:
		m2 := &TLinputPeerNotifySettings{Data: InputPeerNotifySettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPeerNotifySettings) To_inputPeerNotifySettings() *TLinputPeerNotifySettings {
	return &TLinputPeerNotifySettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSecureValue
//
func (m InputSecureValue) Encode() []byte {
	switch m.Constructor {
	case -618540889:
		t := m.To_inputSecureValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSecureValue) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -618540889:
		m2 := &TLinputSecureValue{Data: InputSecureValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputSecureValue) To_inputSecureValue() *TLinputSecureValue {
	return &TLinputSecureValue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_ChannelDifference
//
func (m Updates_ChannelDifference) Encode() []byte {
	switch m.Constructor {
	case 1041346555:
		t := m.To_updates_channelDifferenceEmpty()
		return t.Encode()
	case -1531132162:
		t := m.To_updates_channelDifferenceTooLong()
		return t.Encode()
	case 543450958:
		t := m.To_updates_channelDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m Updates_ChannelDifference) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1041346555:
		m2 := &TLupdates_channelDifferenceEmpty{Data: Updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1531132162:
		m2 := &TLupdates_channelDifferenceTooLong{Data: Updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 543450958:
		m2 := &TLupdates_channelDifference{Data: Updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Updates_ChannelDifference) To_updates_channelDifferenceEmpty() *TLupdates_channelDifferenceEmpty {
	return &TLupdates_channelDifferenceEmpty{
		Data: m.Data,
	}
}
func (m Updates_ChannelDifference) To_updates_channelDifferenceTooLong() *TLupdates_channelDifferenceTooLong {
	return &TLupdates_channelDifferenceTooLong{
		Data: m.Data,
	}
}
func (m Updates_ChannelDifference) To_updates_channelDifference() *TLupdates_channelDifference {
	return &TLupdates_channelDifference{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInlineResult
//
func (m BotInlineResult) Encode() []byte {
	switch m.Constructor {
	case 295067450:
		t := m.To_botInlineResult()
		return t.Encode()
	case 400266251:
		t := m.To_botInlineMediaResult()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInlineResult) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 295067450:
		m2 := &TLbotInlineResult{Data: BotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 400266251:
		m2 := &TLbotInlineMediaResult{Data: BotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BotInlineResult) To_botInlineResult() *TLbotInlineResult {
	return &TLbotInlineResult{
		Data: m.Data,
	}
}
func (m BotInlineResult) To_botInlineMediaResult() *TLbotInlineMediaResult {
	return &TLbotInlineMediaResult{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:HighScore
//
func (m HighScore) Encode() []byte {
	switch m.Constructor {
	case 1493171408:
		t := m.To_highScore()
		return t.Encode()
	default:
		return nil
	}
}
func (m HighScore) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1493171408:
		m2 := &TLhighScore{Data: HighScore_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m HighScore) To_highScore() *TLhighScore {
	return &TLhighScore{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Updates
//
func (m Updates) Encode() []byte {
	switch m.Constructor {
	case -484987010:
		t := m.To_updatesTooLong()
		return t.Encode()
	case 580309704:
		t := m.To_updateShortMessage()
		return t.Encode()
	case 1076714939:
		t := m.To_updateShortChatMessage()
		return t.Encode()
	case 2027216577:
		t := m.To_updateShort()
		return t.Encode()
	case 1918567619:
		t := m.To_updatesCombined()
		return t.Encode()
	case 1957577280:
		t := m.To_updates()
		return t.Encode()
	case 301019932:
		t := m.To_updateShortSentMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m Updates) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -484987010:
		m2 := &TLupdatesTooLong{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 580309704:
		m2 := &TLupdateShortMessage{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1076714939:
		m2 := &TLupdateShortChatMessage{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2027216577:
		m2 := &TLupdateShort{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1918567619:
		m2 := &TLupdatesCombined{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1957577280:
		m2 := &TLupdates{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 301019932:
		m2 := &TLupdateShortSentMessage{Data: Updates_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Updates) To_updatesTooLong() *TLupdatesTooLong {
	return &TLupdatesTooLong{
		Data: m.Data,
	}
}
func (m Updates) To_updateShortMessage() *TLupdateShortMessage {
	return &TLupdateShortMessage{
		Data: m.Data,
	}
}
func (m Updates) To_updateShortChatMessage() *TLupdateShortChatMessage {
	return &TLupdateShortChatMessage{
		Data: m.Data,
	}
}
func (m Updates) To_updateShort() *TLupdateShort {
	return &TLupdateShort{
		Data: m.Data,
	}
}
func (m Updates) To_updatesCombined() *TLupdatesCombined {
	return &TLupdatesCombined{
		Data: m.Data,
	}
}
func (m Updates) To_updates() *TLupdates {
	return &TLupdates{
		Data: m.Data,
	}
}
func (m Updates) To_updateShortSentMessage() *TLupdateShortSentMessage {
	return &TLupdateShortSentMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopInviter
//
func (m StatsGroupTopInviter) Encode() []byte {
	switch m.Constructor {
	case 831924812:
		t := m.To_statsGroupTopInviter()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopInviter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 831924812:
		m2 := &TLstatsGroupTopInviter{Data: StatsGroupTopInviter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopInviter) To_statsGroupTopInviter() *TLstatsGroupTopInviter {
	return &TLstatsGroupTopInviter{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatFull
//
func (m ChatFull) Encode() []byte {
	switch m.Constructor {
	case 461151667:
		t := m.To_chatFull()
		return t.Encode()
	case -253335766:
		t := m.To_channelFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatFull) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 461151667:
		m2 := &TLchatFull{Data: ChatFull_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -253335766:
		m2 := &TLchannelFull{Data: ChatFull_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatFull) To_chatFull() *TLchatFull {
	return &TLchatFull{
		Data: m.Data,
	}
}
func (m ChatFull) To_channelFull() *TLchannelFull {
	return &TLchannelFull{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedMessage
//
func (m EncryptedMessage) Encode() []byte {
	switch m.Constructor {
	case -317144808:
		t := m.To_encryptedMessage()
		return t.Encode()
	case 594758406:
		t := m.To_encryptedMessageService()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -317144808:
		m2 := &TLencryptedMessage{Data: EncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 594758406:
		m2 := &TLencryptedMessageService{Data: EncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EncryptedMessage) To_encryptedMessage() *TLencryptedMessage {
	return &TLencryptedMessage{
		Data: m.Data,
	}
}
func (m EncryptedMessage) To_encryptedMessageService() *TLencryptedMessageService {
	return &TLencryptedMessageService{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollAnswerVoters
//
func (m PollAnswerVoters) Encode() []byte {
	switch m.Constructor {
	case 997055186:
		t := m.To_pollAnswerVoters()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollAnswerVoters) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 997055186:
		m2 := &TLpollAnswerVoters{Data: PollAnswerVoters_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PollAnswerVoters) To_pollAnswerVoters() *TLpollAnswerVoters {
	return &TLpollAnswerVoters{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Password
//
func (m Account_Password) Encode() []byte {
	switch m.Constructor {
	case -1390001672:
		t := m.To_account_password()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_Password) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1390001672:
		m2 := &TLaccount_password{Data: Account_Password_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_Password) To_account_password() *TLaccount_password {
	return &TLaccount_password{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_TopPeers
//
func (m Contacts_TopPeers) Encode() []byte {
	switch m.Constructor {
	case -567906571:
		t := m.To_contacts_topPeersNotModified()
		return t.Encode()
	case 1891070632:
		t := m.To_contacts_topPeers()
		return t.Encode()
	case -1255369827:
		t := m.To_contacts_topPeersDisabled()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_TopPeers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -567906571:
		m2 := &TLcontacts_topPeersNotModified{Data: Contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1891070632:
		m2 := &TLcontacts_topPeers{Data: Contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1255369827:
		m2 := &TLcontacts_topPeersDisabled{Data: Contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_TopPeers) To_contacts_topPeersNotModified() *TLcontacts_topPeersNotModified {
	return &TLcontacts_topPeersNotModified{
		Data: m.Data,
	}
}
func (m Contacts_TopPeers) To_contacts_topPeers() *TLcontacts_topPeers {
	return &TLcontacts_topPeers{
		Data: m.Data,
	}
}
func (m Contacts_TopPeers) To_contacts_topPeersDisabled() *TLcontacts_topPeersDisabled {
	return &TLcontacts_topPeersDisabled{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ShippingOption
//
func (m ShippingOption) Encode() []byte {
	switch m.Constructor {
	case -1239335713:
		t := m.To_shippingOption()
		return t.Encode()
	default:
		return nil
	}
}
func (m ShippingOption) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1239335713:
		m2 := &TLshippingOption{Data: ShippingOption_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ShippingOption) To_shippingOption() *TLshippingOption {
	return &TLshippingOption{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSingleMedia
//
func (m InputSingleMedia) Encode() []byte {
	switch m.Constructor {
	case 482797855:
		t := m.To_inputSingleMedia()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSingleMedia) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 482797855:
		m2 := &TLinputSingleMedia{Data: InputSingleMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputSingleMedia) To_inputSingleMedia() *TLinputSingleMedia {
	return &TLinputSingleMedia{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_BotCallbackAnswer
//
func (m Messages_BotCallbackAnswer) Encode() []byte {
	switch m.Constructor {
	case 911761060:
		t := m.To_messages_botCallbackAnswer()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_BotCallbackAnswer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 911761060:
		m2 := &TLmessages_botCallbackAnswer{Data: Messages_BotCallbackAnswer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_BotCallbackAnswer) To_messages_botCallbackAnswer() *TLmessages_botCallbackAnswer {
	return &TLmessages_botCallbackAnswer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerNotifySettings
//
func (m PeerNotifySettings) Encode() []byte {
	switch m.Constructor {
	case -1353671392:
		t := m.To_peerNotifySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1353671392:
		m2 := &TLpeerNotifySettings{Data: PeerNotifySettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PeerNotifySettings) To_peerNotifySettings() *TLpeerNotifySettings {
	return &TLpeerNotifySettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickerSetItem
//
func (m InputStickerSetItem) Encode() []byte {
	switch m.Constructor {
	case -6249322:
		t := m.To_inputStickerSetItem()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickerSetItem) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -6249322:
		m2 := &TLinputStickerSetItem{Data: InputStickerSetItem_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputStickerSetItem) To_inputStickerSetItem() *TLinputStickerSetItem {
	return &TLinputStickerSetItem{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:User
//
func (m User) Encode() []byte {
	switch m.Constructor {
	case 537022650:
		t := m.To_userEmpty()
		return t.Encode()
	case -1820043071:
		t := m.To_user()
		return t.Encode()
	default:
		return nil
	}
}
func (m User) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 537022650:
		m2 := &TLuserEmpty{Data: User_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1820043071:
		m2 := &TLuser{Data: User_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m User) To_userEmpty() *TLuserEmpty {
	return &TLuserEmpty{
		Data: m.Data,
	}
}
func (m User) To_user() *TLuser {
	return &TLuser{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_VotesList
//
func (m Messages_VotesList) Encode() []byte {
	switch m.Constructor {
	case 136574537:
		t := m.To_messages_votesList()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_VotesList) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 136574537:
		m2 := &TLmessages_votesList{Data: Messages_VotesList_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_VotesList) To_messages_votesList() *TLmessages_votesList {
	return &TLmessages_votesList{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Dialogs
//
func (m Messages_Dialogs) Encode() []byte {
	switch m.Constructor {
	case 364538944:
		t := m.To_messages_dialogs()
		return t.Encode()
	case 1910543603:
		t := m.To_messages_dialogsSlice()
		return t.Encode()
	case -253500010:
		t := m.To_messages_dialogsNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_Dialogs) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 364538944:
		m2 := &TLmessages_dialogs{Data: Messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1910543603:
		m2 := &TLmessages_dialogsSlice{Data: Messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -253500010:
		m2 := &TLmessages_dialogsNotModified{Data: Messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_Dialogs) To_messages_dialogs() *TLmessages_dialogs {
	return &TLmessages_dialogs{
		Data: m.Data,
	}
}
func (m Messages_Dialogs) To_messages_dialogsSlice() *TLmessages_dialogsSlice {
	return &TLmessages_dialogsSlice{
		Data: m.Data,
	}
}
func (m Messages_Dialogs) To_messages_dialogsNotModified() *TLmessages_dialogsNotModified {
	return &TLmessages_dialogsNotModified{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Peer
//
func (m Peer) Encode() []byte {
	switch m.Constructor {
	case -1649296275:
		t := m.To_peerUser()
		return t.Encode()
	case -1160714821:
		t := m.To_peerChat()
		return t.Encode()
	case -1109531342:
		t := m.To_peerChannel()
		return t.Encode()
	default:
		return nil
	}
}
func (m Peer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1649296275:
		m2 := &TLpeerUser{Data: Peer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1160714821:
		m2 := &TLpeerChat{Data: Peer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1109531342:
		m2 := &TLpeerChannel{Data: Peer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Peer) To_peerUser() *TLpeerUser {
	return &TLpeerUser{
		Data: m.Data,
	}
}
func (m Peer) To_peerChat() *TLpeerChat {
	return &TLpeerChat{
		Data: m.Data,
	}
}
func (m Peer) To_peerChannel() *TLpeerChannel {
	return &TLpeerChannel{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputThemeSettings
//
func (m InputThemeSettings) Encode() []byte {
	switch m.Constructor {
	case -1118798639:
		t := m.To_inputThemeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputThemeSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1118798639:
		m2 := &TLinputThemeSettings{Data: InputThemeSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputThemeSettings) To_inputThemeSettings() *TLinputThemeSettings {
	return &TLinputThemeSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsPercentValue
//
func (m StatsPercentValue) Encode() []byte {
	switch m.Constructor {
	case -875679776:
		t := m.To_statsPercentValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsPercentValue) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -875679776:
		m2 := &TLstatsPercentValue{Data: StatsPercentValue_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsPercentValue) To_statsPercentValue() *TLstatsPercentValue {
	return &TLstatsPercentValue{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_Authorization
//
func (m Auth_Authorization) Encode() []byte {
	switch m.Constructor {
	case -855308010:
		t := m.To_auth_authorization()
		return t.Encode()
	case 1148485274:
		t := m.To_auth_authorizationSignUpRequired()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_Authorization) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -855308010:
		m2 := &TLauth_authorization{Data: Auth_Authorization_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1148485274:
		m2 := &TLauth_authorizationSignUpRequired{Data: Auth_Authorization_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_Authorization) To_auth_authorization() *TLauth_authorization {
	return &TLauth_authorization{
		Data: m.Data,
	}
}
func (m Auth_Authorization) To_auth_authorizationSignUpRequired() *TLauth_authorizationSignUpRequired {
	return &TLauth_authorizationSignUpRequired{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatParticipants
//
func (m ChatParticipants) Encode() []byte {
	switch m.Constructor {
	case -57668565:
		t := m.To_chatParticipantsForbidden()
		return t.Encode()
	case 1061556205:
		t := m.To_chatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -57668565:
		m2 := &TLchatParticipantsForbidden{Data: ChatParticipants_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1061556205:
		m2 := &TLchatParticipants{Data: ChatParticipants_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatParticipants) To_chatParticipantsForbidden() *TLchatParticipantsForbidden {
	return &TLchatParticipantsForbidden{
		Data: m.Data,
	}
}
func (m ChatParticipants) To_chatParticipants() *TLchatParticipants {
	return &TLchatParticipants{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RecentMeUrl
//
func (m RecentMeUrl) Encode() []byte {
	switch m.Constructor {
	case 1189204285:
		t := m.To_recentMeUrlUnknown()
		return t.Encode()
	case -1917045962:
		t := m.To_recentMeUrlUser()
		return t.Encode()
	case -1608834311:
		t := m.To_recentMeUrlChat()
		return t.Encode()
	case -347535331:
		t := m.To_recentMeUrlChatInvite()
		return t.Encode()
	case -1140172836:
		t := m.To_recentMeUrlStickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m RecentMeUrl) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1189204285:
		m2 := &TLrecentMeUrlUnknown{Data: RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1917045962:
		m2 := &TLrecentMeUrlUser{Data: RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1608834311:
		m2 := &TLrecentMeUrlChat{Data: RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -347535331:
		m2 := &TLrecentMeUrlChatInvite{Data: RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1140172836:
		m2 := &TLrecentMeUrlStickerSet{Data: RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m RecentMeUrl) To_recentMeUrlUnknown() *TLrecentMeUrlUnknown {
	return &TLrecentMeUrlUnknown{
		Data: m.Data,
	}
}
func (m RecentMeUrl) To_recentMeUrlUser() *TLrecentMeUrlUser {
	return &TLrecentMeUrlUser{
		Data: m.Data,
	}
}
func (m RecentMeUrl) To_recentMeUrlChat() *TLrecentMeUrlChat {
	return &TLrecentMeUrlChat{
		Data: m.Data,
	}
}
func (m RecentMeUrl) To_recentMeUrlChatInvite() *TLrecentMeUrlChatInvite {
	return &TLrecentMeUrlChatInvite{
		Data: m.Data,
	}
}
func (m RecentMeUrl) To_recentMeUrlStickerSet() *TLrecentMeUrlStickerSet {
	return &TLrecentMeUrlStickerSet{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentRequestedInfo
//
func (m PaymentRequestedInfo) Encode() []byte {
	switch m.Constructor {
	case -1868808300:
		t := m.To_paymentRequestedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentRequestedInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1868808300:
		m2 := &TLpaymentRequestedInfo{Data: PaymentRequestedInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PaymentRequestedInfo) To_paymentRequestedInfo() *TLpaymentRequestedInfo {
	return &TLpaymentRequestedInfo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopPoster
//
func (m StatsGroupTopPoster) Encode() []byte {
	switch m.Constructor {
	case 418631927:
		t := m.To_statsGroupTopPoster()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopPoster) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 418631927:
		m2 := &TLstatsGroupTopPoster{Data: StatsGroupTopPoster_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopPoster) To_statsGroupTopPoster() *TLstatsGroupTopPoster {
	return &TLstatsGroupTopPoster{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneConnection
//
func (m PhoneConnection) Encode() []byte {
	switch m.Constructor {
	case -1655957568:
		t := m.To_phoneConnection()
		return t.Encode()
	case 1667228533:
		t := m.To_phoneConnectionWebrtc()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneConnection) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1655957568:
		m2 := &TLphoneConnection{Data: PhoneConnection_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1667228533:
		m2 := &TLphoneConnectionWebrtc{Data: PhoneConnection_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PhoneConnection) To_phoneConnection() *TLphoneConnection {
	return &TLphoneConnection{
		Data: m.Data,
	}
}
func (m PhoneConnection) To_phoneConnectionWebrtc() *TLphoneConnectionWebrtc {
	return &TLphoneConnectionWebrtc{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputClientProxy
//
func (m InputClientProxy) Encode() []byte {
	switch m.Constructor {
	case 1968737087:
		t := m.To_inputClientProxy()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputClientProxy) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1968737087:
		m2 := &TLinputClientProxy{Data: InputClientProxy_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputClientProxy) To_inputClientProxy() *TLinputClientProxy {
	return &TLinputClientProxy{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FileHash
//
func (m FileHash) Encode() []byte {
	switch m.Constructor {
	case 1648543603:
		t := m.To_fileHash()
		return t.Encode()
	default:
		return nil
	}
}
func (m FileHash) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1648543603:
		m2 := &TLfileHash{Data: FileHash_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m FileHash) To_fileHash() *TLfileHash {
	return &TLfileHash{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputNotifyPeer
//
func (m InputNotifyPeer) Encode() []byte {
	switch m.Constructor {
	case -1195615476:
		t := m.To_inputNotifyPeer()
		return t.Encode()
	case 423314455:
		t := m.To_inputNotifyUsers()
		return t.Encode()
	case 1251338318:
		t := m.To_inputNotifyChats()
		return t.Encode()
	case -1311015810:
		t := m.To_inputNotifyBroadcasts()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputNotifyPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1195615476:
		m2 := &TLinputNotifyPeer{Data: InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 423314455:
		m2 := &TLinputNotifyUsers{Data: InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1251338318:
		m2 := &TLinputNotifyChats{Data: InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1311015810:
		m2 := &TLinputNotifyBroadcasts{Data: InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputNotifyPeer) To_inputNotifyPeer() *TLinputNotifyPeer {
	return &TLinputNotifyPeer{
		Data: m.Data,
	}
}
func (m InputNotifyPeer) To_inputNotifyUsers() *TLinputNotifyUsers {
	return &TLinputNotifyUsers{
		Data: m.Data,
	}
}
func (m InputNotifyPeer) To_inputNotifyChats() *TLinputNotifyChats {
	return &TLinputNotifyChats{
		Data: m.Data,
	}
}
func (m InputNotifyPeer) To_inputNotifyBroadcasts() *TLinputNotifyBroadcasts {
	return &TLinputNotifyBroadcasts{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeer
//
func (m TopPeer) Encode() []byte {
	switch m.Constructor {
	case -305282981:
		t := m.To_topPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeer) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -305282981:
		m2 := &TLtopPeer{Data: TopPeer_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m TopPeer) To_topPeer() *TLtopPeer {
	return &TLtopPeer{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LabeledPrice
//
func (m LabeledPrice) Encode() []byte {
	switch m.Constructor {
	case -886477832:
		t := m.To_labeledPrice()
		return t.Encode()
	default:
		return nil
	}
}
func (m LabeledPrice) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -886477832:
		m2 := &TLlabeledPrice{Data: LabeledPrice_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m LabeledPrice) To_labeledPrice() *TLlabeledPrice {
	return &TLlabeledPrice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PasswordKdfAlgo
//
func (m PasswordKdfAlgo) Encode() []byte {
	switch m.Constructor {
	case -732254058:
		t := m.To_passwordKdfAlgoUnknown()
		return t.Encode()
	case 982592842:
		t := m.To_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow()
		return t.Encode()
	default:
		return nil
	}
}
func (m PasswordKdfAlgo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -732254058:
		m2 := &TLpasswordKdfAlgoUnknown{Data: PasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 982592842:
		m2 := &TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{Data: PasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PasswordKdfAlgo) To_passwordKdfAlgoUnknown() *TLpasswordKdfAlgoUnknown {
	return &TLpasswordKdfAlgoUnknown{
		Data: m.Data,
	}
}
func (m PasswordKdfAlgo) To_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow() *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow {
	return &TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:NearestDc
//
func (m NearestDc) Encode() []byte {
	switch m.Constructor {
	case -1910892683:
		t := m.To_nearestDc()
		return t.Encode()
	default:
		return nil
	}
}
func (m NearestDc) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1910892683:
		m2 := &TLnearestDc{Data: NearestDc_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m NearestDc) To_nearestDc() *TLnearestDc {
	return &TLnearestDc{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineMessageID
//
func (m InputBotInlineMessageID) Encode() []byte {
	switch m.Constructor {
	case -1995686519:
		t := m.To_inputBotInlineMessageID()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineMessageID) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1995686519:
		m2 := &TLinputBotInlineMessageID{Data: InputBotInlineMessageID_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineMessageID) To_inputBotInlineMessageID() *TLinputBotInlineMessageID {
	return &TLinputBotInlineMessageID{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserFull
//
func (m UserFull) Encode() []byte {
	switch m.Constructor {
	case -302941166:
		t := m.To_userFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserFull) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -302941166:
		m2 := &TLuserFull{Data: UserFull_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m UserFull) To_userFull() *TLuserFull {
	return &TLuserFull{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Photo
//
func (m Photo) Encode() []byte {
	switch m.Constructor {
	case 590459437:
		t := m.To_photoEmpty()
		return t.Encode()
	case -82216347:
		t := m.To_photo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Photo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 590459437:
		m2 := &TLphotoEmpty{Data: Photo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -82216347:
		m2 := &TLphoto{Data: Photo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Photo) To_photoEmpty() *TLphotoEmpty {
	return &TLphotoEmpty{
		Data: m.Data,
	}
}
func (m Photo) To_photo() *TLphoto {
	return &TLphoto{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureRequiredType
//
func (m SecureRequiredType) Encode() []byte {
	switch m.Constructor {
	case -2103600678:
		t := m.To_secureRequiredType()
		return t.Encode()
	case 41187252:
		t := m.To_secureRequiredTypeOneOf()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureRequiredType) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -2103600678:
		m2 := &TLsecureRequiredType{Data: SecureRequiredType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 41187252:
		m2 := &TLsecureRequiredTypeOneOf{Data: SecureRequiredType_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SecureRequiredType) To_secureRequiredType() *TLsecureRequiredType {
	return &TLsecureRequiredType{
		Data: m.Data,
	}
}
func (m SecureRequiredType) To_secureRequiredTypeOneOf() *TLsecureRequiredTypeOneOf {
	return &TLsecureRequiredTypeOneOf{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WallPaperSettings
//
func (m WallPaperSettings) Encode() []byte {
	switch m.Constructor {
	case 84438264:
		t := m.To_wallPaperSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m WallPaperSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 84438264:
		m2 := &TLwallPaperSettings{Data: WallPaperSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WallPaperSettings) To_wallPaperSettings() *TLwallPaperSettings {
	return &TLwallPaperSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageUserVote
//
func (m MessageUserVote) Encode() []byte {
	switch m.Constructor {
	case -1567730343:
		t := m.To_messageUserVote()
		return t.Encode()
	case 909603888:
		t := m.To_messageUserVoteInputOption()
		return t.Encode()
	case 244310238:
		t := m.To_messageUserVoteMultiple()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageUserVote) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1567730343:
		m2 := &TLmessageUserVote{Data: MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 909603888:
		m2 := &TLmessageUserVoteInputOption{Data: MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 244310238:
		m2 := &TLmessageUserVoteMultiple{Data: MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageUserVote) To_messageUserVote() *TLmessageUserVote {
	return &TLmessageUserVote{
		Data: m.Data,
	}
}
func (m MessageUserVote) To_messageUserVoteInputOption() *TLmessageUserVoteInputOption {
	return &TLmessageUserVoteInputOption{
		Data: m.Data,
	}
}
func (m MessageUserVote) To_messageUserVoteMultiple() *TLmessageUserVoteMultiple {
	return &TLmessageUserVoteMultiple{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CdnPublicKey
//
func (m CdnPublicKey) Encode() []byte {
	switch m.Constructor {
	case -914167110:
		t := m.To_cdnPublicKey()
		return t.Encode()
	default:
		return nil
	}
}
func (m CdnPublicKey) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -914167110:
		m2 := &TLcdnPublicKey{Data: CdnPublicKey_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m CdnPublicKey) To_cdnPublicKey() *TLcdnPublicKey {
	return &TLcdnPublicKey{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotCommand
//
func (m BotCommand) Encode() []byte {
	switch m.Constructor {
	case -1032140601:
		t := m.To_botCommand()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotCommand) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1032140601:
		m2 := &TLbotCommand{Data: BotCommand_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m BotCommand) To_botCommand() *TLbotCommand {
	return &TLbotCommand{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerSet
//
func (m StickerSet) Encode() []byte {
	switch m.Constructor {
	case -290164953:
		t := m.To_stickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerSet) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -290164953:
		m2 := &TLstickerSet{Data: StickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StickerSet) To_stickerSet() *TLstickerSet {
	return &TLstickerSet{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputChatPhoto
//
func (m InputChatPhoto) Encode() []byte {
	switch m.Constructor {
	case 480546647:
		t := m.To_inputChatPhotoEmpty()
		return t.Encode()
	case -968723890:
		t := m.To_inputChatUploadedPhoto()
		return t.Encode()
	case -1991004873:
		t := m.To_inputChatPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputChatPhoto) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 480546647:
		m2 := &TLinputChatPhotoEmpty{Data: InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -968723890:
		m2 := &TLinputChatUploadedPhoto{Data: InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1991004873:
		m2 := &TLinputChatPhoto{Data: InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputChatPhoto) To_inputChatPhotoEmpty() *TLinputChatPhotoEmpty {
	return &TLinputChatPhotoEmpty{
		Data: m.Data,
	}
}
func (m InputChatPhoto) To_inputChatUploadedPhoto() *TLinputChatUploadedPhoto {
	return &TLinputChatUploadedPhoto{
		Data: m.Data,
	}
}
func (m InputChatPhoto) To_inputChatPhoto() *TLinputChatPhoto {
	return &TLinputChatPhoto{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_DeepLinkInfo
//
func (m Help_DeepLinkInfo) Encode() []byte {
	switch m.Constructor {
	case 1722786150:
		t := m.To_help_deepLinkInfoEmpty()
		return t.Encode()
	case 1783556146:
		t := m.To_help_deepLinkInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_DeepLinkInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1722786150:
		m2 := &TLhelp_deepLinkInfoEmpty{Data: Help_DeepLinkInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1783556146:
		m2 := &TLhelp_deepLinkInfo{Data: Help_DeepLinkInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_DeepLinkInfo) To_help_deepLinkInfoEmpty() *TLhelp_deepLinkInfoEmpty {
	return &TLhelp_deepLinkInfoEmpty{
		Data: m.Data,
	}
}
func (m Help_DeepLinkInfo) To_help_deepLinkInfo() *TLhelp_deepLinkInfo {
	return &TLhelp_deepLinkInfo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageRelatedArticle
//
func (m PageRelatedArticle) Encode() []byte {
	switch m.Constructor {
	case -1282352120:
		t := m.To_pageRelatedArticle()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageRelatedArticle) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1282352120:
		m2 := &TLpageRelatedArticle{Data: PageRelatedArticle_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageRelatedArticle) To_pageRelatedArticle() *TLpageRelatedArticle {
	return &TLpageRelatedArticle{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_StickerSetInstallResult
//
func (m Messages_StickerSetInstallResult) Encode() []byte {
	switch m.Constructor {
	case 946083368:
		t := m.To_messages_stickerSetInstallResultSuccess()
		return t.Encode()
	case 904138920:
		t := m.To_messages_stickerSetInstallResultArchive()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_StickerSetInstallResult) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 946083368:
		m2 := &TLmessages_stickerSetInstallResultSuccess{Data: Messages_StickerSetInstallResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 904138920:
		m2 := &TLmessages_stickerSetInstallResultArchive{Data: Messages_StickerSetInstallResult_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_StickerSetInstallResult) To_messages_stickerSetInstallResultSuccess() *TLmessages_stickerSetInstallResultSuccess {
	return &TLmessages_stickerSetInstallResultSuccess{
		Data: m.Data,
	}
}
func (m Messages_StickerSetInstallResult) To_messages_stickerSetInstallResultArchive() *TLmessages_stickerSetInstallResultArchive {
	return &TLmessages_stickerSetInstallResultArchive{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SentEncryptedMessage
//
func (m Messages_SentEncryptedMessage) Encode() []byte {
	switch m.Constructor {
	case 1443858741:
		t := m.To_messages_sentEncryptedMessage()
		return t.Encode()
	case -1802240206:
		t := m.To_messages_sentEncryptedFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_SentEncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1443858741:
		m2 := &TLmessages_sentEncryptedMessage{Data: Messages_SentEncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1802240206:
		m2 := &TLmessages_sentEncryptedFile{Data: Messages_SentEncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_SentEncryptedMessage) To_messages_sentEncryptedMessage() *TLmessages_sentEncryptedMessage {
	return &TLmessages_sentEncryptedMessage{
		Data: m.Data,
	}
}
func (m Messages_SentEncryptedMessage) To_messages_sentEncryptedFile() *TLmessages_sentEncryptedFile {
	return &TLmessages_sentEncryptedFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MaskCoords
//
func (m MaskCoords) Encode() []byte {
	switch m.Constructor {
	case -1361650766:
		t := m.To_maskCoords()
		return t.Encode()
	default:
		return nil
	}
}
func (m MaskCoords) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1361650766:
		m2 := &TLmaskCoords{Data: MaskCoords_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MaskCoords) To_maskCoords() *TLmaskCoords {
	return &TLmaskCoords{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageTableRow
//
func (m PageTableRow) Encode() []byte {
	switch m.Constructor {
	case -524237339:
		t := m.To_pageTableRow()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageTableRow) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -524237339:
		m2 := &TLpageTableRow{Data: PageTableRow_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageTableRow) To_pageTableRow() *TLpageTableRow {
	return &TLpageTableRow{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_State
//
func (m Updates_State) Encode() []byte {
	switch m.Constructor {
	case -1519637954:
		t := m.To_updates_state()
		return t.Encode()
	default:
		return nil
	}
}
func (m Updates_State) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1519637954:
		m2 := &TLupdates_state{Data: Updates_State_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Updates_State) To_updates_state() *TLupdates_state {
	return &TLupdates_state{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Page
//
func (m Page) Encode() []byte {
	switch m.Constructor {
	case -1738178803:
		t := m.To_page()
		return t.Encode()
	default:
		return nil
	}
}
func (m Page) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1738178803:
		m2 := &TLpage{Data: Page_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Page) To_page() *TLpage {
	return &TLpage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Folder
//
func (m Folder) Encode() []byte {
	switch m.Constructor {
	case -11252123:
		t := m.To_folder()
		return t.Encode()
	default:
		return nil
	}
}
func (m Folder) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -11252123:
		m2 := &TLfolder{Data: Folder_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Folder) To_folder() *TLfolder {
	return &TLfolder{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerSettings
//
func (m PeerSettings) Encode() []byte {
	switch m.Constructor {
	case 1933519201:
		t := m.To_peerSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1933519201:
		m2 := &TLpeerSettings{Data: PeerSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PeerSettings) To_peerSettings() *TLpeerSettings {
	return &TLpeerSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_ExportedAuthorization
//
func (m Auth_ExportedAuthorization) Encode() []byte {
	switch m.Constructor {
	case -543777747:
		t := m.To_auth_exportedAuthorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m Auth_ExportedAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -543777747:
		m2 := &TLauth_exportedAuthorization{Data: Auth_ExportedAuthorization_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Auth_ExportedAuthorization) To_auth_exportedAuthorization() *TLauth_exportedAuthorization {
	return &TLauth_exportedAuthorization{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:VideoSize
//
func (m VideoSize) Encode() []byte {
	switch m.Constructor {
	case -399391402:
		t := m.To_videoSize()
		return t.Encode()
	default:
		return nil
	}
}
func (m VideoSize) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -399391402:
		m2 := &TLvideoSize{Data: VideoSize_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m VideoSize) To_videoSize() *TLvideoSize {
	return &TLvideoSize{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebPageAttribute
//
func (m WebPageAttribute) Encode() []byte {
	switch m.Constructor {
	case 1421174295:
		t := m.To_webPageAttributeTheme()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebPageAttribute) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1421174295:
		m2 := &TLwebPageAttributeTheme{Data: WebPageAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WebPageAttribute) To_webPageAttributeTheme() *TLwebPageAttributeTheme {
	return &TLwebPageAttributeTheme{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SendMessageAction
//
func (m SendMessageAction) Encode() []byte {
	switch m.Constructor {
	case 381645902:
		t := m.To_sendMessageTypingAction()
		return t.Encode()
	case -44119819:
		t := m.To_sendMessageCancelAction()
		return t.Encode()
	case -1584933265:
		t := m.To_sendMessageRecordVideoAction()
		return t.Encode()
	case -378127636:
		t := m.To_sendMessageUploadVideoAction()
		return t.Encode()
	case -718310409:
		t := m.To_sendMessageRecordAudioAction()
		return t.Encode()
	case -212740181:
		t := m.To_sendMessageUploadAudioAction()
		return t.Encode()
	case -774682074:
		t := m.To_sendMessageUploadPhotoAction()
		return t.Encode()
	case -1441998364:
		t := m.To_sendMessageUploadDocumentAction()
		return t.Encode()
	case 393186209:
		t := m.To_sendMessageGeoLocationAction()
		return t.Encode()
	case 1653390447:
		t := m.To_sendMessageChooseContactAction()
		return t.Encode()
	case -580219064:
		t := m.To_sendMessageGamePlayAction()
		return t.Encode()
	case -1997373508:
		t := m.To_sendMessageRecordRoundAction()
		return t.Encode()
	case 608050278:
		t := m.To_sendMessageUploadRoundAction()
		return t.Encode()
	default:
		return nil
	}
}
func (m SendMessageAction) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 381645902:
		m2 := &TLsendMessageTypingAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -44119819:
		m2 := &TLsendMessageCancelAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1584933265:
		m2 := &TLsendMessageRecordVideoAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -378127636:
		m2 := &TLsendMessageUploadVideoAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -718310409:
		m2 := &TLsendMessageRecordAudioAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -212740181:
		m2 := &TLsendMessageUploadAudioAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -774682074:
		m2 := &TLsendMessageUploadPhotoAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1441998364:
		m2 := &TLsendMessageUploadDocumentAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 393186209:
		m2 := &TLsendMessageGeoLocationAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1653390447:
		m2 := &TLsendMessageChooseContactAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -580219064:
		m2 := &TLsendMessageGamePlayAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1997373508:
		m2 := &TLsendMessageRecordRoundAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 608050278:
		m2 := &TLsendMessageUploadRoundAction{Data: SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m SendMessageAction) To_sendMessageTypingAction() *TLsendMessageTypingAction {
	return &TLsendMessageTypingAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageCancelAction() *TLsendMessageCancelAction {
	return &TLsendMessageCancelAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageRecordVideoAction() *TLsendMessageRecordVideoAction {
	return &TLsendMessageRecordVideoAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageUploadVideoAction() *TLsendMessageUploadVideoAction {
	return &TLsendMessageUploadVideoAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageRecordAudioAction() *TLsendMessageRecordAudioAction {
	return &TLsendMessageRecordAudioAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageUploadAudioAction() *TLsendMessageUploadAudioAction {
	return &TLsendMessageUploadAudioAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageUploadPhotoAction() *TLsendMessageUploadPhotoAction {
	return &TLsendMessageUploadPhotoAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageUploadDocumentAction() *TLsendMessageUploadDocumentAction {
	return &TLsendMessageUploadDocumentAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageGeoLocationAction() *TLsendMessageGeoLocationAction {
	return &TLsendMessageGeoLocationAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageChooseContactAction() *TLsendMessageChooseContactAction {
	return &TLsendMessageChooseContactAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageGamePlayAction() *TLsendMessageGamePlayAction {
	return &TLsendMessageGamePlayAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageRecordRoundAction() *TLsendMessageRecordRoundAction {
	return &TLsendMessageRecordRoundAction{
		Data: m.Data,
	}
}
func (m SendMessageAction) To_sendMessageUploadRoundAction() *TLsendMessageUploadRoundAction {
	return &TLsendMessageUploadRoundAction{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FavedStickers
//
func (m Messages_FavedStickers) Encode() []byte {
	switch m.Constructor {
	case -1634752813:
		t := m.To_messages_favedStickersNotModified()
		return t.Encode()
	case -209768682:
		t := m.To_messages_favedStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_FavedStickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1634752813:
		m2 := &TLmessages_favedStickersNotModified{Data: Messages_FavedStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -209768682:
		m2 := &TLmessages_favedStickers{Data: Messages_FavedStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_FavedStickers) To_messages_favedStickersNotModified() *TLmessages_favedStickersNotModified {
	return &TLmessages_favedStickersNotModified{
		Data: m.Data,
	}
}
func (m Messages_FavedStickers) To_messages_favedStickers() *TLmessages_favedStickers {
	return &TLmessages_favedStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelParticipant
//
func (m ChannelParticipant) Encode() []byte {
	switch m.Constructor {
	case 367766557:
		t := m.To_channelParticipant()
		return t.Encode()
	case -1557620115:
		t := m.To_channelParticipantSelf()
		return t.Encode()
	case 1149094475:
		t := m.To_channelParticipantCreator()
		return t.Encode()
	case -859915345:
		t := m.To_channelParticipantAdmin()
		return t.Encode()
	case 470789295:
		t := m.To_channelParticipantBanned()
		return t.Encode()
	case -1010402965:
		t := m.To_channelParticipantLeft()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelParticipant) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 367766557:
		m2 := &TLchannelParticipant{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1557620115:
		m2 := &TLchannelParticipantSelf{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1149094475:
		m2 := &TLchannelParticipantCreator{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -859915345:
		m2 := &TLchannelParticipantAdmin{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 470789295:
		m2 := &TLchannelParticipantBanned{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1010402965:
		m2 := &TLchannelParticipantLeft{Data: ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChannelParticipant) To_channelParticipant() *TLchannelParticipant {
	return &TLchannelParticipant{
		Data: m.Data,
	}
}
func (m ChannelParticipant) To_channelParticipantSelf() *TLchannelParticipantSelf {
	return &TLchannelParticipantSelf{
		Data: m.Data,
	}
}
func (m ChannelParticipant) To_channelParticipantCreator() *TLchannelParticipantCreator {
	return &TLchannelParticipantCreator{
		Data: m.Data,
	}
}
func (m ChannelParticipant) To_channelParticipantAdmin() *TLchannelParticipantAdmin {
	return &TLchannelParticipantAdmin{
		Data: m.Data,
	}
}
func (m ChannelParticipant) To_channelParticipantBanned() *TLchannelParticipantBanned {
	return &TLchannelParticipantBanned{
		Data: m.Data,
	}
}
func (m ChannelParticipant) To_channelParticipantLeft() *TLchannelParticipantLeft {
	return &TLchannelParticipantLeft{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineMessage
//
func (m InputBotInlineMessage) Encode() []byte {
	switch m.Constructor {
	case 864077702:
		t := m.To_inputBotInlineMessageMediaAuto()
		return t.Encode()
	case 1036876423:
		t := m.To_inputBotInlineMessageText()
		return t.Encode()
	case -1768777083:
		t := m.To_inputBotInlineMessageMediaGeo()
		return t.Encode()
	case 1098628881:
		t := m.To_inputBotInlineMessageMediaVenue()
		return t.Encode()
	case -1494368259:
		t := m.To_inputBotInlineMessageMediaContact()
		return t.Encode()
	case 1262639204:
		t := m.To_inputBotInlineMessageGame()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 864077702:
		m2 := &TLinputBotInlineMessageMediaAuto{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1036876423:
		m2 := &TLinputBotInlineMessageText{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1768777083:
		m2 := &TLinputBotInlineMessageMediaGeo{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1098628881:
		m2 := &TLinputBotInlineMessageMediaVenue{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1494368259:
		m2 := &TLinputBotInlineMessageMediaContact{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1262639204:
		m2 := &TLinputBotInlineMessageGame{Data: InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaAuto() *TLinputBotInlineMessageMediaAuto {
	return &TLinputBotInlineMessageMediaAuto{
		Data: m.Data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageText() *TLinputBotInlineMessageText {
	return &TLinputBotInlineMessageText{
		Data: m.Data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaGeo() *TLinputBotInlineMessageMediaGeo {
	return &TLinputBotInlineMessageMediaGeo{
		Data: m.Data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaVenue() *TLinputBotInlineMessageMediaVenue {
	return &TLinputBotInlineMessageMediaVenue{
		Data: m.Data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaContact() *TLinputBotInlineMessageMediaContact {
	return &TLinputBotInlineMessageMediaContact{
		Data: m.Data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageGame() *TLinputBotInlineMessageGame {
	return &TLinputBotInlineMessageGame{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickerSet
//
func (m InputStickerSet) Encode() []byte {
	switch m.Constructor {
	case -4838507:
		t := m.To_inputStickerSetEmpty()
		return t.Encode()
	case -1645763991:
		t := m.To_inputStickerSetID()
		return t.Encode()
	case -2044933984:
		t := m.To_inputStickerSetShortName()
		return t.Encode()
	case 42402760:
		t := m.To_inputStickerSetAnimatedEmoji()
		return t.Encode()
	case -427863538:
		t := m.To_inputStickerSetDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickerSet) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -4838507:
		m2 := &TLinputStickerSetEmpty{Data: InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1645763991:
		m2 := &TLinputStickerSetID{Data: InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2044933984:
		m2 := &TLinputStickerSetShortName{Data: InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 42402760:
		m2 := &TLinputStickerSetAnimatedEmoji{Data: InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -427863538:
		m2 := &TLinputStickerSetDice{Data: InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputStickerSet) To_inputStickerSetEmpty() *TLinputStickerSetEmpty {
	return &TLinputStickerSetEmpty{
		Data: m.Data,
	}
}
func (m InputStickerSet) To_inputStickerSetID() *TLinputStickerSetID {
	return &TLinputStickerSetID{
		Data: m.Data,
	}
}
func (m InputStickerSet) To_inputStickerSetShortName() *TLinputStickerSetShortName {
	return &TLinputStickerSetShortName{
		Data: m.Data,
	}
}
func (m InputStickerSet) To_inputStickerSetAnimatedEmoji() *TLinputStickerSetAnimatedEmoji {
	return &TLinputStickerSetAnimatedEmoji{
		Data: m.Data,
	}
}
func (m InputStickerSet) To_inputStickerSetDice() *TLinputStickerSetDice {
	return &TLinputStickerSetDice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_MegagroupStats
//
func (m Stats_MegagroupStats) Encode() []byte {
	switch m.Constructor {
	case -276825834:
		t := m.To_stats_megagroupStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m Stats_MegagroupStats) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -276825834:
		m2 := &TLstats_megagroupStats{Data: Stats_MegagroupStats_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Stats_MegagroupStats) To_stats_megagroupStats() *TLstats_megagroupStats {
	return &TLstats_megagroupStats{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FeaturedStickers
//
func (m Messages_FeaturedStickers) Encode() []byte {
	switch m.Constructor {
	case -958657434:
		t := m.To_messages_featuredStickersNotModified()
		return t.Encode()
	case -1230257343:
		t := m.To_messages_featuredStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_FeaturedStickers) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -958657434:
		m2 := &TLmessages_featuredStickersNotModified{Data: Messages_FeaturedStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1230257343:
		m2 := &TLmessages_featuredStickers{Data: Messages_FeaturedStickers_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_FeaturedStickers) To_messages_featuredStickersNotModified() *TLmessages_featuredStickersNotModified {
	return &TLmessages_featuredStickersNotModified{
		Data: m.Data,
	}
}
func (m Messages_FeaturedStickers) To_messages_featuredStickers() *TLmessages_featuredStickers {
	return &TLmessages_featuredStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Found
//
func (m Contacts_Found) Encode() []byte {
	switch m.Constructor {
	case -1290580579:
		t := m.To_contacts_found()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_Found) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1290580579:
		m2 := &TLcontacts_found{Data: Contacts_Found_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_Found) To_contacts_found() *TLcontacts_found {
	return &TLcontacts_found{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DocumentAttribute
//
func (m DocumentAttribute) Encode() []byte {
	switch m.Constructor {
	case 1815593308:
		t := m.To_documentAttributeImageSize()
		return t.Encode()
	case 297109817:
		t := m.To_documentAttributeAnimated()
		return t.Encode()
	case 1662637586:
		t := m.To_documentAttributeSticker()
		return t.Encode()
	case 250621158:
		t := m.To_documentAttributeVideo()
		return t.Encode()
	case -1739392570:
		t := m.To_documentAttributeAudio()
		return t.Encode()
	case 358154344:
		t := m.To_documentAttributeFilename()
		return t.Encode()
	case -1744710921:
		t := m.To_documentAttributeHasStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m DocumentAttribute) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1815593308:
		m2 := &TLdocumentAttributeImageSize{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 297109817:
		m2 := &TLdocumentAttributeAnimated{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1662637586:
		m2 := &TLdocumentAttributeSticker{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 250621158:
		m2 := &TLdocumentAttributeVideo{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1739392570:
		m2 := &TLdocumentAttributeAudio{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 358154344:
		m2 := &TLdocumentAttributeFilename{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1744710921:
		m2 := &TLdocumentAttributeHasStickers{Data: DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m DocumentAttribute) To_documentAttributeImageSize() *TLdocumentAttributeImageSize {
	return &TLdocumentAttributeImageSize{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeAnimated() *TLdocumentAttributeAnimated {
	return &TLdocumentAttributeAnimated{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeSticker() *TLdocumentAttributeSticker {
	return &TLdocumentAttributeSticker{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeVideo() *TLdocumentAttributeVideo {
	return &TLdocumentAttributeVideo{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeAudio() *TLdocumentAttributeAudio {
	return &TLdocumentAttributeAudio{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeFilename() *TLdocumentAttributeFilename {
	return &TLdocumentAttributeFilename{
		Data: m.Data,
	}
}
func (m DocumentAttribute) To_documentAttributeHasStickers() *TLdocumentAttributeHasStickers {
	return &TLdocumentAttributeHasStickers{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_SupportName
//
func (m Help_SupportName) Encode() []byte {
	switch m.Constructor {
	case -1945767479:
		t := m.To_help_supportName()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_SupportName) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1945767479:
		m2 := &TLhelp_supportName{Data: Help_SupportName_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_SupportName) To_help_supportName() *TLhelp_supportName {
	return &TLhelp_supportName{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputCheckPasswordSRP
//
func (m InputCheckPasswordSRP) Encode() []byte {
	switch m.Constructor {
	case -1736378792:
		t := m.To_inputCheckPasswordEmpty()
		return t.Encode()
	case -763367294:
		t := m.To_inputCheckPasswordSRP()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputCheckPasswordSRP) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1736378792:
		m2 := &TLinputCheckPasswordEmpty{Data: InputCheckPasswordSRP_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -763367294:
		m2 := &TLinputCheckPasswordSRP{Data: InputCheckPasswordSRP_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputCheckPasswordSRP) To_inputCheckPasswordEmpty() *TLinputCheckPasswordEmpty {
	return &TLinputCheckPasswordEmpty{
		Data: m.Data,
	}
}
func (m InputCheckPasswordSRP) To_inputCheckPasswordSRP() *TLinputCheckPasswordSRP {
	return &TLinputCheckPasswordSRP{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPhoneCall
//
func (m InputPhoneCall) Encode() []byte {
	switch m.Constructor {
	case 506920429:
		t := m.To_inputPhoneCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPhoneCall) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 506920429:
		m2 := &TLinputPhoneCall{Data: InputPhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputPhoneCall) To_inputPhoneCall() *TLinputPhoneCall {
	return &TLinputPhoneCall{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:AutoDownloadSettings
//
func (m AutoDownloadSettings) Encode() []byte {
	switch m.Constructor {
	case -532532493:
		t := m.To_autoDownloadSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m AutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -532532493:
		m2 := &TLautoDownloadSettings{Data: AutoDownloadSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m AutoDownloadSettings) To_autoDownloadSettings() *TLautoDownloadSettings {
	return &TLautoDownloadSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_MessageViews
//
func (m Messages_MessageViews) Encode() []byte {
	switch m.Constructor {
	case -1228606141:
		t := m.To_messages_messageViews()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_MessageViews) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1228606141:
		m2 := &TLmessages_messageViews{Data: Messages_MessageViews_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_MessageViews) To_messages_messageViews() *TLmessages_messageViews {
	return &TLmessages_messageViews{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_AdminLogResults
//
func (m Channels_AdminLogResults) Encode() []byte {
	switch m.Constructor {
	case -309659827:
		t := m.To_channels_adminLogResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m Channels_AdminLogResults) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -309659827:
		m2 := &TLchannels_adminLogResults{Data: Channels_AdminLogResults_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Channels_AdminLogResults) To_channels_adminLogResults() *TLchannels_adminLogResults {
	return &TLchannels_adminLogResults{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatInvite
//
func (m ChatInvite) Encode() []byte {
	switch m.Constructor {
	case 1516793212:
		t := m.To_chatInviteAlready()
		return t.Encode()
	case -540871282:
		t := m.To_chatInvite()
		return t.Encode()
	case 1634294960:
		t := m.To_chatInvitePeek()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatInvite) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1516793212:
		m2 := &TLchatInviteAlready{Data: ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -540871282:
		m2 := &TLchatInvite{Data: ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1634294960:
		m2 := &TLchatInvitePeek{Data: ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ChatInvite) To_chatInviteAlready() *TLchatInviteAlready {
	return &TLchatInviteAlready{
		Data: m.Data,
	}
}
func (m ChatInvite) To_chatInvite() *TLchatInvite {
	return &TLchatInvite{
		Data: m.Data,
	}
}
func (m ChatInvite) To_chatInvitePeek() *TLchatInvitePeek {
	return &TLchatInvitePeek{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_TmpPassword
//
func (m Account_TmpPassword) Encode() []byte {
	switch m.Constructor {
	case -614138572:
		t := m.To_account_tmpPassword()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_TmpPassword) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -614138572:
		m2 := &TLaccount_tmpPassword{Data: Account_TmpPassword_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_TmpPassword) To_account_tmpPassword() *TLaccount_tmpPassword {
	return &TLaccount_tmpPassword{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:photos_Photo
//
func (m Photos_Photo) Encode() []byte {
	switch m.Constructor {
	case 539045032:
		t := m.To_photos_photo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Photos_Photo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 539045032:
		m2 := &TLphotos_photo{Data: Photos_Photo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Photos_Photo) To_photos_photo() *TLphotos_photo {
	return &TLphotos_photo{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReportReason
//
func (m ReportReason) Encode() []byte {
	switch m.Constructor {
	case 1490799288:
		t := m.To_inputReportReasonSpam()
		return t.Encode()
	case 505595789:
		t := m.To_inputReportReasonViolence()
		return t.Encode()
	case 777640226:
		t := m.To_inputReportReasonPornography()
		return t.Encode()
	case -1376497949:
		t := m.To_inputReportReasonChildAbuse()
		return t.Encode()
	case -512463606:
		t := m.To_inputReportReasonOther()
		return t.Encode()
	case -1685456582:
		t := m.To_inputReportReasonCopyright()
		return t.Encode()
	case -606798099:
		t := m.To_inputReportReasonGeoIrrelevant()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReportReason) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1490799288:
		m2 := &TLinputReportReasonSpam{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 505595789:
		m2 := &TLinputReportReasonViolence{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 777640226:
		m2 := &TLinputReportReasonPornography{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1376497949:
		m2 := &TLinputReportReasonChildAbuse{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -512463606:
		m2 := &TLinputReportReasonOther{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1685456582:
		m2 := &TLinputReportReasonCopyright{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -606798099:
		m2 := &TLinputReportReasonGeoIrrelevant{Data: ReportReason_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ReportReason) To_inputReportReasonSpam() *TLinputReportReasonSpam {
	return &TLinputReportReasonSpam{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonViolence() *TLinputReportReasonViolence {
	return &TLinputReportReasonViolence{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonPornography() *TLinputReportReasonPornography {
	return &TLinputReportReasonPornography{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonChildAbuse() *TLinputReportReasonChildAbuse {
	return &TLinputReportReasonChildAbuse{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonOther() *TLinputReportReasonOther {
	return &TLinputReportReasonOther{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonCopyright() *TLinputReportReasonCopyright {
	return &TLinputReportReasonCopyright{
		Data: m.Data,
	}
}
func (m ReportReason) To_inputReportReasonGeoIrrelevant() *TLinputReportReasonGeoIrrelevant {
	return &TLinputReportReasonGeoIrrelevant{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Null
//
func (m Null) Encode() []byte {
	switch m.Constructor {
	case 1450380236:
		t := m.To_null()
		return t.Encode()
	default:
		return nil
	}
}
func (m Null) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1450380236:
		m2 := &TLnull{Data: Null_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Null) To_null() *TLnull {
	return &TLnull{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserProfilePhoto
//
func (m UserProfilePhoto) Encode() []byte {
	switch m.Constructor {
	case 1326562017:
		t := m.To_userProfilePhotoEmpty()
		return t.Encode()
	case 1775479590:
		t := m.To_userProfilePhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserProfilePhoto) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1326562017:
		m2 := &TLuserProfilePhotoEmpty{Data: UserProfilePhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1775479590:
		m2 := &TLuserProfilePhoto{Data: UserProfilePhoto_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m UserProfilePhoto) To_userProfilePhotoEmpty() *TLuserProfilePhotoEmpty {
	return &TLuserProfilePhotoEmpty{
		Data: m.Data,
	}
}
func (m UserProfilePhoto) To_userProfilePhoto() *TLuserProfilePhoto {
	return &TLuserProfilePhoto{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_ContentSettings
//
func (m Account_ContentSettings) Encode() []byte {
	switch m.Constructor {
	case 1474462241:
		t := m.To_account_contentSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_ContentSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1474462241:
		m2 := &TLaccount_contentSettings{Data: Account_ContentSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_ContentSettings) To_account_contentSettings() *TLaccount_contentSettings {
	return &TLaccount_contentSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerBlocked
//
func (m PeerBlocked) Encode() []byte {
	switch m.Constructor {
	case -386039788:
		t := m.To_peerBlocked()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerBlocked) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -386039788:
		m2 := &TLpeerBlocked{Data: PeerBlocked_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PeerBlocked) To_peerBlocked() *TLpeerBlocked {
	return &TLpeerBlocked{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Dialog
//
func (m Dialog) Encode() []byte {
	switch m.Constructor {
	case 739712882:
		t := m.To_dialog()
		return t.Encode()
	case 1908216652:
		t := m.To_dialogFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m Dialog) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 739712882:
		m2 := &TLdialog{Data: Dialog_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1908216652:
		m2 := &TLdialogFolder{Data: Dialog_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Dialog) To_dialog() *TLdialog {
	return &TLdialog{
		Data: m.Data,
	}
}
func (m Dialog) To_dialogFolder() *TLdialogFolder {
	return &TLdialogFolder{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageListOrderedItem
//
func (m PageListOrderedItem) Encode() []byte {
	switch m.Constructor {
	case 1577484359:
		t := m.To_pageListOrderedItemText()
		return t.Encode()
	case -1730311882:
		t := m.To_pageListOrderedItemBlocks()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageListOrderedItem) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1577484359:
		m2 := &TLpageListOrderedItemText{Data: PageListOrderedItem_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1730311882:
		m2 := &TLpageListOrderedItemBlocks{Data: PageListOrderedItem_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageListOrderedItem) To_pageListOrderedItemText() *TLpageListOrderedItemText {
	return &TLpageListOrderedItemText{
		Data: m.Data,
	}
}
func (m PageListOrderedItem) To_pageListOrderedItemBlocks() *TLpageListOrderedItemBlocks {
	return &TLpageListOrderedItemBlocks{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebAuthorization
//
func (m WebAuthorization) Encode() []byte {
	switch m.Constructor {
	case -892779534:
		t := m.To_webAuthorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -892779534:
		m2 := &TLwebAuthorization{Data: WebAuthorization_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WebAuthorization) To_webAuthorization() *TLwebAuthorization {
	return &TLwebAuthorization{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageListItem
//
func (m PageListItem) Encode() []byte {
	switch m.Constructor {
	case -1188055347:
		t := m.To_pageListItemText()
		return t.Encode()
	case 635466748:
		t := m.To_pageListItemBlocks()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageListItem) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1188055347:
		m2 := &TLpageListItemText{Data: PageListItem_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 635466748:
		m2 := &TLpageListItemBlocks{Data: PageListItem_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PageListItem) To_pageListItemText() *TLpageListItemText {
	return &TLpageListItemText{
		Data: m.Data,
	}
}
func (m PageListItem) To_pageListItemBlocks() *TLpageListItemBlocks {
	return &TLpageListItemBlocks{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ContactStatus
//
func (m ContactStatus) Encode() []byte {
	switch m.Constructor {
	case -748155807:
		t := m.To_contactStatus()
		return t.Encode()
	default:
		return nil
	}
}
func (m ContactStatus) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -748155807:
		m2 := &TLcontactStatus{Data: ContactStatus_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ContactStatus) To_contactStatus() *TLcontactStatus {
	return &TLcontactStatus{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WallPaper
//
func (m WallPaper) Encode() []byte {
	switch m.Constructor {
	case -1539849235:
		t := m.To_wallPaper()
		return t.Encode()
	case -1963717851:
		t := m.To_wallPaperNoFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m WallPaper) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1539849235:
		m2 := &TLwallPaper{Data: WallPaper_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1963717851:
		m2 := &TLwallPaperNoFile{Data: WallPaper_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m WallPaper) To_wallPaper() *TLwallPaper {
	return &TLwallPaper{
		Data: m.Data,
	}
}
func (m WallPaper) To_wallPaperNoFile() *TLwallPaperNoFile {
	return &TLwallPaperNoFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_MessageEditData
//
func (m Messages_MessageEditData) Encode() []byte {
	switch m.Constructor {
	case 649453030:
		t := m.To_messages_messageEditData()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_MessageEditData) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 649453030:
		m2 := &TLmessages_messageEditData{Data: Messages_MessageEditData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_MessageEditData) To_messages_messageEditData() *TLmessages_messageEditData {
	return &TLmessages_messageEditData{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ThemeSettings
//
func (m ThemeSettings) Encode() []byte {
	switch m.Constructor {
	case -1676371894:
		t := m.To_themeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m ThemeSettings) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1676371894:
		m2 := &TLthemeSettings{Data: ThemeSettings_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ThemeSettings) To_themeSettings() *TLthemeSettings {
	return &TLthemeSettings{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputUser
//
func (m InputUser) Encode() []byte {
	switch m.Constructor {
	case -1182234929:
		t := m.To_inputUserEmpty()
		return t.Encode()
	case -138301121:
		t := m.To_inputUserSelf()
		return t.Encode()
	case -668391402:
		t := m.To_inputUser()
		return t.Encode()
	case 756118935:
		t := m.To_inputUserFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputUser) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1182234929:
		m2 := &TLinputUserEmpty{Data: InputUser_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -138301121:
		m2 := &TLinputUserSelf{Data: InputUser_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -668391402:
		m2 := &TLinputUser{Data: InputUser_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 756118935:
		m2 := &TLinputUserFromMessage{Data: InputUser_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputUser) To_inputUserEmpty() *TLinputUserEmpty {
	return &TLinputUserEmpty{
		Data: m.Data,
	}
}
func (m InputUser) To_inputUserSelf() *TLinputUserSelf {
	return &TLinputUserSelf{
		Data: m.Data,
	}
}
func (m InputUser) To_inputUser() *TLinputUser {
	return &TLinputUser{
		Data: m.Data,
	}
}
func (m InputUser) To_inputUserFromMessage() *TLinputUserFromMessage {
	return &TLinputUserFromMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiLanguage
//
func (m EmojiLanguage) Encode() []byte {
	switch m.Constructor {
	case -1275374751:
		t := m.To_emojiLanguage()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiLanguage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1275374751:
		m2 := &TLemojiLanguage{Data: EmojiLanguage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m EmojiLanguage) To_emojiLanguage() *TLemojiLanguage {
	return &TLemojiLanguage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_WebAuthorizations
//
func (m Account_WebAuthorizations) Encode() []byte {
	switch m.Constructor {
	case -313079300:
		t := m.To_account_webAuthorizations()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_WebAuthorizations) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -313079300:
		m2 := &TLaccount_webAuthorizations{Data: Account_WebAuthorizations_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_WebAuthorizations) To_account_webAuthorizations() *TLaccount_webAuthorizations {
	return &TLaccount_webAuthorizations{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_RecentMeUrls
//
func (m Help_RecentMeUrls) Encode() []byte {
	switch m.Constructor {
	case 235081943:
		t := m.To_help_recentMeUrls()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_RecentMeUrls) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 235081943:
		m2 := &TLhelp_recentMeUrls{Data: Help_RecentMeUrls_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_RecentMeUrls) To_help_recentMeUrls() *TLhelp_recentMeUrls {
	return &TLhelp_recentMeUrls{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReplyMarkup
//
func (m ReplyMarkup) Encode() []byte {
	switch m.Constructor {
	case -1606526075:
		t := m.To_replyKeyboardHide()
		return t.Encode()
	case -200242528:
		t := m.To_replyKeyboardForceReply()
		return t.Encode()
	case 889353612:
		t := m.To_replyKeyboardMarkup()
		return t.Encode()
	case 1218642516:
		t := m.To_replyInlineMarkup()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReplyMarkup) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1606526075:
		m2 := &TLreplyKeyboardHide{Data: ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -200242528:
		m2 := &TLreplyKeyboardForceReply{Data: ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 889353612:
		m2 := &TLreplyKeyboardMarkup{Data: ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1218642516:
		m2 := &TLreplyInlineMarkup{Data: ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ReplyMarkup) To_replyKeyboardHide() *TLreplyKeyboardHide {
	return &TLreplyKeyboardHide{
		Data: m.Data,
	}
}
func (m ReplyMarkup) To_replyKeyboardForceReply() *TLreplyKeyboardForceReply {
	return &TLreplyKeyboardForceReply{
		Data: m.Data,
	}
}
func (m ReplyMarkup) To_replyKeyboardMarkup() *TLreplyKeyboardMarkup {
	return &TLreplyKeyboardMarkup{
		Data: m.Data,
	}
}
func (m ReplyMarkup) To_replyInlineMarkup() *TLreplyInlineMarkup {
	return &TLreplyInlineMarkup{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWebDocument
//
func (m InputWebDocument) Encode() []byte {
	switch m.Constructor {
	case -1678949555:
		t := m.To_inputWebDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWebDocument) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1678949555:
		m2 := &TLinputWebDocument{Data: InputWebDocument_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputWebDocument) To_inputWebDocument() *TLinputWebDocument {
	return &TLinputWebDocument{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickeredMedia
//
func (m InputStickeredMedia) Encode() []byte {
	switch m.Constructor {
	case 1251549527:
		t := m.To_inputStickeredMediaPhoto()
		return t.Encode()
	case 70813275:
		t := m.To_inputStickeredMediaDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickeredMedia) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1251549527:
		m2 := &TLinputStickeredMediaPhoto{Data: InputStickeredMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 70813275:
		m2 := &TLinputStickeredMediaDocument{Data: InputStickeredMedia_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputStickeredMedia) To_inputStickeredMediaPhoto() *TLinputStickeredMediaPhoto {
	return &TLinputStickeredMediaPhoto{
		Data: m.Data,
	}
}
func (m InputStickeredMedia) To_inputStickeredMediaDocument() *TLinputStickeredMediaDocument {
	return &TLinputStickeredMediaDocument{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_Support
//
func (m Help_Support) Encode() []byte {
	switch m.Constructor {
	case 398898678:
		t := m.To_help_support()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_Support) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 398898678:
		m2 := &TLhelp_support{Data: Help_Support_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_Support) To_help_support() *TLhelp_support {
	return &TLhelp_support{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Messages
//
func (m Messages_Messages) Encode() []byte {
	switch m.Constructor {
	case -1938715001:
		t := m.To_messages_messages()
		return t.Encode()
	case 978610270:
		t := m.To_messages_messagesSlice()
		return t.Encode()
	case 1682413576:
		t := m.To_messages_channelMessages()
		return t.Encode()
	case 1951620897:
		t := m.To_messages_messagesNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_Messages) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1938715001:
		m2 := &TLmessages_messages{Data: Messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 978610270:
		m2 := &TLmessages_messagesSlice{Data: Messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1682413576:
		m2 := &TLmessages_channelMessages{Data: Messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1951620897:
		m2 := &TLmessages_messagesNotModified{Data: Messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_Messages) To_messages_messages() *TLmessages_messages {
	return &TLmessages_messages{
		Data: m.Data,
	}
}
func (m Messages_Messages) To_messages_messagesSlice() *TLmessages_messagesSlice {
	return &TLmessages_messagesSlice{
		Data: m.Data,
	}
}
func (m Messages_Messages) To_messages_channelMessages() *TLmessages_channelMessages {
	return &TLmessages_channelMessages{
		Data: m.Data,
	}
}
func (m Messages_Messages) To_messages_messagesNotModified() *TLmessages_messagesNotModified {
	return &TLmessages_messagesNotModified{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FileLocation
//
func (m FileLocation) Encode() []byte {
	switch m.Constructor {
	case -1132476723:
		t := m.To_fileLocationToBeDeprecated()
		return t.Encode()
	default:
		return nil
	}
}
func (m FileLocation) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1132476723:
		m2 := &TLfileLocationToBeDeprecated{Data: FileLocation_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m FileLocation) To_fileLocationToBeDeprecated() *TLfileLocationToBeDeprecated {
	return &TLfileLocationToBeDeprecated{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopAdmin
//
func (m StatsGroupTopAdmin) Encode() []byte {
	switch m.Constructor {
	case 1611985938:
		t := m.To_statsGroupTopAdmin()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopAdmin) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1611985938:
		m2 := &TLstatsGroupTopAdmin{Data: StatsGroupTopAdmin_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopAdmin) To_statsGroupTopAdmin() *TLstatsGroupTopAdmin {
	return &TLstatsGroupTopAdmin{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCall
//
func (m PhoneCall) Encode() []byte {
	switch m.Constructor {
	case 1399245077:
		t := m.To_phoneCallEmpty()
		return t.Encode()
	case 462375633:
		t := m.To_phoneCallWaiting()
		return t.Encode()
	case -2014659757:
		t := m.To_phoneCallRequested()
		return t.Encode()
	case -1719909046:
		t := m.To_phoneCallAccepted()
		return t.Encode()
	case -2025673089:
		t := m.To_phoneCall()
		return t.Encode()
	case 1355435489:
		t := m.To_phoneCallDiscarded()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCall) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1399245077:
		m2 := &TLphoneCallEmpty{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 462375633:
		m2 := &TLphoneCallWaiting{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2014659757:
		m2 := &TLphoneCallRequested{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1719909046:
		m2 := &TLphoneCallAccepted{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2025673089:
		m2 := &TLphoneCall{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1355435489:
		m2 := &TLphoneCallDiscarded{Data: PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PhoneCall) To_phoneCallEmpty() *TLphoneCallEmpty {
	return &TLphoneCallEmpty{
		Data: m.Data,
	}
}
func (m PhoneCall) To_phoneCallWaiting() *TLphoneCallWaiting {
	return &TLphoneCallWaiting{
		Data: m.Data,
	}
}
func (m PhoneCall) To_phoneCallRequested() *TLphoneCallRequested {
	return &TLphoneCallRequested{
		Data: m.Data,
	}
}
func (m PhoneCall) To_phoneCallAccepted() *TLphoneCallAccepted {
	return &TLphoneCallAccepted{
		Data: m.Data,
	}
}
func (m PhoneCall) To_phoneCall() *TLphoneCall {
	return &TLphoneCall{
		Data: m.Data,
	}
}
func (m PhoneCall) To_phoneCallDiscarded() *TLphoneCallDiscarded {
	return &TLphoneCallDiscarded{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PostAddress
//
func (m PostAddress) Encode() []byte {
	switch m.Constructor {
	case 512535275:
		t := m.To_postAddress()
		return t.Encode()
	default:
		return nil
	}
}
func (m PostAddress) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 512535275:
		m2 := &TLpostAddress{Data: PostAddress_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m PostAddress) To_postAddress() *TLpostAddress {
	return &TLpostAddress{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_WebFile
//
func (m Upload_WebFile) Encode() []byte {
	switch m.Constructor {
	case 568808380:
		t := m.To_upload_webFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m Upload_WebFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 568808380:
		m2 := &TLupload_webFile{Data: Upload_WebFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Upload_WebFile) To_upload_webFile() *TLupload_webFile {
	return &TLupload_webFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_BotResults
//
func (m Messages_BotResults) Encode() []byte {
	switch m.Constructor {
	case -1803769784:
		t := m.To_messages_botResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_BotResults) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1803769784:
		m2 := &TLmessages_botResults{Data: Messages_BotResults_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_BotResults) To_messages_botResults() *TLmessages_botResults {
	return &TLmessages_botResults{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_AuthorizationForm
//
func (m Account_AuthorizationForm) Encode() []byte {
	switch m.Constructor {
	case -1389486888:
		t := m.To_account_authorizationForm()
		return t.Encode()
	default:
		return nil
	}
}
func (m Account_AuthorizationForm) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1389486888:
		m2 := &TLaccount_authorizationForm{Data: Account_AuthorizationForm_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Account_AuthorizationForm) To_account_authorizationForm() *TLaccount_authorizationForm {
	return &TLaccount_authorizationForm{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSecureFile
//
func (m InputSecureFile) Encode() []byte {
	switch m.Constructor {
	case 859091184:
		t := m.To_inputSecureFileUploaded()
		return t.Encode()
	case 1399317950:
		t := m.To_inputSecureFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSecureFile) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 859091184:
		m2 := &TLinputSecureFileUploaded{Data: InputSecureFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1399317950:
		m2 := &TLinputSecureFile{Data: InputSecureFile_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m InputSecureFile) To_inputSecureFileUploaded() *TLinputSecureFileUploaded {
	return &TLinputSecureFileUploaded{
		Data: m.Data,
	}
}
func (m InputSecureFile) To_inputSecureFile() *TLinputSecureFile {
	return &TLinputSecureFile{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_PeerDialogs
//
func (m Messages_PeerDialogs) Encode() []byte {
	switch m.Constructor {
	case 863093588:
		t := m.To_messages_peerDialogs()
		return t.Encode()
	default:
		return nil
	}
}
func (m Messages_PeerDialogs) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 863093588:
		m2 := &TLmessages_peerDialogs{Data: Messages_PeerDialogs_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Messages_PeerDialogs) To_messages_peerDialogs() *TLmessages_peerDialogs {
	return &TLmessages_peerDialogs{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Blocked
//
func (m Contacts_Blocked) Encode() []byte {
	switch m.Constructor {
	case 182326673:
		t := m.To_contacts_blocked()
		return t.Encode()
	case -513392236:
		t := m.To_contacts_blockedSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contacts_Blocked) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 182326673:
		m2 := &TLcontacts_blocked{Data: Contacts_Blocked_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -513392236:
		m2 := &TLcontacts_blockedSlice{Data: Contacts_Blocked_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Contacts_Blocked) To_contacts_blocked() *TLcontacts_blocked {
	return &TLcontacts_blocked{
		Data: m.Data,
	}
}
func (m Contacts_Blocked) To_contacts_blockedSlice() *TLcontacts_blockedSlice {
	return &TLcontacts_blockedSlice{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageRange
//
func (m MessageRange) Encode() []byte {
	switch m.Constructor {
	case 182649427:
		t := m.To_messageRange()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageRange) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 182649427:
		m2 := &TLmessageRange{Data: MessageRange_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessageRange) To_messageRange() *TLmessageRange {
	return &TLmessageRange{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_PromoData
//
func (m Help_PromoData) Encode() []byte {
	switch m.Constructor {
	case -1728664459:
		t := m.To_help_promoDataEmpty()
		return t.Encode()
	case -1942390465:
		t := m.To_help_promoData()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_PromoData) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1728664459:
		m2 := &TLhelp_promoDataEmpty{Data: Help_PromoData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1942390465:
		m2 := &TLhelp_promoData{Data: Help_PromoData_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_PromoData) To_help_promoDataEmpty() *TLhelp_promoDataEmpty {
	return &TLhelp_promoDataEmpty{
		Data: m.Data,
	}
}
func (m Help_PromoData) To_help_promoData() *TLhelp_promoData {
	return &TLhelp_promoData{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessagesFilter
//
func (m MessagesFilter) Encode() []byte {
	switch m.Constructor {
	case 1474492012:
		t := m.To_inputMessagesFilterEmpty()
		return t.Encode()
	case -1777752804:
		t := m.To_inputMessagesFilterPhotos()
		return t.Encode()
	case -1614803355:
		t := m.To_inputMessagesFilterVideo()
		return t.Encode()
	case 1458172132:
		t := m.To_inputMessagesFilterPhotoVideo()
		return t.Encode()
	case -1629621880:
		t := m.To_inputMessagesFilterDocument()
		return t.Encode()
	case 2129714567:
		t := m.To_inputMessagesFilterUrl()
		return t.Encode()
	case -3644025:
		t := m.To_inputMessagesFilterGif()
		return t.Encode()
	case 1358283666:
		t := m.To_inputMessagesFilterVoice()
		return t.Encode()
	case 928101534:
		t := m.To_inputMessagesFilterMusic()
		return t.Encode()
	case 975236280:
		t := m.To_inputMessagesFilterChatPhotos()
		return t.Encode()
	case -2134272152:
		t := m.To_inputMessagesFilterPhoneCalls()
		return t.Encode()
	case 2054952868:
		t := m.To_inputMessagesFilterRoundVoice()
		return t.Encode()
	case -1253451181:
		t := m.To_inputMessagesFilterRoundVideo()
		return t.Encode()
	case -1040652646:
		t := m.To_inputMessagesFilterMyMentions()
		return t.Encode()
	case -419271411:
		t := m.To_inputMessagesFilterGeo()
		return t.Encode()
	case -530392189:
		t := m.To_inputMessagesFilterContacts()
		return t.Encode()
	case 464520273:
		t := m.To_inputMessagesFilterPinned()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessagesFilter) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case 1474492012:
		m2 := &TLinputMessagesFilterEmpty{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1777752804:
		m2 := &TLinputMessagesFilterPhotos{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1614803355:
		m2 := &TLinputMessagesFilterVideo{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1458172132:
		m2 := &TLinputMessagesFilterPhotoVideo{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1629621880:
		m2 := &TLinputMessagesFilterDocument{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2129714567:
		m2 := &TLinputMessagesFilterUrl{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -3644025:
		m2 := &TLinputMessagesFilterGif{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 1358283666:
		m2 := &TLinputMessagesFilterVoice{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 928101534:
		m2 := &TLinputMessagesFilterMusic{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 975236280:
		m2 := &TLinputMessagesFilterChatPhotos{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -2134272152:
		m2 := &TLinputMessagesFilterPhoneCalls{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 2054952868:
		m2 := &TLinputMessagesFilterRoundVoice{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1253451181:
		m2 := &TLinputMessagesFilterRoundVideo{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -1040652646:
		m2 := &TLinputMessagesFilterMyMentions{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -419271411:
		m2 := &TLinputMessagesFilterGeo{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case -530392189:
		m2 := &TLinputMessagesFilterContacts{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 464520273:
		m2 := &TLinputMessagesFilterPinned{Data: MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m MessagesFilter) To_inputMessagesFilterEmpty() *TLinputMessagesFilterEmpty {
	return &TLinputMessagesFilterEmpty{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhotos() *TLinputMessagesFilterPhotos {
	return &TLinputMessagesFilterPhotos{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterVideo() *TLinputMessagesFilterVideo {
	return &TLinputMessagesFilterVideo{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhotoVideo() *TLinputMessagesFilterPhotoVideo {
	return &TLinputMessagesFilterPhotoVideo{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterDocument() *TLinputMessagesFilterDocument {
	return &TLinputMessagesFilterDocument{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterUrl() *TLinputMessagesFilterUrl {
	return &TLinputMessagesFilterUrl{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterGif() *TLinputMessagesFilterGif {
	return &TLinputMessagesFilterGif{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterVoice() *TLinputMessagesFilterVoice {
	return &TLinputMessagesFilterVoice{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterMusic() *TLinputMessagesFilterMusic {
	return &TLinputMessagesFilterMusic{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterChatPhotos() *TLinputMessagesFilterChatPhotos {
	return &TLinputMessagesFilterChatPhotos{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhoneCalls() *TLinputMessagesFilterPhoneCalls {
	return &TLinputMessagesFilterPhoneCalls{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterRoundVoice() *TLinputMessagesFilterRoundVoice {
	return &TLinputMessagesFilterRoundVoice{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterRoundVideo() *TLinputMessagesFilterRoundVideo {
	return &TLinputMessagesFilterRoundVideo{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterMyMentions() *TLinputMessagesFilterMyMentions {
	return &TLinputMessagesFilterMyMentions{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterGeo() *TLinputMessagesFilterGeo {
	return &TLinputMessagesFilterGeo{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterContacts() *TLinputMessagesFilterContacts {
	return &TLinputMessagesFilterContacts{
		Data: m.Data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPinned() *TLinputMessagesFilterPinned {
	return &TLinputMessagesFilterPinned{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReceivedNotifyMessage
//
func (m ReceivedNotifyMessage) Encode() []byte {
	switch m.Constructor {
	case -1551583367:
		t := m.To_receivedNotifyMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReceivedNotifyMessage) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -1551583367:
		m2 := &TLreceivedNotifyMessage{Data: ReceivedNotifyMessage_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m ReceivedNotifyMessage) To_receivedNotifyMessage() *TLreceivedNotifyMessage {
	return &TLreceivedNotifyMessage{
		Data: m.Data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_UserInfo
//
func (m Help_UserInfo) Encode() []byte {
	switch m.Constructor {
	case -206688531:
		t := m.To_help_userInfoEmpty()
		return t.Encode()
	case 32192344:
		t := m.To_help_userInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Help_UserInfo) Decode(dbuf *DecodeBuf) error {
	m.Constructor = dbuf.Int()
	switch m.Constructor {
	case -206688531:
		m2 := &TLhelp_userInfoEmpty{Data: Help_UserInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	case 32192344:
		m2 := &TLhelp_userInfo{Data: Help_UserInfo_Data{}}
		m2.Decode(dbuf)
		m.Data = m2.Data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.Constructor)
	}
	return dbuf.Err
}
func (m Help_UserInfo) To_help_userInfoEmpty() *TLhelp_userInfoEmpty {
	return &TLhelp_userInfoEmpty{
		Data: m.Data,
	}
}
func (m Help_UserInfo) To_help_userInfo() *TLhelp_userInfo {
	return &TLhelp_userInfo{
		Data: m.Data,
	}
}
