package mtproto

import "fmt"

func NewTLcontacts_search() *TLcontacts_search {
	return &TLcontacts_search{}
}

// CodecEncode:contacts_search
func (m *TLcontacts_search) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(301470424)
	x.String(m.Getq())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:contacts_search
func (m *TLcontacts_search) Decode(dbuf *DecodeBuf) error {
	m.Setq(dbuf.String())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getPassportConfig() *TLhelp_getPassportConfig {
	return &TLhelp_getPassportConfig{}
}

// CodecEncode:help_getPassportConfig
func (m *TLhelp_getPassportConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-966677240)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_getPassportConfig
func (m *TLhelp_getPassportConfig) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getAttachedStickers() *TLmessages_getAttachedStickers {
	return &TLmessages_getAttachedStickers{}
}

// CodecEncode:messages_getAttachedStickers
func (m *TLmessages_getAttachedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-866424884)
	x.Bytes(m.Getmedia().Encode())
	return x.Buf
}

// CodecDecode:messages_getAttachedStickers
func (m *TLmessages_getAttachedStickers) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickeredMedia{}
	m0.Decode(dbuf)
	m.Setmedia(m0)
	return dbuf.Err
}
func NewTLaccount_getNotifySettings() *TLaccount_getNotifySettings {
	return &TLaccount_getNotifySettings{}
}

// CodecEncode:account_getNotifySettings
func (m *TLaccount_getNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(313765169)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:account_getNotifySettings
func (m *TLaccount_getNotifySettings) Decode(dbuf *DecodeBuf) error {
	m0 := &InputNotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLchannels_exportMessageLink() *TLchannels_exportMessageLink {
	return &TLchannels_exportMessageLink{}
}

// CodecEncode:channels_exportMessageLink
func (m *TLchannels_exportMessageLink) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-432034325)
	var flags uint32 = 0
	if m.Getgrouped() != false {
		flags |= 1 << 0
	}
	if m.Getthread() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:channels_exportMessageLink
func (m *TLchannels_exportMessageLink) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgrouped(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setthread(true)
	}
	m2 := &InputChannel{}
	m2.Decode(dbuf)
	m.Setchannel(m2)
	m.Setid(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getAuthorizationForm() *TLaccount_getAuthorizationForm {
	return &TLaccount_getAuthorizationForm{}
}

// CodecEncode:account_getAuthorizationForm
func (m *TLaccount_getAuthorizationForm) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1200903967)
	x.Int(m.Getbot_id())
	x.String(m.Getscope())
	x.String(m.Getpublic_key())
	return x.Buf
}

// CodecDecode:account_getAuthorizationForm
func (m *TLaccount_getAuthorizationForm) Decode(dbuf *DecodeBuf) error {
	m.Setbot_id(dbuf.Int())
	m.Setscope(dbuf.String())
	m.Setpublic_key(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_getPassword() *TLaccount_getPassword {
	return &TLaccount_getPassword{}
}

// CodecEncode:account_getPassword
func (m *TLaccount_getPassword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1418342645)
	return x.Buf
}

// CodecDecode:account_getPassword
func (m *TLaccount_getPassword) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getFullChat() *TLmessages_getFullChat {
	return &TLmessages_getFullChat{}
}

// CodecEncode:messages_getFullChat
func (m *TLmessages_getFullChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(998448230)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_getFullChat
func (m *TLmessages_getFullChat) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_getFullChannel() *TLchannels_getFullChannel {
	return &TLchannels_getFullChannel{}
}

// CodecEncode:channels_getFullChannel
func (m *TLchannels_getFullChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(141781513)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_getFullChannel
func (m *TLchannels_getFullChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}
func NewTLmessages_getEmojiURL() *TLmessages_getEmojiURL {
	return &TLmessages_getEmojiURL{}
}

// CodecEncode:messages_getEmojiURL
func (m *TLmessages_getEmojiURL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-709817306)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:messages_getEmojiURL
func (m *TLmessages_getEmojiURL) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_getAutoDownloadSettings() *TLaccount_getAutoDownloadSettings {
	return &TLaccount_getAutoDownloadSettings{}
}

// CodecEncode:account_getAutoDownloadSettings
func (m *TLaccount_getAutoDownloadSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1457130303)
	return x.Buf
}

// CodecDecode:account_getAutoDownloadSettings
func (m *TLaccount_getAutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_getSupportName() *TLhelp_getSupportName {
	return &TLhelp_getSupportName{}
}

// CodecEncode:help_getSupportName
func (m *TLhelp_getSupportName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-748624084)
	return x.Buf
}

// CodecDecode:help_getSupportName
func (m *TLhelp_getSupportName) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getPeerSettings() *TLmessages_getPeerSettings {
	return &TLmessages_getPeerSettings{}
}

// CodecEncode:messages_getPeerSettings
func (m *TLmessages_getPeerSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(913498268)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_getPeerSettings
func (m *TLmessages_getPeerSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLpayments_validateRequestedInfo() *TLpayments_validateRequestedInfo {
	return &TLpayments_validateRequestedInfo{}
}

// CodecEncode:payments_validateRequestedInfo
func (m *TLpayments_validateRequestedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1997180532)
	var flags uint32 = 0
	if m.Getsave() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	x.Bytes(m.Getinfo().Encode())
	return x.Buf
}

// CodecDecode:payments_validateRequestedInfo
func (m *TLpayments_validateRequestedInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsave(true)
	}
	m.Setmsg_id(dbuf.Int())
	m2 := &PaymentRequestedInfo{}
	m2.Decode(dbuf)
	m.Setinfo(m2)
	return dbuf.Err
}
func NewTLauth_exportAuthorization() *TLauth_exportAuthorization {
	return &TLauth_exportAuthorization{}
}

// CodecEncode:auth_exportAuthorization
func (m *TLauth_exportAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-440401971)
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:auth_exportAuthorization
func (m *TLauth_exportAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getCountriesList() *TLhelp_getCountriesList {
	return &TLhelp_getCountriesList{}
}

// CodecEncode:help_getCountriesList
func (m *TLhelp_getCountriesList) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1935116200)
	x.String(m.Getlang_code())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_getCountriesList
func (m *TLhelp_getCountriesList) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getAppUpdate() *TLhelp_getAppUpdate {
	return &TLhelp_getAppUpdate{}
}

// CodecEncode:help_getAppUpdate
func (m *TLhelp_getAppUpdate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1378703997)
	x.String(m.Getsource())
	return x.Buf
}

// CodecDecode:help_getAppUpdate
func (m *TLhelp_getAppUpdate) Decode(dbuf *DecodeBuf) error {
	m.Setsource(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_getAuthorizations() *TLaccount_getAuthorizations {
	return &TLaccount_getAuthorizations{}
}

// CodecEncode:account_getAuthorizations
func (m *TLaccount_getAuthorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-484392616)
	return x.Buf
}

// CodecDecode:account_getAuthorizations
func (m *TLaccount_getAuthorizations) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLcontacts_getTopPeers() *TLcontacts_getTopPeers {
	return &TLcontacts_getTopPeers{}
}

// CodecEncode:contacts_getTopPeers
func (m *TLcontacts_getTopPeers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-728224331)
	var flags uint32 = 0
	if m.Getcorrespondents() != false {
		flags |= 1 << 0
	}
	if m.Getbots_pm() != false {
		flags |= 1 << 1
	}
	if m.Getbots_inline() != false {
		flags |= 1 << 2
	}
	if m.Getphone_calls() != false {
		flags |= 1 << 3
	}
	if m.Getforward_users() != false {
		flags |= 1 << 4
	}
	if m.Getforward_chats() != false {
		flags |= 1 << 5
	}
	if m.Getgroups() != false {
		flags |= 1 << 10
	}
	if m.Getchannels() != false {
		flags |= 1 << 15
	}
	x.UInt(flags)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getTopPeers
func (m *TLcontacts_getTopPeers) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcorrespondents(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbots_pm(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbots_inline(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setphone_calls(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setforward_users(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setforward_chats(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setgroups(true)
	}
	if (flags & (1 << 15)) != 0 {
		m.Setchannels(true)
	}
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLupload_getFile() *TLupload_getFile {
	return &TLupload_getFile{}
}

// CodecEncode:upload_getFile
func (m *TLupload_getFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1319462148)
	var flags uint32 = 0
	if m.Getprecise() != false {
		flags |= 1 << 0
	}
	if m.Getcdn_supported() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getFile
func (m *TLupload_getFile) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setprecise(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcdn_supported(true)
	}
	m2 := &InputFileLocation{}
	m2.Decode(dbuf)
	m.Setlocation(m2)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLlangpack_getLanguage() *TLlangpack_getLanguage {
	return &TLlangpack_getLanguage{}
}

// CodecEncode:langpack_getLanguage
func (m *TLlangpack_getLanguage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1784243458)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:langpack_getLanguage
func (m *TLlangpack_getLanguage) Decode(dbuf *DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}
func NewTLlangpack_getLanguages() *TLlangpack_getLanguages {
	return &TLlangpack_getLanguages{}
}

// CodecEncode:langpack_getLanguages
func (m *TLlangpack_getLanguages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1120311183)
	x.String(m.Getlang_pack())
	return x.Buf
}

// CodecDecode:langpack_getLanguages
func (m *TLlangpack_getLanguages) Decode(dbuf *DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_getDialogs() *TLmessages_getDialogs {
	return &TLmessages_getDialogs{}
}

// CodecEncode:messages_getDialogs
func (m *TLmessages_getDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1594999949)
	var flags uint32 = 0
	if m.Getexclude_pinned() != false {
		flags |= 1 << 0
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getoffset_date())
	x.Int(m.Getoffset_id())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getDialogs
func (m *TLmessages_getDialogs) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setexclude_pinned(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setoffset_date(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setoffset_peer(m4)
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getAppConfig() *TLhelp_getAppConfig {
	return &TLhelp_getAppConfig{}
}

// CodecEncode:help_getAppConfig
func (m *TLhelp_getAppConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1735311088)
	return x.Buf
}

// CodecDecode:help_getAppConfig
func (m *TLhelp_getAppConfig) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getPeerDialogs() *TLmessages_getPeerDialogs {
	return &TLmessages_getPeerDialogs{}
}

// CodecEncode:messages_getPeerDialogs
func (m *TLmessages_getPeerDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-462373635)
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getPeerDialogs
func (m *TLmessages_getPeerDialogs) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputDialogPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputDialogPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setpeers(v0)
	return dbuf.Err
}
func NewTLmessages_getPinnedDialogs() *TLmessages_getPinnedDialogs {
	return &TLmessages_getPinnedDialogs{}
}

// CodecEncode:messages_getPinnedDialogs
func (m *TLmessages_getPinnedDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-692498958)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:messages_getPinnedDialogs
func (m *TLmessages_getPinnedDialogs) Decode(dbuf *DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getInlineBotResults() *TLmessages_getInlineBotResults {
	return &TLmessages_getInlineBotResults{}
}

// CodecEncode:messages_getInlineBotResults
func (m *TLmessages_getInlineBotResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1364105629)
	var flags uint32 = 0
	if m.Getgeo_point() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getbot().Encode())
	x.Bytes(m.Getpeer().Encode())
	if m.Getgeo_point() != nil {
		x.Bytes(m.Getgeo_point().Encode())
	}
	x.String(m.Getquery())
	x.String(m.Getoffset())
	return x.Buf
}

// CodecDecode:messages_getInlineBotResults
func (m *TLmessages_getInlineBotResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	if (flags & (1 << 0)) != 0 {
		m2 := &InputGeoPoint{}
		m2.Decode(dbuf)
		m.Setgeo_point(m2)
	}
	m.Setquery(dbuf.String())
	m.Setoffset(dbuf.String())
	return dbuf.Err
}
func NewTLpayments_getPaymentReceipt() *TLpayments_getPaymentReceipt {
	return &TLpayments_getPaymentReceipt{}
}

// CodecEncode:payments_getPaymentReceipt
func (m *TLpayments_getPaymentReceipt) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1601001088)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:payments_getPaymentReceipt
func (m *TLpayments_getPaymentReceipt) Decode(dbuf *DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}
func NewTLusers_getUsers() *TLusers_getUsers {
	return &TLusers_getUsers{}
}

// CodecEncode:users_getUsers
func (m *TLusers_getUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(227648840)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:users_getUsers
func (m *TLusers_getUsers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}
func NewTLaccount_updateProfile() *TLaccount_updateProfile {
	return &TLaccount_updateProfile{}
}

// CodecEncode:account_updateProfile
func (m *TLaccount_updateProfile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2018596725)
	var flags uint32 = 0
	if m.Getfirst_name() != "" {
		flags |= 1 << 0
	}
	if m.Getlast_name() != "" {
		flags |= 1 << 1
	}
	if m.Getabout() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getfirst_name() != "" {
		x.String(m.Getfirst_name())
	}
	if m.Getlast_name() != "" {
		x.String(m.Getlast_name())
	}
	if m.Getabout() != "" {
		x.String(m.Getabout())
	}
	return x.Buf
}

// CodecDecode:account_updateProfile
func (m *TLaccount_updateProfile) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfirst_name(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setlast_name(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setabout(dbuf.String())
	}
	return dbuf.Err
}
func NewTLaccount_updateUsername() *TLaccount_updateUsername {
	return &TLaccount_updateUsername{}
}

// CodecEncode:account_updateUsername
func (m *TLaccount_updateUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1040964988)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:account_updateUsername
func (m *TLaccount_updateUsername) Decode(dbuf *DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_changePhone() *TLaccount_changePhone {
	return &TLaccount_changePhone{}
}

// CodecEncode:account_changePhone
func (m *TLaccount_changePhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1891839707)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_changePhone
func (m *TLaccount_changePhone) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_initTakeoutSession() *TLaccount_initTakeoutSession {
	return &TLaccount_initTakeoutSession{}
}

// CodecEncode:account_initTakeoutSession
func (m *TLaccount_initTakeoutSession) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-262453244)
	var flags uint32 = 0
	if m.Getcontacts() != false {
		flags |= 1 << 0
	}
	if m.Getmessage_users() != false {
		flags |= 1 << 1
	}
	if m.Getmessage_chats() != false {
		flags |= 1 << 2
	}
	if m.Getmessage_megagroups() != false {
		flags |= 1 << 3
	}
	if m.Getmessage_channels() != false {
		flags |= 1 << 4
	}
	if m.Getfiles() != false {
		flags |= 1 << 5
	}
	if m.Getfile_max_size() != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	if m.Getfile_max_size() != 0 {
		x.Int(m.Getfile_max_size())
	}
	return x.Buf
}

// CodecDecode:account_initTakeoutSession
func (m *TLaccount_initTakeoutSession) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcontacts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmessage_users(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmessage_chats(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmessage_megagroups(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmessage_channels(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setfiles(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setfile_max_size(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLstats_getMessageStats() *TLstats_getMessageStats {
	return &TLstats_getMessageStats{}
}

// CodecEncode:stats_getMessageStats
func (m *TLstats_getMessageStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1226791947)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:stats_getMessageStats
func (m *TLstats_getMessageStats) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getInviteText() *TLhelp_getInviteText {
	return &TLhelp_getInviteText{}
}

// CodecEncode:help_getInviteText
func (m *TLhelp_getInviteText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1295590211)
	return x.Buf
}

// CodecDecode:help_getInviteText
func (m *TLhelp_getInviteText) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getStickers() *TLmessages_getStickers {
	return &TLmessages_getStickers{}
}

// CodecEncode:messages_getStickers
func (m *TLmessages_getStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(71126828)
	x.String(m.Getemoticon())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getStickers
func (m *TLmessages_getStickers) Decode(dbuf *DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLupdates_getChannelDifference() *TLupdates_getChannelDifference {
	return &TLupdates_getChannelDifference{}
}

// CodecEncode:updates_getChannelDifference
func (m *TLupdates_getChannelDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(51854712)
	var flags uint32 = 0
	if m.Getforce() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:updates_getChannelDifference
func (m *TLupdates_getChannelDifference) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setforce(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	m2 := &ChannelMessagesFilter{}
	m2.Decode(dbuf)
	m.Setfilter(m2)
	m.Setpts(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLstats_loadAsyncGraph() *TLstats_loadAsyncGraph {
	return &TLstats_loadAsyncGraph{}
}

// CodecEncode:stats_loadAsyncGraph
func (m *TLstats_loadAsyncGraph) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1646092192)
	var flags uint32 = 0
	if m.Getx() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettoken())
	if m.Getx() != 0 {
		x.Long(m.Getx())
	}
	return x.Buf
}

// CodecDecode:stats_loadAsyncGraph
func (m *TLstats_loadAsyncGraph) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settoken(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setx(dbuf.Long())
	}
	return dbuf.Err
}
func NewTLauth_logOut() *TLauth_logOut {
	return &TLauth_logOut{}
}

// CodecEncode:auth_logOut
func (m *TLauth_logOut) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1461180992)
	return x.Buf
}

// CodecDecode:auth_logOut
func (m *TLauth_logOut) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLauth_resetAuthorizations() *TLauth_resetAuthorizations {
	return &TLauth_resetAuthorizations{}
}

// CodecEncode:auth_resetAuthorizations
func (m *TLauth_resetAuthorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1616179942)
	return x.Buf
}

// CodecDecode:auth_resetAuthorizations
func (m *TLauth_resetAuthorizations) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLauth_bindTempAuthKey() *TLauth_bindTempAuthKey {
	return &TLauth_bindTempAuthKey{}
}

// CodecEncode:auth_bindTempAuthKey
func (m *TLauth_bindTempAuthKey) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-841733627)
	x.Long(m.Getperm_auth_key_id())
	x.Long(m.Getnonce())
	x.Int(m.Getexpires_at())
	x.Bytes(m.Getencrypted_message())
	return x.Buf
}

// CodecDecode:auth_bindTempAuthKey
func (m *TLauth_bindTempAuthKey) Decode(dbuf *DecodeBuf) error {
	m.Setperm_auth_key_id(dbuf.Long())
	m.Setnonce(dbuf.Long())
	m.Setexpires_at(dbuf.Int())
	m.Setencrypted_message(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLaccount_registerDevice() *TLaccount_registerDevice {
	return &TLaccount_registerDevice{}
}

// CodecEncode:account_registerDevice
func (m *TLaccount_registerDevice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1754754159)
	var flags uint32 = 0
	if m.Getno_muted() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Gettoken_type())
	x.String(m.Gettoken())
	x.Bytes(m.Getapp_sandbox().Encode())
	x.Bytes(m.Getsecret())
	x.VectorInt(m.Getother_uids())
	return x.Buf
}

// CodecDecode:account_registerDevice
func (m *TLaccount_registerDevice) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_muted(true)
	}
	m.Settoken_type(dbuf.Int())
	m.Settoken(dbuf.String())
	m3 := &Bool{}
	m3.Decode(dbuf)
	m.Setapp_sandbox(m3)
	m.Setsecret(dbuf.StringBytes())
	m.Setother_uids(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLaccount_unregisterDevice() *TLaccount_unregisterDevice {
	return &TLaccount_unregisterDevice{}
}

// CodecEncode:account_unregisterDevice
func (m *TLaccount_unregisterDevice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(813089983)
	x.Int(m.Gettoken_type())
	x.String(m.Gettoken())
	x.VectorInt(m.Getother_uids())
	return x.Buf
}

// CodecDecode:account_unregisterDevice
func (m *TLaccount_unregisterDevice) Decode(dbuf *DecodeBuf) error {
	m.Settoken_type(dbuf.Int())
	m.Settoken(dbuf.String())
	m.Setother_uids(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLaccount_updateNotifySettings() *TLaccount_updateNotifySettings {
	return &TLaccount_updateNotifySettings{}
}

// CodecEncode:account_updateNotifySettings
func (m *TLaccount_updateNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2067899501)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_updateNotifySettings
func (m *TLaccount_updateNotifySettings) Decode(dbuf *DecodeBuf) error {
	m0 := &InputNotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputPeerNotifySettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}
func NewTLaccount_resetNotifySettings() *TLaccount_resetNotifySettings {
	return &TLaccount_resetNotifySettings{}
}

// CodecEncode:account_resetNotifySettings
func (m *TLaccount_resetNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-612493497)
	return x.Buf
}

// CodecDecode:account_resetNotifySettings
func (m *TLaccount_resetNotifySettings) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_updateStatus() *TLaccount_updateStatus {
	return &TLaccount_updateStatus{}
}

// CodecEncode:account_updateStatus
func (m *TLaccount_updateStatus) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1713919532)
	x.Bytes(m.Getoffline().Encode())
	return x.Buf
}

// CodecDecode:account_updateStatus
func (m *TLaccount_updateStatus) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setoffline(m0)
	return dbuf.Err
}
func NewTLaccount_reportPeer() *TLaccount_reportPeer {
	return &TLaccount_reportPeer{}
}

// CodecEncode:account_reportPeer
func (m *TLaccount_reportPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1374118561)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getreason().Encode())
	return x.Buf
}

// CodecDecode:account_reportPeer
func (m *TLaccount_reportPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &ReportReason{}
	m1.Decode(dbuf)
	m.Setreason(m1)
	return dbuf.Err
}
func NewTLcontacts_deleteByPhones() *TLcontacts_deleteByPhones {
	return &TLcontacts_deleteByPhones{}
}

// CodecEncode:contacts_deleteByPhones
func (m *TLcontacts_deleteByPhones) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(269745566)
	x.VectorString(m.Getphones())
	return x.Buf
}

// CodecDecode:contacts_deleteByPhones
func (m *TLcontacts_deleteByPhones) Decode(dbuf *DecodeBuf) error {
	m.Setphones(dbuf.VectorString())
	return dbuf.Err
}
func NewTLcontacts_block() *TLcontacts_block {
	return &TLcontacts_block{}
}

// CodecEncode:contacts_block
func (m *TLcontacts_block) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1758204945)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_block
func (m *TLcontacts_block) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLcontacts_unblock() *TLcontacts_unblock {
	return &TLcontacts_unblock{}
}

// CodecEncode:contacts_unblock
func (m *TLcontacts_unblock) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1096393392)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_unblock
func (m *TLcontacts_unblock) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLmessages_setTyping() *TLmessages_setTyping {
	return &TLmessages_setTyping{}
}

// CodecEncode:messages_setTyping
func (m *TLmessages_setTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1486110434)
	var flags uint32 = 0
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:messages_setTyping
func (m *TLmessages_setTyping) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	if (flags & (1 << 0)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m2 := &SendMessageAction{}
	m2.Decode(dbuf)
	m.Setaction(m2)
	return dbuf.Err
}
func NewTLmessages_reportSpam() *TLmessages_reportSpam {
	return &TLmessages_reportSpam{}
}

// CodecEncode:messages_reportSpam
func (m *TLmessages_reportSpam) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-820669733)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_reportSpam
func (m *TLmessages_reportSpam) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLmessages_report() *TLmessages_report {
	return &TLmessages_report{}
}

// CodecEncode:messages_report
func (m *TLmessages_report) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1115507112)
	x.Bytes(m.Getpeer().Encode())
	x.VectorInt(m.Getid())
	x.Bytes(m.Getreason().Encode())
	return x.Buf
}

// CodecDecode:messages_report
func (m *TLmessages_report) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	m2 := &ReportReason{}
	m2.Decode(dbuf)
	m.Setreason(m2)
	return dbuf.Err
}
func NewTLupload_saveFilePart() *TLupload_saveFilePart {
	return &TLupload_saveFilePart{}
}

// CodecEncode:upload_saveFilePart
func (m *TLupload_saveFilePart) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1291540959)
	x.Long(m.Getfile_id())
	x.Int(m.Getfile_part())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_saveFilePart
func (m *TLupload_saveFilePart) Decode(dbuf *DecodeBuf) error {
	m.Setfile_id(dbuf.Long())
	m.Setfile_part(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLmessages_discardEncryption() *TLmessages_discardEncryption {
	return &TLmessages_discardEncryption{}
}

// CodecEncode:messages_discardEncryption
func (m *TLmessages_discardEncryption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-304536635)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_discardEncryption
func (m *TLmessages_discardEncryption) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_setEncryptedTyping() *TLmessages_setEncryptedTyping {
	return &TLmessages_setEncryptedTyping{}
}

// CodecEncode:messages_setEncryptedTyping
func (m *TLmessages_setEncryptedTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2031374829)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Gettyping().Encode())
	return x.Buf
}

// CodecDecode:messages_setEncryptedTyping
func (m *TLmessages_setEncryptedTyping) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Settyping(m1)
	return dbuf.Err
}
func NewTLmessages_readEncryptedHistory() *TLmessages_readEncryptedHistory {
	return &TLmessages_readEncryptedHistory{}
}

// CodecEncode:messages_readEncryptedHistory
func (m *TLmessages_readEncryptedHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2135648522)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_date())
	return x.Buf
}

// CodecDecode:messages_readEncryptedHistory
func (m *TLmessages_readEncryptedHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmax_date(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_reportEncryptedSpam() *TLmessages_reportEncryptedSpam {
	return &TLmessages_reportEncryptedSpam{}
}

// CodecEncode:messages_reportEncryptedSpam
func (m *TLmessages_reportEncryptedSpam) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1259113487)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_reportEncryptedSpam
func (m *TLmessages_reportEncryptedSpam) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLupload_saveBigFilePart() *TLupload_saveBigFilePart {
	return &TLupload_saveBigFilePart{}
}

// CodecEncode:upload_saveBigFilePart
func (m *TLupload_saveBigFilePart) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-562337987)
	x.Long(m.Getfile_id())
	x.Int(m.Getfile_part())
	x.Int(m.Getfile_total_parts())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_saveBigFilePart
func (m *TLupload_saveBigFilePart) Decode(dbuf *DecodeBuf) error {
	m.Setfile_id(dbuf.Long())
	m.Setfile_part(dbuf.Int())
	m.Setfile_total_parts(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLaccount_checkUsername() *TLaccount_checkUsername {
	return &TLaccount_checkUsername{}
}

// CodecEncode:account_checkUsername
func (m *TLaccount_checkUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(655677548)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:account_checkUsername
func (m *TLaccount_checkUsername) Decode(dbuf *DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_deleteAccount() *TLaccount_deleteAccount {
	return &TLaccount_deleteAccount{}
}

// CodecEncode:account_deleteAccount
func (m *TLaccount_deleteAccount) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1099779595)
	x.String(m.Getreason())
	return x.Buf
}

// CodecDecode:account_deleteAccount
func (m *TLaccount_deleteAccount) Decode(dbuf *DecodeBuf) error {
	m.Setreason(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_setAccountTTL() *TLaccount_setAccountTTL {
	return &TLaccount_setAccountTTL{}
}

// CodecEncode:account_setAccountTTL
func (m *TLaccount_setAccountTTL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(608323678)
	x.Bytes(m.Getttl().Encode())
	return x.Buf
}

// CodecDecode:account_setAccountTTL
func (m *TLaccount_setAccountTTL) Decode(dbuf *DecodeBuf) error {
	m0 := &AccountDaysTTL{}
	m0.Decode(dbuf)
	m.Setttl(m0)
	return dbuf.Err
}
func NewTLaccount_updateDeviceLocked() *TLaccount_updateDeviceLocked {
	return &TLaccount_updateDeviceLocked{}
}

// CodecEncode:account_updateDeviceLocked
func (m *TLaccount_updateDeviceLocked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(954152242)
	x.Int(m.Getperiod())
	return x.Buf
}

// CodecDecode:account_updateDeviceLocked
func (m *TLaccount_updateDeviceLocked) Decode(dbuf *DecodeBuf) error {
	m.Setperiod(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_resetAuthorization() *TLaccount_resetAuthorization {
	return &TLaccount_resetAuthorization{}
}

// CodecEncode:account_resetAuthorization
func (m *TLaccount_resetAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-545786948)
	x.Long(m.Gethash())
	return x.Buf
}

// CodecDecode:account_resetAuthorization
func (m *TLaccount_resetAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Long())
	return dbuf.Err
}
func NewTLaccount_updatePasswordSettings() *TLaccount_updatePasswordSettings {
	return &TLaccount_updatePasswordSettings{}
}

// CodecEncode:account_updatePasswordSettings
func (m *TLaccount_updatePasswordSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1516564433)
	x.Bytes(m.Getpassword().Encode())
	x.Bytes(m.Getnew_settings().Encode())
	return x.Buf
}

// CodecDecode:account_updatePasswordSettings
func (m *TLaccount_updatePasswordSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	m1 := &account_PasswordInputSettings{}
	m1.Decode(dbuf)
	m.Setnew_settings(m1)
	return dbuf.Err
}
func NewTLmessages_uninstallStickerSet() *TLmessages_uninstallStickerSet {
	return &TLmessages_uninstallStickerSet{}
}

// CodecEncode:messages_uninstallStickerSet
func (m *TLmessages_uninstallStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-110209570)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:messages_uninstallStickerSet
func (m *TLmessages_uninstallStickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}
func NewTLchannels_readHistory() *TLchannels_readHistory {
	return &TLchannels_readHistory{}
}

// CodecEncode:channels_readHistory
func (m *TLchannels_readHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-871347913)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:channels_readHistory
func (m *TLchannels_readHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_reportSpam() *TLchannels_reportSpam {
	return &TLchannels_reportSpam{}
}

// CodecEncode:channels_reportSpam
func (m *TLchannels_reportSpam) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-32999408)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:channels_reportSpam
func (m *TLchannels_reportSpam) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLchannels_checkUsername() *TLchannels_checkUsername {
	return &TLchannels_checkUsername{}
}

// CodecEncode:channels_checkUsername
func (m *TLchannels_checkUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(283557164)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:channels_checkUsername
func (m *TLchannels_checkUsername) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setusername(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_updateUsername() *TLchannels_updateUsername {
	return &TLchannels_updateUsername{}
}

// CodecEncode:channels_updateUsername
func (m *TLchannels_updateUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(890549214)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:channels_updateUsername
func (m *TLchannels_updateUsername) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setusername(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_editChatAdmin() *TLmessages_editChatAdmin {
	return &TLmessages_editChatAdmin{}
}

// CodecEncode:messages_editChatAdmin
func (m *TLmessages_editChatAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1444503762)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getis_admin().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatAdmin
func (m *TLmessages_editChatAdmin) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setis_admin(m2)
	return dbuf.Err
}
func NewTLmessages_reorderStickerSets() *TLmessages_reorderStickerSets {
	return &TLmessages_reorderStickerSets{}
}

// CodecEncode:messages_reorderStickerSets
func (m *TLmessages_reorderStickerSets) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2016638777)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.VectorLong(m.Getorder())
	return x.Buf
}

// CodecDecode:messages_reorderStickerSets
func (m *TLmessages_reorderStickerSets) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setorder(dbuf.VectorLong())
	return dbuf.Err
}
func NewTLmessages_saveGif() *TLmessages_saveGif {
	return &TLmessages_saveGif{}
}

// CodecEncode:messages_saveGif
func (m *TLmessages_saveGif) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(846868683)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:messages_saveGif
func (m *TLmessages_saveGif) Decode(dbuf *DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	return dbuf.Err
}
func NewTLmessages_setInlineBotResults() *TLmessages_setInlineBotResults {
	return &TLmessages_setInlineBotResults{}
}

// CodecEncode:messages_setInlineBotResults
func (m *TLmessages_setInlineBotResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-346119674)
	var flags uint32 = 0
	if m.Getgallery() != false {
		flags |= 1 << 0
	}
	if m.Getprivate() != false {
		flags |= 1 << 1
	}
	if m.Getnext_offset() != "" {
		flags |= 1 << 2
	}
	if m.Getswitch_pm() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getcache_time())
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	if m.Getswitch_pm() != nil {
		x.Bytes(m.Getswitch_pm().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_setInlineBotResults
func (m *TLmessages_setInlineBotResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgallery(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setprivate(true)
	}
	m.Setquery_id(dbuf.Long())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*InputBotInlineResult, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &InputBotInlineResult{}
		v3[i].Decode(dbuf)
	}
	m.Setresults(v3)
	m.Setcache_time(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m6 := &InlineBotSwitchPM{}
		m6.Decode(dbuf)
		m.Setswitch_pm(m6)
	}
	return dbuf.Err
}
func NewTLauth_cancelCode() *TLauth_cancelCode {
	return &TLauth_cancelCode{}
}

// CodecEncode:auth_cancelCode
func (m *TLauth_cancelCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(520357240)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	return x.Buf
}

// CodecDecode:auth_cancelCode
func (m *TLauth_cancelCode) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_editInlineBotMessage() *TLmessages_editInlineBotMessage {
	return &TLmessages_editInlineBotMessage{}
}

// CodecEncode:messages_editInlineBotMessage
func (m *TLmessages_editInlineBotMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2091549254)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 1
	}
	if m.Getmessage() != "" {
		flags |= 1 << 11
	}
	if m.Getmedia() != nil {
		flags |= 1 << 14
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Getmedia() != nil {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_editInlineBotMessage
func (m *TLmessages_editInlineBotMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setno_webpage(true)
	}
	m1 := &InputBotInlineMessageID{}
	m1.Decode(dbuf)
	m.Setid(m1)
	if (flags & (1 << 11)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 14)) != 0 {
		m3 := &InputMedia{}
		m3.Decode(dbuf)
		m.Setmedia(m3)
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	if (flags & (1 << 3)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]*MessageEntity, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &MessageEntity{}
			v5[i].Decode(dbuf)
		}
		m.Setentities(v5)
	}
	return dbuf.Err
}
func NewTLmessages_setBotCallbackAnswer() *TLmessages_setBotCallbackAnswer {
	return &TLmessages_setBotCallbackAnswer{}
}

// CodecEncode:messages_setBotCallbackAnswer
func (m *TLmessages_setBotCallbackAnswer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-712043766)
	var flags uint32 = 0
	if m.Getalert() != false {
		flags |= 1 << 1
	}
	if m.Getmessage() != "" {
		flags |= 1 << 0
	}
	if m.Geturl() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	x.Int(m.Getcache_time())
	return x.Buf
}

// CodecDecode:messages_setBotCallbackAnswer
func (m *TLmessages_setBotCallbackAnswer) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setalert(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Seturl(dbuf.String())
	}
	m.Setcache_time(dbuf.Int())
	return dbuf.Err
}
func NewTLcontacts_resetTopPeerRating() *TLcontacts_resetTopPeerRating {
	return &TLcontacts_resetTopPeerRating{}
}

// CodecEncode:contacts_resetTopPeerRating
func (m *TLcontacts_resetTopPeerRating) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(451113900)
	x.Bytes(m.Getcategory().Encode())
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:contacts_resetTopPeerRating
func (m *TLcontacts_resetTopPeerRating) Decode(dbuf *DecodeBuf) error {
	m0 := &TopPeerCategory{}
	m0.Decode(dbuf)
	m.Setcategory(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}
func NewTLmessages_saveDraft() *TLmessages_saveDraft {
	return &TLmessages_saveDraft{}
}

// CodecEncode:messages_saveDraft
func (m *TLmessages_saveDraft) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1137057461)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 1
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_saveDraft
func (m *TLmessages_saveDraft) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setmessage(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		c4 := dbuf.Int()
		if c4 != 481674261 {
			return dbuf.Err
		}
		l4 := dbuf.Int()
		v4 := make([]*MessageEntity, l4)
		for i := int32(0); i < l4; i++ {
			v4[i] = &MessageEntity{}
			v4[i].Decode(dbuf)
		}
		m.Setentities(v4)
	}
	return dbuf.Err
}
func NewTLmessages_readFeaturedStickers() *TLmessages_readFeaturedStickers {
	return &TLmessages_readFeaturedStickers{}
}

// CodecEncode:messages_readFeaturedStickers
func (m *TLmessages_readFeaturedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1527873830)
	x.VectorLong(m.Getid())
	return x.Buf
}

// CodecDecode:messages_readFeaturedStickers
func (m *TLmessages_readFeaturedStickers) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.VectorLong())
	return dbuf.Err
}
func NewTLmessages_saveRecentSticker() *TLmessages_saveRecentSticker {
	return &TLmessages_saveRecentSticker{}
}

// CodecEncode:messages_saveRecentSticker
func (m *TLmessages_saveRecentSticker) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(958863608)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:messages_saveRecentSticker
func (m *TLmessages_saveRecentSticker) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	m1 := &InputDocument{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setunsave(m2)
	return dbuf.Err
}
func NewTLmessages_clearRecentStickers() *TLmessages_clearRecentStickers {
	return &TLmessages_clearRecentStickers{}
}

// CodecEncode:messages_clearRecentStickers
func (m *TLmessages_clearRecentStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1986437075)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:messages_clearRecentStickers
func (m *TLmessages_clearRecentStickers) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	return dbuf.Err
}
func NewTLaccount_confirmPhone() *TLaccount_confirmPhone {
	return &TLaccount_confirmPhone{}
}

// CodecEncode:account_confirmPhone
func (m *TLaccount_confirmPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1596029123)
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_confirmPhone
func (m *TLaccount_confirmPhone) Decode(dbuf *DecodeBuf) error {
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}
func NewTLauth_dropTempAuthKeys() *TLauth_dropTempAuthKeys {
	return &TLauth_dropTempAuthKeys{}
}

// CodecEncode:auth_dropTempAuthKeys
func (m *TLauth_dropTempAuthKeys) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1907842680)
	x.VectorLong(m.Getexcept_auth_keys())
	return x.Buf
}

// CodecDecode:auth_dropTempAuthKeys
func (m *TLauth_dropTempAuthKeys) Decode(dbuf *DecodeBuf) error {
	m.Setexcept_auth_keys(dbuf.VectorLong())
	return dbuf.Err
}
func NewTLmessages_setInlineGameScore() *TLmessages_setInlineGameScore {
	return &TLmessages_setInlineGameScore{}
}

// CodecEncode:messages_setInlineGameScore
func (m *TLmessages_setInlineGameScore) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(363700068)
	var flags uint32 = 0
	if m.Getedit_message() != false {
		flags |= 1 << 0
	}
	if m.Getforce() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messages_setInlineGameScore
func (m *TLmessages_setInlineGameScore) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setedit_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforce(true)
	}
	m2 := &InputBotInlineMessageID{}
	m2.Decode(dbuf)
	m.Setid(m2)
	m3 := &InputUser{}
	m3.Decode(dbuf)
	m.Setuser_id(m3)
	m.Setscore(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_setBotUpdatesStatus() *TLhelp_setBotUpdatesStatus {
	return &TLhelp_setBotUpdatesStatus{}
}

// CodecEncode:help_setBotUpdatesStatus
func (m *TLhelp_setBotUpdatesStatus) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-333262899)
	x.Int(m.Getpending_updates_count())
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:help_setBotUpdatesStatus
func (m *TLhelp_setBotUpdatesStatus) Decode(dbuf *DecodeBuf) error {
	m.Setpending_updates_count(dbuf.Int())
	m.Setmessage(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_toggleDialogPin() *TLmessages_toggleDialogPin {
	return &TLmessages_toggleDialogPin{}
}

// CodecEncode:messages_toggleDialogPin
func (m *TLmessages_toggleDialogPin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1489903017)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_toggleDialogPin
func (m *TLmessages_toggleDialogPin) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m1 := &InputDialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}
func NewTLmessages_reorderPinnedDialogs() *TLmessages_reorderPinnedDialogs {
	return &TLmessages_reorderPinnedDialogs{}
}

// CodecEncode:messages_reorderPinnedDialogs
func (m *TLmessages_reorderPinnedDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(991616823)
	var flags uint32 = 0
	if m.Getforce() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getfolder_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getorder())))
	for _, v := range m.Getorder() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_reorderPinnedDialogs
func (m *TLmessages_reorderPinnedDialogs) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setforce(true)
	}
	m.Setfolder_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*InputDialogPeer, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &InputDialogPeer{}
		v2[i].Decode(dbuf)
	}
	m.Setorder(v2)
	return dbuf.Err
}
func NewTLbots_answerWebhookJSONQuery() *TLbots_answerWebhookJSONQuery {
	return &TLbots_answerWebhookJSONQuery{}
}

// CodecEncode:bots_answerWebhookJSONQuery
func (m *TLbots_answerWebhookJSONQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-434028723)
	x.Long(m.Getquery_id())
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:bots_answerWebhookJSONQuery
func (m *TLbots_answerWebhookJSONQuery) Decode(dbuf *DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata(m1)
	return dbuf.Err
}
func NewTLpayments_clearSavedInfo() *TLpayments_clearSavedInfo {
	return &TLpayments_clearSavedInfo{}
}

// CodecEncode:payments_clearSavedInfo
func (m *TLpayments_clearSavedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-667062079)
	var flags uint32 = 0
	if m.Getcredentials() != false {
		flags |= 1 << 0
	}
	if m.Getinfo() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:payments_clearSavedInfo
func (m *TLpayments_clearSavedInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcredentials(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setinfo(true)
	}
	return dbuf.Err
}
func NewTLmessages_setBotShippingResults() *TLmessages_setBotShippingResults {
	return &TLmessages_setBotShippingResults{}
}

// CodecEncode:messages_setBotShippingResults
func (m *TLmessages_setBotShippingResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-436833542)
	var flags uint32 = 0
	if m.Geterror() != "" {
		flags |= 1 << 0
	}
	if len(m.Getshipping_options()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Geterror() != "" {
		x.String(m.Geterror())
	}
	if len(m.Getshipping_options()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getshipping_options())))
		for _, v := range m.Getshipping_options() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_setBotShippingResults
func (m *TLmessages_setBotShippingResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Seterror(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]*ShippingOption, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &ShippingOption{}
			v2[i].Decode(dbuf)
		}
		m.Setshipping_options(v2)
	}
	return dbuf.Err
}
func NewTLmessages_setBotPrecheckoutResults() *TLmessages_setBotPrecheckoutResults {
	return &TLmessages_setBotPrecheckoutResults{}
}

// CodecEncode:messages_setBotPrecheckoutResults
func (m *TLmessages_setBotPrecheckoutResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(163765653)
	var flags uint32 = 0
	if m.Getsuccess() != false {
		flags |= 1 << 1
	}
	if m.Geterror() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Geterror() != "" {
		x.String(m.Geterror())
	}
	return x.Buf
}

// CodecDecode:messages_setBotPrecheckoutResults
func (m *TLmessages_setBotPrecheckoutResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setsuccess(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Seterror(dbuf.String())
	}
	return dbuf.Err
}
func NewTLphone_receivedCall() *TLphone_receivedCall {
	return &TLphone_receivedCall{}
}

// CodecEncode:phone_receivedCall
func (m *TLphone_receivedCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(399855457)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:phone_receivedCall
func (m *TLphone_receivedCall) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLphone_saveCallDebug() *TLphone_saveCallDebug {
	return &TLphone_saveCallDebug{}
}

// CodecEncode:phone_saveCallDebug
func (m *TLphone_saveCallDebug) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(662363518)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getdebug().Encode())
	return x.Buf
}

// CodecDecode:phone_saveCallDebug
func (m *TLphone_saveCallDebug) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdebug(m1)
	return dbuf.Err
}
func NewTLchannels_setStickers() *TLchannels_setStickers {
	return &TLchannels_setStickers{}
}

// CodecEncode:channels_setStickers
func (m *TLchannels_setStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-359881479)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:channels_setStickers
func (m *TLchannels_setStickers) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputStickerSet{}
	m1.Decode(dbuf)
	m.Setstickerset(m1)
	return dbuf.Err
}
func NewTLmessages_faveSticker() *TLmessages_faveSticker {
	return &TLmessages_faveSticker{}
}

// CodecEncode:messages_faveSticker
func (m *TLmessages_faveSticker) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1174420133)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getunfave().Encode())
	return x.Buf
}

// CodecDecode:messages_faveSticker
func (m *TLmessages_faveSticker) Decode(dbuf *DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunfave(m1)
	return dbuf.Err
}
func NewTLchannels_readMessageContents() *TLchannels_readMessageContents {
	return &TLchannels_readMessageContents{}
}

// CodecEncode:channels_readMessageContents
func (m *TLchannels_readMessageContents) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-357180360)
	x.Bytes(m.Getchannel().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:channels_readMessageContents
func (m *TLchannels_readMessageContents) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLcontacts_resetSaved() *TLcontacts_resetSaved {
	return &TLcontacts_resetSaved{}
}

// CodecEncode:contacts_resetSaved
func (m *TLcontacts_resetSaved) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2020263951)
	return x.Buf
}

// CodecDecode:contacts_resetSaved
func (m *TLcontacts_resetSaved) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLchannels_deleteHistory() *TLchannels_deleteHistory {
	return &TLchannels_deleteHistory{}
}

// CodecEncode:channels_deleteHistory
func (m *TLchannels_deleteHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1355375294)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:channels_deleteHistory
func (m *TLchannels_deleteHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_resetWebAuthorization() *TLaccount_resetWebAuthorization {
	return &TLaccount_resetWebAuthorization{}
}

// CodecEncode:account_resetWebAuthorization
func (m *TLaccount_resetWebAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(755087855)
	x.Long(m.Gethash())
	return x.Buf
}

// CodecDecode:account_resetWebAuthorization
func (m *TLaccount_resetWebAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Long())
	return dbuf.Err
}
func NewTLaccount_resetWebAuthorizations() *TLaccount_resetWebAuthorizations {
	return &TLaccount_resetWebAuthorizations{}
}

// CodecEncode:account_resetWebAuthorizations
func (m *TLaccount_resetWebAuthorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1747789204)
	return x.Buf
}

// CodecDecode:account_resetWebAuthorizations
func (m *TLaccount_resetWebAuthorizations) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_acceptTermsOfService() *TLhelp_acceptTermsOfService {
	return &TLhelp_acceptTermsOfService{}
}

// CodecEncode:help_acceptTermsOfService
func (m *TLhelp_acceptTermsOfService) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-294455398)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:help_acceptTermsOfService
func (m *TLhelp_acceptTermsOfService) Decode(dbuf *DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLaccount_deleteSecureValue() *TLaccount_deleteSecureValue {
	return &TLaccount_deleteSecureValue{}
}

// CodecEncode:account_deleteSecureValue
func (m *TLaccount_deleteSecureValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1199522741)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_deleteSecureValue
func (m *TLaccount_deleteSecureValue) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}
func NewTLusers_setSecureValueErrors() *TLusers_setSecureValueErrors {
	return &TLusers_setSecureValueErrors{}
}

// CodecEncode:users_setSecureValueErrors
func (m *TLusers_setSecureValueErrors) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1865902923)
	x.Bytes(m.Getid().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Geterrors())))
	for _, v := range m.Geterrors() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:users_setSecureValueErrors
func (m *TLusers_setSecureValueErrors) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*SecureValueError, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &SecureValueError{}
		v1[i].Decode(dbuf)
	}
	m.Seterrors(v1)
	return dbuf.Err
}
func NewTLaccount_acceptAuthorization() *TLaccount_acceptAuthorization {
	return &TLaccount_acceptAuthorization{}
}

// CodecEncode:account_acceptAuthorization
func (m *TLaccount_acceptAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-419267436)
	x.Int(m.Getbot_id())
	x.String(m.Getscope())
	x.String(m.Getpublic_key())
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_hashes())))
	for _, v := range m.Getvalue_hashes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:account_acceptAuthorization
func (m *TLaccount_acceptAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Setbot_id(dbuf.Int())
	m.Setscope(dbuf.String())
	m.Setpublic_key(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*SecureValueHash, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &SecureValueHash{}
		v3[i].Decode(dbuf)
	}
	m.Setvalue_hashes(v3)
	m4 := &SecureCredentialsEncrypted{}
	m4.Decode(dbuf)
	m.Setcredentials(m4)
	return dbuf.Err
}
func NewTLaccount_verifyPhone() *TLaccount_verifyPhone {
	return &TLaccount_verifyPhone{}
}

// CodecEncode:account_verifyPhone
func (m *TLaccount_verifyPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1305716726)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:account_verifyPhone
func (m *TLaccount_verifyPhone) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_verifyEmail() *TLaccount_verifyEmail {
	return &TLaccount_verifyEmail{}
}

// CodecEncode:account_verifyEmail
func (m *TLaccount_verifyEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-323339813)
	x.String(m.Getemail())
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:account_verifyEmail
func (m *TLaccount_verifyEmail) Decode(dbuf *DecodeBuf) error {
	m.Setemail(dbuf.String())
	m.Setcode(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_finishTakeoutSession() *TLaccount_finishTakeoutSession {
	return &TLaccount_finishTakeoutSession{}
}

// CodecEncode:account_finishTakeoutSession
func (m *TLaccount_finishTakeoutSession) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(489050862)
	var flags uint32 = 0
	if m.Getsuccess() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_finishTakeoutSession
func (m *TLaccount_finishTakeoutSession) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsuccess(true)
	}
	return dbuf.Err
}
func NewTLmessages_markDialogUnread() *TLmessages_markDialogUnread {
	return &TLmessages_markDialogUnread{}
}

// CodecEncode:messages_markDialogUnread
func (m *TLmessages_markDialogUnread) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1031349873)
	var flags uint32 = 0
	if m.Getunread() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_markDialogUnread
func (m *TLmessages_markDialogUnread) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setunread(true)
	}
	m1 := &InputDialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	return dbuf.Err
}
func NewTLcontacts_toggleTopPeers() *TLcontacts_toggleTopPeers {
	return &TLcontacts_toggleTopPeers{}
}

// CodecEncode:contacts_toggleTopPeers
func (m *TLcontacts_toggleTopPeers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2062238246)
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:contacts_toggleTopPeers
func (m *TLcontacts_toggleTopPeers) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setenabled(m0)
	return dbuf.Err
}
func NewTLmessages_clearAllDrafts() *TLmessages_clearAllDrafts {
	return &TLmessages_clearAllDrafts{}
}

// CodecEncode:messages_clearAllDrafts
func (m *TLmessages_clearAllDrafts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2119757468)
	return x.Buf
}

// CodecDecode:messages_clearAllDrafts
func (m *TLmessages_clearAllDrafts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_saveAppLog() *TLhelp_saveAppLog {
	return &TLhelp_saveAppLog{}
}

// CodecEncode:help_saveAppLog
func (m *TLhelp_saveAppLog) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1862465352)
	x.Int(481674261)
	x.Int(int32(len(m.Getevents())))
	for _, v := range m.Getevents() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_saveAppLog
func (m *TLhelp_saveAppLog) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputAppEvent, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputAppEvent{}
		v0[i].Decode(dbuf)
	}
	m.Setevents(v0)
	return dbuf.Err
}
func NewTLaccount_confirmPasswordEmail() *TLaccount_confirmPasswordEmail {
	return &TLaccount_confirmPasswordEmail{}
}

// CodecEncode:account_confirmPasswordEmail
func (m *TLaccount_confirmPasswordEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1881204448)
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:account_confirmPasswordEmail
func (m *TLaccount_confirmPasswordEmail) Decode(dbuf *DecodeBuf) error {
	m.Setcode(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_resendPasswordEmail() *TLaccount_resendPasswordEmail {
	return &TLaccount_resendPasswordEmail{}
}

// CodecEncode:account_resendPasswordEmail
func (m *TLaccount_resendPasswordEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2055154197)
	return x.Buf
}

// CodecDecode:account_resendPasswordEmail
func (m *TLaccount_resendPasswordEmail) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_cancelPasswordEmail() *TLaccount_cancelPasswordEmail {
	return &TLaccount_cancelPasswordEmail{}
}

// CodecEncode:account_cancelPasswordEmail
func (m *TLaccount_cancelPasswordEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1043606090)
	return x.Buf
}

// CodecDecode:account_cancelPasswordEmail
func (m *TLaccount_cancelPasswordEmail) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_getContactSignUpNotification() *TLaccount_getContactSignUpNotification {
	return &TLaccount_getContactSignUpNotification{}
}

// CodecEncode:account_getContactSignUpNotification
func (m *TLaccount_getContactSignUpNotification) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1626880216)
	return x.Buf
}

// CodecDecode:account_getContactSignUpNotification
func (m *TLaccount_getContactSignUpNotification) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_setContactSignUpNotification() *TLaccount_setContactSignUpNotification {
	return &TLaccount_setContactSignUpNotification{}
}

// CodecEncode:account_setContactSignUpNotification
func (m *TLaccount_setContactSignUpNotification) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-806076575)
	x.Bytes(m.Getsilent().Encode())
	return x.Buf
}

// CodecDecode:account_setContactSignUpNotification
func (m *TLaccount_setContactSignUpNotification) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setsilent(m0)
	return dbuf.Err
}
func NewTLmessages_editChatAbout() *TLmessages_editChatAbout {
	return &TLmessages_editChatAbout{}
}

// CodecEncode:messages_editChatAbout
func (m *TLmessages_editChatAbout) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-554301545)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getabout())
	return x.Buf
}

// CodecDecode:messages_editChatAbout
func (m *TLmessages_editChatAbout) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setabout(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_saveWallPaper() *TLaccount_saveWallPaper {
	return &TLaccount_saveWallPaper{}
}

// CodecEncode:account_saveWallPaper
func (m *TLaccount_saveWallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1817860919)
	x.Bytes(m.Getwallpaper().Encode())
	x.Bytes(m.Getunsave().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_saveWallPaper
func (m *TLaccount_saveWallPaper) Decode(dbuf *DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	m2 := &WallPaperSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}
func NewTLaccount_installWallPaper() *TLaccount_installWallPaper {
	return &TLaccount_installWallPaper{}
}

// CodecEncode:account_installWallPaper
func (m *TLaccount_installWallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-18000023)
	x.Bytes(m.Getwallpaper().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_installWallPaper
func (m *TLaccount_installWallPaper) Decode(dbuf *DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	m1 := &WallPaperSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}
func NewTLaccount_resetWallPapers() *TLaccount_resetWallPapers {
	return &TLaccount_resetWallPapers{}
}

// CodecEncode:account_resetWallPapers
func (m *TLaccount_resetWallPapers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1153722364)
	return x.Buf
}

// CodecDecode:account_resetWallPapers
func (m *TLaccount_resetWallPapers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_saveAutoDownloadSettings() *TLaccount_saveAutoDownloadSettings {
	return &TLaccount_saveAutoDownloadSettings{}
}

// CodecEncode:account_saveAutoDownloadSettings
func (m *TLaccount_saveAutoDownloadSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1995661875)
	var flags uint32 = 0
	if m.Getlow() != false {
		flags |= 1 << 0
	}
	if m.Gethigh() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_saveAutoDownloadSettings
func (m *TLaccount_saveAutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setlow(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethigh(true)
	}
	m2 := &AutoDownloadSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}
func NewTLchannels_setDiscussionGroup() *TLchannels_setDiscussionGroup {
	return &TLchannels_setDiscussionGroup{}
}

// CodecEncode:channels_setDiscussionGroup
func (m *TLchannels_setDiscussionGroup) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1079520178)
	x.Bytes(m.Getbroadcast().Encode())
	x.Bytes(m.Getgroup().Encode())
	return x.Buf
}

// CodecDecode:channels_setDiscussionGroup
func (m *TLchannels_setDiscussionGroup) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setbroadcast(m0)
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setgroup(m1)
	return dbuf.Err
}
func NewTLmessages_hidePeerSettingsBar() *TLmessages_hidePeerSettingsBar {
	return &TLmessages_hidePeerSettingsBar{}
}

// CodecEncode:messages_hidePeerSettingsBar
func (m *TLmessages_hidePeerSettingsBar) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1336717624)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_hidePeerSettingsBar
func (m *TLmessages_hidePeerSettingsBar) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLchannels_editLocation() *TLchannels_editLocation {
	return &TLchannels_editLocation{}
}

// CodecEncode:channels_editLocation
func (m *TLchannels_editLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1491484525)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Getaddress())
	return x.Buf
}

// CodecDecode:channels_editLocation
func (m *TLchannels_editLocation) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	m.Setaddress(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_saveTheme() *TLaccount_saveTheme {
	return &TLaccount_saveTheme{}
}

// CodecEncode:account_saveTheme
func (m *TLaccount_saveTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-229175188)
	x.Bytes(m.Gettheme().Encode())
	x.Bytes(m.Getunsave().Encode())
	return x.Buf
}

// CodecDecode:account_saveTheme
func (m *TLaccount_saveTheme) Decode(dbuf *DecodeBuf) error {
	m0 := &InputTheme{}
	m0.Decode(dbuf)
	m.Settheme(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setunsave(m1)
	return dbuf.Err
}
func NewTLaccount_installTheme() *TLaccount_installTheme {
	return &TLaccount_installTheme{}
}

// CodecEncode:account_installTheme
func (m *TLaccount_installTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2061776695)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 1 << 0
	}
	if m.Getformat() != "" {
		flags |= 1 << 1
	}
	if m.Gettheme() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getformat() != "" {
		x.String(m.Getformat())
	}
	if m.Gettheme() != nil {
		x.Bytes(m.Gettheme().Encode())
	}
	return x.Buf
}

// CodecDecode:account_installTheme
func (m *TLaccount_installTheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setformat(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m2 := &InputTheme{}
		m2.Decode(dbuf)
		m.Settheme(m2)
	}
	return dbuf.Err
}
func NewTLaccount_setContentSettings() *TLaccount_setContentSettings {
	return &TLaccount_setContentSettings{}
}

// CodecEncode:account_setContentSettings
func (m *TLaccount_setContentSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1250643605)
	var flags uint32 = 0
	if m.Getsensitive_enabled() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_setContentSettings
func (m *TLaccount_setContentSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsensitive_enabled(true)
	}
	return dbuf.Err
}
func NewTLmessages_toggleStickerSets() *TLmessages_toggleStickerSets {
	return &TLmessages_toggleStickerSets{}
}

// CodecEncode:messages_toggleStickerSets
func (m *TLmessages_toggleStickerSets) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1257951254)
	var flags uint32 = 0
	if m.Getuninstall() != false {
		flags |= 1 << 0
	}
	if m.Getarchive() != false {
		flags |= 1 << 1
	}
	if m.Getunarchive() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getstickersets())))
	for _, v := range m.Getstickersets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_toggleStickerSets
func (m *TLmessages_toggleStickerSets) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setuninstall(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setarchive(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setunarchive(true)
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*InputStickerSet, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &InputStickerSet{}
		v3[i].Decode(dbuf)
	}
	m.Setstickersets(v3)
	return dbuf.Err
}
func NewTLmessages_updateDialogFilter() *TLmessages_updateDialogFilter {
	return &TLmessages_updateDialogFilter{}
}

// CodecEncode:messages_updateDialogFilter
func (m *TLmessages_updateDialogFilter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(450142282)
	var flags uint32 = 0
	if m.Getfilter() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfilter() != nil {
		x.Bytes(m.Getfilter().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_updateDialogFilter
func (m *TLmessages_updateDialogFilter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m1 := &DialogFilter{}
		m1.Decode(dbuf)
		m.Setfilter(m1)
	}
	return dbuf.Err
}
func NewTLmessages_updateDialogFiltersOrder() *TLmessages_updateDialogFiltersOrder {
	return &TLmessages_updateDialogFiltersOrder{}
}

// CodecEncode:messages_updateDialogFiltersOrder
func (m *TLmessages_updateDialogFiltersOrder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-983318044)
	x.VectorInt(m.Getorder())
	return x.Buf
}

// CodecDecode:messages_updateDialogFiltersOrder
func (m *TLmessages_updateDialogFiltersOrder) Decode(dbuf *DecodeBuf) error {
	m.Setorder(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLbots_setBotCommands() *TLbots_setBotCommands {
	return &TLbots_setBotCommands{}
}

// CodecEncode:bots_setBotCommands
func (m *TLbots_setBotCommands) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2141370634)
	x.Int(481674261)
	x.Int(int32(len(m.Getcommands())))
	for _, v := range m.Getcommands() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:bots_setBotCommands
func (m *TLbots_setBotCommands) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*BotCommand, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &BotCommand{}
		v0[i].Decode(dbuf)
	}
	m.Setcommands(v0)
	return dbuf.Err
}
func NewTLhelp_hidePromoData() *TLhelp_hidePromoData {
	return &TLhelp_hidePromoData{}
}

// CodecEncode:help_hidePromoData
func (m *TLhelp_hidePromoData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(505748629)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:help_hidePromoData
func (m *TLhelp_hidePromoData) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLphone_sendSignalingData() *TLphone_sendSignalingData {
	return &TLphone_sendSignalingData{}
}

// CodecEncode:phone_sendSignalingData
func (m *TLphone_sendSignalingData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-8744061)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:phone_sendSignalingData
func (m *TLphone_sendSignalingData) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLhelp_dismissSuggestion() *TLhelp_dismissSuggestion {
	return &TLhelp_dismissSuggestion{}
}

// CodecEncode:help_dismissSuggestion
func (m *TLhelp_dismissSuggestion) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(125807007)
	x.String(m.Getsuggestion())
	return x.Buf
}

// CodecDecode:help_dismissSuggestion
func (m *TLhelp_dismissSuggestion) Decode(dbuf *DecodeBuf) error {
	m.Setsuggestion(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_readDiscussion() *TLmessages_readDiscussion {
	return &TLmessages_readDiscussion{}
}

// CodecEncode:messages_readDiscussion
func (m *TLmessages_readDiscussion) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-147740172)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getread_max_id())
	return x.Buf
}

// CodecDecode:messages_readDiscussion
func (m *TLmessages_readDiscussion) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getContentSettings() *TLaccount_getContentSettings {
	return &TLaccount_getContentSettings{}
}

// CodecEncode:account_getContentSettings
func (m *TLaccount_getContentSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1952756306)
	return x.Buf
}

// CodecDecode:account_getContentSettings
func (m *TLaccount_getContentSettings) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_getRecentMeUrls() *TLhelp_getRecentMeUrls {
	return &TLhelp_getRecentMeUrls{}
}

// CodecEncode:help_getRecentMeUrls
func (m *TLhelp_getRecentMeUrls) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1036054804)
	x.String(m.Getreferer())
	return x.Buf
}

// CodecDecode:help_getRecentMeUrls
func (m *TLhelp_getRecentMeUrls) Decode(dbuf *DecodeBuf) error {
	m.Setreferer(dbuf.String())
	return dbuf.Err
}
func NewTLupdates_getDifference() *TLupdates_getDifference {
	return &TLupdates_getDifference{}
}

// CodecEncode:updates_getDifference
func (m *TLupdates_getDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(630429265)
	var flags uint32 = 0
	if m.Getpts_total_limit() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Getpts_total_limit() != 0 {
		x.Int(m.Getpts_total_limit())
	}
	x.Int(m.Getdate())
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updates_getDifference
func (m *TLupdates_getDifference) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setpts(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setpts_total_limit(dbuf.Int())
	}
	m.Setdate(dbuf.Int())
	m.Setqts(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_exportChatInvite() *TLmessages_exportChatInvite {
	return &TLmessages_exportChatInvite{}
}

// CodecEncode:messages_exportChatInvite
func (m *TLmessages_exportChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(234312524)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_exportChatInvite
func (m *TLmessages_exportChatInvite) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLmessages_getDialogFilters() *TLmessages_getDialogFilters {
	return &TLmessages_getDialogFilters{}
}

// CodecEncode:messages_getDialogFilters
func (m *TLmessages_getDialogFilters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-241247891)
	return x.Buf
}

// CodecDecode:messages_getDialogFilters
func (m *TLmessages_getDialogFilters) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_getWebAuthorizations() *TLaccount_getWebAuthorizations {
	return &TLaccount_getWebAuthorizations{}
}

// CodecEncode:account_getWebAuthorizations
func (m *TLaccount_getWebAuthorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(405695855)
	return x.Buf
}

// CodecDecode:account_getWebAuthorizations
func (m *TLaccount_getWebAuthorizations) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_getTermsOfServiceUpdate() *TLhelp_getTermsOfServiceUpdate {
	return &TLhelp_getTermsOfServiceUpdate{}
}

// CodecEncode:help_getTermsOfServiceUpdate
func (m *TLhelp_getTermsOfServiceUpdate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(749019089)
	return x.Buf
}

// CodecDecode:help_getTermsOfServiceUpdate
func (m *TLhelp_getTermsOfServiceUpdate) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLcontacts_importContacts() *TLcontacts_importContacts {
	return &TLcontacts_importContacts{}
}

// CodecEncode:contacts_importContacts
func (m *TLcontacts_importContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(746589157)
	x.Int(481674261)
	x.Int(int32(len(m.Getcontacts())))
	for _, v := range m.Getcontacts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_importContacts
func (m *TLcontacts_importContacts) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputContact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputContact{}
		v0[i].Decode(dbuf)
	}
	m.Setcontacts(v0)
	return dbuf.Err
}
func NewTLaccount_sendVerifyEmailCode() *TLaccount_sendVerifyEmailCode {
	return &TLaccount_sendVerifyEmailCode{}
}

// CodecEncode:account_sendVerifyEmailCode
func (m *TLaccount_sendVerifyEmailCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1880182943)
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:account_sendVerifyEmailCode
func (m *TLaccount_sendVerifyEmailCode) Decode(dbuf *DecodeBuf) error {
	m.Setemail(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_getAdminLog() *TLchannels_getAdminLog {
	return &TLchannels_getAdminLog{}
}

// CodecEncode:channels_getAdminLog
func (m *TLchannels_getAdminLog) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(870184064)
	var flags uint32 = 0
	if m.Getevents_filter() != nil {
		flags |= 1 << 0
	}
	if len(m.Getadmins()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Getq())
	if m.Getevents_filter() != nil {
		x.Bytes(m.Getevents_filter().Encode())
	}
	if len(m.Getadmins()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getadmins())))
		for _, v := range m.Getadmins() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Long(m.Getmax_id())
	x.Long(m.Getmin_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:channels_getAdminLog
func (m *TLchannels_getAdminLog) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setq(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &ChannelAdminLogEventsFilter{}
		m2.Decode(dbuf)
		m.Setevents_filter(m2)
	}
	if (flags & (1 << 1)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]*InputUser, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &InputUser{}
			v3[i].Decode(dbuf)
		}
		m.Setadmins(v3)
	}
	m.Setmax_id(dbuf.Long())
	m.Setmin_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_installStickerSet() *TLmessages_installStickerSet {
	return &TLmessages_installStickerSet{}
}

// CodecEncode:messages_installStickerSet
func (m *TLmessages_installStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-946871200)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getarchived().Encode())
	return x.Buf
}

// CodecDecode:messages_installStickerSet
func (m *TLmessages_installStickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setarchived(m1)
	return dbuf.Err
}
func NewTLmessages_getMessageEditData() *TLmessages_getMessageEditData {
	return &TLmessages_getMessageEditData{}
}

// CodecEncode:messages_getMessageEditData
func (m *TLmessages_getMessageEditData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-39416522)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messages_getMessageEditData
func (m *TLmessages_getMessageEditData) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getAllStickers() *TLmessages_getAllStickers {
	return &TLmessages_getAllStickers{}
}

// CodecEncode:messages_getAllStickers
func (m *TLmessages_getAllStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(479598769)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getAllStickers
func (m *TLmessages_getAllStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getMaskStickers() *TLmessages_getMaskStickers {
	return &TLmessages_getMaskStickers{}
}

// CodecEncode:messages_getMaskStickers
func (m *TLmessages_getMaskStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1706608543)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getMaskStickers
func (m *TLmessages_getMaskStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getOnlines() *TLmessages_getOnlines {
	return &TLmessages_getOnlines{}
}

// CodecEncode:messages_getOnlines
func (m *TLmessages_getOnlines) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1848369232)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_getOnlines
func (m *TLmessages_getOnlines) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLmessages_getGameHighScores() *TLmessages_getGameHighScores {
	return &TLmessages_getGameHighScores{}
}

// CodecEncode:messages_getGameHighScores
func (m *TLmessages_getGameHighScores) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-400399203)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_getGameHighScores
func (m *TLmessages_getGameHighScores) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id(m2)
	return dbuf.Err
}
func NewTLmessages_getInlineGameHighScores() *TLmessages_getInlineGameHighScores {
	return &TLmessages_getInlineGameHighScores{}
}

// CodecEncode:messages_getInlineGameHighScores
func (m *TLmessages_getInlineGameHighScores) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(258170395)
	x.Bytes(m.Getid().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_getInlineGameHighScores
func (m *TLmessages_getInlineGameHighScores) Decode(dbuf *DecodeBuf) error {
	m0 := &InputBotInlineMessageID{}
	m0.Decode(dbuf)
	m.Setid(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}
func NewTLaccount_getThemes() *TLaccount_getThemes {
	return &TLaccount_getThemes{}
}

// CodecEncode:account_getThemes
func (m *TLaccount_getThemes) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(676939512)
	x.String(m.Getformat())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:account_getThemes
func (m *TLaccount_getThemes) Decode(dbuf *DecodeBuf) error {
	m.Setformat(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLupdates_getState() *TLupdates_getState {
	return &TLupdates_getState{}
}

// CodecEncode:updates_getState
func (m *TLupdates_getState) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-304838614)
	return x.Buf
}

// CodecDecode:updates_getState
func (m *TLupdates_getState) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getWebPagePreview() *TLmessages_getWebPagePreview {
	return &TLmessages_getWebPagePreview{}
}

// CodecEncode:messages_getWebPagePreview
func (m *TLmessages_getWebPagePreview) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1956073268)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:messages_getWebPagePreview
func (m *TLmessages_getWebPagePreview) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	return dbuf.Err
}
func NewTLmessages_uploadMedia() *TLmessages_uploadMedia {
	return &TLmessages_uploadMedia{}
}

// CodecEncode:messages_uploadMedia
func (m *TLmessages_uploadMedia) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1369162417)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getmedia().Encode())
	return x.Buf
}

// CodecDecode:messages_uploadMedia
func (m *TLmessages_uploadMedia) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputMedia{}
	m1.Decode(dbuf)
	m.Setmedia(m1)
	return dbuf.Err
}
func NewTLmessages_checkChatInvite() *TLmessages_checkChatInvite {
	return &TLmessages_checkChatInvite{}
}

// CodecEncode:messages_checkChatInvite
func (m *TLmessages_checkChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1051570619)
	x.String(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_checkChatInvite
func (m *TLmessages_checkChatInvite) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_getWebPage() *TLmessages_getWebPage {
	return &TLmessages_getWebPage{}
}

// CodecEncode:messages_getWebPage
func (m *TLmessages_getWebPage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(852135825)
	x.String(m.Geturl())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getWebPage
func (m *TLmessages_getWebPage) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getAllSecureValues() *TLaccount_getAllSecureValues {
	return &TLaccount_getAllSecureValues{}
}

// CodecEncode:account_getAllSecureValues
func (m *TLaccount_getAllSecureValues) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1299661699)
	return x.Buf
}

// CodecDecode:account_getAllSecureValues
func (m *TLaccount_getAllSecureValues) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_getSecureValue() *TLaccount_getSecureValue {
	return &TLaccount_getSecureValue{}
}

// CodecEncode:account_getSecureValue
func (m *TLaccount_getSecureValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1936088002)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_getSecureValue
func (m *TLaccount_getSecureValue) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}
func NewTLaccount_saveSecureValue() *TLaccount_saveSecureValue {
	return &TLaccount_saveSecureValue{}
}

// CodecEncode:account_saveSecureValue
func (m *TLaccount_saveSecureValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1986010339)
	x.Bytes(m.Getvalue().Encode())
	x.Long(m.Getsecure_secret_id())
	return x.Buf
}

// CodecDecode:account_saveSecureValue
func (m *TLaccount_saveSecureValue) Decode(dbuf *DecodeBuf) error {
	m0 := &InputSecureValue{}
	m0.Decode(dbuf)
	m.Setvalue(m0)
	m.Setsecure_secret_id(dbuf.Long())
	return dbuf.Err
}
func NewTLlangpack_getStrings() *TLlangpack_getStrings {
	return &TLlangpack_getStrings{}
}

// CodecEncode:langpack_getStrings
func (m *TLlangpack_getStrings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-269862909)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	x.VectorString(m.Getkeys())
	return x.Buf
}

// CodecDecode:langpack_getStrings
func (m *TLlangpack_getStrings) Decode(dbuf *DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	m.Setkeys(dbuf.VectorString())
	return dbuf.Err
}
func NewTLhelp_getDeepLinkInfo() *TLhelp_getDeepLinkInfo {
	return &TLhelp_getDeepLinkInfo{}
}

// CodecEncode:help_getDeepLinkInfo
func (m *TLhelp_getDeepLinkInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1072547679)
	x.String(m.Getpath())
	return x.Buf
}

// CodecDecode:help_getDeepLinkInfo
func (m *TLhelp_getDeepLinkInfo) Decode(dbuf *DecodeBuf) error {
	m.Setpath(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_sendEncrypted() *TLmessages_sendEncrypted {
	return &TLmessages_sendEncrypted{}
}

// CodecEncode:messages_sendEncrypted
func (m *TLmessages_sendEncrypted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1157265941)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:messages_sendEncrypted
func (m *TLmessages_sendEncrypted) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	m1 := &InputEncryptedChat{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLmessages_sendEncryptedFile() *TLmessages_sendEncryptedFile {
	return &TLmessages_sendEncryptedFile{}
}

// CodecEncode:messages_sendEncryptedFile
func (m *TLmessages_sendEncryptedFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1431914525)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_sendEncryptedFile
func (m *TLmessages_sendEncryptedFile) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	m1 := &InputEncryptedChat{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	m4 := &InputEncryptedFile{}
	m4.Decode(dbuf)
	m.Setfile(m4)
	return dbuf.Err
}
func NewTLmessages_sendEncryptedService() *TLmessages_sendEncryptedService {
	return &TLmessages_sendEncryptedService{}
}

// CodecEncode:messages_sendEncryptedService
func (m *TLmessages_sendEncryptedService) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(852769188)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:messages_sendEncryptedService
func (m *TLmessages_sendEncryptedService) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setrandom_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLaccount_getMultiWallPapers() *TLaccount_getMultiWallPapers {
	return &TLaccount_getMultiWallPapers{}
}

// CodecEncode:account_getMultiWallPapers
func (m *TLaccount_getMultiWallPapers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1705865692)
	x.Int(481674261)
	x.Int(int32(len(m.Getwallpapers())))
	for _, v := range m.Getwallpapers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_getMultiWallPapers
func (m *TLaccount_getMultiWallPapers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputWallPaper, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputWallPaper{}
		v0[i].Decode(dbuf)
	}
	m.Setwallpapers(v0)
	return dbuf.Err
}
func NewTLaccount_getWallPaper() *TLaccount_getWallPaper {
	return &TLaccount_getWallPaper{}
}

// CodecEncode:account_getWallPaper
func (m *TLaccount_getWallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-57811990)
	x.Bytes(m.Getwallpaper().Encode())
	return x.Buf
}

// CodecDecode:account_getWallPaper
func (m *TLaccount_getWallPaper) Decode(dbuf *DecodeBuf) error {
	m0 := &InputWallPaper{}
	m0.Decode(dbuf)
	m.Setwallpaper(m0)
	return dbuf.Err
}
func NewTLaccount_uploadWallPaper() *TLaccount_uploadWallPaper {
	return &TLaccount_uploadWallPaper{}
}

// CodecEncode:account_uploadWallPaper
func (m *TLaccount_uploadWallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-578472351)
	x.Bytes(m.Getfile().Encode())
	x.String(m.Getmime_type())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_uploadWallPaper
func (m *TLaccount_uploadWallPaper) Decode(dbuf *DecodeBuf) error {
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	m.Setmime_type(dbuf.String())
	m2 := &WallPaperSettings{}
	m2.Decode(dbuf)
	m.Setsettings(m2)
	return dbuf.Err
}
func NewTLmessages_getPollVotes() *TLmessages_getPollVotes {
	return &TLmessages_getPollVotes{}
}

// CodecEncode:messages_getPollVotes
func (m *TLmessages_getPollVotes) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1200736242)
	var flags uint32 = 0
	if m.Getoption() != nil {
		flags |= 1 << 0
	}
	if m.Getoffset() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	if m.Getoption() != nil {
		x.Bytes(m.Getoption())
	}
	if m.Getoffset() != "" {
		x.String(m.Getoffset())
	}
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getPollVotes
func (m *TLmessages_getPollVotes) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setoption(dbuf.StringBytes())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setoffset(dbuf.String())
	}
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getDiscussionMessage() *TLmessages_getDiscussionMessage {
	return &TLmessages_getDiscussionMessage{}
}

// CodecEncode:messages_getDiscussionMessage
func (m *TLmessages_getDiscussionMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1147761405)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:messages_getDiscussionMessage
func (m *TLmessages_getDiscussionMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getWallPapers() *TLaccount_getWallPapers {
	return &TLaccount_getWallPapers{}
}

// CodecEncode:account_getWallPapers
func (m *TLaccount_getWallPapers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1430579357)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:account_getWallPapers
func (m *TLaccount_getWallPapers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getRecentStickers() *TLmessages_getRecentStickers {
	return &TLmessages_getRecentStickers{}
}

// CodecEncode:messages_getRecentStickers
func (m *TLmessages_getRecentStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1587647177)
	var flags uint32 = 0
	if m.Getattached() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getRecentStickers
func (m *TLmessages_getRecentStickers) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setattached(true)
	}
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_getParticipants() *TLchannels_getParticipants {
	return &TLchannels_getParticipants{}
}

// CodecEncode:channels_getParticipants
func (m *TLchannels_getParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(306054633)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:channels_getParticipants
func (m *TLchannels_getParticipants) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &ChannelParticipantsFilter{}
	m1.Decode(dbuf)
	m.Setfilter(m1)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getUserInfo() *TLhelp_getUserInfo {
	return &TLhelp_getUserInfo{}
}

// CodecEncode:help_getUserInfo
func (m *TLhelp_getUserInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(59377875)
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:help_getUserInfo
func (m *TLhelp_getUserInfo) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	return dbuf.Err
}
func NewTLhelp_editUserInfo() *TLhelp_editUserInfo {
	return &TLhelp_editUserInfo{}
}

// CodecEncode:help_editUserInfo
func (m *TLhelp_editUserInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1723407216)
	x.Bytes(m.Getuser_id().Encode())
	x.String(m.Getmessage())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_editUserInfo
func (m *TLhelp_editUserInfo) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setmessage(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*MessageEntity, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &MessageEntity{}
		v2[i].Decode(dbuf)
	}
	m.Setentities(v2)
	return dbuf.Err
}
func NewTLcontacts_getStatuses() *TLcontacts_getStatuses {
	return &TLcontacts_getStatuses{}
}

// CodecEncode:contacts_getStatuses
func (m *TLcontacts_getStatuses) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-995929106)
	return x.Buf
}

// CodecDecode:contacts_getStatuses
func (m *TLcontacts_getStatuses) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_receivedMessages() *TLmessages_receivedMessages {
	return &TLmessages_receivedMessages{}
}

// CodecEncode:messages_receivedMessages
func (m *TLmessages_receivedMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(94983360)
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_receivedMessages
func (m *TLmessages_receivedMessages) Decode(dbuf *DecodeBuf) error {
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}
func NewTLupload_getCdnFile() *TLupload_getCdnFile {
	return &TLupload_getCdnFile{}
}

// CodecEncode:upload_getCdnFile
func (m *TLupload_getCdnFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(536919235)
	x.Bytes(m.Getfile_token())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getCdnFile
func (m *TLupload_getCdnFile) Decode(dbuf *DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_readHistory() *TLmessages_readHistory {
	return &TLmessages_readHistory{}
}

// CodecEncode:messages_readHistory
func (m *TLmessages_readHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(238054714)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_readHistory
func (m *TLmessages_readHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_deleteMessages() *TLmessages_deleteMessages {
	return &TLmessages_deleteMessages{}
}

// CodecEncode:messages_deleteMessages
func (m *TLmessages_deleteMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-443640366)
	var flags uint32 = 0
	if m.Getrevoke() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_deleteMessages
func (m *TLmessages_deleteMessages) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrevoke(true)
	}
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLmessages_readMessageContents() *TLmessages_readMessageContents {
	return &TLmessages_readMessageContents{}
}

// CodecEncode:messages_readMessageContents
func (m *TLmessages_readMessageContents) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(916930423)
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_readMessageContents
func (m *TLmessages_readMessageContents) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLchannels_deleteMessages() *TLchannels_deleteMessages {
	return &TLchannels_deleteMessages{}
}

// CodecEncode:channels_deleteMessages
func (m *TLchannels_deleteMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2067661490)
	x.Bytes(m.Getchannel().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:channels_deleteMessages
func (m *TLchannels_deleteMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLauth_exportLoginToken() *TLauth_exportLoginToken {
	return &TLauth_exportLoginToken{}
}

// CodecEncode:auth_exportLoginToken
func (m *TLauth_exportLoginToken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1313598185)
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.VectorInt(m.Getexcept_ids())
	return x.Buf
}

// CodecDecode:auth_exportLoginToken
func (m *TLauth_exportLoginToken) Decode(dbuf *DecodeBuf) error {
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m.Setexcept_ids(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLauth_importLoginToken() *TLauth_importLoginToken {
	return &TLauth_importLoginToken{}
}

// CodecEncode:auth_importLoginToken
func (m *TLauth_importLoginToken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1783866140)
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_importLoginToken
func (m *TLauth_importLoginToken) Decode(dbuf *DecodeBuf) error {
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLlangpack_getLangPack() *TLlangpack_getLangPack {
	return &TLlangpack_getLangPack{}
}

// CodecEncode:langpack_getLangPack
func (m *TLlangpack_getLangPack) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-219008246)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:langpack_getLangPack
func (m *TLlangpack_getLangPack) Decode(dbuf *DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}
func NewTLlangpack_getDifference() *TLlangpack_getDifference {
	return &TLlangpack_getDifference{}
}

// CodecEncode:langpack_getDifference
func (m *TLlangpack_getDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-845657435)
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	return x.Buf
}

// CodecDecode:langpack_getDifference
func (m *TLlangpack_getDifference) Decode(dbuf *DecodeBuf) error {
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	return dbuf.Err
}
func NewTLphotos_updateProfilePhoto() *TLphotos_updateProfilePhoto {
	return &TLphotos_updateProfilePhoto{}
}

// CodecEncode:photos_updateProfilePhoto
func (m *TLphotos_updateProfilePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1926525996)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:photos_updateProfilePhoto
func (m *TLphotos_updateProfilePhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLphotos_uploadProfilePhoto() *TLphotos_uploadProfilePhoto {
	return &TLphotos_uploadProfilePhoto{}
}

// CodecEncode:photos_uploadProfilePhoto
func (m *TLphotos_uploadProfilePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1980559511)
	var flags uint32 = 0
	if m.Getfile() != nil {
		flags |= 1 << 0
	}
	if m.Getvideo() != nil {
		flags |= 1 << 1
	}
	if m.Getvideo_start_ts() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getfile() != nil {
		x.Bytes(m.Getfile().Encode())
	}
	if m.Getvideo() != nil {
		x.Bytes(m.Getvideo().Encode())
	}
	if m.Getvideo_start_ts() != 0 {
		x.Double(m.Getvideo_start_ts())
	}
	return x.Buf
}

// CodecDecode:photos_uploadProfilePhoto
func (m *TLphotos_uploadProfilePhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &InputFile{}
		m0.Decode(dbuf)
		m.Setfile(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setvideo(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}
func NewTLpayments_getPaymentForm() *TLpayments_getPaymentForm {
	return &TLpayments_getPaymentForm{}
}

// CodecEncode:payments_getPaymentForm
func (m *TLpayments_getPaymentForm) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1712285883)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:payments_getPaymentForm
func (m *TLpayments_getPaymentForm) Decode(dbuf *DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getStickerSet() *TLmessages_getStickerSet {
	return &TLmessages_getStickerSet{}
}

// CodecEncode:messages_getStickerSet
func (m *TLmessages_getStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(639215886)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:messages_getStickerSet
func (m *TLmessages_getStickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}
func NewTLstickers_createStickerSet() *TLstickers_createStickerSet {
	return &TLstickers_createStickerSet{}
}

// CodecEncode:stickers_createStickerSet
func (m *TLstickers_createStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-251435136)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 1 << 0
	}
	if m.Getanimated() != false {
		flags |= 1 << 1
	}
	if m.Getthumb() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getuser_id().Encode())
	x.String(m.Gettitle())
	x.String(m.Getshort_name())
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stickers_createStickerSet
func (m *TLstickers_createStickerSet) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setanimated(true)
	}
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id(m2)
	m.Settitle(dbuf.String())
	m.Setshort_name(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m5 := &InputDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*InputStickerSetItem, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &InputStickerSetItem{}
		v6[i].Decode(dbuf)
	}
	m.Setstickers(v6)
	return dbuf.Err
}
func NewTLstickers_removeStickerFromSet() *TLstickers_removeStickerFromSet {
	return &TLstickers_removeStickerFromSet{}
}

// CodecEncode:stickers_removeStickerFromSet
func (m *TLstickers_removeStickerFromSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-143257775)
	x.Bytes(m.Getsticker().Encode())
	return x.Buf
}

// CodecDecode:stickers_removeStickerFromSet
func (m *TLstickers_removeStickerFromSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setsticker(m0)
	return dbuf.Err
}
func NewTLstickers_changeStickerPosition() *TLstickers_changeStickerPosition {
	return &TLstickers_changeStickerPosition{}
}

// CodecEncode:stickers_changeStickerPosition
func (m *TLstickers_changeStickerPosition) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-4795190)
	x.Bytes(m.Getsticker().Encode())
	x.Int(m.Getposition())
	return x.Buf
}

// CodecDecode:stickers_changeStickerPosition
func (m *TLstickers_changeStickerPosition) Decode(dbuf *DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setsticker(m0)
	m.Setposition(dbuf.Int())
	return dbuf.Err
}
func NewTLstickers_addStickerToSet() *TLstickers_addStickerToSet {
	return &TLstickers_addStickerToSet{}
}

// CodecEncode:stickers_addStickerToSet
func (m *TLstickers_addStickerToSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2041315650)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getsticker().Encode())
	return x.Buf
}

// CodecDecode:stickers_addStickerToSet
func (m *TLstickers_addStickerToSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &InputStickerSetItem{}
	m1.Decode(dbuf)
	m.Setsticker(m1)
	return dbuf.Err
}
func NewTLstickers_setStickerSetThumb() *TLstickers_setStickerSetThumb {
	return &TLstickers_setStickerSetThumb{}
}

// CodecEncode:stickers_setStickerSetThumb
func (m *TLstickers_setStickerSetThumb) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1707717072)
	x.Bytes(m.Getstickerset().Encode())
	x.Bytes(m.Getthumb().Encode())
	return x.Buf
}

// CodecDecode:stickers_setStickerSetThumb
func (m *TLstickers_setStickerSetThumb) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m1 := &InputDocument{}
	m1.Decode(dbuf)
	m.Setthumb(m1)
	return dbuf.Err
}
func NewTLaccount_getPrivacy() *TLaccount_getPrivacy {
	return &TLaccount_getPrivacy{}
}

// CodecEncode:account_getPrivacy
func (m *TLaccount_getPrivacy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-623130288)
	x.Bytes(m.Getkey().Encode())
	return x.Buf
}

// CodecDecode:account_getPrivacy
func (m *TLaccount_getPrivacy) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey(m0)
	return dbuf.Err
}
func NewTLaccount_setPrivacy() *TLaccount_setPrivacy {
	return &TLaccount_setPrivacy{}
}

// CodecEncode:account_setPrivacy
func (m *TLaccount_setPrivacy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-906486552)
	x.Bytes(m.Getkey().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_setPrivacy
func (m *TLaccount_setPrivacy) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*InputPrivacyRule, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &InputPrivacyRule{}
		v1[i].Decode(dbuf)
	}
	m.Setrules(v1)
	return dbuf.Err
}
func NewTLmessages_getSearchCounters() *TLmessages_getSearchCounters {
	return &TLmessages_getSearchCounters{}
}

// CodecEncode:messages_getSearchCounters
func (m *TLmessages_getSearchCounters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1932455680)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfilters())))
	for _, v := range m.Getfilters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getSearchCounters
func (m *TLmessages_getSearchCounters) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*MessagesFilter, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &MessagesFilter{}
		v1[i].Decode(dbuf)
	}
	m.Setfilters(v1)
	return dbuf.Err
}
func NewTLmessages_getFavedStickers() *TLmessages_getFavedStickers {
	return &TLmessages_getFavedStickers{}
}

// CodecEncode:messages_getFavedStickers
func (m *TLmessages_getFavedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(567151374)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getFavedStickers
func (m *TLmessages_getFavedStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLauth_requestPasswordRecovery() *TLauth_requestPasswordRecovery {
	return &TLauth_requestPasswordRecovery{}
}

// CodecEncode:auth_requestPasswordRecovery
func (m *TLauth_requestPasswordRecovery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-661144474)
	return x.Buf
}

// CodecDecode:auth_requestPasswordRecovery
func (m *TLauth_requestPasswordRecovery) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getSuggestedDialogFilters() *TLmessages_getSuggestedDialogFilters {
	return &TLmessages_getSuggestedDialogFilters{}
}

// CodecEncode:messages_getSuggestedDialogFilters
func (m *TLmessages_getSuggestedDialogFilters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1566780372)
	return x.Buf
}

// CodecDecode:messages_getSuggestedDialogFilters
func (m *TLmessages_getSuggestedDialogFilters) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getDocumentByHash() *TLmessages_getDocumentByHash {
	return &TLmessages_getDocumentByHash{}
}

// CodecEncode:messages_getDocumentByHash
func (m *TLmessages_getDocumentByHash) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(864953444)
	x.Bytes(m.Getsha256())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	return x.Buf
}

// CodecDecode:messages_getDocumentByHash
func (m *TLmessages_getDocumentByHash) Decode(dbuf *DecodeBuf) error {
	m.Setsha256(dbuf.StringBytes())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_uploadTheme() *TLaccount_uploadTheme {
	return &TLaccount_uploadTheme{}
}

// CodecEncode:account_uploadTheme
func (m *TLaccount_uploadTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(473805619)
	var flags uint32 = 0
	if m.Getthumb() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	x.String(m.Getfile_name())
	x.String(m.Getmime_type())
	return x.Buf
}

// CodecDecode:account_uploadTheme
func (m *TLaccount_uploadTheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	if (flags & (1 << 0)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setthumb(m1)
	}
	m.Setfile_name(dbuf.String())
	m.Setmime_type(dbuf.String())
	return dbuf.Err
}
func NewTLhelp_getConfig() *TLhelp_getConfig {
	return &TLhelp_getConfig{}
}

// CodecEncode:help_getConfig
func (m *TLhelp_getConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-990308245)
	return x.Buf
}

// CodecDecode:help_getConfig
func (m *TLhelp_getConfig) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLphotos_deletePhotos() *TLphotos_deletePhotos {
	return &TLphotos_deletePhotos{}
}

// CodecEncode:photos_deletePhotos
func (m *TLphotos_deletePhotos) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2016444625)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_deletePhotos
func (m *TLphotos_deletePhotos) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputPhoto, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputPhoto{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}
func NewTLmessages_receivedQueue() *TLmessages_receivedQueue {
	return &TLmessages_receivedQueue{}
}

// CodecEncode:messages_receivedQueue
func (m *TLmessages_receivedQueue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1436924774)
	x.Int(m.Getmax_qts())
	return x.Buf
}

// CodecDecode:messages_receivedQueue
func (m *TLmessages_receivedQueue) Decode(dbuf *DecodeBuf) error {
	m.Setmax_qts(dbuf.Int())
	return dbuf.Err
}
func NewTLupload_reuploadCdnFile() *TLupload_reuploadCdnFile {
	return &TLupload_reuploadCdnFile{}
}

// CodecEncode:upload_reuploadCdnFile
func (m *TLupload_reuploadCdnFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1691921240)
	x.Bytes(m.Getfile_token())
	x.Bytes(m.Getrequest_token())
	return x.Buf
}

// CodecDecode:upload_reuploadCdnFile
func (m *TLupload_reuploadCdnFile) Decode(dbuf *DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setrequest_token(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLupload_getCdnFileHashes() *TLupload_getCdnFileHashes {
	return &TLupload_getCdnFileHashes{}
}

// CodecEncode:upload_getCdnFileHashes
func (m *TLupload_getCdnFileHashes) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1302676017)
	x.Bytes(m.Getfile_token())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:upload_getCdnFileHashes
func (m *TLupload_getCdnFileHashes) Decode(dbuf *DecodeBuf) error {
	m.Setfile_token(dbuf.StringBytes())
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}
func NewTLupload_getFileHashes() *TLupload_getFileHashes {
	return &TLupload_getFileHashes{}
}

// CodecEncode:upload_getFileHashes
func (m *TLupload_getFileHashes) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-956147407)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:upload_getFileHashes
func (m *TLupload_getFileHashes) Decode(dbuf *DecodeBuf) error {
	m0 := &InputFileLocation{}
	m0.Decode(dbuf)
	m.Setlocation(m0)
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}
func NewTLhelp_getNearestDc() *TLhelp_getNearestDc {
	return &TLhelp_getNearestDc{}
}

// CodecEncode:help_getNearestDc
func (m *TLhelp_getNearestDc) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(531836966)
	return x.Buf
}

// CodecDecode:help_getNearestDc
func (m *TLhelp_getNearestDc) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getDialogUnreadMarks() *TLmessages_getDialogUnreadMarks {
	return &TLmessages_getDialogUnreadMarks{}
}

// CodecEncode:messages_getDialogUnreadMarks
func (m *TLmessages_getDialogUnreadMarks) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(585256482)
	return x.Buf
}

// CodecDecode:messages_getDialogUnreadMarks
func (m *TLmessages_getDialogUnreadMarks) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_getChats() *TLmessages_getChats {
	return &TLmessages_getChats{}
}

// CodecEncode:messages_getChats
func (m *TLmessages_getChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1013621127)
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_getChats
func (m *TLmessages_getChats) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLchannels_getChannels() *TLchannels_getChannels {
	return &TLchannels_getChannels{}
}

// CodecEncode:channels_getChannels
func (m *TLchannels_getChannels) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(176122811)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_getChannels
func (m *TLchannels_getChannels) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputChannel, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputChannel{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}
func NewTLchannels_getAdminedPublicChannels() *TLchannels_getAdminedPublicChannels {
	return &TLchannels_getAdminedPublicChannels{}
}

// CodecEncode:channels_getAdminedPublicChannels
func (m *TLchannels_getAdminedPublicChannels) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-122669393)
	var flags uint32 = 0
	if m.Getby_location() != false {
		flags |= 1 << 0
	}
	if m.Getcheck_limit() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:channels_getAdminedPublicChannels
func (m *TLchannels_getAdminedPublicChannels) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setby_location(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcheck_limit(true)
	}
	return dbuf.Err
}
func NewTLmessages_getCommonChats() *TLmessages_getCommonChats {
	return &TLmessages_getCommonChats{}
}

// CodecEncode:messages_getCommonChats
func (m *TLmessages_getCommonChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(218777796)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getCommonChats
func (m *TLmessages_getCommonChats) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setmax_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getAllChats() *TLmessages_getAllChats {
	return &TLmessages_getAllChats{}
}

// CodecEncode:messages_getAllChats
func (m *TLmessages_getAllChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-341307408)
	x.VectorInt(m.Getexcept_ids())
	return x.Buf
}

// CodecDecode:messages_getAllChats
func (m *TLmessages_getAllChats) Decode(dbuf *DecodeBuf) error {
	m.Setexcept_ids(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLchannels_getLeftChannels() *TLchannels_getLeftChannels {
	return &TLchannels_getLeftChannels{}
}

// CodecEncode:channels_getLeftChannels
func (m *TLchannels_getLeftChannels) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2092831552)
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:channels_getLeftChannels
func (m *TLchannels_getLeftChannels) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_getGroupsForDiscussion() *TLchannels_getGroupsForDiscussion {
	return &TLchannels_getGroupsForDiscussion{}
}

// CodecEncode:channels_getGroupsForDiscussion
func (m *TLchannels_getGroupsForDiscussion) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-170208392)
	return x.Buf
}

// CodecDecode:channels_getGroupsForDiscussion
func (m *TLchannels_getGroupsForDiscussion) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_requestUrlAuth() *TLmessages_requestUrlAuth {
	return &TLmessages_requestUrlAuth{}
}

// CodecEncode:messages_requestUrlAuth
func (m *TLmessages_requestUrlAuth) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-482388461)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:messages_requestUrlAuth
func (m *TLmessages_requestUrlAuth) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_acceptUrlAuth() *TLmessages_acceptUrlAuth {
	return &TLmessages_acceptUrlAuth{}
}

// CodecEncode:messages_acceptUrlAuth
func (m *TLmessages_acceptUrlAuth) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-148247912)
	var flags uint32 = 0
	if m.Getwrite_allowed() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:messages_acceptUrlAuth
func (m *TLmessages_acceptUrlAuth) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setwrite_allowed(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setmsg_id(dbuf.Int())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getPasswordSettings() *TLaccount_getPasswordSettings {
	return &TLaccount_getPasswordSettings{}
}

// CodecEncode:account_getPasswordSettings
func (m *TLaccount_getPasswordSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1663767815)
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:account_getPasswordSettings
func (m *TLaccount_getPasswordSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	return dbuf.Err
}
func NewTLstats_getMegagroupStats() *TLstats_getMegagroupStats {
	return &TLstats_getMegagroupStats{}
}

// CodecEncode:stats_getMegagroupStats
func (m *TLstats_getMegagroupStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-589330937)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:stats_getMegagroupStats
func (m *TLstats_getMegagroupStats) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	return dbuf.Err
}
func NewTLcontacts_resolveUsername() *TLcontacts_resolveUsername {
	return &TLcontacts_resolveUsername{}
}

// CodecEncode:contacts_resolveUsername
func (m *TLcontacts_resolveUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-113456221)
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:contacts_resolveUsername
func (m *TLcontacts_resolveUsername) Decode(dbuf *DecodeBuf) error {
	m.Setusername(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_getFeaturedStickers() *TLmessages_getFeaturedStickers {
	return &TLmessages_getFeaturedStickers{}
}

// CodecEncode:messages_getFeaturedStickers
func (m *TLmessages_getFeaturedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(766298703)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getFeaturedStickers
func (m *TLmessages_getFeaturedStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getOldFeaturedStickers() *TLmessages_getOldFeaturedStickers {
	return &TLmessages_getOldFeaturedStickers{}
}

// CodecEncode:messages_getOldFeaturedStickers
func (m *TLmessages_getOldFeaturedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1608974939)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getOldFeaturedStickers
func (m *TLmessages_getOldFeaturedStickers) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getArchivedStickers() *TLmessages_getArchivedStickers {
	return &TLmessages_getArchivedStickers{}
}

// CodecEncode:messages_getArchivedStickers
func (m *TLmessages_getArchivedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1475442322)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_getArchivedStickers
func (m *TLmessages_getArchivedStickers) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setoffset_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLbots_sendCustomRequest() *TLbots_sendCustomRequest {
	return &TLbots_sendCustomRequest{}
}

// CodecEncode:bots_sendCustomRequest
func (m *TLbots_sendCustomRequest) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1440257555)
	x.String(m.Getcustom_method())
	x.Bytes(m.Getparams().Encode())
	return x.Buf
}

// CodecDecode:bots_sendCustomRequest
func (m *TLbots_sendCustomRequest) Decode(dbuf *DecodeBuf) error {
	m.Setcustom_method(dbuf.String())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setparams(m1)
	return dbuf.Err
}
func NewTLphone_getCallConfig() *TLphone_getCallConfig {
	return &TLphone_getCallConfig{}
}

// CodecEncode:phone_getCallConfig
func (m *TLphone_getCallConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1430593449)
	return x.Buf
}

// CodecDecode:phone_getCallConfig
func (m *TLphone_getCallConfig) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_requestEncryption() *TLmessages_requestEncryption {
	return &TLmessages_requestEncryption{}
}

// CodecEncode:messages_requestEncryption
func (m *TLmessages_requestEncryption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-162681021)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getrandom_id())
	x.Bytes(m.Getg_a())
	return x.Buf
}

// CodecDecode:messages_requestEncryption
func (m *TLmessages_requestEncryption) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setrandom_id(dbuf.Int())
	m.Setg_a(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLmessages_acceptEncryption() *TLmessages_acceptEncryption {
	return &TLmessages_acceptEncryption{}
}

// CodecEncode:messages_acceptEncryption
func (m *TLmessages_acceptEncryption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1035731989)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_b())
	x.Long(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:messages_acceptEncryption
func (m *TLmessages_acceptEncryption) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	return dbuf.Err
}
func NewTLmessages_getEmojiKeywordsLanguages() *TLmessages_getEmojiKeywordsLanguages {
	return &TLmessages_getEmojiKeywordsLanguages{}
}

// CodecEncode:messages_getEmojiKeywordsLanguages
func (m *TLmessages_getEmojiKeywordsLanguages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1318675378)
	x.VectorString(m.Getlang_codes())
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywordsLanguages
func (m *TLmessages_getEmojiKeywordsLanguages) Decode(dbuf *DecodeBuf) error {
	m.Setlang_codes(dbuf.VectorString())
	return dbuf.Err
}
func NewTLaccount_getAccountTTL() *TLaccount_getAccountTTL {
	return &TLaccount_getAccountTTL{}
}

// CodecEncode:account_getAccountTTL
func (m *TLaccount_getAccountTTL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(150761757)
	return x.Buf
}

// CodecDecode:account_getAccountTTL
func (m *TLaccount_getAccountTTL) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_getPromoData() *TLhelp_getPromoData {
	return &TLhelp_getPromoData{}
}

// CodecEncode:help_getPromoData
func (m *TLhelp_getPromoData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1063816159)
	return x.Buf
}

// CodecDecode:help_getPromoData
func (m *TLhelp_getPromoData) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLcontacts_getContactIDs() *TLcontacts_getContactIDs {
	return &TLcontacts_getContactIDs{}
}

// CodecEncode:contacts_getContactIDs
func (m *TLcontacts_getContactIDs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(749357634)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getContactIDs
func (m *TLcontacts_getContactIDs) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getMessagesViews() *TLmessages_getMessagesViews {
	return &TLmessages_getMessagesViews{}
}

// CodecEncode:messages_getMessagesViews
func (m *TLmessages_getMessagesViews) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1468322785)
	x.Bytes(m.Getpeer().Encode())
	x.VectorInt(m.Getid())
	x.Bytes(m.Getincrement().Encode())
	return x.Buf
}

// CodecDecode:messages_getMessagesViews
func (m *TLmessages_getMessagesViews) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setincrement(m2)
	return dbuf.Err
}
func NewTLaccount_getGlobalPrivacySettings() *TLaccount_getGlobalPrivacySettings {
	return &TLaccount_getGlobalPrivacySettings{}
}

// CodecEncode:account_getGlobalPrivacySettings
func (m *TLaccount_getGlobalPrivacySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-349483786)
	return x.Buf
}

// CodecDecode:account_getGlobalPrivacySettings
func (m *TLaccount_getGlobalPrivacySettings) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_setGlobalPrivacySettings() *TLaccount_setGlobalPrivacySettings {
	return &TLaccount_setGlobalPrivacySettings{}
}

// CodecEncode:account_setGlobalPrivacySettings
func (m *TLaccount_setGlobalPrivacySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(517647042)
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_setGlobalPrivacySettings
func (m *TLaccount_setGlobalPrivacySettings) Decode(dbuf *DecodeBuf) error {
	m0 := &GlobalPrivacySettings{}
	m0.Decode(dbuf)
	m.Setsettings(m0)
	return dbuf.Err
}
func NewTLmessages_uploadEncryptedFile() *TLmessages_uploadEncryptedFile {
	return &TLmessages_uploadEncryptedFile{}
}

// CodecEncode:messages_uploadEncryptedFile
func (m *TLmessages_uploadEncryptedFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1347929239)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_uploadEncryptedFile
func (m *TLmessages_uploadEncryptedFile) Decode(dbuf *DecodeBuf) error {
	m0 := &InputEncryptedChat{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &InputEncryptedFile{}
	m1.Decode(dbuf)
	m.Setfile(m1)
	return dbuf.Err
}
func NewTLcontacts_getBlocked() *TLcontacts_getBlocked {
	return &TLcontacts_getBlocked{}
}

// CodecEncode:contacts_getBlocked
func (m *TLcontacts_getBlocked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-176409329)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:contacts_getBlocked
func (m *TLcontacts_getBlocked) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLphotos_getUserPhotos() *TLphotos_getUserPhotos {
	return &TLphotos_getUserPhotos{}
}

// CodecEncode:photos_getUserPhotos
func (m *TLphotos_getUserPhotos) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1848823128)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getoffset())
	x.Long(m.Getmax_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:photos_getUserPhotos
func (m *TLphotos_getUserPhotos) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setuser_id(m0)
	m.Setoffset(dbuf.Int())
	m.Setmax_id(dbuf.Long())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLpayments_sendPaymentForm() *TLpayments_sendPaymentForm {
	return &TLpayments_sendPaymentForm{}
}

// CodecEncode:payments_sendPaymentForm
func (m *TLpayments_sendPaymentForm) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(730364339)
	var flags uint32 = 0
	if m.Getrequested_info_id() != "" {
		flags |= 1 << 0
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	if m.Getrequested_info_id() != "" {
		x.String(m.Getrequested_info_id())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:payments_sendPaymentForm
func (m *TLpayments_sendPaymentForm) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmsg_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setrequested_info_id(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m3 := &InputPaymentCredentials{}
	m3.Decode(dbuf)
	m.Setcredentials(m3)
	return dbuf.Err
}
func NewTLchannels_getParticipant() *TLchannels_getParticipant {
	return &TLchannels_getParticipant{}
}

// CodecEncode:channels_getParticipant
func (m *TLchannels_getParticipant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1416484774)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:channels_getParticipant
func (m *TLchannels_getParticipant) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}
func NewTLmessages_getDhConfig() *TLmessages_getDhConfig {
	return &TLmessages_getDhConfig{}
}

// CodecEncode:messages_getDhConfig
func (m *TLmessages_getDhConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(651135312)
	x.Int(m.Getversion())
	x.Int(m.Getrandom_length())
	return x.Buf
}

// CodecDecode:messages_getDhConfig
func (m *TLmessages_getDhConfig) Decode(dbuf *DecodeBuf) error {
	m.Setversion(dbuf.Int())
	m.Setrandom_length(dbuf.Int())
	return dbuf.Err
}
func NewTLupload_getWebFile() *TLupload_getWebFile {
	return &TLupload_getWebFile{}
}

// CodecEncode:upload_getWebFile
func (m *TLupload_getWebFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(619086221)
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:upload_getWebFile
func (m *TLupload_getWebFile) Decode(dbuf *DecodeBuf) error {
	m0 := &InputWebFileLocation{}
	m0.Decode(dbuf)
	m.Setlocation(m0)
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_createTheme() *TLaccount_createTheme {
	return &TLaccount_createTheme{}
}

// CodecEncode:account_createTheme
func (m *TLaccount_createTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2077048289)
	var flags uint32 = 0
	if m.Getdocument() != nil {
		flags |= 1 << 2
	}
	if m.Getsettings() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Getslug())
	x.String(m.Gettitle())
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_createTheme
func (m *TLaccount_createTheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setslug(dbuf.String())
	m.Settitle(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m2 := &InputDocument{}
		m2.Decode(dbuf)
		m.Setdocument(m2)
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &InputThemeSettings{}
		m3.Decode(dbuf)
		m.Setsettings(m3)
	}
	return dbuf.Err
}
func NewTLaccount_updateTheme() *TLaccount_updateTheme {
	return &TLaccount_updateTheme{}
}

// CodecEncode:account_updateTheme
func (m *TLaccount_updateTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1555261397)
	var flags uint32 = 0
	if m.Getslug() != "" {
		flags |= 1 << 0
	}
	if m.Gettitle() != "" {
		flags |= 1 << 1
	}
	if m.Getdocument() != nil {
		flags |= 1 << 2
	}
	if m.Getsettings() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Getformat())
	x.Bytes(m.Gettheme().Encode())
	if m.Getslug() != "" {
		x.String(m.Getslug())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_updateTheme
func (m *TLaccount_updateTheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setformat(dbuf.String())
	m1 := &InputTheme{}
	m1.Decode(dbuf)
	m.Settheme(m1)
	if (flags & (1 << 0)) != 0 {
		m.Setslug(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &InputDocument{}
		m4.Decode(dbuf)
		m.Setdocument(m4)
	}
	if (flags & (1 << 3)) != 0 {
		m5 := &InputThemeSettings{}
		m5.Decode(dbuf)
		m.Setsettings(m5)
	}
	return dbuf.Err
}
func NewTLaccount_getTheme() *TLaccount_getTheme {
	return &TLaccount_getTheme{}
}

// CodecEncode:account_getTheme
func (m *TLaccount_getTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1919060949)
	x.String(m.Getformat())
	x.Bytes(m.Gettheme().Encode())
	x.Long(m.Getdocument_id())
	return x.Buf
}

// CodecDecode:account_getTheme
func (m *TLaccount_getTheme) Decode(dbuf *DecodeBuf) error {
	m.Setformat(dbuf.String())
	m1 := &InputTheme{}
	m1.Decode(dbuf)
	m.Settheme(m1)
	m.Setdocument_id(dbuf.Long())
	return dbuf.Err
}
func NewTLmessages_getEmojiKeywords() *TLmessages_getEmojiKeywords {
	return &TLmessages_getEmojiKeywords{}
}

// CodecEncode:messages_getEmojiKeywords
func (m *TLmessages_getEmojiKeywords) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(899735650)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywords
func (m *TLmessages_getEmojiKeywords) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_getEmojiKeywordsDifference() *TLmessages_getEmojiKeywordsDifference {
	return &TLmessages_getEmojiKeywordsDifference{}
}

// CodecEncode:messages_getEmojiKeywordsDifference
func (m *TLmessages_getEmojiKeywordsDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(352892591)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	return x.Buf
}

// CodecDecode:messages_getEmojiKeywordsDifference
func (m *TLmessages_getEmojiKeywordsDifference) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getSplitRanges() *TLmessages_getSplitRanges {
	return &TLmessages_getSplitRanges{}
}

// CodecEncode:messages_getSplitRanges
func (m *TLmessages_getSplitRanges) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(486505992)
	return x.Buf
}

// CodecDecode:messages_getSplitRanges
func (m *TLmessages_getSplitRanges) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLaccount_getTmpPassword() *TLaccount_getTmpPassword {
	return &TLaccount_getTmpPassword{}
}

// CodecEncode:account_getTmpPassword
func (m *TLaccount_getTmpPassword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1151208273)
	x.Bytes(m.Getpassword().Encode())
	x.Int(m.Getperiod())
	return x.Buf
}

// CodecDecode:account_getTmpPassword
func (m *TLaccount_getTmpPassword) Decode(dbuf *DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	m.Setperiod(dbuf.Int())
	return dbuf.Err
}
func NewTLinvokeAfterMsg() *TLinvokeAfterMsg {
	return &TLinvokeAfterMsg{}
}

// CodecEncode:invokeAfterMsg
func (m *TLinvokeAfterMsg) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-878758099)
	x.Long(m.Getmsg_id())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeAfterMsg
func (m *TLinvokeAfterMsg) Decode(dbuf *DecodeBuf) error {
	m.Setmsg_id(dbuf.Long())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinvokeAfterMsgs() *TLinvokeAfterMsgs {
	return &TLinvokeAfterMsgs{}
}

// CodecEncode:invokeAfterMsgs
func (m *TLinvokeAfterMsgs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1036301552)
	x.VectorLong(m.Getmsg_ids())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeAfterMsgs
func (m *TLinvokeAfterMsgs) Decode(dbuf *DecodeBuf) error {
	m.Setmsg_ids(dbuf.VectorLong())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinitConnection() *TLinitConnection {
	return &TLinitConnection{}
}

// CodecEncode:initConnection
func (m *TLinitConnection) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1043505495)
	var flags uint32 = 0
	if m.Getproxy() != nil {
		flags |= 1 << 0
	}
	if m.Getparams() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getapi_id())
	x.String(m.Getdevice_model())
	x.String(m.Getsystem_version())
	x.String(m.Getapp_version())
	x.String(m.Getsystem_lang_code())
	x.String(m.Getlang_pack())
	x.String(m.Getlang_code())
	if m.Getproxy() != nil {
		x.Bytes(m.Getproxy().Encode())
	}
	if m.Getparams() != nil {
		x.Bytes(m.Getparams().Encode())
	}
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:initConnection
func (m *TLinitConnection) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setapi_id(dbuf.Int())
	m.Setdevice_model(dbuf.String())
	m.Setsystem_version(dbuf.String())
	m.Setapp_version(dbuf.String())
	m.Setsystem_lang_code(dbuf.String())
	m.Setlang_pack(dbuf.String())
	m.Setlang_code(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m7 := &InputClientProxy{}
		m7.Decode(dbuf)
		m.Setproxy(m7)
	}
	if (flags & (1 << 1)) != 0 {
		m8 := &JSONValue{}
		m8.Decode(dbuf)
		m.Setparams(m8)
	}
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinvokeWithLayer() *TLinvokeWithLayer {
	return &TLinvokeWithLayer{}
}

// CodecEncode:invokeWithLayer
func (m *TLinvokeWithLayer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-627372787)
	x.Int(m.Getlayer())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithLayer
func (m *TLinvokeWithLayer) Decode(dbuf *DecodeBuf) error {
	m.Setlayer(dbuf.Int())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinvokeWithoutUpdates() *TLinvokeWithoutUpdates {
	return &TLinvokeWithoutUpdates{}
}

// CodecEncode:invokeWithoutUpdates
func (m *TLinvokeWithoutUpdates) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1080796745)
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithoutUpdates
func (m *TLinvokeWithoutUpdates) Decode(dbuf *DecodeBuf) error {
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinvokeWithMessagesRange() *TLinvokeWithMessagesRange {
	return &TLinvokeWithMessagesRange{}
}

// CodecEncode:invokeWithMessagesRange
func (m *TLinvokeWithMessagesRange) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(911373810)
	x.Bytes(m.Getrange_key().Encode())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithMessagesRange
func (m *TLinvokeWithMessagesRange) Decode(dbuf *DecodeBuf) error {
	m0 := &MessageRange{}
	m0.Decode(dbuf)
	m.Setrange_key(m0)
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLinvokeWithTakeout() *TLinvokeWithTakeout {
	return &TLinvokeWithTakeout{}
}

// CodecEncode:invokeWithTakeout
func (m *TLinvokeWithTakeout) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1398145746)
	x.Long(m.Gettakeout_id())
	x.Bytes(m.Getquery())
	return x.Buf
}

// CodecDecode:invokeWithTakeout
func (m *TLinvokeWithTakeout) Decode(dbuf *DecodeBuf) error {
	m.Settakeout_id(dbuf.Long())
	m.Setquery(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLmessages_searchStickerSets() *TLmessages_searchStickerSets {
	return &TLmessages_searchStickerSets{}
}

// CodecEncode:messages_searchStickerSets
func (m *TLmessages_searchStickerSets) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1028140917)
	var flags uint32 = 0
	if m.Getexclude_featured() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Getq())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_searchStickerSets
func (m *TLmessages_searchStickerSets) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setexclude_featured(true)
	}
	m.Setq(dbuf.String())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getMessages() *TLmessages_getMessages {
	return &TLmessages_getMessages{}
}

// CodecEncode:messages_getMessages
func (m *TLmessages_getMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1673946374)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_getMessages
func (m *TLmessages_getMessages) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputMessage, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputMessage{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}
func NewTLmessages_getHistory() *TLmessages_getHistory {
	return &TLmessages_getHistory{}
}

// CodecEncode:messages_getHistory
func (m *TLmessages_getHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-591691168)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getoffset_date())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getHistory
func (m *TLmessages_getHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setoffset_id(dbuf.Int())
	m.Setoffset_date(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_search() *TLmessages_search {
	return &TLmessages_search{}
}

// CodecEncode:messages_search
func (m *TLmessages_search) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(204812012)
	var flags uint32 = 0
	if m.Getfrom_id() != nil {
		flags |= 1 << 0
	}
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getq())
	if m.Getfrom_id() != nil {
		x.Bytes(m.Getfrom_id().Encode())
	}
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	x.Int(m.Getoffset_id())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_search
func (m *TLmessages_search) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setq(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &InputPeer{}
		m2.Decode(dbuf)
		m.Setfrom_id(m2)
	}
	if (flags & (1 << 1)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m4 := &MessagesFilter{}
	m4.Decode(dbuf)
	m.Setfilter(m4)
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_getMessages() *TLchannels_getMessages {
	return &TLchannels_getMessages{}
}

// CodecEncode:channels_getMessages
func (m *TLchannels_getMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1383294429)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_getMessages
func (m *TLchannels_getMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*InputMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &InputMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setid(v1)
	return dbuf.Err
}
func NewTLmessages_searchGlobal() *TLmessages_searchGlobal {
	return &TLmessages_searchGlobal{}
}

// CodecEncode:messages_searchGlobal
func (m *TLmessages_searchGlobal) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1271290010)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.String(m.Getq())
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	x.Int(m.Getoffset_rate())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:messages_searchGlobal
func (m *TLmessages_searchGlobal) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setq(dbuf.String())
	m2 := &MessagesFilter{}
	m2.Decode(dbuf)
	m.Setfilter(m2)
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setoffset_rate(dbuf.Int())
	m6 := &InputPeer{}
	m6.Decode(dbuf)
	m.Setoffset_peer(m6)
	m.Setoffset_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getUnreadMentions() *TLmessages_getUnreadMentions {
	return &TLmessages_getUnreadMentions{}
}

// CodecEncode:messages_getUnreadMentions
func (m *TLmessages_getUnreadMentions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1180140658)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	return x.Buf
}

// CodecDecode:messages_getUnreadMentions
func (m *TLmessages_getUnreadMentions) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setoffset_id(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getRecentLocations() *TLmessages_getRecentLocations {
	return &TLmessages_getRecentLocations{}
}

// CodecEncode:messages_getRecentLocations
func (m *TLmessages_getRecentLocations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1144759543)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getlimit())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getRecentLocations
func (m *TLmessages_getRecentLocations) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getScheduledHistory() *TLmessages_getScheduledHistory {
	return &TLmessages_getScheduledHistory{}
}

// CodecEncode:messages_getScheduledHistory
func (m *TLmessages_getScheduledHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-490575781)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getScheduledHistory
func (m *TLmessages_getScheduledHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getScheduledMessages() *TLmessages_getScheduledMessages {
	return &TLmessages_getScheduledMessages{}
}

// CodecEncode:messages_getScheduledMessages
func (m *TLmessages_getScheduledMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1111817116)
	x.Bytes(m.Getpeer().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_getScheduledMessages
func (m *TLmessages_getScheduledMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLmessages_getReplies() *TLmessages_getReplies {
	return &TLmessages_getReplies{}
}

// CodecEncode:messages_getReplies
func (m *TLmessages_getReplies) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(615875002)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getoffset_id())
	x.Int(m.Getoffset_date())
	x.Int(m.Getadd_offset())
	x.Int(m.Getlimit())
	x.Int(m.Getmax_id())
	x.Int(m.Getmin_id())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getReplies
func (m *TLmessages_getReplies) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setoffset_id(dbuf.Int())
	m.Setoffset_date(dbuf.Int())
	m.Setadd_offset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setmin_id(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLstats_getMessagePublicForwards() *TLstats_getMessagePublicForwards {
	return &TLstats_getMessagePublicForwards{}
}

// CodecEncode:stats_getMessagePublicForwards
func (m *TLstats_getMessagePublicForwards) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1445996571)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getoffset_rate())
	x.Bytes(m.Getoffset_peer().Encode())
	x.Int(m.Getoffset_id())
	x.Int(m.Getlimit())
	return x.Buf
}

// CodecDecode:stats_getMessagePublicForwards
func (m *TLstats_getMessagePublicForwards) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setoffset_rate(dbuf.Int())
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setoffset_peer(m3)
	m.Setoffset_id(dbuf.Int())
	m.Setlimit(dbuf.Int())
	return dbuf.Err
}
func NewTLcontacts_getContacts() *TLcontacts_getContacts {
	return &TLcontacts_getContacts{}
}

// CodecEncode:contacts_getContacts
func (m *TLcontacts_getContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1071414113)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:contacts_getContacts
func (m *TLcontacts_getContacts) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_getStatsURL() *TLmessages_getStatsURL {
	return &TLmessages_getStatsURL{}
}

// CodecEncode:messages_getStatsURL
func (m *TLmessages_getStatsURL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2127811866)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.String(m.Getparams())
	return x.Buf
}

// CodecDecode:messages_getStatsURL
func (m *TLmessages_getStatsURL) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setparams(dbuf.String())
	return dbuf.Err
}
func NewTLauth_acceptLoginToken() *TLauth_acceptLoginToken {
	return &TLauth_acceptLoginToken{}
}

// CodecEncode:auth_acceptLoginToken
func (m *TLauth_acceptLoginToken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-392909491)
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_acceptLoginToken
func (m *TLauth_acceptLoginToken) Decode(dbuf *DecodeBuf) error {
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLauth_sendCode() *TLauth_sendCode {
	return &TLauth_sendCode{}
}

// CodecEncode:auth_sendCode
func (m *TLauth_sendCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1502141361)
	x.String(m.Getphone_number())
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:auth_sendCode
func (m *TLauth_sendCode) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m3 := &CodeSettings{}
	m3.Decode(dbuf)
	m.Setsettings(m3)
	return dbuf.Err
}
func NewTLaccount_sendChangePhoneCode() *TLaccount_sendChangePhoneCode {
	return &TLaccount_sendChangePhoneCode{}
}

// CodecEncode:account_sendChangePhoneCode
func (m *TLaccount_sendChangePhoneCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2108208411)
	x.String(m.Getphone_number())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendChangePhoneCode
func (m *TLaccount_sendChangePhoneCode) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}
func NewTLauth_resendCode() *TLauth_resendCode {
	return &TLauth_resendCode{}
}

// CodecEncode:auth_resendCode
func (m *TLauth_resendCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1056025023)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	return x.Buf
}

// CodecDecode:auth_resendCode
func (m *TLauth_resendCode) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	return dbuf.Err
}
func NewTLaccount_sendConfirmPhoneCode() *TLaccount_sendConfirmPhoneCode {
	return &TLaccount_sendConfirmPhoneCode{}
}

// CodecEncode:account_sendConfirmPhoneCode
func (m *TLaccount_sendConfirmPhoneCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(457157256)
	x.String(m.Gethash())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendConfirmPhoneCode
func (m *TLaccount_sendConfirmPhoneCode) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}
func NewTLaccount_sendVerifyPhoneCode() *TLaccount_sendVerifyPhoneCode {
	return &TLaccount_sendVerifyPhoneCode{}
}

// CodecEncode:account_sendVerifyPhoneCode
func (m *TLaccount_sendVerifyPhoneCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1516022023)
	x.String(m.Getphone_number())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:account_sendVerifyPhoneCode
func (m *TLaccount_sendVerifyPhoneCode) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &CodeSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}
func NewTLpayments_getBankCardData() *TLpayments_getBankCardData {
	return &TLpayments_getBankCardData{}
}

// CodecEncode:payments_getBankCardData
func (m *TLpayments_getBankCardData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(779736953)
	x.String(m.Getnumber())
	return x.Buf
}

// CodecDecode:payments_getBankCardData
func (m *TLpayments_getBankCardData) Decode(dbuf *DecodeBuf) error {
	m.Setnumber(dbuf.String())
	return dbuf.Err
}
func NewTLstats_getBroadcastStats() *TLstats_getBroadcastStats {
	return &TLstats_getBroadcastStats{}
}

// CodecEncode:stats_getBroadcastStats
func (m *TLstats_getBroadcastStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1421720550)
	var flags uint32 = 0
	if m.Getdark() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:stats_getBroadcastStats
func (m *TLstats_getBroadcastStats) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdark(true)
	}
	m1 := &InputChannel{}
	m1.Decode(dbuf)
	m.Setchannel(m1)
	return dbuf.Err
}
func NewTLmessages_getBotCallbackAnswer() *TLmessages_getBotCallbackAnswer {
	return &TLmessages_getBotCallbackAnswer{}
}

// CodecEncode:messages_getBotCallbackAnswer
func (m *TLmessages_getBotCallbackAnswer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1824339449)
	var flags uint32 = 0
	if m.Getgame() != false {
		flags |= 1 << 1
	}
	if m.Getdata() != nil {
		flags |= 1 << 0
	}
	if m.Getpassword() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getpassword() != nil {
		x.Bytes(m.Getpassword().Encode())
	}
	return x.Buf
}

// CodecDecode:messages_getBotCallbackAnswer
func (m *TLmessages_getBotCallbackAnswer) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setgame(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setmsg_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &InputCheckPasswordSRP{}
		m4.Decode(dbuf)
		m.Setpassword(m4)
	}
	return dbuf.Err
}
func NewTLcontacts_getSaved() *TLcontacts_getSaved {
	return &TLcontacts_getSaved{}
}

// CodecEncode:contacts_getSaved
func (m *TLcontacts_getSaved) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2098076769)
	return x.Buf
}

// CodecDecode:contacts_getSaved
func (m *TLcontacts_getSaved) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLphone_requestCall() *TLphone_requestCall {
	return &TLphone_requestCall{}
}

// CodecEncode:phone_requestCall
func (m *TLphone_requestCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1124046573)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getrandom_id())
	x.Bytes(m.Getg_a_hash())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_requestCall
func (m *TLphone_requestCall) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setrandom_id(dbuf.Int())
	m.Setg_a_hash(dbuf.StringBytes())
	m4 := &PhoneCallProtocol{}
	m4.Decode(dbuf)
	m.Setprotocol(m4)
	return dbuf.Err
}
func NewTLphone_acceptCall() *TLphone_acceptCall {
	return &TLphone_acceptCall{}
}

// CodecEncode:phone_acceptCall
func (m *TLphone_acceptCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1003664544)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_b())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_acceptCall
func (m *TLphone_acceptCall) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_b(dbuf.StringBytes())
	m2 := &PhoneCallProtocol{}
	m2.Decode(dbuf)
	m.Setprotocol(m2)
	return dbuf.Err
}
func NewTLphone_confirmCall() *TLphone_confirmCall {
	return &TLphone_confirmCall{}
}

// CodecEncode:phone_confirmCall
func (m *TLphone_confirmCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(788404002)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getg_a())
	x.Long(m.Getkey_fingerprint())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phone_confirmCall
func (m *TLphone_confirmCall) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoneCall{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setg_a(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	m3 := &PhoneCallProtocol{}
	m3.Decode(dbuf)
	m.Setprotocol(m3)
	return dbuf.Err
}
func NewTLauth_signUp() *TLauth_signUp {
	return &TLauth_signUp{}
}

// CodecEncode:auth_signUp
func (m *TLauth_signUp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2131827673)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	return x.Buf
}

// CodecDecode:auth_signUp
func (m *TLauth_signUp) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	return dbuf.Err
}
func NewTLauth_signIn() *TLauth_signIn {
	return &TLauth_signIn{}
}

// CodecEncode:auth_signIn
func (m *TLauth_signIn) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1126886015)
	x.String(m.Getphone_number())
	x.String(m.Getphone_code_hash())
	x.String(m.Getphone_code())
	return x.Buf
}

// CodecDecode:auth_signIn
func (m *TLauth_signIn) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setphone_code_hash(dbuf.String())
	m.Setphone_code(dbuf.String())
	return dbuf.Err
}
func NewTLauth_importAuthorization() *TLauth_importAuthorization {
	return &TLauth_importAuthorization{}
}

// CodecEncode:auth_importAuthorization
func (m *TLauth_importAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-470837741)
	x.Int(m.Getid())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:auth_importAuthorization
func (m *TLauth_importAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}
func NewTLauth_importBotAuthorization() *TLauth_importBotAuthorization {
	return &TLauth_importBotAuthorization{}
}

// CodecEncode:auth_importBotAuthorization
func (m *TLauth_importBotAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1738800940)
	x.Int(m.Getflags())
	x.Int(m.Getapi_id())
	x.String(m.Getapi_hash())
	x.String(m.Getbot_auth_token())
	return x.Buf
}

// CodecDecode:auth_importBotAuthorization
func (m *TLauth_importBotAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Setflags(dbuf.Int())
	m.Setapi_id(dbuf.Int())
	m.Setapi_hash(dbuf.String())
	m.Setbot_auth_token(dbuf.String())
	return dbuf.Err
}
func NewTLauth_checkPassword() *TLauth_checkPassword {
	return &TLauth_checkPassword{}
}

// CodecEncode:auth_checkPassword
func (m *TLauth_checkPassword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-779399914)
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:auth_checkPassword
func (m *TLauth_checkPassword) Decode(dbuf *DecodeBuf) error {
	m0 := &InputCheckPasswordSRP{}
	m0.Decode(dbuf)
	m.Setpassword(m0)
	return dbuf.Err
}
func NewTLauth_recoverPassword() *TLauth_recoverPassword {
	return &TLauth_recoverPassword{}
}

// CodecEncode:auth_recoverPassword
func (m *TLauth_recoverPassword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1319464594)
	x.String(m.Getcode())
	return x.Buf
}

// CodecDecode:auth_recoverPassword
func (m *TLauth_recoverPassword) Decode(dbuf *DecodeBuf) error {
	m.Setcode(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_deleteHistory() *TLmessages_deleteHistory {
	return &TLmessages_deleteHistory{}
}

// CodecEncode:messages_deleteHistory
func (m *TLmessages_deleteHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(469850889)
	var flags uint32 = 0
	if m.Getjust_clear() != false {
		flags |= 1 << 0
	}
	if m.Getrevoke() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messages_deleteHistory
func (m *TLmessages_deleteHistory) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setjust_clear(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setrevoke(true)
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}
func NewTLchannels_deleteUserHistory() *TLchannels_deleteUserHistory {
	return &TLchannels_deleteUserHistory{}
}

// CodecEncode:channels_deleteUserHistory
func (m *TLchannels_deleteUserHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-787622117)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:channels_deleteUserHistory
func (m *TLchannels_deleteUserHistory) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}
func NewTLmessages_readMentions() *TLmessages_readMentions {
	return &TLmessages_readMentions{}
}

// CodecEncode:messages_readMentions
func (m *TLmessages_readMentions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(251759059)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_readMentions
func (m *TLmessages_readMentions) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLmessages_unpinAllMessages() *TLmessages_unpinAllMessages {
	return &TLmessages_unpinAllMessages{}
}

// CodecEncode:messages_unpinAllMessages
func (m *TLmessages_unpinAllMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-265962357)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:messages_unpinAllMessages
func (m *TLmessages_unpinAllMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}
func NewTLmessages_getSavedGifs() *TLmessages_getSavedGifs {
	return &TLmessages_getSavedGifs{}
}

// CodecEncode:messages_getSavedGifs
func (m *TLmessages_getSavedGifs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2084618926)
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_getSavedGifs
func (m *TLmessages_getSavedGifs) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	return dbuf.Err
}
func NewTLpayments_getSavedInfo() *TLpayments_getSavedInfo {
	return &TLpayments_getSavedInfo{}
}

// CodecEncode:payments_getSavedInfo
func (m *TLpayments_getSavedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(578650699)
	return x.Buf
}

// CodecDecode:payments_getSavedInfo
func (m *TLpayments_getSavedInfo) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLhelp_getCdnConfig() *TLhelp_getCdnConfig {
	return &TLhelp_getCdnConfig{}
}

// CodecEncode:help_getCdnConfig
func (m *TLhelp_getCdnConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1375900482)
	return x.Buf
}

// CodecDecode:help_getCdnConfig
func (m *TLhelp_getCdnConfig) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLusers_getFullUser() *TLusers_getFullUser {
	return &TLusers_getFullUser{}
}

// CodecEncode:users_getFullUser
func (m *TLusers_getFullUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-902781519)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:users_getFullUser
func (m *TLusers_getFullUser) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLhelp_getSupport() *TLhelp_getSupport {
	return &TLhelp_getSupport{}
}

// CodecEncode:help_getSupport
func (m *TLhelp_getSupport) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1663104819)
	return x.Buf
}

// CodecDecode:help_getSupport
func (m *TLhelp_getSupport) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLchannels_getInactiveChannels() *TLchannels_getInactiveChannels {
	return &TLchannels_getInactiveChannels{}
}

// CodecEncode:channels_getInactiveChannels
func (m *TLchannels_getInactiveChannels) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(300429806)
	return x.Buf
}

// CodecDecode:channels_getInactiveChannels
func (m *TLchannels_getInactiveChannels) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLcontacts_deleteContacts() *TLcontacts_deleteContacts {
	return &TLcontacts_deleteContacts{}
}

// CodecEncode:contacts_deleteContacts
func (m *TLcontacts_deleteContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(157945344)
	x.Int(481674261)
	x.Int(int32(len(m.Getid())))
	for _, v := range m.Getid() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_deleteContacts
func (m *TLcontacts_deleteContacts) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setid(v0)
	return dbuf.Err
}
func NewTLmessages_sendMessage() *TLmessages_sendMessage {
	return &TLmessages_sendMessage{}
}

// CodecEncode:messages_sendMessage
func (m *TLmessages_sendMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1376532592)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 1
	}
	if m.Getsilent() != false {
		flags |= 1 << 5
	}
	if m.Getbackground() != false {
		flags |= 1 << 6
	}
	if m.Getclear_draft() != false {
		flags |= 1 << 7
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.String(m.Getmessage())
	x.Long(m.Getrandom_id())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMessage
func (m *TLmessages_sendMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setclear_draft(true)
	}
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setpeer(m4)
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setmessage(dbuf.String())
	m.Setrandom_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m8 := &ReplyMarkup{}
		m8.Decode(dbuf)
		m.Setreply_markup(m8)
	}
	if (flags & (1 << 3)) != 0 {
		c9 := dbuf.Int()
		if c9 != 481674261 {
			return dbuf.Err
		}
		l9 := dbuf.Int()
		v9 := make([]*MessageEntity, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = &MessageEntity{}
			v9[i].Decode(dbuf)
		}
		m.Setentities(v9)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLmessages_sendMedia() *TLmessages_sendMedia {
	return &TLmessages_sendMedia{}
}

// CodecEncode:messages_sendMedia
func (m *TLmessages_sendMedia) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(881978281)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 5
	}
	if m.Getbackground() != false {
		flags |= 1 << 6
	}
	if m.Getclear_draft() != false {
		flags |= 1 << 7
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Bytes(m.Getmedia().Encode())
	x.String(m.Getmessage())
	x.Long(m.Getrandom_id())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMedia
func (m *TLmessages_sendMedia) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setclear_draft(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m5 := &InputMedia{}
	m5.Decode(dbuf)
	m.Setmedia(m5)
	m.Setmessage(dbuf.String())
	m.Setrandom_id(dbuf.Long())
	if (flags & (1 << 2)) != 0 {
		m8 := &ReplyMarkup{}
		m8.Decode(dbuf)
		m.Setreply_markup(m8)
	}
	if (flags & (1 << 3)) != 0 {
		c9 := dbuf.Int()
		if c9 != 481674261 {
			return dbuf.Err
		}
		l9 := dbuf.Int()
		v9 := make([]*MessageEntity, l9)
		for i := int32(0); i < l9; i++ {
			v9[i] = &MessageEntity{}
			v9[i].Decode(dbuf)
		}
		m.Setentities(v9)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLmessages_forwardMessages() *TLmessages_forwardMessages {
	return &TLmessages_forwardMessages{}
}

// CodecEncode:messages_forwardMessages
func (m *TLmessages_forwardMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-637606386)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 5
	}
	if m.Getbackground() != false {
		flags |= 1 << 6
	}
	if m.Getwith_my_score() != false {
		flags |= 1 << 8
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getfrom_peer().Encode())
	x.VectorInt(m.Getid())
	x.VectorLong(m.Getrandom_id())
	x.Bytes(m.Getto_peer().Encode())
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_forwardMessages
func (m *TLmessages_forwardMessages) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setwith_my_score(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setfrom_peer(m3)
	m.Setid(dbuf.VectorInt())
	m.Setrandom_id(dbuf.VectorLong())
	m6 := &InputPeer{}
	m6.Decode(dbuf)
	m.Setto_peer(m6)
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLmessages_editChatTitle() *TLmessages_editChatTitle {
	return &TLmessages_editChatTitle{}
}

// CodecEncode:messages_editChatTitle
func (m *TLmessages_editChatTitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-599447467)
	x.Int(m.Getchat_id())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messages_editChatTitle
func (m *TLmessages_editChatTitle) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Settitle(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_editChatPhoto() *TLmessages_editChatPhoto {
	return &TLmessages_editChatPhoto{}
}

// CodecEncode:messages_editChatPhoto
func (m *TLmessages_editChatPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-900957736)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatPhoto
func (m *TLmessages_editChatPhoto) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputChatPhoto{}
	m1.Decode(dbuf)
	m.Setphoto(m1)
	return dbuf.Err
}
func NewTLmessages_addChatUser() *TLmessages_addChatUser {
	return &TLmessages_addChatUser{}
}

// CodecEncode:messages_addChatUser
func (m *TLmessages_addChatUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-106911223)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getfwd_limit())
	return x.Buf
}

// CodecDecode:messages_addChatUser
func (m *TLmessages_addChatUser) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m.Setfwd_limit(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_deleteChatUser() *TLmessages_deleteChatUser {
	return &TLmessages_deleteChatUser{}
}

// CodecEncode:messages_deleteChatUser
func (m *TLmessages_deleteChatUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-530505962)
	x.Int(m.Getchat_id())
	x.Bytes(m.Getuser_id().Encode())
	return x.Buf
}

// CodecDecode:messages_deleteChatUser
func (m *TLmessages_deleteChatUser) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	return dbuf.Err
}
func NewTLmessages_createChat() *TLmessages_createChat {
	return &TLmessages_createChat{}
}

// CodecEncode:messages_createChat
func (m *TLmessages_createChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(164303470)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messages_createChat
func (m *TLmessages_createChat) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	m.Settitle(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_importChatInvite() *TLmessages_importChatInvite {
	return &TLmessages_importChatInvite{}
}

// CodecEncode:messages_importChatInvite
func (m *TLmessages_importChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1817183516)
	x.String(m.Gethash())
	return x.Buf
}

// CodecDecode:messages_importChatInvite
func (m *TLmessages_importChatInvite) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.String())
	return dbuf.Err
}
func NewTLmessages_startBot() *TLmessages_startBot {
	return &TLmessages_startBot{}
}

// CodecEncode:messages_startBot
func (m *TLmessages_startBot) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-421563528)
	x.Bytes(m.Getbot().Encode())
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getrandom_id())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:messages_startBot
func (m *TLmessages_startBot) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot(m0)
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrandom_id(dbuf.Long())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}
func NewTLhelp_getAppChangelog() *TLhelp_getAppChangelog {
	return &TLhelp_getAppChangelog{}
}

// CodecEncode:help_getAppChangelog
func (m *TLhelp_getAppChangelog) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1877938321)
	x.String(m.Getprev_app_version())
	return x.Buf
}

// CodecDecode:help_getAppChangelog
func (m *TLhelp_getAppChangelog) Decode(dbuf *DecodeBuf) error {
	m.Setprev_app_version(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_createChannel() *TLchannels_createChannel {
	return &TLchannels_createChannel{}
}

// CodecEncode:channels_createChannel
func (m *TLchannels_createChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1029681423)
	var flags uint32 = 0
	if m.Getbroadcast() != false {
		flags |= 1 << 0
	}
	if m.Getmegagroup() != false {
		flags |= 1 << 1
	}
	if m.Getgeo_point() != nil {
		flags |= 1 << 2
	}
	if m.Getaddress() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getabout())
	if m.Getgeo_point() != nil {
		x.Bytes(m.Getgeo_point().Encode())
	}
	if m.Getaddress() != "" {
		x.String(m.Getaddress())
	}
	return x.Buf
}

// CodecDecode:channels_createChannel
func (m *TLchannels_createChannel) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmegagroup(true)
	}
	m.Settitle(dbuf.String())
	m.Setabout(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m4 := &InputGeoPoint{}
		m4.Decode(dbuf)
		m.Setgeo_point(m4)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setaddress(dbuf.String())
	}
	return dbuf.Err
}
func NewTLchannels_editAdmin() *TLchannels_editAdmin {
	return &TLchannels_editAdmin{}
}

// CodecEncode:channels_editAdmin
func (m *TLchannels_editAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-751007486)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getadmin_rights().Encode())
	x.String(m.Getrank())
	return x.Buf
}

// CodecDecode:channels_editAdmin
func (m *TLchannels_editAdmin) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &ChatAdminRights{}
	m2.Decode(dbuf)
	m.Setadmin_rights(m2)
	m.Setrank(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_editTitle() *TLchannels_editTitle {
	return &TLchannels_editTitle{}
}

// CodecEncode:channels_editTitle
func (m *TLchannels_editTitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1450044624)
	x.Bytes(m.Getchannel().Encode())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:channels_editTitle
func (m *TLchannels_editTitle) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Settitle(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_editPhoto() *TLchannels_editPhoto {
	return &TLchannels_editPhoto{}
}

// CodecEncode:channels_editPhoto
func (m *TLchannels_editPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-248621111)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:channels_editPhoto
func (m *TLchannels_editPhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputChatPhoto{}
	m1.Decode(dbuf)
	m.Setphoto(m1)
	return dbuf.Err
}
func NewTLchannels_joinChannel() *TLchannels_joinChannel {
	return &TLchannels_joinChannel{}
}

// CodecEncode:channels_joinChannel
func (m *TLchannels_joinChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(615851205)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_joinChannel
func (m *TLchannels_joinChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}
func NewTLchannels_leaveChannel() *TLchannels_leaveChannel {
	return &TLchannels_leaveChannel{}
}

// CodecEncode:channels_leaveChannel
func (m *TLchannels_leaveChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-130635115)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_leaveChannel
func (m *TLchannels_leaveChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}
func NewTLchannels_inviteToChannel() *TLchannels_inviteToChannel {
	return &TLchannels_inviteToChannel{}
}

// CodecEncode:channels_inviteToChannel
func (m *TLchannels_inviteToChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(429865580)
	x.Bytes(m.Getchannel().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_inviteToChannel
func (m *TLchannels_inviteToChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*InputUser, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &InputUser{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}
func NewTLchannels_deleteChannel() *TLchannels_deleteChannel {
	return &TLchannels_deleteChannel{}
}

// CodecEncode:channels_deleteChannel
func (m *TLchannels_deleteChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1072619549)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:channels_deleteChannel
func (m *TLchannels_deleteChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}
func NewTLmessages_migrateChat() *TLmessages_migrateChat {
	return &TLmessages_migrateChat{}
}

// CodecEncode:messages_migrateChat
func (m *TLmessages_migrateChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(363051235)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messages_migrateChat
func (m *TLmessages_migrateChat) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_sendInlineBotResult() *TLmessages_sendInlineBotResult {
	return &TLmessages_sendInlineBotResult{}
}

// CodecEncode:messages_sendInlineBotResult
func (m *TLmessages_sendInlineBotResult) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(570955184)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 5
	}
	if m.Getbackground() != false {
		flags |= 1 << 6
	}
	if m.Getclear_draft() != false {
		flags |= 1 << 7
	}
	if m.Gethide_via() != false {
		flags |= 1 << 11
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Long(m.Getrandom_id())
	x.Long(m.Getquery_id())
	x.String(m.Getid())
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendInlineBotResult
func (m *TLmessages_sendInlineBotResult) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setclear_draft(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Sethide_via(true)
	}
	m4 := &InputPeer{}
	m4.Decode(dbuf)
	m.Setpeer(m4)
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setrandom_id(dbuf.Long())
	m.Setquery_id(dbuf.Long())
	m.Setid(dbuf.String())
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLchannels_toggleSignatures() *TLchannels_toggleSignatures {
	return &TLchannels_toggleSignatures{}
}

// CodecEncode:channels_toggleSignatures
func (m *TLchannels_toggleSignatures) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(527021574)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:channels_toggleSignatures
func (m *TLchannels_toggleSignatures) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setenabled(m1)
	return dbuf.Err
}
func NewTLmessages_editMessage() *TLmessages_editMessage {
	return &TLmessages_editMessage{}
}

// CodecEncode:messages_editMessage
func (m *TLmessages_editMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1224152952)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 1
	}
	if m.Getmessage() != "" {
		flags |= 1 << 11
	}
	if m.Getmedia() != nil {
		flags |= 1 << 14
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 15
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Getmedia() != nil {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_editMessage
func (m *TLmessages_editMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setno_webpage(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setid(dbuf.Int())
	if (flags & (1 << 11)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 14)) != 0 {
		m4 := &InputMedia{}
		m4.Decode(dbuf)
		m.Setmedia(m4)
	}
	if (flags & (1 << 2)) != 0 {
		m5 := &ReplyMarkup{}
		m5.Decode(dbuf)
		m.Setreply_markup(m5)
	}
	if (flags & (1 << 3)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*MessageEntity, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &MessageEntity{}
			v6[i].Decode(dbuf)
		}
		m.Setentities(v6)
	}
	if (flags & (1 << 15)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLmessages_getAllDrafts() *TLmessages_getAllDrafts {
	return &TLmessages_getAllDrafts{}
}

// CodecEncode:messages_getAllDrafts
func (m *TLmessages_getAllDrafts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1782549861)
	return x.Buf
}

// CodecDecode:messages_getAllDrafts
func (m *TLmessages_getAllDrafts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}
func NewTLmessages_setGameScore() *TLmessages_setGameScore {
	return &TLmessages_setGameScore{}
}

// CodecEncode:messages_setGameScore
func (m *TLmessages_setGameScore) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1896289088)
	var flags uint32 = 0
	if m.Getedit_message() != false {
		flags |= 1 << 0
	}
	if m.Getforce() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	x.Bytes(m.Getuser_id().Encode())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messages_setGameScore
func (m *TLmessages_setGameScore) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setedit_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforce(true)
	}
	m2 := &InputPeer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Setid(dbuf.Int())
	m4 := &InputUser{}
	m4.Decode(dbuf)
	m.Setuser_id(m4)
	m.Setscore(dbuf.Int())
	return dbuf.Err
}
func NewTLphone_discardCall() *TLphone_discardCall {
	return &TLphone_discardCall{}
}

// CodecEncode:phone_discardCall
func (m *TLphone_discardCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1295269440)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getduration())
	x.Bytes(m.Getreason().Encode())
	x.Long(m.Getconnection_id())
	return x.Buf
}

// CodecDecode:phone_discardCall
func (m *TLphone_discardCall) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setvideo(true)
	}
	m1 := &InputPhoneCall{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setduration(dbuf.Int())
	m3 := &PhoneCallDiscardReason{}
	m3.Decode(dbuf)
	m.Setreason(m3)
	m.Setconnection_id(dbuf.Long())
	return dbuf.Err
}
func NewTLphone_setCallRating() *TLphone_setCallRating {
	return &TLphone_setCallRating{}
}

// CodecEncode:phone_setCallRating
func (m *TLphone_setCallRating) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1508562471)
	var flags uint32 = 0
	if m.Getuser_initiative() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getrating())
	x.String(m.Getcomment())
	return x.Buf
}

// CodecDecode:phone_setCallRating
func (m *TLphone_setCallRating) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setuser_initiative(true)
	}
	m1 := &InputPhoneCall{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setrating(dbuf.Int())
	m.Setcomment(dbuf.String())
	return dbuf.Err
}
func NewTLchannels_editBanned() *TLchannels_editBanned {
	return &TLchannels_editBanned{}
}

// CodecEncode:channels_editBanned
func (m *TLchannels_editBanned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1920559378)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:channels_editBanned
func (m *TLchannels_editBanned) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &ChatBannedRights{}
	m2.Decode(dbuf)
	m.Setbanned_rights(m2)
	return dbuf.Err
}
func NewTLmessages_sendScreenshotNotification() *TLmessages_sendScreenshotNotification {
	return &TLmessages_sendScreenshotNotification{}
}

// CodecEncode:messages_sendScreenshotNotification
func (m *TLmessages_sendScreenshotNotification) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-914493408)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getreply_to_msg_id())
	x.Long(m.Getrandom_id())
	return x.Buf
}

// CodecDecode:messages_sendScreenshotNotification
func (m *TLmessages_sendScreenshotNotification) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setreply_to_msg_id(dbuf.Int())
	m.Setrandom_id(dbuf.Long())
	return dbuf.Err
}
func NewTLchannels_togglePreHistoryHidden() *TLchannels_togglePreHistoryHidden {
	return &TLchannels_togglePreHistoryHidden{}
}

// CodecEncode:channels_togglePreHistoryHidden
func (m *TLchannels_togglePreHistoryHidden) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-356796084)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getenabled().Encode())
	return x.Buf
}

// CodecDecode:channels_togglePreHistoryHidden
func (m *TLchannels_togglePreHistoryHidden) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setenabled(m1)
	return dbuf.Err
}
func NewTLmessages_sendMultiMedia() *TLmessages_sendMultiMedia {
	return &TLmessages_sendMultiMedia{}
}

// CodecEncode:messages_sendMultiMedia
func (m *TLmessages_sendMultiMedia) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-872345397)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 5
	}
	if m.Getbackground() != false {
		flags |= 1 << 6
	}
	if m.Getclear_draft() != false {
		flags |= 1 << 7
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getschedule_date() != 0 {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmulti_media())))
	for _, v := range m.Getmulti_media() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getschedule_date() != 0 {
		x.Int(m.Getschedule_date())
	}
	return x.Buf
}

// CodecDecode:messages_sendMultiMedia
func (m *TLmessages_sendMultiMedia) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setbackground(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setclear_draft(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*InputSingleMedia, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &InputSingleMedia{}
		v5[i].Decode(dbuf)
	}
	m.Setmulti_media(v5)
	if (flags & (1 << 10)) != 0 {
		m.Setschedule_date(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLmessages_updatePinnedMessage() *TLmessages_updatePinnedMessage {
	return &TLmessages_updatePinnedMessage{}
}

// CodecEncode:messages_updatePinnedMessage
func (m *TLmessages_updatePinnedMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-760547348)
	var flags uint32 = 0
	if m.Getsilent() != false {
		flags |= 1 << 0
	}
	if m.Getunpin() != false {
		flags |= 1 << 1
	}
	if m.Getpm_oneside() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messages_updatePinnedMessage
func (m *TLmessages_updatePinnedMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setunpin(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpm_oneside(true)
	}
	m3 := &InputPeer{}
	m3.Decode(dbuf)
	m.Setpeer(m3)
	m.Setid(dbuf.Int())
	return dbuf.Err
}
func NewTLaccount_getNotifyExceptions() *TLaccount_getNotifyExceptions {
	return &TLaccount_getNotifyExceptions{}
}

// CodecEncode:account_getNotifyExceptions
func (m *TLaccount_getNotifyExceptions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1398240377)
	var flags uint32 = 0
	if m.Getcompare_sound() != false {
		flags |= 1 << 1
	}
	if m.Getpeer() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getpeer() != nil {
		x.Bytes(m.Getpeer().Encode())
	}
	return x.Buf
}

// CodecDecode:account_getNotifyExceptions
func (m *TLaccount_getNotifyExceptions) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setcompare_sound(true)
	}
	if (flags & (1 << 0)) != 0 {
		m1 := &InputNotifyPeer{}
		m1.Decode(dbuf)
		m.Setpeer(m1)
	}
	return dbuf.Err
}
func NewTLmessages_sendVote() *TLmessages_sendVote {
	return &TLmessages_sendVote{}
}

// CodecEncode:messages_sendVote
func (m *TLmessages_sendVote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(283795844)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	return x.Buf
}

// CodecDecode:messages_sendVote
func (m *TLmessages_sendVote) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([][]byte, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = dbuf.StringBytes()
	}
	m.Setoptions(v2)
	return dbuf.Err
}
func NewTLmessages_getPollResults() *TLmessages_getPollResults {
	return &TLmessages_getPollResults{}
}

// CodecEncode:messages_getPollResults
func (m *TLmessages_getPollResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1941660731)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:messages_getPollResults
func (m *TLmessages_getPollResults) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_editChatDefaultBannedRights() *TLmessages_editChatDefaultBannedRights {
	return &TLmessages_editChatDefaultBannedRights{}
}

// CodecEncode:messages_editChatDefaultBannedRights
func (m *TLmessages_editChatDefaultBannedRights) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1517917375)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:messages_editChatDefaultBannedRights
func (m *TLmessages_editChatDefaultBannedRights) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setbanned_rights(m1)
	return dbuf.Err
}
func NewTLfolders_editPeerFolders() *TLfolders_editPeerFolders {
	return &TLfolders_editPeerFolders{}
}

// CodecEncode:folders_editPeerFolders
func (m *TLfolders_editPeerFolders) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1749536939)
	x.Int(481674261)
	x.Int(int32(len(m.Getfolder_peers())))
	for _, v := range m.Getfolder_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:folders_editPeerFolders
func (m *TLfolders_editPeerFolders) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputFolderPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputFolderPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setfolder_peers(v0)
	return dbuf.Err
}
func NewTLfolders_deleteFolder() *TLfolders_deleteFolder {
	return &TLfolders_deleteFolder{}
}

// CodecEncode:folders_deleteFolder
func (m *TLfolders_deleteFolder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(472471681)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:folders_deleteFolder
func (m *TLfolders_deleteFolder) Decode(dbuf *DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}
func NewTLcontacts_addContact() *TLcontacts_addContact {
	return &TLcontacts_addContact{}
}

// CodecEncode:contacts_addContact
func (m *TLcontacts_addContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-386636848)
	var flags uint32 = 0
	if m.Getadd_phone_privacy_exception() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:contacts_addContact
func (m *TLcontacts_addContact) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setadd_phone_privacy_exception(true)
	}
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setphone(dbuf.String())
	return dbuf.Err
}
func NewTLcontacts_acceptContact() *TLcontacts_acceptContact {
	return &TLcontacts_acceptContact{}
}

// CodecEncode:contacts_acceptContact
func (m *TLcontacts_acceptContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-130964977)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:contacts_acceptContact
func (m *TLcontacts_acceptContact) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}
func NewTLchannels_editCreator() *TLchannels_editCreator {
	return &TLchannels_editCreator{}
}

// CodecEncode:channels_editCreator
func (m *TLchannels_editCreator) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1892102881)
	x.Bytes(m.Getchannel().Encode())
	x.Bytes(m.Getuser_id().Encode())
	x.Bytes(m.Getpassword().Encode())
	return x.Buf
}

// CodecDecode:channels_editCreator
func (m *TLchannels_editCreator) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m1 := &InputUser{}
	m1.Decode(dbuf)
	m.Setuser_id(m1)
	m2 := &InputCheckPasswordSRP{}
	m2.Decode(dbuf)
	m.Setpassword(m2)
	return dbuf.Err
}
func NewTLcontacts_getLocated() *TLcontacts_getLocated {
	return &TLcontacts_getLocated{}
}

// CodecEncode:contacts_getLocated
func (m *TLcontacts_getLocated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-750207932)
	var flags uint32 = 0
	if m.Getbackground() != false {
		flags |= 1 << 1
	}
	if m.Getself_expires() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getself_expires() != 0 {
		x.Int(m.Getself_expires())
	}
	return x.Buf
}

// CodecDecode:contacts_getLocated
func (m *TLcontacts_getLocated) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setbackground(true)
	}
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	if (flags & (1 << 0)) != 0 {
		m.Setself_expires(dbuf.Int())
	}
	return dbuf.Err
}
func NewTLchannels_toggleSlowMode() *TLchannels_toggleSlowMode {
	return &TLchannels_toggleSlowMode{}
}

// CodecEncode:channels_toggleSlowMode
func (m *TLchannels_toggleSlowMode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-304832784)
	x.Bytes(m.Getchannel().Encode())
	x.Int(m.Getseconds())
	return x.Buf
}

// CodecDecode:channels_toggleSlowMode
func (m *TLchannels_toggleSlowMode) Decode(dbuf *DecodeBuf) error {
	m0 := &InputChannel{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	m.Setseconds(dbuf.Int())
	return dbuf.Err
}
func NewTLmessages_sendScheduledMessages() *TLmessages_sendScheduledMessages {
	return &TLmessages_sendScheduledMessages{}
}

// CodecEncode:messages_sendScheduledMessages
func (m *TLmessages_sendScheduledMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1120369398)
	x.Bytes(m.Getpeer().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_sendScheduledMessages
func (m *TLmessages_sendScheduledMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLmessages_deleteScheduledMessages() *TLmessages_deleteScheduledMessages {
	return &TLmessages_deleteScheduledMessages{}
}

// CodecEncode:messages_deleteScheduledMessages
func (m *TLmessages_deleteScheduledMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1504586518)
	x.Bytes(m.Getpeer().Encode())
	x.VectorInt(m.Getid())
	return x.Buf
}

// CodecDecode:messages_deleteScheduledMessages
func (m *TLmessages_deleteScheduledMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setid(dbuf.VectorInt())
	return dbuf.Err
}
func NewTLcontacts_blockFromReplies() *TLcontacts_blockFromReplies {
	return &TLcontacts_blockFromReplies{}
}

// CodecEncode:contacts_blockFromReplies
func (m *TLcontacts_blockFromReplies) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(698914348)
	var flags uint32 = 0
	if m.Getdelete_message() != false {
		flags |= 1 << 0
	}
	if m.Getdelete_history() != false {
		flags |= 1 << 1
	}
	if m.Getreport_spam() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getmsg_id())
	return x.Buf
}

// CodecDecode:contacts_blockFromReplies
func (m *TLcontacts_blockFromReplies) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdelete_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdelete_history(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setreport_spam(true)
	}
	m.Setmsg_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:receivedNotifyMessage
func (m *TLreceivedNotifyMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1551583367)
	x.Int(m.Getid())
	x.Int(m.Getflags())
	return x.Buf
}

// CodecDecode:receivedNotifyMessage
func (m *TLreceivedNotifyMessage) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setflags(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:pageCaption
func (m *TLpageCaption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1869903447)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcredit().Encode())
	return x.Buf
}

// CodecDecode:pageCaption
func (m *TLpageCaption) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcredit(m1)
	return dbuf.Err
}

// CodecEncode:poll
func (m *TLpoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2032041631)
	var flags uint32 = 0
	if m.Getclosed() != false {
		flags |= 1 << 0
	}
	if m.Getpublic_voters() != false {
		flags |= 1 << 1
	}
	if m.Getmultiple_choice() != false {
		flags |= 1 << 2
	}
	if m.Getquiz() != false {
		flags |= 1 << 3
	}
	if m.Getclose_period() != 0 {
		flags |= 1 << 4
	}
	if m.Getclose_date() != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Getquestion())
	x.Int(481674261)
	x.Int(int32(len(m.Getanswers())))
	for _, v := range m.Getanswers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getclose_period() != 0 {
		x.Int(m.Getclose_period())
	}
	if m.Getclose_date() != 0 {
		x.Int(m.Getclose_date())
	}
	return x.Buf
}

// CodecDecode:poll
func (m *TLpoll) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setclosed(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setpublic_voters(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmultiple_choice(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setquiz(true)
	}
	m.Setquestion(dbuf.String())
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*PollAnswer, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &PollAnswer{}
		v6[i].Decode(dbuf)
	}
	m.Setanswers(v6)
	if (flags & (1 << 4)) != 0 {
		m.Setclose_period(dbuf.Int())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setclose_date(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:help_termsOfServiceUpdateEmpty
func (m *TLhelp_termsOfServiceUpdateEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-483352705)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:help_termsOfServiceUpdateEmpty
func (m *TLhelp_termsOfServiceUpdateEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_termsOfServiceUpdate
func (m *TLhelp_termsOfServiceUpdate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(686618977)
	x.Int(m.Getexpires())
	x.Bytes(m.Getterms_of_service().Encode())
	return x.Buf
}

// CodecDecode:help_termsOfServiceUpdate
func (m *TLhelp_termsOfServiceUpdate) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	m1 := &help_TermsOfService{}
	m1.Decode(dbuf)
	m.Setterms_of_service(m1)
	return dbuf.Err
}

// CodecEncode:inputEncryptedChat
func (m *TLinputEncryptedChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-247351839)
	x.Int(m.Getchat_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedChat
func (m *TLinputEncryptedChat) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:payments_bankCardData
func (m *TLpayments_bankCardData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1042605427)
	x.String(m.Gettitle())
	x.Int(481674261)
	x.Int(int32(len(m.Getopen_urls())))
	for _, v := range m.Getopen_urls() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_bankCardData
func (m *TLpayments_bankCardData) Decode(dbuf *DecodeBuf) error {
	m.Settitle(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*BankCardOpenUrl, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &BankCardOpenUrl{}
		v1[i].Decode(dbuf)
	}
	m.Setopen_urls(v1)
	return dbuf.Err
}

// CodecEncode:messages_messages
func (m *TLmessages_messages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1938715001)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messages
func (m *TLmessages_messages) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Message{}
		v0[i].Decode(dbuf)
	}
	m.Setmessages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:messages_messagesSlice
func (m *TLmessages_messagesSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(978610270)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 1
	}
	if m.Getnext_rate() != 0 {
		flags |= 1 << 0
	}
	if m.Getoffset_id_offset() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getcount())
	if m.Getnext_rate() != 0 {
		x.Int(m.Getnext_rate())
	}
	if m.Getoffset_id_offset() != 0 {
		x.Int(m.Getoffset_id_offset())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messagesSlice
func (m *TLmessages_messagesSlice) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setinexact(true)
	}
	m.Setcount(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setnext_rate(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setoffset_id_offset(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*Message, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &Message{}
		v4[i].Decode(dbuf)
	}
	m.Setmessages(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

// CodecEncode:messages_channelMessages
func (m *TLmessages_channelMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1682413576)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 1
	}
	if m.Getoffset_id_offset() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	x.Int(m.Getcount())
	if m.Getoffset_id_offset() != 0 {
		x.Int(m.Getoffset_id_offset())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_channelMessages
func (m *TLmessages_channelMessages) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setinexact(true)
	}
	m.Setpts(dbuf.Int())
	m.Setcount(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setoffset_id_offset(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*Message, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &Message{}
		v4[i].Decode(dbuf)
	}
	m.Setmessages(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

// CodecEncode:messages_messagesNotModified
func (m *TLmessages_messagesNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1951620897)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_messagesNotModified
func (m *TLmessages_messagesNotModified) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_termsOfService
func (m *TLhelp_termsOfService) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2013922064)
	var flags uint32 = 0
	if m.Getpopup() != false {
		flags |= 1 << 0
	}
	if m.Getmin_age_confirm() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	x.String(m.Gettext())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmin_age_confirm() != 0 {
		x.Int(m.Getmin_age_confirm())
	}
	return x.Buf
}

// CodecDecode:help_termsOfService
func (m *TLhelp_termsOfService) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpopup(true)
	}
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setid(m1)
	m.Settext(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*MessageEntity, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &MessageEntity{}
		v3[i].Decode(dbuf)
	}
	m.Setentities(v3)
	if (flags & (1 << 1)) != 0 {
		m.Setmin_age_confirm(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMessageID
func (m *TLinputMessageID) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1502174430)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:inputMessageID
func (m *TLinputMessageID) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputMessageReplyTo
func (m *TLinputMessageReplyTo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1160215659)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:inputMessageReplyTo
func (m *TLinputMessageReplyTo) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputMessagePinned
func (m *TLinputMessagePinned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2037963464)
	return x.Buf
}

// CodecDecode:inputMessagePinned
func (m *TLinputMessagePinned) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessageCallbackQuery
func (m *TLinputMessageCallbackQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1392895362)
	x.Int(m.Getid())
	x.Long(m.Getquery_id())
	return x.Buf
}

// CodecDecode:inputMessageCallbackQuery
func (m *TLinputMessageCallbackQuery) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setquery_id(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:recentMeUrlUnknown
func (m *TLrecentMeUrlUnknown) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1189204285)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:recentMeUrlUnknown
func (m *TLrecentMeUrlUnknown) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:recentMeUrlUser
func (m *TLrecentMeUrlUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1917045962)
	x.String(m.Geturl())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:recentMeUrlUser
func (m *TLrecentMeUrlUser) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:recentMeUrlChat
func (m *TLrecentMeUrlChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1608834311)
	x.String(m.Geturl())
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:recentMeUrlChat
func (m *TLrecentMeUrlChat) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:recentMeUrlChatInvite
func (m *TLrecentMeUrlChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-347535331)
	x.String(m.Geturl())
	x.Bytes(m.Getchat_invite().Encode())
	return x.Buf
}

// CodecDecode:recentMeUrlChatInvite
func (m *TLrecentMeUrlChatInvite) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m1 := &ChatInvite{}
	m1.Decode(dbuf)
	m.Setchat_invite(m1)
	return dbuf.Err
}

// CodecEncode:recentMeUrlStickerSet
func (m *TLrecentMeUrlStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1140172836)
	x.String(m.Geturl())
	x.Bytes(m.Getset().Encode())
	return x.Buf
}

// CodecDecode:recentMeUrlStickerSet
func (m *TLrecentMeUrlStickerSet) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m1 := &StickerSetCovered{}
	m1.Decode(dbuf)
	m.Setset(m1)
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueAllowContacts
func (m *TLinputPrivacyValueAllowContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(218751099)
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowContacts
func (m *TLinputPrivacyValueAllowContacts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueAllowAll
func (m *TLinputPrivacyValueAllowAll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(407582158)
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowAll
func (m *TLinputPrivacyValueAllowAll) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueAllowUsers
func (m *TLinputPrivacyValueAllowUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(320652927)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowUsers
func (m *TLinputPrivacyValueAllowUsers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueDisallowContacts
func (m *TLinputPrivacyValueDisallowContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(195371015)
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowContacts
func (m *TLinputPrivacyValueDisallowContacts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueDisallowAll
func (m *TLinputPrivacyValueDisallowAll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-697604407)
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowAll
func (m *TLinputPrivacyValueDisallowAll) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueDisallowUsers
func (m *TLinputPrivacyValueDisallowUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1877932953)
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowUsers
func (m *TLinputPrivacyValueDisallowUsers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*InputUser, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &InputUser{}
		v0[i].Decode(dbuf)
	}
	m.Setusers(v0)
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueAllowChatParticipants
func (m *TLinputPrivacyValueAllowChatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1283572154)
	x.VectorInt(m.Getchats())
	return x.Buf
}

// CodecDecode:inputPrivacyValueAllowChatParticipants
func (m *TLinputPrivacyValueAllowChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:inputPrivacyValueDisallowChatParticipants
func (m *TLinputPrivacyValueDisallowChatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-668769361)
	x.VectorInt(m.Getchats())
	return x.Buf
}

// CodecDecode:inputPrivacyValueDisallowChatParticipants
func (m *TLinputPrivacyValueDisallowChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:pageListItemText
func (m *TLpageListItemText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1188055347)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageListItemText
func (m *TLpageListItemText) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageListItemBlocks
func (m *TLpageListItemBlocks) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(635466748)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageListItemBlocks
func (m *TLpageListItemBlocks) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setblocks(v0)
	return dbuf.Err
}

// CodecEncode:webPageAttributeTheme
func (m *TLwebPageAttributeTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1421174295)
	var flags uint32 = 0
	if len(m.Getdocuments()) > 0 {
		flags |= 1 << 0
	}
	if m.Getsettings() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if len(m.Getdocuments()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getdocuments())))
		for _, v := range m.Getdocuments() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:webPageAttributeTheme
func (m *TLwebPageAttributeTheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		c0 := dbuf.Int()
		if c0 != 481674261 {
			return dbuf.Err
		}
		l0 := dbuf.Int()
		v0 := make([]*Document, l0)
		for i := int32(0); i < l0; i++ {
			v0[i] = &Document{}
			v0[i].Decode(dbuf)
		}
		m.Setdocuments(v0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &ThemeSettings{}
		m1.Decode(dbuf)
		m.Setsettings(m1)
	}
	return dbuf.Err
}

// CodecEncode:urlAuthResultRequest
func (m *TLurlAuthResultRequest) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1831650802)
	var flags uint32 = 0
	if m.Getrequest_write_access() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getbot().Encode())
	x.String(m.Getdomain())
	return x.Buf
}

// CodecDecode:urlAuthResultRequest
func (m *TLurlAuthResultRequest) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequest_write_access(true)
	}
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setbot(m1)
	m.Setdomain(dbuf.String())
	return dbuf.Err
}

// CodecEncode:urlAuthResultAccepted
func (m *TLurlAuthResultAccepted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1886646706)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:urlAuthResultAccepted
func (m *TLurlAuthResultAccepted) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:urlAuthResultDefault
func (m *TLurlAuthResultDefault) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1445536993)
	return x.Buf
}

// CodecDecode:urlAuthResultDefault
func (m *TLurlAuthResultDefault) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:chatParticipant
func (m *TLchatParticipant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-925415106)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:chatParticipant
func (m *TLchatParticipant) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatParticipantCreator
func (m *TLchatParticipantCreator) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-636267638)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:chatParticipantCreator
func (m *TLchatParticipantCreator) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatParticipantAdmin
func (m *TLchatParticipantAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-489233354)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:chatParticipantAdmin
func (m *TLchatParticipantAdmin) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelMessagesFilterEmpty
func (m *TLchannelMessagesFilterEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1798033689)
	return x.Buf
}

// CodecDecode:channelMessagesFilterEmpty
func (m *TLchannelMessagesFilterEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelMessagesFilter
func (m *TLchannelMessagesFilter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-847783593)
	var flags uint32 = 0
	if m.Getexclude_new_messages() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getranges())))
	for _, v := range m.Getranges() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channelMessagesFilter
func (m *TLchannelMessagesFilter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setexclude_new_messages(true)
	}
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*MessageRange, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &MessageRange{}
		v1[i].Decode(dbuf)
	}
	m.Setranges(v1)
	return dbuf.Err
}

// CodecEncode:help_countryCode
func (m *TLhelp_countryCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1107543535)
	var flags uint32 = 0
	if m.Getprefixes() != nil {
		flags |= 1 << 0
	}
	if m.Getpatterns() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Getcountry_code())
	if m.Getprefixes() != nil {
		x.VectorString(m.Getprefixes())
	}
	if m.Getpatterns() != nil {
		x.VectorString(m.Getpatterns())
	}
	return x.Buf
}

// CodecDecode:help_countryCode
func (m *TLhelp_countryCode) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcountry_code(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setprefixes(dbuf.VectorString())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setpatterns(dbuf.VectorString())
	}
	return dbuf.Err
}

// CodecEncode:auth_codeTypeSms
func (m *TLauth_codeTypeSms) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1923290508)
	return x.Buf
}

// CodecDecode:auth_codeTypeSms
func (m *TLauth_codeTypeSms) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:auth_codeTypeCall
func (m *TLauth_codeTypeCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1948046307)
	return x.Buf
}

// CodecDecode:auth_codeTypeCall
func (m *TLauth_codeTypeCall) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:auth_codeTypeFlashCall
func (m *TLauth_codeTypeFlashCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(577556219)
	return x.Buf
}

// CodecDecode:auth_codeTypeFlashCall
func (m *TLauth_codeTypeFlashCall) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:account_webAuthorizations
func (m *TLaccount_webAuthorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-313079300)
	x.Int(481674261)
	x.Int(int32(len(m.Getauthorizations())))
	for _, v := range m.Getauthorizations() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_webAuthorizations
func (m *TLaccount_webAuthorizations) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*WebAuthorization, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &WebAuthorization{}
		v0[i].Decode(dbuf)
	}
	m.Setauthorizations(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:messages_savedGifsNotModified
func (m *TLmessages_savedGifsNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-402498398)
	return x.Buf
}

// CodecDecode:messages_savedGifsNotModified
func (m *TLmessages_savedGifsNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_savedGifs
func (m *TLmessages_savedGifs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(772213157)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getgifs())))
	for _, v := range m.Getgifs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_savedGifs
func (m *TLmessages_savedGifs) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Document{}
		v1[i].Decode(dbuf)
	}
	m.Setgifs(v1)
	return dbuf.Err
}

// CodecEncode:statsGraphAsync
func (m *TLstatsGraphAsync) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1244130093)
	x.String(m.Gettoken())
	return x.Buf
}

// CodecDecode:statsGraphAsync
func (m *TLstatsGraphAsync) Decode(dbuf *DecodeBuf) error {
	m.Settoken(dbuf.String())
	return dbuf.Err
}

// CodecEncode:statsGraphError
func (m *TLstatsGraphError) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1092839390)
	x.String(m.Geterror())
	return x.Buf
}

// CodecDecode:statsGraphError
func (m *TLstatsGraphError) Decode(dbuf *DecodeBuf) error {
	m.Seterror(dbuf.String())
	return dbuf.Err
}

// CodecEncode:statsGraph
func (m *TLstatsGraph) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1901828938)
	var flags uint32 = 0
	if m.Getzoom_token() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getjson().Encode())
	if m.Getzoom_token() != "" {
		x.String(m.Getzoom_token())
	}
	return x.Buf
}

// CodecDecode:statsGraph
func (m *TLstatsGraph) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setjson(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setzoom_token(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:pageTableCell
func (m *TLpageTableCell) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(878078826)
	var flags uint32 = 0
	if m.Getheader() != false {
		flags |= 1 << 0
	}
	if m.Getalign_center() != false {
		flags |= 1 << 3
	}
	if m.Getalign_right() != false {
		flags |= 1 << 4
	}
	if m.Getvalign_middle() != false {
		flags |= 1 << 5
	}
	if m.Getvalign_bottom() != false {
		flags |= 1 << 6
	}
	if m.Gettext() != nil {
		flags |= 1 << 7
	}
	if m.Getcolspan() != 0 {
		flags |= 1 << 1
	}
	if m.Getrowspan() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Gettext() != nil {
		x.Bytes(m.Gettext().Encode())
	}
	if m.Getcolspan() != 0 {
		x.Int(m.Getcolspan())
	}
	if m.Getrowspan() != 0 {
		x.Int(m.Getrowspan())
	}
	return x.Buf
}

// CodecDecode:pageTableCell
func (m *TLpageTableCell) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setheader(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setalign_center(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setalign_right(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setvalign_middle(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setvalign_bottom(true)
	}
	if (flags & (1 << 7)) != 0 {
		m5 := &RichText{}
		m5.Decode(dbuf)
		m.Settext(m5)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcolspan(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setrowspan(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:baseThemeClassic
func (m *TLbaseThemeClassic) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1012849566)
	return x.Buf
}

// CodecDecode:baseThemeClassic
func (m *TLbaseThemeClassic) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:baseThemeDay
func (m *TLbaseThemeDay) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-69724536)
	return x.Buf
}

// CodecDecode:baseThemeDay
func (m *TLbaseThemeDay) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:baseThemeNight
func (m *TLbaseThemeNight) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1212997976)
	return x.Buf
}

// CodecDecode:baseThemeNight
func (m *TLbaseThemeNight) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:baseThemeTinted
func (m *TLbaseThemeTinted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1834973166)
	return x.Buf
}

// CodecDecode:baseThemeTinted
func (m *TLbaseThemeTinted) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:baseThemeArctic
func (m *TLbaseThemeArctic) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1527845466)
	return x.Buf
}

// CodecDecode:baseThemeArctic
func (m *TLbaseThemeArctic) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updates_state
func (m *TLupdates_state) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1519637954)
	x.Int(m.Getpts())
	x.Int(m.Getqts())
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	x.Int(m.Getunread_count())
	return x.Buf
}

// CodecDecode:updates_state
func (m *TLupdates_state) Decode(dbuf *DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setqts(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_highScores
func (m *TLmessages_highScores) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1707344487)
	x.Int(481674261)
	x.Int(int32(len(m.Getscores())))
	for _, v := range m.Getscores() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_highScores
func (m *TLmessages_highScores) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*HighScore, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &HighScore{}
		v0[i].Decode(dbuf)
	}
	m.Setscores(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:dialog
func (m *TLdialog) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(739712882)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 2
	}
	if m.Getunread_mark() != false {
		flags |= 1 << 3
	}
	if m.Getpts() != 0 {
		flags |= 1 << 0
	}
	if m.Getdraft() != nil {
		flags |= 1 << 1
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gettop_message())
	x.Int(m.Getread_inbox_max_id())
	x.Int(m.Getread_outbox_max_id())
	x.Int(m.Getunread_count())
	x.Int(m.Getunread_mentions_count())
	x.Bytes(m.Getnotify_settings().Encode())
	if m.Getpts() != 0 {
		x.Int(m.Getpts())
	}
	if m.Getdraft() != nil {
		x.Bytes(m.Getdraft().Encode())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:dialog
func (m *TLdialog) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setunread_mark(true)
	}
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Settop_message(dbuf.Int())
	m.Setread_inbox_max_id(dbuf.Int())
	m.Setread_outbox_max_id(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	m.Setunread_mentions_count(dbuf.Int())
	m8 := &PeerNotifySettings{}
	m8.Decode(dbuf)
	m.Setnotify_settings(m8)
	if (flags & (1 << 0)) != 0 {
		m.Setpts(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m10 := &DraftMessage{}
		m10.Decode(dbuf)
		m.Setdraft(m10)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:dialogFolder
func (m *TLdialogFolder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1908216652)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getfolder().Encode())
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Gettop_message())
	x.Int(m.Getunread_muted_peers_count())
	x.Int(m.Getunread_unmuted_peers_count())
	x.Int(m.Getunread_muted_messages_count())
	x.Int(m.Getunread_unmuted_messages_count())
	return x.Buf
}

// CodecDecode:dialogFolder
func (m *TLdialogFolder) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setpinned(true)
	}
	m1 := &Folder{}
	m1.Decode(dbuf)
	m.Setfolder(m1)
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	m.Settop_message(dbuf.Int())
	m.Setunread_muted_peers_count(dbuf.Int())
	m.Setunread_unmuted_peers_count(dbuf.Int())
	m.Setunread_muted_messages_count(dbuf.Int())
	m.Setunread_unmuted_messages_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:secureValueHash
func (m *TLsecureValueHash) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-316748368)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:secureValueHash
func (m *TLsecureValueHash) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:textEmpty
func (m *TLtextEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-599948721)
	return x.Buf
}

// CodecDecode:textEmpty
func (m *TLtextEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:textPlain
func (m *TLtextPlain) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1950782688)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:textPlain
func (m *TLtextPlain) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:textBold
func (m *TLtextBold) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1730456516)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textBold
func (m *TLtextBold) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textItalic
func (m *TLtextItalic) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-653089380)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textItalic
func (m *TLtextItalic) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textUnderline
func (m *TLtextUnderline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1054465340)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textUnderline
func (m *TLtextUnderline) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textStrike
func (m *TLtextStrike) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1678197867)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textStrike
func (m *TLtextStrike) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textFixed
func (m *TLtextFixed) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1816074681)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textFixed
func (m *TLtextFixed) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textUrl
func (m *TLtextUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1009288385)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	return x.Buf
}

// CodecDecode:textUrl
func (m *TLtextUrl) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:textEmail
func (m *TLtextEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-564523562)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:textEmail
func (m *TLtextEmail) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setemail(dbuf.String())
	return dbuf.Err
}

// CodecEncode:textConcat
func (m *TLtextConcat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2120376535)
	x.Int(481674261)
	x.Int(int32(len(m.Gettexts())))
	for _, v := range m.Gettexts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:textConcat
func (m *TLtextConcat) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*RichText, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &RichText{}
		v0[i].Decode(dbuf)
	}
	m.Settexts(v0)
	return dbuf.Err
}

// CodecEncode:textSubscript
func (m *TLtextSubscript) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-311786236)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textSubscript
func (m *TLtextSubscript) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textSuperscript
func (m *TLtextSuperscript) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-939827711)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textSuperscript
func (m *TLtextSuperscript) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textMarked
func (m *TLtextMarked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(55281185)
	x.Bytes(m.Gettext_2().Encode())
	return x.Buf
}

// CodecDecode:textMarked
func (m *TLtextMarked) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	return dbuf.Err
}

// CodecEncode:textPhone
func (m *TLtextPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(483104362)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:textPhone
func (m *TLtextPhone) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setphone(dbuf.String())
	return dbuf.Err
}

// CodecEncode:textImage
func (m *TLtextImage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(136105807)
	x.Long(m.Getdocument_id())
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:textImage
func (m *TLtextImage) Decode(dbuf *DecodeBuf) error {
	m.Setdocument_id(dbuf.Long())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:textAnchor
func (m *TLtextAnchor) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(894777186)
	x.Bytes(m.Gettext_2().Encode())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:textAnchor
func (m *TLtextAnchor) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext_2(m0)
	m.Setname(dbuf.String())
	return dbuf.Err
}

// CodecEncode:chatEmpty
func (m *TLchatEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1683826688)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:chatEmpty
func (m *TLchatEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chat
func (m *TLchat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1004149726)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 1 << 0
	}
	if m.Getkicked() != false {
		flags |= 1 << 1
	}
	if m.Getleft() != false {
		flags |= 1 << 2
	}
	if m.Getdeactivated() != false {
		flags |= 1 << 5
	}
	if m.Getcall_active() != false {
		flags |= 1 << 23
	}
	if m.Getcall_not_empty() != false {
		flags |= 1 << 24
	}
	if m.Getmigrated_to() != nil {
		flags |= 1 << 6
	}
	if m.Getadmin_rights() != nil {
		flags |= 1 << 14
	}
	if m.Getdefault_banned_rights() != nil {
		flags |= 1 << 18
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getparticipants_count())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	if m.Getmigrated_to() != nil {
		x.Bytes(m.Getmigrated_to().Encode())
	}
	if m.Getadmin_rights() != nil {
		x.Bytes(m.Getadmin_rights().Encode())
	}
	if m.Getdefault_banned_rights() != nil {
		x.Bytes(m.Getdefault_banned_rights().Encode())
	}
	return x.Buf
}

// CodecDecode:chat
func (m *TLchat) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setkicked(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setleft(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setdeactivated(true)
	}
	if (flags & (1 << 23)) != 0 {
		m.Setcall_active(true)
	}
	if (flags & (1 << 24)) != 0 {
		m.Setcall_not_empty(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	m8 := &ChatPhoto{}
	m8.Decode(dbuf)
	m.Setphoto(m8)
	m.Setparticipants_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	if (flags & (1 << 6)) != 0 {
		m12 := &InputChannel{}
		m12.Decode(dbuf)
		m.Setmigrated_to(m12)
	}
	if (flags & (1 << 14)) != 0 {
		m13 := &ChatAdminRights{}
		m13.Decode(dbuf)
		m.Setadmin_rights(m13)
	}
	if (flags & (1 << 18)) != 0 {
		m14 := &ChatBannedRights{}
		m14.Decode(dbuf)
		m.Setdefault_banned_rights(m14)
	}
	return dbuf.Err
}

// CodecEncode:chatForbidden
func (m *TLchatForbidden) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(120753115)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:chatForbidden
func (m *TLchatForbidden) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channel
func (m *TLchannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-753232354)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 1 << 0
	}
	if m.Getleft() != false {
		flags |= 1 << 2
	}
	if m.Getbroadcast() != false {
		flags |= 1 << 5
	}
	if m.Getverified() != false {
		flags |= 1 << 7
	}
	if m.Getmegagroup() != false {
		flags |= 1 << 8
	}
	if m.Getrestricted() != false {
		flags |= 1 << 9
	}
	if m.Getsignatures() != false {
		flags |= 1 << 11
	}
	if m.Getmin() != false {
		flags |= 1 << 12
	}
	if m.Getscam() != false {
		flags |= 1 << 19
	}
	if m.Gethas_link() != false {
		flags |= 1 << 20
	}
	if m.Gethas_geo() != false {
		flags |= 1 << 21
	}
	if m.Getslowmode_enabled() != false {
		flags |= 1 << 22
	}
	if m.Getcall_active() != false {
		flags |= 1 << 23
	}
	if m.Getcall_not_empty() != false {
		flags |= 1 << 24
	}
	if m.Getaccess_hash() != 0 {
		flags |= 1 << 13
	}
	if m.Getusername() != "" {
		flags |= 1 << 6
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 1 << 9
	}
	if m.Getadmin_rights() != nil {
		flags |= 1 << 14
	}
	if m.Getbanned_rights() != nil {
		flags |= 1 << 15
	}
	if m.Getdefault_banned_rights() != nil {
		flags |= 1 << 18
	}
	if m.Getparticipants_count() != 0 {
		flags |= 1 << 17
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getaccess_hash() != 0 {
		x.Long(m.Getaccess_hash())
	}
	x.String(m.Gettitle())
	if m.Getusername() != "" {
		x.String(m.Getusername())
	}
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getadmin_rights() != nil {
		x.Bytes(m.Getadmin_rights().Encode())
	}
	if m.Getbanned_rights() != nil {
		x.Bytes(m.Getbanned_rights().Encode())
	}
	if m.Getdefault_banned_rights() != nil {
		x.Bytes(m.Getdefault_banned_rights().Encode())
	}
	if m.Getparticipants_count() != 0 {
		x.Int(m.Getparticipants_count())
	}
	return x.Buf
}

// CodecDecode:channel
func (m *TLchannel) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setleft(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setverified(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setmegagroup(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setrestricted(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setsignatures(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 19)) != 0 {
		m.Setscam(true)
	}
	if (flags & (1 << 20)) != 0 {
		m.Sethas_link(true)
	}
	if (flags & (1 << 21)) != 0 {
		m.Sethas_geo(true)
	}
	if (flags & (1 << 22)) != 0 {
		m.Setslowmode_enabled(true)
	}
	if (flags & (1 << 23)) != 0 {
		m.Setcall_active(true)
	}
	if (flags & (1 << 24)) != 0 {
		m.Setcall_not_empty(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 13)) != 0 {
		m.Setaccess_hash(dbuf.Long())
	}
	m.Settitle(dbuf.String())
	if (flags & (1 << 6)) != 0 {
		m.Setusername(dbuf.String())
	}
	m18 := &ChatPhoto{}
	m18.Decode(dbuf)
	m.Setphoto(m18)
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	if (flags & (1 << 9)) != 0 {
		c21 := dbuf.Int()
		if c21 != 481674261 {
			return dbuf.Err
		}
		l21 := dbuf.Int()
		v21 := make([]*RestrictionReason, l21)
		for i := int32(0); i < l21; i++ {
			v21[i] = &RestrictionReason{}
			v21[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v21)
	}
	if (flags & (1 << 14)) != 0 {
		m22 := &ChatAdminRights{}
		m22.Decode(dbuf)
		m.Setadmin_rights(m22)
	}
	if (flags & (1 << 15)) != 0 {
		m23 := &ChatBannedRights{}
		m23.Decode(dbuf)
		m.Setbanned_rights(m23)
	}
	if (flags & (1 << 18)) != 0 {
		m24 := &ChatBannedRights{}
		m24.Decode(dbuf)
		m.Setdefault_banned_rights(m24)
	}
	if (flags & (1 << 17)) != 0 {
		m.Setparticipants_count(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:channelForbidden
func (m *TLchannelForbidden) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(681420594)
	var flags uint32 = 0
	if m.Getbroadcast() != false {
		flags |= 1 << 5
	}
	if m.Getmegagroup() != false {
		flags |= 1 << 8
	}
	if m.Getuntil_date() != 0 {
		flags |= 1 << 16
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Gettitle())
	if m.Getuntil_date() != 0 {
		x.Int(m.Getuntil_date())
	}
	return x.Buf
}

// CodecDecode:channelForbidden
func (m *TLchannelForbidden) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setmegagroup(true)
	}
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Settitle(dbuf.String())
	if (flags & (1 << 16)) != 0 {
		m.Setuntil_date(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:langPackString
func (m *TLlangPackString) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-892239370)
	x.String(m.Getkey())
	x.String(m.Getvalue())
	return x.Buf
}

// CodecDecode:langPackString
func (m *TLlangPackString) Decode(dbuf *DecodeBuf) error {
	m.Setkey(dbuf.String())
	m.Setvalue(dbuf.String())
	return dbuf.Err
}

// CodecEncode:langPackStringPluralized
func (m *TLlangPackStringPluralized) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1816636575)
	var flags uint32 = 0
	if m.Getzero_value() != "" {
		flags |= 1 << 0
	}
	if m.Getone_value() != "" {
		flags |= 1 << 1
	}
	if m.Gettwo_value() != "" {
		flags |= 1 << 2
	}
	if m.Getfew_value() != "" {
		flags |= 1 << 3
	}
	if m.Getmany_value() != "" {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.String(m.Getkey())
	if m.Getzero_value() != "" {
		x.String(m.Getzero_value())
	}
	if m.Getone_value() != "" {
		x.String(m.Getone_value())
	}
	if m.Gettwo_value() != "" {
		x.String(m.Gettwo_value())
	}
	if m.Getfew_value() != "" {
		x.String(m.Getfew_value())
	}
	if m.Getmany_value() != "" {
		x.String(m.Getmany_value())
	}
	x.String(m.Getother_value())
	return x.Buf
}

// CodecDecode:langPackStringPluralized
func (m *TLlangPackStringPluralized) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setkey(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setzero_value(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setone_value(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Settwo_value(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setfew_value(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmany_value(dbuf.String())
	}
	m.Setother_value(dbuf.String())
	return dbuf.Err
}

// CodecEncode:langPackStringDeleted
func (m *TLlangPackStringDeleted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(695856818)
	x.String(m.Getkey())
	return x.Buf
}

// CodecDecode:langPackStringDeleted
func (m *TLlangPackStringDeleted) Decode(dbuf *DecodeBuf) error {
	m.Setkey(dbuf.String())
	return dbuf.Err
}

// CodecEncode:dialogFilter
func (m *TLdialogFilter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1949890536)
	var flags uint32 = 0
	if m.Getcontacts() != false {
		flags |= 1 << 0
	}
	if m.Getnon_contacts() != false {
		flags |= 1 << 1
	}
	if m.Getgroups() != false {
		flags |= 1 << 2
	}
	if m.Getbroadcasts() != false {
		flags |= 1 << 3
	}
	if m.Getbots() != false {
		flags |= 1 << 4
	}
	if m.Getexclude_muted() != false {
		flags |= 1 << 11
	}
	if m.Getexclude_read() != false {
		flags |= 1 << 12
	}
	if m.Getexclude_archived() != false {
		flags |= 1 << 13
	}
	if m.Getemoticon() != "" {
		flags |= 1 << 25
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	if m.Getemoticon() != "" {
		x.String(m.Getemoticon())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getpinned_peers())))
	for _, v := range m.Getpinned_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getinclude_peers())))
	for _, v := range m.Getinclude_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getexclude_peers())))
	for _, v := range m.Getexclude_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:dialogFilter
func (m *TLdialogFilter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcontacts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setnon_contacts(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setgroups(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setbroadcasts(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setbots(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setexclude_muted(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setexclude_read(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setexclude_archived(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	if (flags & (1 << 25)) != 0 {
		m.Setemoticon(dbuf.String())
	}
	c11 := dbuf.Int()
	if c11 != 481674261 {
		return dbuf.Err
	}
	l11 := dbuf.Int()
	v11 := make([]*InputPeer, l11)
	for i := int32(0); i < l11; i++ {
		v11[i] = &InputPeer{}
		v11[i].Decode(dbuf)
	}
	m.Setpinned_peers(v11)
	c12 := dbuf.Int()
	if c12 != 481674261 {
		return dbuf.Err
	}
	l12 := dbuf.Int()
	v12 := make([]*InputPeer, l12)
	for i := int32(0); i < l12; i++ {
		v12[i] = &InputPeer{}
		v12[i].Decode(dbuf)
	}
	m.Setinclude_peers(v12)
	c13 := dbuf.Int()
	if c13 != 481674261 {
		return dbuf.Err
	}
	l13 := dbuf.Int()
	v13 := make([]*InputPeer, l13)
	for i := int32(0); i < l13; i++ {
		v13[i] = &InputPeer{}
		v13[i].Decode(dbuf)
	}
	m.Setexclude_peers(v13)
	return dbuf.Err
}

// CodecEncode:emojiLanguage
func (m *TLemojiLanguage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1275374751)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:emojiLanguage
func (m *TLemojiLanguage) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

// CodecEncode:account_themesNotModified
func (m *TLaccount_themesNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-199313886)
	return x.Buf
}

// CodecDecode:account_themesNotModified
func (m *TLaccount_themesNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:account_themes
func (m *TLaccount_themes) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2137482273)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getthemes())))
	for _, v := range m.Getthemes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_themes
func (m *TLaccount_themes) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Theme, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Theme{}
		v1[i].Decode(dbuf)
	}
	m.Setthemes(v1)
	return dbuf.Err
}

// CodecEncode:peerLocated
func (m *TLpeerLocated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-901375139)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getexpires())
	x.Int(m.Getdistance())
	return x.Buf
}

// CodecDecode:peerLocated
func (m *TLpeerLocated) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setexpires(dbuf.Int())
	m.Setdistance(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:peerSelfLocated
func (m *TLpeerSelfLocated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-118740917)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:peerSelfLocated
func (m *TLpeerSelfLocated) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:account_sentEmailCode
func (m *TLaccount_sentEmailCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2128640689)
	x.String(m.Getemail_pattern())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:account_sentEmailCode
func (m *TLaccount_sentEmailCode) Decode(dbuf *DecodeBuf) error {
	m.Setemail_pattern(dbuf.String())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputTheme
func (m *TLinputTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1012306921)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputTheme
func (m *TLinputTheme) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputThemeSlug
func (m *TLinputThemeSlug) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-175567375)
	x.String(m.Getslug())
	return x.Buf
}

// CodecDecode:inputThemeSlug
func (m *TLinputThemeSlug) Decode(dbuf *DecodeBuf) error {
	m.Setslug(dbuf.String())
	return dbuf.Err
}

// CodecEncode:draftMessageEmpty
func (m *TLdraftMessageEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(453805082)
	var flags uint32 = 0
	if m.Getdate() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getdate() != 0 {
		x.Int(m.Getdate())
	}
	return x.Buf
}

// CodecDecode:draftMessageEmpty
func (m *TLdraftMessageEmpty) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdate(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:draftMessage
func (m *TLdraftMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-40996577)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 1
	}
	if m.Getreply_to_msg_id() != 0 {
		flags |= 1 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	if m.Getreply_to_msg_id() != 0 {
		x.Int(m.Getreply_to_msg_id())
	}
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:draftMessage
func (m *TLdraftMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setno_webpage(true)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setreply_to_msg_id(dbuf.Int())
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]*MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setentities(v3)
	}
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:payments_paymentResult
func (m *TLpayments_paymentResult) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1314881805)
	x.Bytes(m.Getupdates().Encode())
	return x.Buf
}

// CodecDecode:payments_paymentResult
func (m *TLpayments_paymentResult) Decode(dbuf *DecodeBuf) error {
	m0 := &Updates{}
	m0.Decode(dbuf)
	m.Setupdates(m0)
	return dbuf.Err
}

// CodecEncode:payments_paymentVerificationNeeded
func (m *TLpayments_paymentVerificationNeeded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-666824391)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:payments_paymentVerificationNeeded
func (m *TLpayments_paymentVerificationNeeded) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_foundStickerSetsNotModified
func (m *TLmessages_foundStickerSetsNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(223655517)
	return x.Buf
}

// CodecDecode:messages_foundStickerSetsNotModified
func (m *TLmessages_foundStickerSetsNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_foundStickerSets
func (m *TLmessages_foundStickerSets) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1359533640)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_foundStickerSets
func (m *TLmessages_foundStickerSets) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerSetCovered, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerSetCovered{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

// CodecEncode:game
func (m *TLgame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1107729093)
	var flags uint32 = 0
	if m.Getdocument() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getshort_name())
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	x.Bytes(m.Getphoto().Encode())
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	return x.Buf
}

// CodecDecode:game
func (m *TLgame) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setshort_name(dbuf.String())
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	m5 := &Photo{}
	m5.Decode(dbuf)
	m.Setphoto(m5)
	if (flags & (1 << 0)) != 0 {
		m6 := &Document{}
		m6.Decode(dbuf)
		m.Setdocument(m6)
	}
	return dbuf.Err
}

// CodecEncode:webPageEmpty
func (m *TLwebPageEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-350980120)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:webPageEmpty
func (m *TLwebPageEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:webPagePending
func (m *TLwebPagePending) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-981018084)
	x.Long(m.Getid())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:webPagePending
func (m *TLwebPagePending) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:webPage
func (m *TLwebPage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-392411726)
	var flags uint32 = 0
	if m.Gettype_key() != "" {
		flags |= 1 << 0
	}
	if m.Getsite_name() != "" {
		flags |= 1 << 1
	}
	if m.Gettitle() != "" {
		flags |= 1 << 2
	}
	if m.Getdescription() != "" {
		flags |= 1 << 3
	}
	if m.Getphoto() != nil {
		flags |= 1 << 4
	}
	if m.Getembed_url() != "" {
		flags |= 1 << 5
	}
	if m.Getembed_type() != "" {
		flags |= 1 << 5
	}
	if m.Getembed_width() != 0 {
		flags |= 1 << 6
	}
	if m.Getembed_height() != 0 {
		flags |= 1 << 6
	}
	if m.Getduration() != 0 {
		flags |= 1 << 7
	}
	if m.Getauthor() != "" {
		flags |= 1 << 8
	}
	if m.Getdocument() != nil {
		flags |= 1 << 9
	}
	if m.Getcached_page() != nil {
		flags |= 1 << 10
	}
	if len(m.Getattributes()) > 0 {
		flags |= 1 << 12
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Geturl())
	x.String(m.Getdisplay_url())
	x.Int(m.Gethash())
	if m.Gettype_key() != "" {
		x.String(m.Gettype_key())
	}
	if m.Getsite_name() != "" {
		x.String(m.Getsite_name())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getembed_url() != "" {
		x.String(m.Getembed_url())
	}
	if m.Getembed_type() != "" {
		x.String(m.Getembed_type())
	}
	if m.Getembed_width() != 0 {
		x.Int(m.Getembed_width())
	}
	if m.Getembed_height() != 0 {
		x.Int(m.Getembed_height())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	if m.Getauthor() != "" {
		x.String(m.Getauthor())
	}
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getcached_page() != nil {
		x.Bytes(m.Getcached_page().Encode())
	}
	if len(m.Getattributes()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getattributes())))
		for _, v := range m.Getattributes() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:webPage
func (m *TLwebPage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Seturl(dbuf.String())
	m.Setdisplay_url(dbuf.String())
	m.Sethash(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Settype_key(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsite_name(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m8 := &Photo{}
		m8.Decode(dbuf)
		m.Setphoto(m8)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setembed_url(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setembed_type(dbuf.String())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setembed_width(dbuf.Int())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setembed_height(dbuf.Int())
	}
	if (flags & (1 << 7)) != 0 {
		m.Setduration(dbuf.Int())
	}
	if (flags & (1 << 8)) != 0 {
		m.Setauthor(dbuf.String())
	}
	if (flags & (1 << 9)) != 0 {
		m15 := &Document{}
		m15.Decode(dbuf)
		m.Setdocument(m15)
	}
	if (flags & (1 << 10)) != 0 {
		m16 := &Page{}
		m16.Decode(dbuf)
		m.Setcached_page(m16)
	}
	if (flags & (1 << 12)) != 0 {
		c17 := dbuf.Int()
		if c17 != 481674261 {
			return dbuf.Err
		}
		l17 := dbuf.Int()
		v17 := make([]*WebPageAttribute, l17)
		for i := int32(0); i < l17; i++ {
			v17[i] = &WebPageAttribute{}
			v17[i].Decode(dbuf)
		}
		m.Setattributes(v17)
	}
	return dbuf.Err
}

// CodecEncode:webPageNotModified
func (m *TLwebPageNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1930545681)
	var flags uint32 = 0
	if m.Getcached_page_views() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getcached_page_views() != 0 {
		x.Int(m.Getcached_page_views())
	}
	return x.Buf
}

// CodecDecode:webPageNotModified
func (m *TLwebPageNotModified) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcached_page_views(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputStickeredMediaPhoto
func (m *TLinputStickeredMediaPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1251549527)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:inputStickeredMediaPhoto
func (m *TLinputStickeredMediaPhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

// CodecEncode:inputStickeredMediaDocument
func (m *TLinputStickeredMediaDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(70813275)
	x.Bytes(m.Getid_2().Encode())
	return x.Buf
}

// CodecDecode:inputStickeredMediaDocument
func (m *TLinputStickeredMediaDocument) Decode(dbuf *DecodeBuf) error {
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid_2(m0)
	return dbuf.Err
}

// CodecEncode:channels_adminLogResults
func (m *TLchannels_adminLogResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-309659827)
	x.Int(481674261)
	x.Int(int32(len(m.Getevents())))
	for _, v := range m.Getevents() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_adminLogResults
func (m *TLchannels_adminLogResults) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*ChannelAdminLogEvent, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &ChannelAdminLogEvent{}
		v0[i].Decode(dbuf)
	}
	m.Setevents(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:messages_votesList
func (m *TLmessages_votesList) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(136574537)
	var flags uint32 = 0
	if m.Getnext_offset() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getvotes())))
	for _, v := range m.Getvotes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	return x.Buf
}

// CodecDecode:messages_votesList
func (m *TLmessages_votesList) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*MessageUserVote, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &MessageUserVote{}
		v1[i].Decode(dbuf)
	}
	m.Setvotes(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	if (flags & (1 << 0)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:securePasswordKdfAlgoUnknown
func (m *TLsecurePasswordKdfAlgoUnknown) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(4883767)
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoUnknown
func (m *TLsecurePasswordKdfAlgoUnknown) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:securePasswordKdfAlgoPBKDF2HMACSHA512iter100000
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1141711456)
	x.Bytes(m.Getsalt())
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoPBKDF2HMACSHA512iter100000
func (m *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000) Decode(dbuf *DecodeBuf) error {
	m.Setsalt(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:securePasswordKdfAlgoSHA512
func (m *TLsecurePasswordKdfAlgoSHA512) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2042159726)
	x.Bytes(m.Getsalt())
	return x.Buf
}

// CodecDecode:securePasswordKdfAlgoSHA512
func (m *TLsecurePasswordKdfAlgoSHA512) Decode(dbuf *DecodeBuf) error {
	m.Setsalt(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:payments_savedInfo
func (m *TLpayments_savedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-74456004)
	var flags uint32 = 0
	if m.Gethas_saved_credentials() != false {
		flags |= 1 << 1
	}
	if m.Getsaved_info() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getsaved_info() != nil {
		x.Bytes(m.Getsaved_info().Encode())
	}
	return x.Buf
}

// CodecDecode:payments_savedInfo
func (m *TLpayments_savedInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Sethas_saved_credentials(true)
	}
	if (flags & (1 << 0)) != 0 {
		m1 := &PaymentRequestedInfo{}
		m1.Decode(dbuf)
		m.Setsaved_info(m1)
	}
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterEmpty
func (m *TLinputMessagesFilterEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1474492012)
	return x.Buf
}

// CodecDecode:inputMessagesFilterEmpty
func (m *TLinputMessagesFilterEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterPhotos
func (m *TLinputMessagesFilterPhotos) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1777752804)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhotos
func (m *TLinputMessagesFilterPhotos) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterVideo
func (m *TLinputMessagesFilterVideo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1614803355)
	return x.Buf
}

// CodecDecode:inputMessagesFilterVideo
func (m *TLinputMessagesFilterVideo) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterPhotoVideo
func (m *TLinputMessagesFilterPhotoVideo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1458172132)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhotoVideo
func (m *TLinputMessagesFilterPhotoVideo) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterDocument
func (m *TLinputMessagesFilterDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1629621880)
	return x.Buf
}

// CodecDecode:inputMessagesFilterDocument
func (m *TLinputMessagesFilterDocument) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterUrl
func (m *TLinputMessagesFilterUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2129714567)
	return x.Buf
}

// CodecDecode:inputMessagesFilterUrl
func (m *TLinputMessagesFilterUrl) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterGif
func (m *TLinputMessagesFilterGif) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-3644025)
	return x.Buf
}

// CodecDecode:inputMessagesFilterGif
func (m *TLinputMessagesFilterGif) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterVoice
func (m *TLinputMessagesFilterVoice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1358283666)
	return x.Buf
}

// CodecDecode:inputMessagesFilterVoice
func (m *TLinputMessagesFilterVoice) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterMusic
func (m *TLinputMessagesFilterMusic) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(928101534)
	return x.Buf
}

// CodecDecode:inputMessagesFilterMusic
func (m *TLinputMessagesFilterMusic) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterChatPhotos
func (m *TLinputMessagesFilterChatPhotos) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(975236280)
	return x.Buf
}

// CodecDecode:inputMessagesFilterChatPhotos
func (m *TLinputMessagesFilterChatPhotos) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterPhoneCalls
func (m *TLinputMessagesFilterPhoneCalls) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2134272152)
	var flags uint32 = 0
	if m.Getmissed() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPhoneCalls
func (m *TLinputMessagesFilterPhoneCalls) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmissed(true)
	}
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterRoundVoice
func (m *TLinputMessagesFilterRoundVoice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2054952868)
	return x.Buf
}

// CodecDecode:inputMessagesFilterRoundVoice
func (m *TLinputMessagesFilterRoundVoice) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterRoundVideo
func (m *TLinputMessagesFilterRoundVideo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1253451181)
	return x.Buf
}

// CodecDecode:inputMessagesFilterRoundVideo
func (m *TLinputMessagesFilterRoundVideo) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterMyMentions
func (m *TLinputMessagesFilterMyMentions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1040652646)
	return x.Buf
}

// CodecDecode:inputMessagesFilterMyMentions
func (m *TLinputMessagesFilterMyMentions) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterGeo
func (m *TLinputMessagesFilterGeo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-419271411)
	return x.Buf
}

// CodecDecode:inputMessagesFilterGeo
func (m *TLinputMessagesFilterGeo) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterContacts
func (m *TLinputMessagesFilterContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-530392189)
	return x.Buf
}

// CodecDecode:inputMessagesFilterContacts
func (m *TLinputMessagesFilterContacts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMessagesFilterPinned
func (m *TLinputMessagesFilterPinned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(464520273)
	return x.Buf
}

// CodecDecode:inputMessagesFilterPinned
func (m *TLinputMessagesFilterPinned) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:shippingOption
func (m *TLshippingOption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1239335713)
	x.String(m.Getid())
	x.String(m.Gettitle())
	x.Int(481674261)
	x.Int(int32(len(m.Getprices())))
	for _, v := range m.Getprices() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:shippingOption
func (m *TLshippingOption) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settitle(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*LabeledPrice, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &LabeledPrice{}
		v2[i].Decode(dbuf)
	}
	m.Setprices(v2)
	return dbuf.Err
}

// CodecEncode:contacts_found
func (m *TLcontacts_found) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1290580579)
	x.Int(481674261)
	x.Int(int32(len(m.Getmy_results())))
	for _, v := range m.Getmy_results() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_found
func (m *TLcontacts_found) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Peer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Peer{}
		v0[i].Decode(dbuf)
	}
	m.Setmy_results(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Peer, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Peer{}
		v1[i].Decode(dbuf)
	}
	m.Setresults(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

// CodecEncode:savedPhoneContact
func (m *TLsavedPhoneContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(289586518)
	x.String(m.Getphone())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:savedPhoneContact
func (m *TLsavedPhoneContact) Decode(dbuf *DecodeBuf) error {
	m.Setphone(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:codeSettings
func (m *TLcodeSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-557924733)
	var flags uint32 = 0
	if m.Getallow_flashcall() != false {
		flags |= 1 << 0
	}
	if m.Getcurrent_number() != false {
		flags |= 1 << 1
	}
	if m.Getallow_app_hash() != false {
		flags |= 1 << 4
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:codeSettings
func (m *TLcodeSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setallow_flashcall(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcurrent_number(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setallow_app_hash(true)
	}
	return dbuf.Err
}

// CodecEncode:jsonNull
func (m *TLjsonNull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1064139624)
	return x.Buf
}

// CodecDecode:jsonNull
func (m *TLjsonNull) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:jsonBool
func (m *TLjsonBool) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-952869270)
	x.Bytes(m.Getvalue().Encode())
	return x.Buf
}

// CodecDecode:jsonBool
func (m *TLjsonBool) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setvalue(m0)
	return dbuf.Err
}

// CodecEncode:jsonNumber
func (m *TLjsonNumber) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(736157604)
	x.Double(m.Getvalue_2())
	return x.Buf
}

// CodecDecode:jsonNumber
func (m *TLjsonNumber) Decode(dbuf *DecodeBuf) error {
	m.Setvalue_2(dbuf.Double())
	return dbuf.Err
}

// CodecEncode:jsonString
func (m *TLjsonString) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1222740358)
	x.String(m.Getvalue_3())
	return x.Buf
}

// CodecDecode:jsonString
func (m *TLjsonString) Decode(dbuf *DecodeBuf) error {
	m.Setvalue_3(dbuf.String())
	return dbuf.Err
}

// CodecEncode:jsonArray
func (m *TLjsonArray) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-146520221)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_4())))
	for _, v := range m.Getvalue_4() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:jsonArray
func (m *TLjsonArray) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*JSONValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &JSONValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalue_4(v0)
	return dbuf.Err
}

// CodecEncode:jsonObject
func (m *TLjsonObject) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1715350371)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalue_5())))
	for _, v := range m.Getvalue_5() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:jsonObject
func (m *TLjsonObject) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*JSONObjectValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &JSONObjectValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalue_5(v0)
	return dbuf.Err
}

// CodecEncode:emojiKeyword
func (m *TLemojiKeyword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-709641735)
	x.String(m.Getkeyword())
	x.VectorString(m.Getemoticons())
	return x.Buf
}

// CodecDecode:emojiKeyword
func (m *TLemojiKeyword) Decode(dbuf *DecodeBuf) error {
	m.Setkeyword(dbuf.String())
	m.Setemoticons(dbuf.VectorString())
	return dbuf.Err
}

// CodecEncode:emojiKeywordDeleted
func (m *TLemojiKeywordDeleted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(594408994)
	x.String(m.Getkeyword())
	x.VectorString(m.Getemoticons())
	return x.Buf
}

// CodecDecode:emojiKeywordDeleted
func (m *TLemojiKeywordDeleted) Decode(dbuf *DecodeBuf) error {
	m.Setkeyword(dbuf.String())
	m.Setemoticons(dbuf.VectorString())
	return dbuf.Err
}

// CodecEncode:userStatusEmpty
func (m *TLuserStatusEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(164646985)
	return x.Buf
}

// CodecDecode:userStatusEmpty
func (m *TLuserStatusEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:userStatusOnline
func (m *TLuserStatusOnline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-306628279)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:userStatusOnline
func (m *TLuserStatusOnline) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:userStatusOffline
func (m *TLuserStatusOffline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(9203775)
	x.Int(m.Getwas_online())
	return x.Buf
}

// CodecDecode:userStatusOffline
func (m *TLuserStatusOffline) Decode(dbuf *DecodeBuf) error {
	m.Setwas_online(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:userStatusRecently
func (m *TLuserStatusRecently) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-496024847)
	return x.Buf
}

// CodecDecode:userStatusRecently
func (m *TLuserStatusRecently) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:userStatusLastWeek
func (m *TLuserStatusLastWeek) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(129960444)
	return x.Buf
}

// CodecDecode:userStatusLastWeek
func (m *TLuserStatusLastWeek) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:userStatusLastMonth
func (m *TLuserStatusLastMonth) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2011940674)
	return x.Buf
}

// CodecDecode:userStatusLastMonth
func (m *TLuserStatusLastMonth) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:phoneCallDiscardReasonMissed
func (m *TLphoneCallDiscardReasonMissed) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2048646399)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonMissed
func (m *TLphoneCallDiscardReasonMissed) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:phoneCallDiscardReasonDisconnect
func (m *TLphoneCallDiscardReasonDisconnect) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-527056480)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonDisconnect
func (m *TLphoneCallDiscardReasonDisconnect) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:phoneCallDiscardReasonHangup
func (m *TLphoneCallDiscardReasonHangup) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1471006352)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonHangup
func (m *TLphoneCallDiscardReasonHangup) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:phoneCallDiscardReasonBusy
func (m *TLphoneCallDiscardReasonBusy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-84416311)
	return x.Buf
}

// CodecDecode:phoneCallDiscardReasonBusy
func (m *TLphoneCallDiscardReasonBusy) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:botCommand
func (m *TLbotCommand) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1032140601)
	x.String(m.Getcommand())
	x.String(m.Getdescription())
	return x.Buf
}

// CodecDecode:botCommand
func (m *TLbotCommand) Decode(dbuf *DecodeBuf) error {
	m.Setcommand(dbuf.String())
	m.Setdescription(dbuf.String())
	return dbuf.Err
}

// CodecEncode:accountDaysTTL
func (m *TLaccountDaysTTL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1194283041)
	x.Int(m.Getdays())
	return x.Buf
}

// CodecDecode:accountDaysTTL
func (m *TLaccountDaysTTL) Decode(dbuf *DecodeBuf) error {
	m.Setdays(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_appUpdate
func (m *TLhelp_appUpdate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(497489295)
	var flags uint32 = 0
	if m.Getcan_not_skip() != false {
		flags |= 1 << 0
	}
	if m.Getdocument() != nil {
		flags |= 1 << 1
	}
	if m.Geturl() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getversion())
	x.String(m.Gettext())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	return x.Buf
}

// CodecDecode:help_appUpdate
func (m *TLhelp_appUpdate) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_not_skip(true)
	}
	m.Setid(dbuf.Int())
	m.Setversion(dbuf.String())
	m.Settext(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*MessageEntity, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &MessageEntity{}
		v4[i].Decode(dbuf)
	}
	m.Setentities(v4)
	if (flags & (1 << 1)) != 0 {
		m5 := &Document{}
		m5.Decode(dbuf)
		m.Setdocument(m5)
	}
	if (flags & (1 << 2)) != 0 {
		m.Seturl(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:help_noAppUpdate
func (m *TLhelp_noAppUpdate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1000708810)
	return x.Buf
}

// CodecDecode:help_noAppUpdate
func (m *TLhelp_noAppUpdate) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueErrorData
func (m *TLsecureValueErrorData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-391902247)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getdata_hash())
	x.String(m.Getfield())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorData
func (m *TLsecureValueErrorData) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setdata_hash(dbuf.StringBytes())
	m.Setfield(dbuf.String())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorFrontSide
func (m *TLsecureValueErrorFrontSide) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(12467706)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFrontSide
func (m *TLsecureValueErrorFrontSide) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorReverseSide
func (m *TLsecureValueErrorReverseSide) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2037765467)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorReverseSide
func (m *TLsecureValueErrorReverseSide) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorSelfie
func (m *TLsecureValueErrorSelfie) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-449327402)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorSelfie
func (m *TLsecureValueErrorSelfie) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorFile
func (m *TLsecureValueErrorFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2054162547)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFile
func (m *TLsecureValueErrorFile) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorFiles
func (m *TLsecureValueErrorFiles) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1717706985)
	x.Bytes(m.Gettype_key().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hash_6())))
	for _, v := range m.Getfile_hash_6() {
		x.Buf = append(x.Buf, v...)
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorFiles
func (m *TLsecureValueErrorFiles) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([][]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = dbuf.StringBytes()
	}
	m.Setfile_hash_6(v1)
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueError
func (m *TLsecureValueError) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2036501105)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Gethash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueError
func (m *TLsecureValueError) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Sethash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorTranslationFile
func (m *TLsecureValueErrorTranslationFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1592506512)
	x.Bytes(m.Gettype_key().Encode())
	x.Bytes(m.Getfile_hash())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorTranslationFile
func (m *TLsecureValueErrorTranslationFile) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setfile_hash(dbuf.StringBytes())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:secureValueErrorTranslationFiles
func (m *TLsecureValueErrorTranslationFiles) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(878931416)
	x.Bytes(m.Gettype_key().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hash_6())))
	for _, v := range m.Getfile_hash_6() {
		x.Buf = append(x.Buf, v...)
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:secureValueErrorTranslationFiles
func (m *TLsecureValueErrorTranslationFiles) Decode(dbuf *DecodeBuf) error {
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([][]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = dbuf.StringBytes()
	}
	m.Setfile_hash_6(v1)
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:authorization
func (m *TLauthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1392388579)
	var flags uint32 = 0
	if m.Getcurrent() != false {
		flags |= 1 << 0
	}
	if m.Getofficial_app() != false {
		flags |= 1 << 1
	}
	if m.Getpassword_pending() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Long(m.Gethash())
	x.String(m.Getdevice_model())
	x.String(m.Getplatform())
	x.String(m.Getsystem_version())
	x.Int(m.Getapi_id())
	x.String(m.Getapp_name())
	x.String(m.Getapp_version())
	x.Int(m.Getdate_created())
	x.Int(m.Getdate_active())
	x.String(m.Getip())
	x.String(m.Getcountry())
	x.String(m.Getregion())
	return x.Buf
}

// CodecDecode:authorization
func (m *TLauthorization) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcurrent(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setofficial_app(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpassword_pending(true)
	}
	m.Sethash(dbuf.Long())
	m.Setdevice_model(dbuf.String())
	m.Setplatform(dbuf.String())
	m.Setsystem_version(dbuf.String())
	m.Setapi_id(dbuf.Int())
	m.Setapp_name(dbuf.String())
	m.Setapp_version(dbuf.String())
	m.Setdate_created(dbuf.Int())
	m.Setdate_active(dbuf.Int())
	m.Setip(dbuf.String())
	m.Setcountry(dbuf.String())
	m.Setregion(dbuf.String())
	return dbuf.Err
}

// CodecEncode:account_privacyRules
func (m *TLaccount_privacyRules) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1352683077)
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_privacyRules
func (m *TLaccount_privacyRules) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PrivacyRule, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PrivacyRule{}
		v0[i].Decode(dbuf)
	}
	m.Setrules(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeTitle
func (m *TLchannelAdminLogEventActionChangeTitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-421545947)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeTitle
func (m *TLchannelAdminLogEventActionChangeTitle) Decode(dbuf *DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeAbout
func (m *TLchannelAdminLogEventActionChangeAbout) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1427671598)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeAbout
func (m *TLchannelAdminLogEventActionChangeAbout) Decode(dbuf *DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeUsername
func (m *TLchannelAdminLogEventActionChangeUsername) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1783299128)
	x.String(m.Getprev_value())
	x.String(m.Getnew_value())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeUsername
func (m *TLchannelAdminLogEventActionChangeUsername) Decode(dbuf *DecodeBuf) error {
	m.Setprev_value(dbuf.String())
	m.Setnew_value(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangePhoto
func (m *TLchannelAdminLogEventActionChangePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1129042607)
	x.Bytes(m.Getprev_photo().Encode())
	x.Bytes(m.Getnew_photo().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangePhoto
func (m *TLchannelAdminLogEventActionChangePhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setprev_photo(m0)
	m1 := &Photo{}
	m1.Decode(dbuf)
	m.Setnew_photo(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionToggleInvites
func (m *TLchannelAdminLogEventActionToggleInvites) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(460916654)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleInvites
func (m *TLchannelAdminLogEventActionToggleInvites) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionToggleSignatures
func (m *TLchannelAdminLogEventActionToggleSignatures) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(648939889)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleSignatures
func (m *TLchannelAdminLogEventActionToggleSignatures) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionUpdatePinned
func (m *TLchannelAdminLogEventActionUpdatePinned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-370660328)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionUpdatePinned
func (m *TLchannelAdminLogEventActionUpdatePinned) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionEditMessage
func (m *TLchannelAdminLogEventActionEditMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1889215493)
	x.Bytes(m.Getprev_message().Encode())
	x.Bytes(m.Getnew_message().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionEditMessage
func (m *TLchannelAdminLogEventActionEditMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setprev_message(m0)
	m1 := &Message{}
	m1.Decode(dbuf)
	m.Setnew_message(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionDeleteMessage
func (m *TLchannelAdminLogEventActionDeleteMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1121994683)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionDeleteMessage
func (m *TLchannelAdminLogEventActionDeleteMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionParticipantJoin
func (m *TLchannelAdminLogEventActionParticipantJoin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(405815507)
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantJoin
func (m *TLchannelAdminLogEventActionParticipantJoin) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionParticipantLeave
func (m *TLchannelAdminLogEventActionParticipantLeave) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-124291086)
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantLeave
func (m *TLchannelAdminLogEventActionParticipantLeave) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionParticipantInvite
func (m *TLchannelAdminLogEventActionParticipantInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-484690728)
	x.Bytes(m.Getparticipant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantInvite
func (m *TLchannelAdminLogEventActionParticipantInvite) Decode(dbuf *DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setparticipant(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionParticipantToggleBan
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-422036098)
	x.Bytes(m.Getprev_participant().Encode())
	x.Bytes(m.Getnew_participant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantToggleBan
func (m *TLchannelAdminLogEventActionParticipantToggleBan) Decode(dbuf *DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setprev_participant(m0)
	m1 := &ChannelParticipant{}
	m1.Decode(dbuf)
	m.Setnew_participant(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionParticipantToggleAdmin
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-714643696)
	x.Bytes(m.Getprev_participant().Encode())
	x.Bytes(m.Getnew_participant().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionParticipantToggleAdmin
func (m *TLchannelAdminLogEventActionParticipantToggleAdmin) Decode(dbuf *DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setprev_participant(m0)
	m1 := &ChannelParticipant{}
	m1.Decode(dbuf)
	m.Setnew_participant(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeStickerSet
func (m *TLchannelAdminLogEventActionChangeStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1312568665)
	x.Bytes(m.Getprev_stickerset().Encode())
	x.Bytes(m.Getnew_stickerset().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeStickerSet
func (m *TLchannelAdminLogEventActionChangeStickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setprev_stickerset(m0)
	m1 := &InputStickerSet{}
	m1.Decode(dbuf)
	m.Setnew_stickerset(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionTogglePreHistoryHidden
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1599903217)
	x.Bytes(m.Getnew_value_5().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionTogglePreHistoryHidden
func (m *TLchannelAdminLogEventActionTogglePreHistoryHidden) Decode(dbuf *DecodeBuf) error {
	m0 := &Bool{}
	m0.Decode(dbuf)
	m.Setnew_value_5(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionDefaultBannedRights
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(771095562)
	x.Bytes(m.Getprev_banned_rights().Encode())
	x.Bytes(m.Getnew_banned_rights().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionDefaultBannedRights
func (m *TLchannelAdminLogEventActionDefaultBannedRights) Decode(dbuf *DecodeBuf) error {
	m0 := &ChatBannedRights{}
	m0.Decode(dbuf)
	m.Setprev_banned_rights(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setnew_banned_rights(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionStopPoll
func (m *TLchannelAdminLogEventActionStopPoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1895328189)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionStopPoll
func (m *TLchannelAdminLogEventActionStopPoll) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeLinkedChat
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1569748965)
	x.Int(m.Getprev_value_16())
	x.Int(m.Getnew_value_17())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeLinkedChat
func (m *TLchannelAdminLogEventActionChangeLinkedChat) Decode(dbuf *DecodeBuf) error {
	m.Setprev_value_16(dbuf.Int())
	m.Setnew_value_17(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionChangeLocation
func (m *TLchannelAdminLogEventActionChangeLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(241923758)
	x.Bytes(m.Getprev_value_18().Encode())
	x.Bytes(m.Getnew_value_19().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionChangeLocation
func (m *TLchannelAdminLogEventActionChangeLocation) Decode(dbuf *DecodeBuf) error {
	m0 := &ChannelLocation{}
	m0.Decode(dbuf)
	m.Setprev_value_18(m0)
	m1 := &ChannelLocation{}
	m1.Decode(dbuf)
	m.Setnew_value_19(m1)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventActionToggleSlowMode
func (m *TLchannelAdminLogEventActionToggleSlowMode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1401984889)
	x.Int(m.Getprev_value_16())
	x.Int(m.Getnew_value_17())
	return x.Buf
}

// CodecDecode:channelAdminLogEventActionToggleSlowMode
func (m *TLchannelAdminLogEventActionToggleSlowMode) Decode(dbuf *DecodeBuf) error {
	m.Setprev_value_16(dbuf.Int())
	m.Setnew_value_17(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:webAuthorization
func (m *TLwebAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-892779534)
	x.Long(m.Gethash())
	x.Int(m.Getbot_id())
	x.String(m.Getdomain())
	x.String(m.Getbrowser())
	x.String(m.Getplatform())
	x.Int(m.Getdate_created())
	x.Int(m.Getdate_active())
	x.String(m.Getip())
	x.String(m.Getregion())
	return x.Buf
}

// CodecDecode:webAuthorization
func (m *TLwebAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Long())
	m.Setbot_id(dbuf.Int())
	m.Setdomain(dbuf.String())
	m.Setbrowser(dbuf.String())
	m.Setplatform(dbuf.String())
	m.Setdate_created(dbuf.Int())
	m.Setdate_active(dbuf.Int())
	m.Setip(dbuf.String())
	m.Setregion(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channels_channelParticipants
func (m *TLchannels_channelParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-177282392)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getparticipants())))
	for _, v := range m.Getparticipants() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_channelParticipants
func (m *TLchannels_channelParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*ChannelParticipant, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &ChannelParticipant{}
		v1[i].Decode(dbuf)
	}
	m.Setparticipants(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:channels_channelParticipantsNotModified
func (m *TLchannels_channelParticipantsNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-266911767)
	return x.Buf
}

// CodecDecode:channels_channelParticipantsNotModified
func (m *TLchannels_channelParticipantsNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:maskCoords
func (m *TLmaskCoords) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1361650766)
	x.Int(m.Getn())
	x.Double(m.Getx())
	x.Double(m.Gety())
	x.Double(m.Getzoom())
	return x.Buf
}

// CodecDecode:maskCoords
func (m *TLmaskCoords) Decode(dbuf *DecodeBuf) error {
	m.Setn(dbuf.Int())
	m.Setx(dbuf.Double())
	m.Sety(dbuf.Double())
	m.Setzoom(dbuf.Double())
	return dbuf.Err
}

// CodecEncode:peerNotifySettings
func (m *TLpeerNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1353671392)
	var flags uint32 = 0
	if m.Getshow_previews() != nil {
		flags |= 1 << 0
	}
	if m.Getsilent() != nil {
		flags |= 1 << 1
	}
	if m.Getmute_until() != 0 {
		flags |= 1 << 2
	}
	if m.Getsound() != "" {
		flags |= 1 << 3
	}
	x.UInt(flags)
	if m.Getshow_previews() != nil {
		x.Bytes(m.Getshow_previews().Encode())
	}
	if m.Getsilent() != nil {
		x.Bytes(m.Getsilent().Encode())
	}
	if m.Getmute_until() != 0 {
		x.Int(m.Getmute_until())
	}
	if m.Getsound() != "" {
		x.String(m.Getsound())
	}
	return x.Buf
}

// CodecDecode:peerNotifySettings
func (m *TLpeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setshow_previews(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &Bool{}
		m1.Decode(dbuf)
		m.Setsilent(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmute_until(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsound(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:pageBlockUnsupported
func (m *TLpageBlockUnsupported) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(324435594)
	return x.Buf
}

// CodecDecode:pageBlockUnsupported
func (m *TLpageBlockUnsupported) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:pageBlockTitle
func (m *TLpageBlockTitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1890305021)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockTitle
func (m *TLpageBlockTitle) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockSubtitle
func (m *TLpageBlockSubtitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1879401953)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSubtitle
func (m *TLpageBlockSubtitle) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockAuthorDate
func (m *TLpageBlockAuthorDate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1162877472)
	x.Bytes(m.Getauthor().Encode())
	x.Int(m.Getpublished_date())
	return x.Buf
}

// CodecDecode:pageBlockAuthorDate
func (m *TLpageBlockAuthorDate) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Setauthor(m0)
	m.Setpublished_date(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:pageBlockHeader
func (m *TLpageBlockHeader) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1076861716)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockHeader
func (m *TLpageBlockHeader) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockSubheader
func (m *TLpageBlockSubheader) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-248793375)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSubheader
func (m *TLpageBlockSubheader) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockParagraph
func (m *TLpageBlockParagraph) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1182402406)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockParagraph
func (m *TLpageBlockParagraph) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockPreformatted
func (m *TLpageBlockPreformatted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1066346178)
	x.Bytes(m.Gettext().Encode())
	x.String(m.Getlanguage())
	return x.Buf
}

// CodecDecode:pageBlockPreformatted
func (m *TLpageBlockPreformatted) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m.Setlanguage(dbuf.String())
	return dbuf.Err
}

// CodecEncode:pageBlockFooter
func (m *TLpageBlockFooter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1216809369)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockFooter
func (m *TLpageBlockFooter) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockDivider
func (m *TLpageBlockDivider) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-618614392)
	return x.Buf
}

// CodecDecode:pageBlockDivider
func (m *TLpageBlockDivider) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:pageBlockAnchor
func (m *TLpageBlockAnchor) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-837994576)
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:pageBlockAnchor
func (m *TLpageBlockAnchor) Decode(dbuf *DecodeBuf) error {
	m.Setname(dbuf.String())
	return dbuf.Err
}

// CodecEncode:pageBlockList
func (m *TLpageBlockList) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-454524911)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems())))
	for _, v := range m.Getitems() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockList
func (m *TLpageBlockList) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageListItem, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageListItem{}
		v0[i].Decode(dbuf)
	}
	m.Setitems(v0)
	return dbuf.Err
}

// CodecEncode:pageBlockBlockquote
func (m *TLpageBlockBlockquote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(641563686)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcaption().Encode())
	return x.Buf
}

// CodecDecode:pageBlockBlockquote
func (m *TLpageBlockBlockquote) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcaption(m1)
	return dbuf.Err
}

// CodecEncode:pageBlockPullquote
func (m *TLpageBlockPullquote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1329878739)
	x.Bytes(m.Gettext().Encode())
	x.Bytes(m.Getcaption().Encode())
	return x.Buf
}

// CodecDecode:pageBlockPullquote
func (m *TLpageBlockPullquote) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Setcaption(m1)
	return dbuf.Err
}

// CodecEncode:pageBlockPhoto
func (m *TLpageBlockPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(391759200)
	var flags uint32 = 0
	if m.Geturl() != "" {
		flags |= 1 << 0
	}
	if m.Getwebpage_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getphoto_id())
	x.Bytes(m.Getcaption_9().Encode())
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getwebpage_id() != 0 {
		x.Long(m.Getwebpage_id())
	}
	return x.Buf
}

// CodecDecode:pageBlockPhoto
func (m *TLpageBlockPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphoto_id(dbuf.Long())
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	if (flags & (1 << 0)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 0)) != 0 {
		m.Setwebpage_id(dbuf.Long())
	}
	return dbuf.Err
}

// CodecEncode:pageBlockVideo
func (m *TLpageBlockVideo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2089805750)
	var flags uint32 = 0
	if m.Getautoplay() != false {
		flags |= 1 << 0
	}
	if m.Getloop() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getvideo_id())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockVideo
func (m *TLpageBlockVideo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setautoplay(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setloop(true)
	}
	m.Setvideo_id(dbuf.Long())
	m3 := &PageCaption{}
	m3.Decode(dbuf)
	m.Setcaption_9(m3)
	return dbuf.Err
}

// CodecEncode:pageBlockCover
func (m *TLpageBlockCover) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(972174080)
	x.Bytes(m.Getcover().Encode())
	return x.Buf
}

// CodecDecode:pageBlockCover
func (m *TLpageBlockCover) Decode(dbuf *DecodeBuf) error {
	m0 := &PageBlock{}
	m0.Decode(dbuf)
	m.Setcover(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockEmbed
func (m *TLpageBlockEmbed) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1468953147)
	var flags uint32 = 0
	if m.Getfull_width() != false {
		flags |= 1 << 0
	}
	if m.Getallow_scrolling() != false {
		flags |= 1 << 3
	}
	if m.Geturl() != "" {
		flags |= 1 << 1
	}
	if m.Gethtml() != "" {
		flags |= 1 << 2
	}
	if m.Getposter_photo_id() != 0 {
		flags |= 1 << 4
	}
	if m.Getw() != 0 {
		flags |= 1 << 5
	}
	if m.Geth() != 0 {
		flags |= 1 << 5
	}
	x.UInt(flags)
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Gethtml() != "" {
		x.String(m.Gethtml())
	}
	if m.Getposter_photo_id() != 0 {
		x.Long(m.Getposter_photo_id())
	}
	if m.Getw() != 0 {
		x.Int(m.Getw())
	}
	if m.Geth() != 0 {
		x.Int(m.Geth())
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockEmbed
func (m *TLpageBlockEmbed) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfull_width(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setallow_scrolling(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Sethtml(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setposter_photo_id(dbuf.Long())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setw(dbuf.Int())
	}
	if (flags & (1 << 5)) != 0 {
		m.Seth(dbuf.Int())
	}
	m7 := &PageCaption{}
	m7.Decode(dbuf)
	m.Setcaption_9(m7)
	return dbuf.Err
}

// CodecEncode:pageBlockEmbedPost
func (m *TLpageBlockEmbedPost) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-229005301)
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	x.Long(m.Getauthor_photo_id())
	x.String(m.Getauthor_23())
	x.Int(m.Getdate())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockEmbedPost
func (m *TLpageBlockEmbedPost) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	m.Setauthor_photo_id(dbuf.Long())
	m.Setauthor_23(dbuf.String())
	m.Setdate(dbuf.Int())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*PageBlock, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &PageBlock{}
		v5[i].Decode(dbuf)
	}
	m.Setblocks(v5)
	m6 := &PageCaption{}
	m6.Decode(dbuf)
	m.Setcaption_9(m6)
	return dbuf.Err
}

// CodecEncode:pageBlockCollage
func (m *TLpageBlockCollage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1705048653)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_26())))
	for _, v := range m.Getitems_26() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockCollage
func (m *TLpageBlockCollage) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_26(v0)
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

// CodecEncode:pageBlockSlideshow
func (m *TLpageBlockSlideshow) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(52401552)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_26())))
	for _, v := range m.Getitems_26() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockSlideshow
func (m *TLpageBlockSlideshow) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageBlock, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageBlock{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_26(v0)
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

// CodecEncode:pageBlockChannel
func (m *TLpageBlockChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-283684427)
	x.Bytes(m.Getchannel().Encode())
	return x.Buf
}

// CodecDecode:pageBlockChannel
func (m *TLpageBlockChannel) Decode(dbuf *DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchannel(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockAudio
func (m *TLpageBlockAudio) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2143067670)
	x.Long(m.Getaudio_id())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockAudio
func (m *TLpageBlockAudio) Decode(dbuf *DecodeBuf) error {
	m.Setaudio_id(dbuf.Long())
	m1 := &PageCaption{}
	m1.Decode(dbuf)
	m.Setcaption_9(m1)
	return dbuf.Err
}

// CodecEncode:pageBlockKicker
func (m *TLpageBlockKicker) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(504660880)
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageBlockKicker
func (m *TLpageBlockKicker) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settext(m0)
	return dbuf.Err
}

// CodecEncode:pageBlockTable
func (m *TLpageBlockTable) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1085412734)
	var flags uint32 = 0
	if m.Getbordered() != false {
		flags |= 1 << 0
	}
	if m.Getstriped() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Gettitle().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockTable
func (m *TLpageBlockTable) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbordered(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setstriped(true)
	}
	m2 := &RichText{}
	m2.Decode(dbuf)
	m.Settitle(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*PageTableRow, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &PageTableRow{}
		v3[i].Decode(dbuf)
	}
	m.Setrows(v3)
	return dbuf.Err
}

// CodecEncode:pageBlockOrderedList
func (m *TLpageBlockOrderedList) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1702174239)
	x.Int(481674261)
	x.Int(int32(len(m.Getitems_33())))
	for _, v := range m.Getitems_33() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockOrderedList
func (m *TLpageBlockOrderedList) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageListOrderedItem, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageListOrderedItem{}
		v0[i].Decode(dbuf)
	}
	m.Setitems_33(v0)
	return dbuf.Err
}

// CodecEncode:pageBlockDetails
func (m *TLpageBlockDetails) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1987480557)
	var flags uint32 = 0
	if m.Getopen() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Gettitle().Encode())
	return x.Buf
}

// CodecDecode:pageBlockDetails
func (m *TLpageBlockDetails) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setopen(true)
	}
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PageBlock, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PageBlock{}
		v1[i].Decode(dbuf)
	}
	m.Setblocks(v1)
	m2 := &RichText{}
	m2.Decode(dbuf)
	m.Settitle(m2)
	return dbuf.Err
}

// CodecEncode:pageBlockRelatedArticles
func (m *TLpageBlockRelatedArticles) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(370236054)
	x.Bytes(m.Gettitle().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getarticles())))
	for _, v := range m.Getarticles() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageBlockRelatedArticles
func (m *TLpageBlockRelatedArticles) Decode(dbuf *DecodeBuf) error {
	m0 := &RichText{}
	m0.Decode(dbuf)
	m.Settitle(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PageRelatedArticle, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PageRelatedArticle{}
		v1[i].Decode(dbuf)
	}
	m.Setarticles(v1)
	return dbuf.Err
}

// CodecEncode:pageBlockMap
func (m *TLpageBlockMap) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1538310410)
	x.Bytes(m.Getgeo().Encode())
	x.Int(m.Getzoom())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Bytes(m.Getcaption_9().Encode())
	return x.Buf
}

// CodecDecode:pageBlockMap
func (m *TLpageBlockMap) Decode(dbuf *DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Setzoom(dbuf.Int())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m4 := &PageCaption{}
	m4.Decode(dbuf)
	m.Setcaption_9(m4)
	return dbuf.Err
}

// CodecEncode:webDocument
func (m *TLwebDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(475467473)
	x.String(m.Geturl())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:webDocument
func (m *TLwebDocument) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*DocumentAttribute, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &DocumentAttribute{}
		v4[i].Decode(dbuf)
	}
	m.Setattributes(v4)
	return dbuf.Err
}

// CodecEncode:webDocumentNoProxy
func (m *TLwebDocumentNoProxy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-104284986)
	x.String(m.Geturl())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:webDocumentNoProxy
func (m *TLwebDocumentNoProxy) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*DocumentAttribute, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &DocumentAttribute{}
		v3[i].Decode(dbuf)
	}
	m.Setattributes(v3)
	return dbuf.Err
}

// CodecEncode:inputPhoneContact
func (m *TLinputPhoneContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-208488460)
	x.Long(m.Getclient_id())
	x.String(m.Getphone())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	return x.Buf
}

// CodecDecode:inputPhoneContact
func (m *TLinputPhoneContact) Decode(dbuf *DecodeBuf) error {
	m.Setclient_id(dbuf.Long())
	m.Setphone(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_featuredStickersNotModified
func (m *TLmessages_featuredStickersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-958657434)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_featuredStickersNotModified
func (m *TLmessages_featuredStickersNotModified) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_featuredStickers
func (m *TLmessages_featuredStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1230257343)
	x.Int(m.Gethash())
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.VectorLong(m.Getunread())
	return x.Buf
}

// CodecDecode:messages_featuredStickers
func (m *TLmessages_featuredStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	m.Setcount(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*StickerSetCovered, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &StickerSetCovered{}
		v2[i].Decode(dbuf)
	}
	m.Setsets(v2)
	m.Setunread(dbuf.VectorLong())
	return dbuf.Err
}

// CodecEncode:pollAnswerVoters
func (m *TLpollAnswerVoters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(997055186)
	var flags uint32 = 0
	if m.Getchosen() != false {
		flags |= 1 << 0
	}
	if m.Getcorrect() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getoption())
	x.Int(m.Getvoters())
	return x.Buf
}

// CodecDecode:pollAnswerVoters
func (m *TLpollAnswerVoters) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchosen(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setcorrect(true)
	}
	m.Setoption(dbuf.StringBytes())
	m.Setvoters(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_passportConfigNotModified
func (m *TLhelp_passportConfigNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1078332329)
	return x.Buf
}

// CodecDecode:help_passportConfigNotModified
func (m *TLhelp_passportConfigNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_passportConfig
func (m *TLhelp_passportConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1600596305)
	x.Int(m.Gethash())
	x.Bytes(m.Getcountries_langs().Encode())
	return x.Buf
}

// CodecDecode:help_passportConfig
func (m *TLhelp_passportConfig) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setcountries_langs(m1)
	return dbuf.Err
}

// CodecEncode:keyboardButtonRow
func (m *TLkeyboardButtonRow) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2002815875)
	x.Int(481674261)
	x.Int(int32(len(m.Getbuttons())))
	for _, v := range m.Getbuttons() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:keyboardButtonRow
func (m *TLkeyboardButtonRow) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*KeyboardButton, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &KeyboardButton{}
		v0[i].Decode(dbuf)
	}
	m.Setbuttons(v0)
	return dbuf.Err
}

// CodecEncode:botInlineMessageMediaAuto
func (m *TLbotInlineMessageMediaAuto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1984755728)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaAuto
func (m *TLbotInlineMessageMediaAuto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &ReplyMarkup{}
		m2.Decode(dbuf)
		m.Setreply_markup(m2)
	}
	return dbuf.Err
}

// CodecEncode:botInlineMessageText
func (m *TLbotInlineMessageText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1937807902)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageText
func (m *TLbotInlineMessageText) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]*MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &ReplyMarkup{}
		m3.Decode(dbuf)
		m.Setreply_markup(m3)
	}
	return dbuf.Err
}

// CodecEncode:botInlineMessageMediaGeo
func (m *TLbotInlineMessageMediaGeo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(85477117)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 1 << 0
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 1
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 1 << 3
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaGeo
func (m *TLbotInlineMessageMediaGeo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

// CodecEncode:botInlineMessageMediaVenue
func (m *TLbotInlineMessageMediaVenue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1970903652)
	var flags uint32 = 0
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaVenue
func (m *TLbotInlineMessageMediaVenue) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m6 := &ReplyMarkup{}
		m6.Decode(dbuf)
		m.Setreply_markup(m6)
	}
	return dbuf.Err
}

// CodecEncode:botInlineMessageMediaContact
func (m *TLbotInlineMessageMediaContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(416402882)
	var flags uint32 = 0
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:botInlineMessageMediaContact
func (m *TLbotInlineMessageMediaContact) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

// CodecEncode:popularContact
func (m *TLpopularContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1558266229)
	x.Long(m.Getclient_id())
	x.Int(m.Getimporters())
	return x.Buf
}

// CodecDecode:popularContact
func (m *TLpopularContact) Decode(dbuf *DecodeBuf) error {
	m.Setclient_id(dbuf.Long())
	m.Setimporters(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelParticipant
func (m *TLchannelParticipant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(367766557)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:channelParticipant
func (m *TLchannelParticipant) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelParticipantSelf
func (m *TLchannelParticipantSelf) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1557620115)
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:channelParticipantSelf
func (m *TLchannelParticipantSelf) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelParticipantCreator
func (m *TLchannelParticipantCreator) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1149094475)
	var flags uint32 = 0
	if m.Getrank() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getadmin_rights().Encode())
	if m.Getrank() != "" {
		x.String(m.Getrank())
	}
	return x.Buf
}

// CodecDecode:channelParticipantCreator
func (m *TLchannelParticipantCreator) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setuser_id(dbuf.Int())
	m1 := &ChatAdminRights{}
	m1.Decode(dbuf)
	m.Setadmin_rights(m1)
	if (flags & (1 << 0)) != 0 {
		m.Setrank(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:channelParticipantAdmin
func (m *TLchannelParticipantAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-859915345)
	var flags uint32 = 0
	if m.Getcan_edit() != false {
		flags |= 1 << 0
	}
	if m.Getself() != false {
		flags |= 1 << 1
	}
	if m.Getinviter_id() != 0 {
		flags |= 1 << 1
	}
	if m.Getrank() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	if m.Getinviter_id() != 0 {
		x.Int(m.Getinviter_id())
	}
	x.Int(m.Getpromoted_by())
	x.Int(m.Getdate())
	x.Bytes(m.Getadmin_rights().Encode())
	if m.Getrank() != "" {
		x.String(m.Getrank())
	}
	return x.Buf
}

// CodecDecode:channelParticipantAdmin
func (m *TLchannelParticipantAdmin) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcan_edit(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setself(true)
	}
	m.Setuser_id(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Setinviter_id(dbuf.Int())
	}
	m.Setpromoted_by(dbuf.Int())
	m.Setdate(dbuf.Int())
	m6 := &ChatAdminRights{}
	m6.Decode(dbuf)
	m.Setadmin_rights(m6)
	if (flags & (1 << 2)) != 0 {
		m.Setrank(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:channelParticipantBanned
func (m *TLchannelParticipantBanned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(470789295)
	var flags uint32 = 0
	if m.Getleft() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.Int(m.Getkicked_by())
	x.Int(m.Getdate())
	x.Bytes(m.Getbanned_rights().Encode())
	return x.Buf
}

// CodecDecode:channelParticipantBanned
func (m *TLchannelParticipantBanned) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setleft(true)
	}
	m.Setuser_id(dbuf.Int())
	m.Setkicked_by(dbuf.Int())
	m.Setdate(dbuf.Int())
	m4 := &ChatBannedRights{}
	m4.Decode(dbuf)
	m.Setbanned_rights(m4)
	return dbuf.Err
}

// CodecEncode:channelParticipantLeft
func (m *TLchannelParticipantLeft) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1010402965)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:channelParticipantLeft
func (m *TLchannelParticipantLeft) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_countriesListNotModified
func (m *TLhelp_countriesListNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1815339214)
	return x.Buf
}

// CodecDecode:help_countriesListNotModified
func (m *TLhelp_countriesListNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_countriesList
func (m *TLhelp_countriesList) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2016381538)
	x.Int(481674261)
	x.Int(int32(len(m.Getcountries())))
	for _, v := range m.Getcountries() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:help_countriesList
func (m *TLhelp_countriesList) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*help_Country, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &help_Country{}
		v0[i].Decode(dbuf)
	}
	m.Setcountries(v0)
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:auth_authorization
func (m *TLauth_authorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-855308010)
	var flags uint32 = 0
	if m.Gettmp_sessions() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Gettmp_sessions() != 0 {
		x.Int(m.Gettmp_sessions())
	}
	x.Bytes(m.Getuser().Encode())
	return x.Buf
}

// CodecDecode:auth_authorization
func (m *TLauth_authorization) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Settmp_sessions(dbuf.Int())
	}
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setuser(m1)
	return dbuf.Err
}

// CodecEncode:auth_authorizationSignUpRequired
func (m *TLauth_authorizationSignUpRequired) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1148485274)
	var flags uint32 = 0
	if m.Getterms_of_service() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getterms_of_service() != nil {
		x.Bytes(m.Getterms_of_service().Encode())
	}
	return x.Buf
}

// CodecDecode:auth_authorizationSignUpRequired
func (m *TLauth_authorizationSignUpRequired) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &help_TermsOfService{}
		m0.Decode(dbuf)
		m.Setterms_of_service(m0)
	}
	return dbuf.Err
}

// CodecEncode:inputPhotoEmpty
func (m *TLinputPhotoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(483901197)
	return x.Buf
}

// CodecDecode:inputPhotoEmpty
func (m *TLinputPhotoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPhoto
func (m *TLinputPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1001634122)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputPhoto
func (m *TLinputPhoto) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:inputCheckPasswordEmpty
func (m *TLinputCheckPasswordEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1736378792)
	return x.Buf
}

// CodecDecode:inputCheckPasswordEmpty
func (m *TLinputCheckPasswordEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputCheckPasswordSRP
func (m *TLinputCheckPasswordSRP) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-763367294)
	x.Long(m.Getsrp_id())
	x.Bytes(m.GetA())
	x.Bytes(m.GetM1())
	return x.Buf
}

// CodecDecode:inputCheckPasswordSRP
func (m *TLinputCheckPasswordSRP) Decode(dbuf *DecodeBuf) error {
	m.Setsrp_id(dbuf.Long())
	m.SetA(dbuf.StringBytes())
	m.SetM1(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:contacts_topPeersNotModified
func (m *TLcontacts_topPeersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-567906571)
	return x.Buf
}

// CodecDecode:contacts_topPeersNotModified
func (m *TLcontacts_topPeersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:contacts_topPeers
func (m *TLcontacts_topPeers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1891070632)
	x.Int(481674261)
	x.Int(int32(len(m.Getcategories())))
	for _, v := range m.Getcategories() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_topPeers
func (m *TLcontacts_topPeers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*TopPeerCategoryPeers, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &TopPeerCategoryPeers{}
		v0[i].Decode(dbuf)
	}
	m.Setcategories(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:contacts_topPeersDisabled
func (m *TLcontacts_topPeersDisabled) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1255369827)
	return x.Buf
}

// CodecDecode:contacts_topPeersDisabled
func (m *TLcontacts_topPeersDisabled) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageReplyHeader
func (m *TLmessageReplyHeader) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1495959709)
	var flags uint32 = 0
	if m.Getreply_to_peer_id() != nil {
		flags |= 1 << 0
	}
	if m.Getreply_to_top_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getreply_to_msg_id())
	if m.Getreply_to_peer_id() != nil {
		x.Bytes(m.Getreply_to_peer_id().Encode())
	}
	if m.Getreply_to_top_id() != 0 {
		x.Int(m.Getreply_to_top_id())
	}
	return x.Buf
}

// CodecDecode:messageReplyHeader
func (m *TLmessageReplyHeader) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setreply_to_msg_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m1 := &Peer{}
		m1.Decode(dbuf)
		m.Setreply_to_peer_id(m1)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setreply_to_top_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:help_country
func (m *TLhelp_country) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1014526429)
	var flags uint32 = 0
	if m.Gethidden() != false {
		flags |= 1 << 0
	}
	if m.Getname() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Getiso2())
	x.String(m.Getdefault_name())
	if m.Getname() != "" {
		x.String(m.Getname())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getcountry_codes())))
	for _, v := range m.Getcountry_codes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_country
func (m *TLhelp_country) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethidden(true)
	}
	m.Setiso2(dbuf.String())
	m.Setdefault_name(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setname(dbuf.String())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*help_CountryCode, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &help_CountryCode{}
		v4[i].Decode(dbuf)
	}
	m.Setcountry_codes(v4)
	return dbuf.Err
}

// CodecEncode:folder
func (m *TLfolder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-11252123)
	var flags uint32 = 0
	if m.Getautofill_new_broadcasts() != false {
		flags |= 1 << 0
	}
	if m.Getautofill_public_groups() != false {
		flags |= 1 << 1
	}
	if m.Getautofill_new_correspondents() != false {
		flags |= 1 << 2
	}
	if m.Getphoto() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Gettitle())
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	return x.Buf
}

// CodecDecode:folder
func (m *TLfolder) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setautofill_new_broadcasts(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setautofill_public_groups(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setautofill_new_correspondents(true)
	}
	m.Setid(dbuf.Int())
	m.Settitle(dbuf.String())
	if (flags & (1 << 3)) != 0 {
		m5 := &ChatPhoto{}
		m5.Decode(dbuf)
		m.Setphoto(m5)
	}
	return dbuf.Err
}

// CodecEncode:inputFileLocation
func (m *TLinputFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-539317279)
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	x.Long(m.Getsecret())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputFileLocation
func (m *TLinputFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	m.Setsecret(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:inputEncryptedFileLocation
func (m *TLinputEncryptedFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-182231723)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedFileLocation
func (m *TLinputEncryptedFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputDocumentFileLocation
func (m *TLinputDocumentFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1160743548)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.String(m.Getthumb_size())
	return x.Buf
}

// CodecDecode:inputDocumentFileLocation
func (m *TLinputDocumentFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setthumb_size(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputSecureFileLocation
func (m *TLinputSecureFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-876089816)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputSecureFileLocation
func (m *TLinputSecureFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputTakeoutFileLocation
func (m *TLinputTakeoutFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(700340377)
	return x.Buf
}

// CodecDecode:inputTakeoutFileLocation
func (m *TLinputTakeoutFileLocation) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPhotoFileLocation
func (m *TLinputPhotoFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1075322878)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.String(m.Getthumb_size())
	return x.Buf
}

// CodecDecode:inputPhotoFileLocation
func (m *TLinputPhotoFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setthumb_size(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputPhotoLegacyFileLocation
func (m *TLinputPhotoLegacyFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-667654413)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	x.Long(m.Getsecret())
	return x.Buf
}

// CodecDecode:inputPhotoLegacyFileLocation
func (m *TLinputPhotoLegacyFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	m.Setsecret(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputPeerPhotoFileLocation
func (m *TLinputPeerPhotoFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(668375447)
	var flags uint32 = 0
	if m.Getbig() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer().Encode())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:inputPeerPhotoFileLocation
func (m *TLinputPeerPhotoFileLocation) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setbig(true)
	}
	m1 := &InputPeer{}
	m1.Decode(dbuf)
	m.Setpeer(m1)
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputStickerSetThumb
func (m *TLinputStickerSetThumb) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(230353641)
	x.Bytes(m.Getstickerset().Encode())
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:inputStickerSetThumb
func (m *TLinputStickerSetThumb) Decode(dbuf *DecodeBuf) error {
	m0 := &InputStickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:contacts_contactsNotModified
func (m *TLcontacts_contactsNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1219778094)
	return x.Buf
}

// CodecDecode:contacts_contactsNotModified
func (m *TLcontacts_contactsNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:contacts_contacts
func (m *TLcontacts_contacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-353862078)
	x.Int(481674261)
	x.Int(int32(len(m.Getcontacts())))
	for _, v := range m.Getcontacts() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getsaved_count())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_contacts
func (m *TLcontacts_contacts) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Contact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Contact{}
		v0[i].Decode(dbuf)
	}
	m.Setcontacts(v0)
	m.Setsaved_count(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:messages_favedStickersNotModified
func (m *TLmessages_favedStickersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1634752813)
	return x.Buf
}

// CodecDecode:messages_favedStickersNotModified
func (m *TLmessages_favedStickersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_favedStickers
func (m *TLmessages_favedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-209768682)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_favedStickers
func (m *TLmessages_favedStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Document{}
		v2[i].Decode(dbuf)
	}
	m.Setstickers(v2)
	return dbuf.Err
}

// CodecEncode:channels_channelParticipant
func (m *TLchannels_channelParticipant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-791039645)
	x.Bytes(m.Getparticipant().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:channels_channelParticipant
func (m *TLchannels_channelParticipant) Decode(dbuf *DecodeBuf) error {
	m0 := &ChannelParticipant{}
	m0.Decode(dbuf)
	m.Setparticipant(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:messages_allStickersNotModified
func (m *TLmessages_allStickersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-395967805)
	return x.Buf
}

// CodecDecode:messages_allStickersNotModified
func (m *TLmessages_allStickersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_allStickers
func (m *TLmessages_allStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-302170017)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_allStickers
func (m *TLmessages_allStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerSet, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerSet{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

// CodecEncode:page
func (m *TLpage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1738178803)
	var flags uint32 = 0
	if m.Getpart() != false {
		flags |= 1 << 0
	}
	if m.Getrtl() != false {
		flags |= 1 << 1
	}
	if m.Getv2() != false {
		flags |= 1 << 2
	}
	if m.Getviews() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Geturl())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getdocuments())))
	for _, v := range m.Getdocuments() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	return x.Buf
}

// CodecDecode:page
func (m *TLpage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpart(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setrtl(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setv2(true)
	}
	m.Seturl(dbuf.String())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*PageBlock, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &PageBlock{}
		v4[i].Decode(dbuf)
	}
	m.Setblocks(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*Photo, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &Photo{}
		v5[i].Decode(dbuf)
	}
	m.Setphotos(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*Document, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &Document{}
		v6[i].Decode(dbuf)
	}
	m.Setdocuments(v6)
	if (flags & (1 << 3)) != 0 {
		m.Setviews(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messages_messageEditData
func (m *TLmessages_messageEditData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(649453030)
	var flags uint32 = 0
	if m.Getcaption() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:messages_messageEditData
func (m *TLmessages_messageEditData) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcaption(true)
	}
	return dbuf.Err
}

// CodecEncode:statsAbsValueAndPrev
func (m *TLstatsAbsValueAndPrev) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-884757282)
	x.Double(m.Getcurrent())
	x.Double(m.Getprevious())
	return x.Buf
}

// CodecDecode:statsAbsValueAndPrev
func (m *TLstatsAbsValueAndPrev) Decode(dbuf *DecodeBuf) error {
	m.Setcurrent(dbuf.Double())
	m.Setprevious(dbuf.Double())
	return dbuf.Err
}

// CodecEncode:help_inviteText
func (m *TLhelp_inviteText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(415997816)
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:help_inviteText
func (m *TLhelp_inviteText) Decode(dbuf *DecodeBuf) error {
	m.Setmessage(dbuf.String())
	return dbuf.Err
}

// CodecEncode:error
func (m *TLerror) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-994444869)
	x.Int(m.Getcode())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:error
func (m *TLerror) Decode(dbuf *DecodeBuf) error {
	m.Setcode(dbuf.Int())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_chats
func (m *TLmessages_chats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1694474197)
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chats
func (m *TLmessages_chats) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Chat, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Chat{}
		v0[i].Decode(dbuf)
	}
	m.Setchats(v0)
	return dbuf.Err
}

// CodecEncode:messages_chatsSlice
func (m *TLmessages_chatsSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1663561404)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chatsSlice
func (m *TLmessages_chatsSlice) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	return dbuf.Err
}

// CodecEncode:pageRelatedArticle
func (m *TLpageRelatedArticle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1282352120)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 0
	}
	if m.Getdescription() != "" {
		flags |= 1 << 1
	}
	if m.Getphoto_id() != 0 {
		flags |= 1 << 2
	}
	if m.Getauthor() != "" {
		flags |= 1 << 3
	}
	if m.Getpublished_date() != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.String(m.Geturl())
	x.Long(m.Getwebpage_id())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Getphoto_id() != 0 {
		x.Long(m.Getphoto_id())
	}
	if m.Getauthor() != "" {
		x.String(m.Getauthor())
	}
	if m.Getpublished_date() != 0 {
		x.Int(m.Getpublished_date())
	}
	return x.Buf
}

// CodecDecode:pageRelatedArticle
func (m *TLpageRelatedArticle) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	m.Setwebpage_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setphoto_id(dbuf.Long())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setauthor(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setpublished_date(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:geoPointEmpty
func (m *TLgeoPointEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(286776671)
	return x.Buf
}

// CodecDecode:geoPointEmpty
func (m *TLgeoPointEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:geoPoint
func (m *TLgeoPoint) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1297942941)
	var flags uint32 = 0
	if m.Getaccuracy_radius() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Double(m.Getlong())
	x.Double(m.Getlat())
	x.Long(m.Getaccess_hash())
	if m.Getaccuracy_radius() != 0 {
		x.Int(m.Getaccuracy_radius())
	}
	return x.Buf
}

// CodecDecode:geoPoint
func (m *TLgeoPoint) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setlong(dbuf.Double())
	m.Setlat(dbuf.Double())
	m.Setaccess_hash(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setaccuracy_radius(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:chatPhotoEmpty
func (m *TLchatPhotoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(935395612)
	return x.Buf
}

// CodecDecode:chatPhotoEmpty
func (m *TLchatPhotoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:chatPhoto
func (m *TLchatPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-770990276)
	var flags uint32 = 0
	if m.Gethas_video() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getphoto_small().Encode())
	x.Bytes(m.Getphoto_big().Encode())
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:chatPhoto
func (m *TLchatPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_video(true)
	}
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setphoto_small(m1)
	m2 := &FileLocation{}
	m2.Decode(dbuf)
	m.Setphoto_big(m2)
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEmpty
func (m *TLmessageEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2082087340)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:messageEmpty
func (m *TLmessageEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:message
func (m *TLmessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1487813065)
	var flags uint32 = 0
	if m.Getout() != false {
		flags |= 1 << 1
	}
	if m.Getmentioned() != false {
		flags |= 1 << 4
	}
	if m.Getmedia_unread() != false {
		flags |= 1 << 5
	}
	if m.Getsilent() != false {
		flags |= 1 << 13
	}
	if m.Getpost() != false {
		flags |= 1 << 14
	}
	if m.Getfrom_scheduled() != false {
		flags |= 1 << 18
	}
	if m.Getlegacy() != false {
		flags |= 1 << 19
	}
	if m.Getedit_hide() != false {
		flags |= 1 << 21
	}
	if m.Getpinned() != false {
		flags |= 1 << 24
	}
	if m.Getfrom_id() != nil {
		flags |= 1 << 8
	}
	if m.Getfwd_from() != nil {
		flags |= 1 << 2
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 1 << 11
	}
	if m.Getreply_to() != nil {
		flags |= 1 << 3
	}
	if m.Getmedia() != nil {
		flags |= 1 << 9
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 6
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 7
	}
	if m.Getviews() != 0 {
		flags |= 1 << 10
	}
	if m.Getforwards() != 0 {
		flags |= 1 << 10
	}
	if m.Getreplies() != nil {
		flags |= 1 << 23
	}
	if m.Getedit_date() != 0 {
		flags |= 1 << 15
	}
	if m.Getpost_author() != "" {
		flags |= 1 << 16
	}
	if m.Getgrouped_id() != 0 {
		flags |= 1 << 17
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 1 << 22
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfrom_id() != nil {
		x.Bytes(m.Getfrom_id().Encode())
	}
	x.Bytes(m.Getpeer_id().Encode())
	if m.Getfwd_from() != nil {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to() != nil {
		x.Bytes(m.Getreply_to().Encode())
	}
	x.Int(m.Getdate())
	x.String(m.Getmessage())
	if m.Getmedia() != nil {
		x.Bytes(m.Getmedia().Encode())
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	if m.Getforwards() != 0 {
		x.Int(m.Getforwards())
	}
	if m.Getreplies() != nil {
		x.Bytes(m.Getreplies().Encode())
	}
	if m.Getedit_date() != 0 {
		x.Int(m.Getedit_date())
	}
	if m.Getpost_author() != "" {
		x.String(m.Getpost_author())
	}
	if m.Getgrouped_id() != 0 {
		x.Long(m.Getgrouped_id())
	}
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:message
func (m *TLmessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setout(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setpost(true)
	}
	if (flags & (1 << 18)) != 0 {
		m.Setfrom_scheduled(true)
	}
	if (flags & (1 << 19)) != 0 {
		m.Setlegacy(true)
	}
	if (flags & (1 << 21)) != 0 {
		m.Setedit_hide(true)
	}
	if (flags & (1 << 24)) != 0 {
		m.Setpinned(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 8)) != 0 {
		m10 := &Peer{}
		m10.Decode(dbuf)
		m.Setfrom_id(m10)
	}
	m11 := &Peer{}
	m11.Decode(dbuf)
	m.Setpeer_id(m11)
	if (flags & (1 << 2)) != 0 {
		m12 := &MessageFwdHeader{}
		m12.Decode(dbuf)
		m.Setfwd_from(m12)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m14 := &MessageReplyHeader{}
		m14.Decode(dbuf)
		m.Setreply_to(m14)
	}
	m.Setdate(dbuf.Int())
	m.Setmessage(dbuf.String())
	if (flags & (1 << 9)) != 0 {
		m17 := &MessageMedia{}
		m17.Decode(dbuf)
		m.Setmedia(m17)
	}
	if (flags & (1 << 6)) != 0 {
		m18 := &ReplyMarkup{}
		m18.Decode(dbuf)
		m.Setreply_markup(m18)
	}
	if (flags & (1 << 7)) != 0 {
		c19 := dbuf.Int()
		if c19 != 481674261 {
			return dbuf.Err
		}
		l19 := dbuf.Int()
		v19 := make([]*MessageEntity, l19)
		for i := int32(0); i < l19; i++ {
			v19[i] = &MessageEntity{}
			v19[i].Decode(dbuf)
		}
		m.Setentities(v19)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setviews(dbuf.Int())
	}
	if (flags & (1 << 10)) != 0 {
		m.Setforwards(dbuf.Int())
	}
	if (flags & (1 << 23)) != 0 {
		m22 := &MessageReplies{}
		m22.Decode(dbuf)
		m.Setreplies(m22)
	}
	if (flags & (1 << 15)) != 0 {
		m.Setedit_date(dbuf.Int())
	}
	if (flags & (1 << 16)) != 0 {
		m.Setpost_author(dbuf.String())
	}
	if (flags & (1 << 17)) != 0 {
		m.Setgrouped_id(dbuf.Long())
	}
	if (flags & (1 << 22)) != 0 {
		c26 := dbuf.Int()
		if c26 != 481674261 {
			return dbuf.Err
		}
		l26 := dbuf.Int()
		v26 := make([]*RestrictionReason, l26)
		for i := int32(0); i < l26; i++ {
			v26[i] = &RestrictionReason{}
			v26[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v26)
	}
	return dbuf.Err
}

// CodecEncode:messageService
func (m *TLmessageService) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(678405636)
	var flags uint32 = 0
	if m.Getout() != false {
		flags |= 1 << 1
	}
	if m.Getmentioned() != false {
		flags |= 1 << 4
	}
	if m.Getmedia_unread() != false {
		flags |= 1 << 5
	}
	if m.Getsilent() != false {
		flags |= 1 << 13
	}
	if m.Getpost() != false {
		flags |= 1 << 14
	}
	if m.Getlegacy() != false {
		flags |= 1 << 19
	}
	if m.Getfrom_id() != nil {
		flags |= 1 << 8
	}
	if m.Getreply_to() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfrom_id() != nil {
		x.Bytes(m.Getfrom_id().Encode())
	}
	x.Bytes(m.Getpeer_id().Encode())
	if m.Getreply_to() != nil {
		x.Bytes(m.Getreply_to().Encode())
	}
	x.Int(m.Getdate())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:messageService
func (m *TLmessageService) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setout(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setsilent(true)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setpost(true)
	}
	if (flags & (1 << 19)) != 0 {
		m.Setlegacy(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 8)) != 0 {
		m7 := &Peer{}
		m7.Decode(dbuf)
		m.Setfrom_id(m7)
	}
	m8 := &Peer{}
	m8.Decode(dbuf)
	m.Setpeer_id(m8)
	if (flags & (1 << 3)) != 0 {
		m9 := &MessageReplyHeader{}
		m9.Decode(dbuf)
		m.Setreply_to(m9)
	}
	m.Setdate(dbuf.Int())
	m11 := &MessageAction{}
	m11.Decode(dbuf)
	m.Setaction(m11)
	return dbuf.Err
}

// CodecEncode:importedContact
func (m *TLimportedContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-805141448)
	x.Int(m.Getuser_id())
	x.Long(m.Getclient_id())
	return x.Buf
}

// CodecDecode:importedContact
func (m *TLimportedContact) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setclient_id(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:storage_fileUnknown
func (m *TLstorage_fileUnknown) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1432995067)
	return x.Buf
}

// CodecDecode:storage_fileUnknown
func (m *TLstorage_fileUnknown) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_filePartial
func (m *TLstorage_filePartial) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1086091090)
	return x.Buf
}

// CodecDecode:storage_filePartial
func (m *TLstorage_filePartial) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileJpeg
func (m *TLstorage_fileJpeg) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(8322574)
	return x.Buf
}

// CodecDecode:storage_fileJpeg
func (m *TLstorage_fileJpeg) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileGif
func (m *TLstorage_fileGif) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-891180321)
	return x.Buf
}

// CodecDecode:storage_fileGif
func (m *TLstorage_fileGif) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_filePng
func (m *TLstorage_filePng) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(172975040)
	return x.Buf
}

// CodecDecode:storage_filePng
func (m *TLstorage_filePng) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_filePdf
func (m *TLstorage_filePdf) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1373745011)
	return x.Buf
}

// CodecDecode:storage_filePdf
func (m *TLstorage_filePdf) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileMp3
func (m *TLstorage_fileMp3) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1384777335)
	return x.Buf
}

// CodecDecode:storage_fileMp3
func (m *TLstorage_fileMp3) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileMov
func (m *TLstorage_fileMov) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1258941372)
	return x.Buf
}

// CodecDecode:storage_fileMov
func (m *TLstorage_fileMov) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileMp4
func (m *TLstorage_fileMp4) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1278304028)
	return x.Buf
}

// CodecDecode:storage_fileMp4
func (m *TLstorage_fileMp4) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:storage_fileWebp
func (m *TLstorage_fileWebp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(276907596)
	return x.Buf
}

// CodecDecode:storage_fileWebp
func (m *TLstorage_fileWebp) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_deepLinkInfoEmpty
func (m *TLhelp_deepLinkInfoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1722786150)
	return x.Buf
}

// CodecDecode:help_deepLinkInfoEmpty
func (m *TLhelp_deepLinkInfoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_deepLinkInfo
func (m *TLhelp_deepLinkInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1783556146)
	var flags uint32 = 0
	if m.Getupdate_app() != false {
		flags |= 1 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:help_deepLinkInfo
func (m *TLhelp_deepLinkInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setupdate_app(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]*MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	return dbuf.Err
}

// CodecEncode:pageTableRow
func (m *TLpageTableRow) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-524237339)
	x.Int(481674261)
	x.Int(int32(len(m.Getcells())))
	for _, v := range m.Getcells() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageTableRow
func (m *TLpageTableRow) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PageTableCell, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PageTableCell{}
		v0[i].Decode(dbuf)
	}
	m.Setcells(v0)
	return dbuf.Err
}

// CodecEncode:fileHash
func (m *TLfileHash) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1648543603)
	x.Int(m.Getoffset())
	x.Int(m.Getlimit())
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:fileHash
func (m *TLfileHash) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlimit(dbuf.Int())
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:contactStatus
func (m *TLcontactStatus) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-748155807)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getstatus().Encode())
	return x.Buf
}

// CodecDecode:contactStatus
func (m *TLcontactStatus) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &UserStatus{}
	m1.Decode(dbuf)
	m.Setstatus(m1)
	return dbuf.Err
}

// CodecEncode:account_contentSettings
func (m *TLaccount_contentSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1474462241)
	var flags uint32 = 0
	if m.Getsensitive_enabled() != false {
		flags |= 1 << 0
	}
	if m.Getsensitive_can_change() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:account_contentSettings
func (m *TLaccount_contentSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsensitive_enabled(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsensitive_can_change(true)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineResult
func (m *TLinputBotInlineResult) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2000710887)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 1
	}
	if m.Getdescription() != "" {
		flags |= 1 << 2
	}
	if m.Geturl() != "" {
		flags |= 1 << 3
	}
	if m.Getthumb() != nil {
		flags |= 1 << 4
	}
	if m.Getcontent() != nil {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype_key())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getcontent() != nil {
		x.Bytes(m.Getcontent().Encode())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResult
func (m *TLinputBotInlineResult) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype_key(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m5 := &InputWebDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	if (flags & (1 << 5)) != 0 {
		m6 := &InputWebDocument{}
		m6.Decode(dbuf)
		m.Setcontent(m6)
	}
	m7 := &InputBotInlineMessage{}
	m7.Decode(dbuf)
	m.Setsend_message(m7)
	return dbuf.Err
}

// CodecEncode:inputBotInlineResultPhoto
func (m *TLinputBotInlineResultPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1462213465)
	x.String(m.Getid())
	x.String(m.Gettype_key())
	x.Bytes(m.Getphoto().Encode())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultPhoto
func (m *TLinputBotInlineResultPhoto) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settype_key(dbuf.String())
	m2 := &InputPhoto{}
	m2.Decode(dbuf)
	m.Setphoto(m2)
	m3 := &InputBotInlineMessage{}
	m3.Decode(dbuf)
	m.Setsend_message(m3)
	return dbuf.Err
}

// CodecEncode:inputBotInlineResultDocument
func (m *TLinputBotInlineResultDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-459324)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 1
	}
	if m.Getdescription() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype_key())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	x.Bytes(m.Getdocument().Encode())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultDocument
func (m *TLinputBotInlineResultDocument) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype_key(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setdescription(dbuf.String())
	}
	m4 := &InputDocument{}
	m4.Decode(dbuf)
	m.Setdocument(m4)
	m5 := &InputBotInlineMessage{}
	m5.Decode(dbuf)
	m.Setsend_message(m5)
	return dbuf.Err
}

// CodecEncode:inputBotInlineResultGame
func (m *TLinputBotInlineResultGame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1336154098)
	x.String(m.Getid())
	x.String(m.Getshort_name())
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:inputBotInlineResultGame
func (m *TLinputBotInlineResultGame) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Setshort_name(dbuf.String())
	m2 := &InputBotInlineMessage{}
	m2.Decode(dbuf)
	m.Setsend_message(m2)
	return dbuf.Err
}

// CodecEncode:channelLocationEmpty
func (m *TLchannelLocationEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1078612597)
	return x.Buf
}

// CodecDecode:channelLocationEmpty
func (m *TLchannelLocationEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelLocation
func (m *TLchannelLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(547062491)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Getaddress())
	return x.Buf
}

// CodecDecode:channelLocation
func (m *TLchannelLocation) Decode(dbuf *DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Setaddress(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageMediaAuto
func (m *TLinputBotInlineMessageMediaAuto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(864077702)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaAuto
func (m *TLinputBotInlineMessageMediaAuto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*MessageEntity, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &MessageEntity{}
			v1[i].Decode(dbuf)
		}
		m.Setentities(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &ReplyMarkup{}
		m2.Decode(dbuf)
		m.Setreply_markup(m2)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageText
func (m *TLinputBotInlineMessageText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1036876423)
	var flags uint32 = 0
	if m.Getno_webpage() != false {
		flags |= 1 << 0
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 1
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageText
func (m *TLinputBotInlineMessageText) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setno_webpage(true)
	}
	m.Setmessage(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		c2 := dbuf.Int()
		if c2 != 481674261 {
			return dbuf.Err
		}
		l2 := dbuf.Int()
		v2 := make([]*MessageEntity, l2)
		for i := int32(0); i < l2; i++ {
			v2[i] = &MessageEntity{}
			v2[i].Decode(dbuf)
		}
		m.Setentities(v2)
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &ReplyMarkup{}
		m3.Decode(dbuf)
		m.Setreply_markup(m3)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageMediaGeo
func (m *TLinputBotInlineMessageMediaGeo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1768777083)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 1 << 0
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 1
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 1 << 3
	}
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaGeo
func (m *TLinputBotInlineMessageMediaGeo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageMediaVenue
func (m *TLinputBotInlineMessageMediaVenue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1098628881)
	var flags uint32 = 0
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaVenue
func (m *TLinputBotInlineMessageMediaVenue) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m6 := &ReplyMarkup{}
		m6.Decode(dbuf)
		m.Setreply_markup(m6)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageMediaContact
func (m *TLinputBotInlineMessageMediaContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1494368259)
	var flags uint32 = 0
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageMediaContact
func (m *TLinputBotInlineMessageMediaContact) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m4 := &ReplyMarkup{}
		m4.Decode(dbuf)
		m.Setreply_markup(m4)
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageGame
func (m *TLinputBotInlineMessageGame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1262639204)
	var flags uint32 = 0
	if m.Getreply_markup() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getreply_markup() != nil {
		x.Bytes(m.Getreply_markup().Encode())
	}
	return x.Buf
}

// CodecDecode:inputBotInlineMessageGame
func (m *TLinputBotInlineMessageGame) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m0 := &ReplyMarkup{}
		m0.Decode(dbuf)
		m.Setreply_markup(m0)
	}
	return dbuf.Err
}

// CodecEncode:contact
func (m *TLcontact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-116274796)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getmutual().Encode())
	return x.Buf
}

// CodecDecode:contact
func (m *TLcontact) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setmutual(m1)
	return dbuf.Err
}

// CodecEncode:botInlineResult
func (m *TLbotInlineResult) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(295067450)
	var flags uint32 = 0
	if m.Gettitle() != "" {
		flags |= 1 << 1
	}
	if m.Getdescription() != "" {
		flags |= 1 << 2
	}
	if m.Geturl() != "" {
		flags |= 1 << 3
	}
	if m.Getthumb() != nil {
		flags |= 1 << 4
	}
	if m.Getcontent() != nil {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype_key())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getcontent() != nil {
		x.Bytes(m.Getcontent().Encode())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:botInlineResult
func (m *TLbotInlineResult) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype_key(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setdescription(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Seturl(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m5 := &WebDocument{}
		m5.Decode(dbuf)
		m.Setthumb(m5)
	}
	if (flags & (1 << 5)) != 0 {
		m6 := &WebDocument{}
		m6.Decode(dbuf)
		m.Setcontent(m6)
	}
	m7 := &BotInlineMessage{}
	m7.Decode(dbuf)
	m.Setsend_message(m7)
	return dbuf.Err
}

// CodecEncode:botInlineMediaResult
func (m *TLbotInlineMediaResult) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(400266251)
	var flags uint32 = 0
	if m.Getphoto() != nil {
		flags |= 1 << 0
	}
	if m.Getdocument() != nil {
		flags |= 1 << 1
	}
	if m.Gettitle() != "" {
		flags |= 1 << 2
	}
	if m.Getdescription() != "" {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.String(m.Getid())
	x.String(m.Gettype_key())
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getdescription() != "" {
		x.String(m.Getdescription())
	}
	x.Bytes(m.Getsend_message().Encode())
	return x.Buf
}

// CodecDecode:botInlineMediaResult
func (m *TLbotInlineMediaResult) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.String())
	m.Settype_key(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &Photo{}
		m2.Decode(dbuf)
		m.Setphoto(m2)
	}
	if (flags & (1 << 1)) != 0 {
		m3 := &Document{}
		m3.Decode(dbuf)
		m.Setdocument(m3)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdescription(dbuf.String())
	}
	m6 := &BotInlineMessage{}
	m6.Decode(dbuf)
	m.Setsend_message(m6)
	return dbuf.Err
}

// CodecEncode:channelAdminLogEvent
func (m *TLchannelAdminLogEvent) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(995769920)
	x.Long(m.Getid())
	x.Int(m.Getdate())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:channelAdminLogEvent
func (m *TLchannelAdminLogEvent) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m3 := &ChannelAdminLogEventAction{}
	m3.Decode(dbuf)
	m.Setaction(m3)
	return dbuf.Err
}

// CodecEncode:updatesTooLong
func (m *TLupdatesTooLong) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-484987010)
	return x.Buf
}

// CodecDecode:updatesTooLong
func (m *TLupdatesTooLong) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateShortMessage
func (m *TLupdateShortMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(580309704)
	var flags uint32 = 0
	if m.Getout() != false {
		flags |= 1 << 1
	}
	if m.Getmentioned() != false {
		flags |= 1 << 4
	}
	if m.Getmedia_unread() != false {
		flags |= 1 << 5
	}
	if m.Getsilent() != false {
		flags |= 1 << 13
	}
	if m.Getfwd_from() != nil {
		flags |= 1 << 2
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 1 << 11
	}
	if m.Getreply_to() != nil {
		flags |= 1 << 3
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getuser_id())
	x.String(m.Getmessage())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getfwd_from() != nil {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to() != nil {
		x.Bytes(m.Getreply_to().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortMessage
func (m *TLupdateShortMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setout(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setsilent(true)
	}
	m.Setid(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setmessage(dbuf.String())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m10 := &MessageFwdHeader{}
		m10.Decode(dbuf)
		m.Setfwd_from(m10)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m12 := &MessageReplyHeader{}
		m12.Decode(dbuf)
		m.Setreply_to(m12)
	}
	if (flags & (1 << 7)) != 0 {
		c13 := dbuf.Int()
		if c13 != 481674261 {
			return dbuf.Err
		}
		l13 := dbuf.Int()
		v13 := make([]*MessageEntity, l13)
		for i := int32(0); i < l13; i++ {
			v13[i] = &MessageEntity{}
			v13[i].Decode(dbuf)
		}
		m.Setentities(v13)
	}
	return dbuf.Err
}

// CodecEncode:updateShortChatMessage
func (m *TLupdateShortChatMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1076714939)
	var flags uint32 = 0
	if m.Getout() != false {
		flags |= 1 << 1
	}
	if m.Getmentioned() != false {
		flags |= 1 << 4
	}
	if m.Getmedia_unread() != false {
		flags |= 1 << 5
	}
	if m.Getsilent() != false {
		flags |= 1 << 13
	}
	if m.Getfwd_from() != nil {
		flags |= 1 << 2
	}
	if m.Getvia_bot_id() != 0 {
		flags |= 1 << 11
	}
	if m.Getreply_to() != nil {
		flags |= 1 << 3
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getfrom_id())
	x.Int(m.Getchat_id())
	x.String(m.Getmessage())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getfwd_from() != nil {
		x.Bytes(m.Getfwd_from().Encode())
	}
	if m.Getvia_bot_id() != 0 {
		x.Int(m.Getvia_bot_id())
	}
	if m.Getreply_to() != nil {
		x.Bytes(m.Getreply_to().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortChatMessage
func (m *TLupdateShortChatMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setout(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmentioned(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setmedia_unread(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setsilent(true)
	}
	m.Setid(dbuf.Int())
	m.Setfrom_id(dbuf.Int())
	m.Setchat_id(dbuf.Int())
	m.Setmessage(dbuf.String())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m11 := &MessageFwdHeader{}
		m11.Decode(dbuf)
		m.Setfwd_from(m11)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setvia_bot_id(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m13 := &MessageReplyHeader{}
		m13.Decode(dbuf)
		m.Setreply_to(m13)
	}
	if (flags & (1 << 7)) != 0 {
		c14 := dbuf.Int()
		if c14 != 481674261 {
			return dbuf.Err
		}
		l14 := dbuf.Int()
		v14 := make([]*MessageEntity, l14)
		for i := int32(0); i < l14; i++ {
			v14[i] = &MessageEntity{}
			v14[i].Decode(dbuf)
		}
		m.Setentities(v14)
	}
	return dbuf.Err
}

// CodecEncode:updateShort
func (m *TLupdateShort) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2027216577)
	x.Bytes(m.Getupdate().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateShort
func (m *TLupdateShort) Decode(dbuf *DecodeBuf) error {
	m0 := &Update{}
	m0.Decode(dbuf)
	m.Setupdate(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updatesCombined
func (m *TLupdatesCombined) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1918567619)
	x.Int(481674261)
	x.Int(int32(len(m.Getupdates())))
	for _, v := range m.Getupdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getdate())
	x.Int(m.Getseq_start())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updatesCombined
func (m *TLupdatesCombined) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Update, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Update{}
		v0[i].Decode(dbuf)
	}
	m.Setupdates(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	m.Setdate(dbuf.Int())
	m.Setseq_start(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updates
func (m *TLupdates) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1957577280)
	x.Int(481674261)
	x.Int(int32(len(m.Getupdates())))
	for _, v := range m.Getupdates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updates
func (m *TLupdates) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Update, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Update{}
		v0[i].Decode(dbuf)
	}
	m.Setupdates(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateShortSentMessage
func (m *TLupdateShortSentMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(301019932)
	var flags uint32 = 0
	if m.Getout() != false {
		flags |= 1 << 1
	}
	if m.Getmedia() != nil {
		flags |= 1 << 9
	}
	if len(m.Getentities()) > 0 {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getdate())
	if m.Getmedia() != nil {
		x.Bytes(m.Getmedia().Encode())
	}
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updateShortSentMessage
func (m *TLupdateShortSentMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setout(true)
	}
	m.Setid(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setdate(dbuf.Int())
	if (flags & (1 << 9)) != 0 {
		m5 := &MessageMedia{}
		m5.Decode(dbuf)
		m.Setmedia(m5)
	}
	if (flags & (1 << 7)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*MessageEntity, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &MessageEntity{}
			v6[i].Decode(dbuf)
		}
		m.Setentities(v6)
	}
	return dbuf.Err
}

// CodecEncode:documentAttributeImageSize
func (m *TLdocumentAttributeImageSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1815593308)
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:documentAttributeImageSize
func (m *TLdocumentAttributeImageSize) Decode(dbuf *DecodeBuf) error {
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:documentAttributeAnimated
func (m *TLdocumentAttributeAnimated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(297109817)
	return x.Buf
}

// CodecDecode:documentAttributeAnimated
func (m *TLdocumentAttributeAnimated) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:documentAttributeSticker
func (m *TLdocumentAttributeSticker) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1662637586)
	var flags uint32 = 0
	if m.Getmask() != false {
		flags |= 1 << 1
	}
	if m.Getmask_coords() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Getalt())
	x.Bytes(m.Getstickerset().Encode())
	if m.Getmask_coords() != nil {
		x.Bytes(m.Getmask_coords().Encode())
	}
	return x.Buf
}

// CodecDecode:documentAttributeSticker
func (m *TLdocumentAttributeSticker) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setmask(true)
	}
	m.Setalt(dbuf.String())
	m2 := &InputStickerSet{}
	m2.Decode(dbuf)
	m.Setstickerset(m2)
	if (flags & (1 << 0)) != 0 {
		m3 := &MaskCoords{}
		m3.Decode(dbuf)
		m.Setmask_coords(m3)
	}
	return dbuf.Err
}

// CodecEncode:documentAttributeVideo
func (m *TLdocumentAttributeVideo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(250621158)
	var flags uint32 = 0
	if m.Getround_message() != false {
		flags |= 1 << 0
	}
	if m.Getsupports_streaming() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getduration())
	x.Int(m.Getw())
	x.Int(m.Geth())
	return x.Buf
}

// CodecDecode:documentAttributeVideo
func (m *TLdocumentAttributeVideo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setround_message(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsupports_streaming(true)
	}
	m.Setduration(dbuf.Int())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:documentAttributeAudio
func (m *TLdocumentAttributeAudio) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1739392570)
	var flags uint32 = 0
	if m.Getvoice() != false {
		flags |= 1 << 10
	}
	if m.Gettitle() != "" {
		flags |= 1 << 0
	}
	if m.Getperformer() != "" {
		flags |= 1 << 1
	}
	if m.Getwaveform() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getduration())
	if m.Gettitle() != "" {
		x.String(m.Gettitle())
	}
	if m.Getperformer() != "" {
		x.String(m.Getperformer())
	}
	if m.Getwaveform() != nil {
		x.Bytes(m.Getwaveform())
	}
	return x.Buf
}

// CodecDecode:documentAttributeAudio
func (m *TLdocumentAttributeAudio) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 10)) != 0 {
		m.Setvoice(true)
	}
	m.Setduration(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Settitle(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setperformer(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setwaveform(dbuf.StringBytes())
	}
	return dbuf.Err
}

// CodecEncode:documentAttributeFilename
func (m *TLdocumentAttributeFilename) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(358154344)
	x.String(m.Getfile_name())
	return x.Buf
}

// CodecDecode:documentAttributeFilename
func (m *TLdocumentAttributeFilename) Decode(dbuf *DecodeBuf) error {
	m.Setfile_name(dbuf.String())
	return dbuf.Err
}

// CodecEncode:documentAttributeHasStickers
func (m *TLdocumentAttributeHasStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1744710921)
	return x.Buf
}

// CodecDecode:documentAttributeHasStickers
func (m *TLdocumentAttributeHasStickers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:photoEmpty
func (m *TLphotoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(590459437)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:photoEmpty
func (m *TLphotoEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:photo
func (m *TLphoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-82216347)
	var flags uint32 = 0
	if m.Gethas_stickers() != false {
		flags |= 1 << 0
	}
	if len(m.Getvideo_sizes()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Int(m.Getdate())
	x.Int(481674261)
	x.Int(int32(len(m.Getsizes())))
	for _, v := range m.Getsizes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if len(m.Getvideo_sizes()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getvideo_sizes())))
		for _, v := range m.Getvideo_sizes() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:photo
func (m *TLphoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_stickers(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*PhotoSize, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &PhotoSize{}
		v5[i].Decode(dbuf)
	}
	m.Setsizes(v5)
	if (flags & (1 << 1)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*VideoSize, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &VideoSize{}
			v6[i].Decode(dbuf)
		}
		m.Setvideo_sizes(v6)
	}
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:topPeerCategoryPeers
func (m *TLtopPeerCategoryPeers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-75283823)
	x.Bytes(m.Getcategory().Encode())
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:topPeerCategoryPeers
func (m *TLtopPeerCategoryPeers) Decode(dbuf *DecodeBuf) error {
	m0 := &TopPeerCategory{}
	m0.Decode(dbuf)
	m.Setcategory(m0)
	m.Setcount(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*TopPeer, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &TopPeer{}
		v2[i].Decode(dbuf)
	}
	m.Setpeers(v2)
	return dbuf.Err
}

// CodecEncode:inputSingleMedia
func (m *TLinputSingleMedia) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(482797855)
	var flags uint32 = 0
	if len(m.Getentities()) > 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getmedia().Encode())
	x.Long(m.Getrandom_id())
	x.String(m.Getmessage())
	if len(m.Getentities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getentities())))
		for _, v := range m.Getentities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:inputSingleMedia
func (m *TLinputSingleMedia) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputMedia{}
	m0.Decode(dbuf)
	m.Setmedia(m0)
	m.Setrandom_id(dbuf.Long())
	m.Setmessage(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]*MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setentities(v3)
	}
	return dbuf.Err
}

// CodecEncode:help_recentMeUrls
func (m *TLhelp_recentMeUrls) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(235081943)
	x.Int(481674261)
	x.Int(int32(len(m.Geturls())))
	for _, v := range m.Geturls() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:help_recentMeUrls
func (m *TLhelp_recentMeUrls) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*RecentMeUrl, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &RecentMeUrl{}
		v0[i].Decode(dbuf)
	}
	m.Seturls(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:langPackLanguage
func (m *TLlangPackLanguage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-288727837)
	var flags uint32 = 0
	if m.Getofficial() != false {
		flags |= 1 << 0
	}
	if m.Getrtl() != false {
		flags |= 1 << 2
	}
	if m.Getbeta() != false {
		flags |= 1 << 3
	}
	if m.Getbase_lang_code() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Getname())
	x.String(m.Getnative_name())
	x.String(m.Getlang_code())
	if m.Getbase_lang_code() != "" {
		x.String(m.Getbase_lang_code())
	}
	x.String(m.Getplural_code())
	x.Int(m.Getstrings_count())
	x.Int(m.Gettranslated_count())
	x.String(m.Gettranslations_url())
	return x.Buf
}

// CodecDecode:langPackLanguage
func (m *TLlangPackLanguage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setofficial(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setrtl(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setbeta(true)
	}
	m.Setname(dbuf.String())
	m.Setnative_name(dbuf.String())
	m.Setlang_code(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setbase_lang_code(dbuf.String())
	}
	m.Setplural_code(dbuf.String())
	m.Setstrings_count(dbuf.Int())
	m.Settranslated_count(dbuf.Int())
	m.Settranslations_url(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageActionEmpty
func (m *TLmessageActionEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1230047312)
	return x.Buf
}

// CodecDecode:messageActionEmpty
func (m *TLmessageActionEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionChatCreate
func (m *TLmessageActionChatCreate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1503425638)
	x.String(m.Gettitle())
	x.VectorInt(m.Getusers())
	return x.Buf
}

// CodecDecode:messageActionChatCreate
func (m *TLmessageActionChatCreate) Decode(dbuf *DecodeBuf) error {
	m.Settitle(dbuf.String())
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:messageActionChatEditTitle
func (m *TLmessageActionChatEditTitle) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1247687078)
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messageActionChatEditTitle
func (m *TLmessageActionChatEditTitle) Decode(dbuf *DecodeBuf) error {
	m.Settitle(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageActionChatEditPhoto
func (m *TLmessageActionChatEditPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2144015272)
	x.Bytes(m.Getphoto().Encode())
	return x.Buf
}

// CodecDecode:messageActionChatEditPhoto
func (m *TLmessageActionChatEditPhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setphoto(m0)
	return dbuf.Err
}

// CodecEncode:messageActionChatDeletePhoto
func (m *TLmessageActionChatDeletePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1780220945)
	return x.Buf
}

// CodecDecode:messageActionChatDeletePhoto
func (m *TLmessageActionChatDeletePhoto) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionChatAddUser
func (m *TLmessageActionChatAddUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1217033015)
	x.VectorInt(m.Getusers())
	return x.Buf
}

// CodecDecode:messageActionChatAddUser
func (m *TLmessageActionChatAddUser) Decode(dbuf *DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:messageActionChatDeleteUser
func (m *TLmessageActionChatDeleteUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1297179892)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageActionChatDeleteUser
func (m *TLmessageActionChatDeleteUser) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageActionChatJoinedByLink
func (m *TLmessageActionChatJoinedByLink) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-123931160)
	x.Int(m.Getinviter_id())
	return x.Buf
}

// CodecDecode:messageActionChatJoinedByLink
func (m *TLmessageActionChatJoinedByLink) Decode(dbuf *DecodeBuf) error {
	m.Setinviter_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageActionChannelCreate
func (m *TLmessageActionChannelCreate) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1781355374)
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:messageActionChannelCreate
func (m *TLmessageActionChannelCreate) Decode(dbuf *DecodeBuf) error {
	m.Settitle(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageActionChatMigrateTo
func (m *TLmessageActionChatMigrateTo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1371385889)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:messageActionChatMigrateTo
func (m *TLmessageActionChatMigrateTo) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageActionChannelMigrateFrom
func (m *TLmessageActionChannelMigrateFrom) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1336546578)
	x.String(m.Gettitle())
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:messageActionChannelMigrateFrom
func (m *TLmessageActionChannelMigrateFrom) Decode(dbuf *DecodeBuf) error {
	m.Settitle(dbuf.String())
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageActionPinMessage
func (m *TLmessageActionPinMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1799538451)
	return x.Buf
}

// CodecDecode:messageActionPinMessage
func (m *TLmessageActionPinMessage) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionHistoryClear
func (m *TLmessageActionHistoryClear) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1615153660)
	return x.Buf
}

// CodecDecode:messageActionHistoryClear
func (m *TLmessageActionHistoryClear) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionGameScore
func (m *TLmessageActionGameScore) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1834538890)
	x.Long(m.Getgame_id())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:messageActionGameScore
func (m *TLmessageActionGameScore) Decode(dbuf *DecodeBuf) error {
	m.Setgame_id(dbuf.Long())
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageActionPaymentSentMe
func (m *TLmessageActionPaymentSentMe) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1892568281)
	var flags uint32 = 0
	if m.Getinfo() != nil {
		flags |= 1 << 0
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.Bytes(m.Getpayload())
	if m.Getinfo() != nil {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.Bytes(m.Getcharge().Encode())
	return x.Buf
}

// CodecDecode:messageActionPaymentSentMe
func (m *TLmessageActionPaymentSentMe) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setpayload(dbuf.StringBytes())
	if (flags & (1 << 0)) != 0 {
		m3 := &PaymentRequestedInfo{}
		m3.Decode(dbuf)
		m.Setinfo(m3)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m5 := &PaymentCharge{}
	m5.Decode(dbuf)
	m.Setcharge(m5)
	return dbuf.Err
}

// CodecEncode:messageActionPaymentSent
func (m *TLmessageActionPaymentSent) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1080663248)
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	return x.Buf
}

// CodecDecode:messageActionPaymentSent
func (m *TLmessageActionPaymentSent) Decode(dbuf *DecodeBuf) error {
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:messageActionPhoneCall
func (m *TLmessageActionPhoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2132731265)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 2
	}
	if m.Getreason() != nil {
		flags |= 1 << 0
	}
	if m.Getduration() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getcall_id())
	if m.Getreason() != nil {
		x.Bytes(m.Getreason().Encode())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	return x.Buf
}

// CodecDecode:messageActionPhoneCall
func (m *TLmessageActionPhoneCall) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setvideo(true)
	}
	m.Setcall_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m2 := &PhoneCallDiscardReason{}
		m2.Decode(dbuf)
		m.Setreason(m2)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setduration(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messageActionScreenshotTaken
func (m *TLmessageActionScreenshotTaken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1200788123)
	return x.Buf
}

// CodecDecode:messageActionScreenshotTaken
func (m *TLmessageActionScreenshotTaken) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionCustomAction
func (m *TLmessageActionCustomAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-85549226)
	x.String(m.Getmessage())
	return x.Buf
}

// CodecDecode:messageActionCustomAction
func (m *TLmessageActionCustomAction) Decode(dbuf *DecodeBuf) error {
	m.Setmessage(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageActionBotAllowed
func (m *TLmessageActionBotAllowed) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1410748418)
	x.String(m.Getdomain())
	return x.Buf
}

// CodecDecode:messageActionBotAllowed
func (m *TLmessageActionBotAllowed) Decode(dbuf *DecodeBuf) error {
	m.Setdomain(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageActionSecureValuesSentMe
func (m *TLmessageActionSecureValuesSentMe) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(455635795)
	x.Int(481674261)
	x.Int(int32(len(m.Getvalues())))
	for _, v := range m.Getvalues() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getcredentials().Encode())
	return x.Buf
}

// CodecDecode:messageActionSecureValuesSentMe
func (m *TLmessageActionSecureValuesSentMe) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureValue, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureValue{}
		v0[i].Decode(dbuf)
	}
	m.Setvalues(v0)
	m1 := &SecureCredentialsEncrypted{}
	m1.Decode(dbuf)
	m.Setcredentials(m1)
	return dbuf.Err
}

// CodecEncode:messageActionSecureValuesSent
func (m *TLmessageActionSecureValuesSent) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-648257196)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messageActionSecureValuesSent
func (m *TLmessageActionSecureValuesSent) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureValueType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureValueType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

// CodecEncode:messageActionContactSignUp
func (m *TLmessageActionContactSignUp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-202219658)
	return x.Buf
}

// CodecDecode:messageActionContactSignUp
func (m *TLmessageActionContactSignUp) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageActionGeoProximityReached
func (m *TLmessageActionGeoProximityReached) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1730095465)
	x.Bytes(m.Getfrom_id().Encode())
	x.Bytes(m.Getto_id().Encode())
	x.Int(m.Getdistance())
	return x.Buf
}

// CodecDecode:messageActionGeoProximityReached
func (m *TLmessageActionGeoProximityReached) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setfrom_id(m0)
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setto_id(m1)
	m.Setdistance(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:notifyPeer
func (m *TLnotifyPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1613493288)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:notifyPeer
func (m *TLnotifyPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

// CodecEncode:notifyUsers
func (m *TLnotifyUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1261946036)
	return x.Buf
}

// CodecDecode:notifyUsers
func (m *TLnotifyUsers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:notifyChats
func (m *TLnotifyChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1073230141)
	return x.Buf
}

// CodecDecode:notifyChats
func (m *TLnotifyChats) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:notifyBroadcasts
func (m *TLnotifyBroadcasts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-703403793)
	return x.Buf
}

// CodecDecode:notifyBroadcasts
func (m *TLnotifyBroadcasts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMediaEmpty
func (m *TLinputMediaEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1771768449)
	return x.Buf
}

// CodecDecode:inputMediaEmpty
func (m *TLinputMediaEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputMediaUploadedPhoto
func (m *TLinputMediaUploadedPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(505969924)
	var flags uint32 = 0
	if len(m.Getstickers()) > 0 {
		flags |= 1 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if len(m.Getstickers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getstickers())))
		for _, v := range m.Getstickers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaUploadedPhoto
func (m *TLinputMediaUploadedPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputFile{}
	m0.Decode(dbuf)
	m.Setfile(m0)
	if (flags & (1 << 0)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*InputDocument, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &InputDocument{}
			v1[i].Decode(dbuf)
		}
		m.Setstickers(v1)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaPhoto
func (m *TLinputMediaPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1279654347)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid().Encode())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaPhoto
func (m *TLinputMediaPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaGeoPoint
func (m *TLinputMediaGeoPoint) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-104578748)
	x.Bytes(m.Getgeo_point().Encode())
	return x.Buf
}

// CodecDecode:inputMediaGeoPoint
func (m *TLinputMediaGeoPoint) Decode(dbuf *DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	return dbuf.Err
}

// CodecEncode:inputMediaContact
func (m *TLinputMediaContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-122978821)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	return x.Buf
}

// CodecDecode:inputMediaContact
func (m *TLinputMediaContact) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputMediaUploadedDocument
func (m *TLinputMediaUploadedDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1530447553)
	var flags uint32 = 0
	if m.Getnosound_video() != false {
		flags |= 1 << 3
	}
	if m.Getforce_file() != false {
		flags |= 1 << 4
	}
	if m.Getthumb() != nil {
		flags |= 1 << 2
	}
	if len(m.Getstickers()) > 0 {
		flags |= 1 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getfile().Encode())
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if len(m.Getstickers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getstickers())))
		for _, v := range m.Getstickers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaUploadedDocument
func (m *TLinputMediaUploadedDocument) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 3)) != 0 {
		m.Setnosound_video(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setforce_file(true)
	}
	m2 := &InputFile{}
	m2.Decode(dbuf)
	m.Setfile(m2)
	if (flags & (1 << 2)) != 0 {
		m3 := &InputFile{}
		m3.Decode(dbuf)
		m.Setthumb(m3)
	}
	m.Setmime_type(dbuf.String())
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*DocumentAttribute, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &DocumentAttribute{}
		v5[i].Decode(dbuf)
	}
	m.Setattributes(v5)
	if (flags & (1 << 0)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*InputDocument, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &InputDocument{}
			v6[i].Decode(dbuf)
		}
		m.Setstickers(v6)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaDocument
func (m *TLinputMediaDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(598418386)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getid_15().Encode())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaDocument
func (m *TLinputMediaDocument) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setid_15(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaVenue
func (m *TLinputMediaVenue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1052959727)
	x.Bytes(m.Getgeo_point().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	return x.Buf
}

// CodecDecode:inputMediaVenue
func (m *TLinputMediaVenue) Decode(dbuf *DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputMediaPhotoExternal
func (m *TLinputMediaPhotoExternal) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-440664550)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Geturl())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaPhotoExternal
func (m *TLinputMediaPhotoExternal) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaDocumentExternal
func (m *TLinputMediaDocumentExternal) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-78455655)
	var flags uint32 = 0
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Geturl())
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:inputMediaDocumentExternal
func (m *TLinputMediaDocumentExternal) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Seturl(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaGame
func (m *TLinputMediaGame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-750828557)
	x.Bytes(m.Getid_22().Encode())
	return x.Buf
}

// CodecDecode:inputMediaGame
func (m *TLinputMediaGame) Decode(dbuf *DecodeBuf) error {
	m0 := &InputGame{}
	m0.Decode(dbuf)
	m.Setid_22(m0)
	return dbuf.Err
}

// CodecEncode:inputMediaInvoice
func (m *TLinputMediaInvoice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-186607933)
	var flags uint32 = 0
	if m.Getphoto() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	x.Bytes(m.Getinvoice().Encode())
	x.Bytes(m.Getpayload())
	x.String(m.Getprovider())
	x.Bytes(m.Getprovider_data().Encode())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:inputMediaInvoice
func (m *TLinputMediaInvoice) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &InputWebDocument{}
		m2.Decode(dbuf)
		m.Setphoto(m2)
	}
	m3 := &Invoice{}
	m3.Decode(dbuf)
	m.Setinvoice(m3)
	m.Setpayload(dbuf.StringBytes())
	m.Setprovider(dbuf.String())
	m6 := &DataJSON{}
	m6.Decode(dbuf)
	m.Setprovider_data(m6)
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputMediaGeoLive
func (m *TLinputMediaGeoLive) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1759532989)
	var flags uint32 = 0
	if m.Getstopped() != false {
		flags |= 1 << 0
	}
	if m.Getheading() != 0 {
		flags |= 1 << 2
	}
	if m.Getperiod() != 0 {
		flags |= 1 << 1
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo_point().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	if m.Getperiod() != 0 {
		x.Int(m.Getperiod())
	}
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	return x.Buf
}

// CodecDecode:inputMediaGeoLive
func (m *TLinputMediaGeoLive) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setstopped(true)
	}
	m1 := &InputGeoPoint{}
	m1.Decode(dbuf)
	m.Setgeo_point(m1)
	if (flags & (1 << 2)) != 0 {
		m.Setheading(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setperiod(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputMediaPoll
func (m *TLinputMediaPoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(261416433)
	var flags uint32 = 0
	if m.Getcorrect_answers() != nil {
		flags |= 1 << 0
	}
	if m.Getsolution() != "" {
		flags |= 1 << 1
	}
	if len(m.Getsolution_entities()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getpoll().Encode())
	if m.Getcorrect_answers() != nil {
		x.Int(481674261)
		x.Int(int32(len(m.Getcorrect_answers())))
		for _, v := range m.Getcorrect_answers() {
			x.Buf = append(x.Buf, v...)
		}
	}
	if m.Getsolution() != "" {
		x.String(m.Getsolution())
	}
	if len(m.Getsolution_entities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getsolution_entities())))
		for _, v := range m.Getsolution_entities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:inputMediaPoll
func (m *TLinputMediaPoll) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &Poll{}
	m0.Decode(dbuf)
	m.Setpoll(m0)
	if (flags & (1 << 0)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([][]byte, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = dbuf.StringBytes()
		}
		m.Setcorrect_answers(v1)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsolution(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]*MessageEntity, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &MessageEntity{}
			v3[i].Decode(dbuf)
		}
		m.Setsolution_entities(v3)
	}
	return dbuf.Err
}

// CodecEncode:inputMediaDice
func (m *TLinputMediaDice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-428884101)
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:inputMediaDice
func (m *TLinputMediaDice) Decode(dbuf *DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

// CodecEncode:auth_sentCodeTypeApp
func (m *TLauth_sentCodeTypeApp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1035688326)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeApp
func (m *TLauth_sentCodeTypeApp) Decode(dbuf *DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:auth_sentCodeTypeSms
func (m *TLauth_sentCodeTypeSms) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1073693790)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeSms
func (m *TLauth_sentCodeTypeSms) Decode(dbuf *DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:auth_sentCodeTypeCall
func (m *TLauth_sentCodeTypeCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1398007207)
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeCall
func (m *TLauth_sentCodeTypeCall) Decode(dbuf *DecodeBuf) error {
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:auth_sentCodeTypeFlashCall
func (m *TLauth_sentCodeTypeFlashCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1425815847)
	x.String(m.Getpattern())
	return x.Buf
}

// CodecDecode:auth_sentCodeTypeFlashCall
func (m *TLauth_sentCodeTypeFlashCall) Decode(dbuf *DecodeBuf) error {
	m.Setpattern(dbuf.String())
	return dbuf.Err
}

// CodecEncode:payments_paymentForm
func (m *TLpayments_paymentForm) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1062645411)
	var flags uint32 = 0
	if m.Getcan_save_credentials() != false {
		flags |= 1 << 2
	}
	if m.Getpassword_missing() != false {
		flags |= 1 << 3
	}
	if m.Getnative_provider() != "" {
		flags |= 1 << 4
	}
	if m.Getnative_params() != nil {
		flags |= 1 << 4
	}
	if m.Getsaved_info() != nil {
		flags |= 1 << 0
	}
	if m.Getsaved_credentials() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getbot_id())
	x.Bytes(m.Getinvoice().Encode())
	x.Int(m.Getprovider_id())
	x.String(m.Geturl())
	if m.Getnative_provider() != "" {
		x.String(m.Getnative_provider())
	}
	if m.Getnative_params() != nil {
		x.Bytes(m.Getnative_params().Encode())
	}
	if m.Getsaved_info() != nil {
		x.Bytes(m.Getsaved_info().Encode())
	}
	if m.Getsaved_credentials() != nil {
		x.Bytes(m.Getsaved_credentials().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_paymentForm
func (m *TLpayments_paymentForm) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setcan_save_credentials(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setpassword_missing(true)
	}
	m.Setbot_id(dbuf.Int())
	m3 := &Invoice{}
	m3.Decode(dbuf)
	m.Setinvoice(m3)
	m.Setprovider_id(dbuf.Int())
	m.Seturl(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m.Setnative_provider(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m7 := &DataJSON{}
		m7.Decode(dbuf)
		m.Setnative_params(m7)
	}
	if (flags & (1 << 0)) != 0 {
		m8 := &PaymentRequestedInfo{}
		m8.Decode(dbuf)
		m.Setsaved_info(m8)
	}
	if (flags & (1 << 1)) != 0 {
		m9 := &PaymentSavedCredentials{}
		m9.Decode(dbuf)
		m.Setsaved_credentials(m9)
	}
	c10 := dbuf.Int()
	if c10 != 481674261 {
		return dbuf.Err
	}
	l10 := dbuf.Int()
	v10 := make([]*User, l10)
	for i := int32(0); i < l10; i++ {
		v10[i] = &User{}
		v10[i].Decode(dbuf)
	}
	m.Setusers(v10)
	return dbuf.Err
}

// CodecEncode:passwordKdfAlgoUnknown
func (m *TLpasswordKdfAlgoUnknown) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-732254058)
	return x.Buf
}

// CodecDecode:passwordKdfAlgoUnknown
func (m *TLpasswordKdfAlgoUnknown) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(982592842)
	x.Bytes(m.Getsalt1())
	x.Bytes(m.Getsalt2())
	x.Int(m.Getg())
	x.Bytes(m.Getp())
	return x.Buf
}

// CodecDecode:passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow
func (m *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow) Decode(dbuf *DecodeBuf) error {
	m.Setsalt1(dbuf.StringBytes())
	m.Setsalt2(dbuf.StringBytes())
	m.Setg(dbuf.Int())
	m.Setp(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:statsGroupTopPoster
func (m *TLstatsGroupTopPoster) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(418631927)
	x.Int(m.Getuser_id())
	x.Int(m.Getmessages())
	x.Int(m.Getavg_chars())
	return x.Buf
}

// CodecDecode:statsGroupTopPoster
func (m *TLstatsGroupTopPoster) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setmessages(dbuf.Int())
	m.Setavg_chars(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:dcOption
func (m *TLdcOption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(414687501)
	var flags uint32 = 0
	if m.Getipv6() != false {
		flags |= 1 << 0
	}
	if m.Getmedia_only() != false {
		flags |= 1 << 1
	}
	if m.Gettcpo_only() != false {
		flags |= 1 << 2
	}
	if m.Getcdn() != false {
		flags |= 1 << 3
	}
	if m.Getstatic() != false {
		flags |= 1 << 4
	}
	if m.Getsecret() != nil {
		flags |= 1 << 10
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getip_address())
	x.Int(m.Getport())
	if m.Getsecret() != nil {
		x.Bytes(m.Getsecret())
	}
	return x.Buf
}

// CodecDecode:dcOption
func (m *TLdcOption) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setipv6(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setmedia_only(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settcpo_only(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setcdn(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setstatic(true)
	}
	m.Setid(dbuf.Int())
	m.Setip_address(dbuf.String())
	m.Setport(dbuf.Int())
	if (flags & (1 << 10)) != 0 {
		m.Setsecret(dbuf.StringBytes())
	}
	return dbuf.Err
}

// CodecEncode:account_tmpPassword
func (m *TLaccount_tmpPassword) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-614138572)
	x.Bytes(m.Gettmp_password())
	x.Int(m.Getvalid_until())
	return x.Buf
}

// CodecDecode:account_tmpPassword
func (m *TLaccount_tmpPassword) Decode(dbuf *DecodeBuf) error {
	m.Settmp_password(dbuf.StringBytes())
	m.Setvalid_until(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_archivedStickers
func (m *TLmessages_archivedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1338747336)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_archivedStickers
func (m *TLmessages_archivedStickers) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerSetCovered, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerSetCovered{}
		v1[i].Decode(dbuf)
	}
	m.Setsets(v1)
	return dbuf.Err
}

// CodecEncode:inputPeerNotifySettings
func (m *TLinputPeerNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1673717362)
	var flags uint32 = 0
	if m.Getshow_previews() != nil {
		flags |= 1 << 0
	}
	if m.Getsilent() != nil {
		flags |= 1 << 1
	}
	if m.Getmute_until() != 0 {
		flags |= 1 << 2
	}
	if m.Getsound() != "" {
		flags |= 1 << 3
	}
	x.UInt(flags)
	if m.Getshow_previews() != nil {
		x.Bytes(m.Getshow_previews().Encode())
	}
	if m.Getsilent() != nil {
		x.Bytes(m.Getsilent().Encode())
	}
	if m.Getmute_until() != 0 {
		x.Int(m.Getmute_until())
	}
	if m.Getsound() != "" {
		x.String(m.Getsound())
	}
	return x.Buf
}

// CodecDecode:inputPeerNotifySettings
func (m *TLinputPeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setshow_previews(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &Bool{}
		m1.Decode(dbuf)
		m.Setsilent(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmute_until(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsound(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:inputBotInlineMessageID
func (m *TLinputBotInlineMessageID) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1995686519)
	x.Int(m.Getdc_id())
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputBotInlineMessageID
func (m *TLinputBotInlineMessageID) Decode(dbuf *DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:dialogPeer
func (m *TLdialogPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-445792507)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:dialogPeer
func (m *TLdialogPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

// CodecEncode:dialogPeerFolder
func (m *TLdialogPeerFolder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1363483106)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:dialogPeerFolder
func (m *TLdialogPeerFolder) Decode(dbuf *DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:cdnPublicKey
func (m *TLcdnPublicKey) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-914167110)
	x.Int(m.Getdc_id())
	x.String(m.Getpublic_key())
	return x.Buf
}

// CodecDecode:cdnPublicKey
func (m *TLcdnPublicKey) Decode(dbuf *DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setpublic_key(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inlineBotSwitchPM
func (m *TLinlineBotSwitchPM) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1008755359)
	x.String(m.Gettext())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:inlineBotSwitchPM
func (m *TLinlineBotSwitchPM) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

// CodecEncode:account_passwordInputSettings
func (m *TLaccount_passwordInputSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1036572727)
	var flags uint32 = 0
	if m.Getnew_algo() != nil {
		flags |= 1 << 0
	}
	if m.Getnew_password_hash() != nil {
		flags |= 1 << 0
	}
	if m.Gethint() != "" {
		flags |= 1 << 0
	}
	if m.Getemail() != "" {
		flags |= 1 << 1
	}
	if m.Getnew_secure_settings() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getnew_algo() != nil {
		x.Bytes(m.Getnew_algo().Encode())
	}
	if m.Getnew_password_hash() != nil {
		x.Bytes(m.Getnew_password_hash())
	}
	if m.Gethint() != "" {
		x.String(m.Gethint())
	}
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getnew_secure_settings() != nil {
		x.Bytes(m.Getnew_secure_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_passwordInputSettings
func (m *TLaccount_passwordInputSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &PasswordKdfAlgo{}
		m0.Decode(dbuf)
		m.Setnew_algo(m0)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setnew_password_hash(dbuf.StringBytes())
	}
	if (flags & (1 << 0)) != 0 {
		m.Sethint(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m4 := &SecureSecretSettings{}
		m4.Decode(dbuf)
		m.Setnew_secure_settings(m4)
	}
	return dbuf.Err
}

// CodecEncode:messages_botResults
func (m *TLmessages_botResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1803769784)
	var flags uint32 = 0
	if m.Getgallery() != false {
		flags |= 1 << 0
	}
	if m.Getnext_offset() != "" {
		flags |= 1 << 1
	}
	if m.Getswitch_pm() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	if m.Getnext_offset() != "" {
		x.String(m.Getnext_offset())
	}
	if m.Getswitch_pm() != nil {
		x.Bytes(m.Getswitch_pm().Encode())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getresults())))
	for _, v := range m.Getresults() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getcache_time())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_botResults
func (m *TLmessages_botResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setgallery(true)
	}
	m.Setquery_id(dbuf.Long())
	if (flags & (1 << 1)) != 0 {
		m.Setnext_offset(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &InlineBotSwitchPM{}
		m3.Decode(dbuf)
		m.Setswitch_pm(m3)
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*BotInlineResult, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &BotInlineResult{}
		v4[i].Decode(dbuf)
	}
	m.Setresults(v4)
	m.Setcache_time(dbuf.Int())
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

// CodecEncode:exportedMessageLink
func (m *TLexportedMessageLink) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1571494644)
	x.String(m.Getlink())
	x.String(m.Gethtml())
	return x.Buf
}

// CodecDecode:exportedMessageLink
func (m *TLexportedMessageLink) Decode(dbuf *DecodeBuf) error {
	m.Setlink(dbuf.String())
	m.Sethtml(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputPeerEmpty
func (m *TLinputPeerEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2134579434)
	return x.Buf
}

// CodecDecode:inputPeerEmpty
func (m *TLinputPeerEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPeerSelf
func (m *TLinputPeerSelf) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2107670217)
	return x.Buf
}

// CodecDecode:inputPeerSelf
func (m *TLinputPeerSelf) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPeerChat
func (m *TLinputPeerChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(396093539)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:inputPeerChat
func (m *TLinputPeerChat) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputPeerUser
func (m *TLinputPeerUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2072935910)
	x.Int(m.Getuser_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPeerUser
func (m *TLinputPeerUser) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputPeerChannel
func (m *TLinputPeerChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(548253432)
	x.Int(m.Getchannel_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPeerChannel
func (m *TLinputPeerChannel) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputPeerUserFromMessage
func (m *TLinputPeerUserFromMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(398123750)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:inputPeerUserFromMessage
func (m *TLinputPeerUserFromMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputPeerChannelFromMessage
func (m *TLinputPeerChannelFromMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1667893317)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:inputPeerChannelFromMessage
func (m *TLinputPeerChannelFromMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:secureSecretSettings
func (m *TLsecureSecretSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(354925740)
	x.Bytes(m.Getsecure_algo().Encode())
	x.Bytes(m.Getsecure_secret())
	x.Long(m.Getsecure_secret_id())
	return x.Buf
}

// CodecDecode:secureSecretSettings
func (m *TLsecureSecretSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &SecurePasswordKdfAlgo{}
	m0.Decode(dbuf)
	m.Setsecure_algo(m0)
	m.Setsecure_secret(dbuf.StringBytes())
	m.Setsecure_secret_id(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:messageUserVote
func (m *TLmessageUserVote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1567730343)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getoption())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVote
func (m *TLmessageUserVote) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setoption(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageUserVoteInputOption
func (m *TLmessageUserVoteInputOption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(909603888)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVoteInputOption
func (m *TLmessageUserVoteInputOption) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageUserVoteMultiple
func (m *TLmessageUserVoteMultiple) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(244310238)
	x.Int(m.Getuser_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messageUserVoteMultiple
func (m *TLmessageUserVoteMultiple) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([][]byte, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = dbuf.StringBytes()
	}
	m.Setoptions(v1)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:highScore
func (m *TLhighScore) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1493171408)
	x.Int(m.Getpos())
	x.Int(m.Getuser_id())
	x.Int(m.Getscore())
	return x.Buf
}

// CodecDecode:highScore
func (m *TLhighScore) Decode(dbuf *DecodeBuf) error {
	m.Setpos(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setscore(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_affectedHistory
func (m *TLmessages_affectedHistory) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1269012015)
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	x.Int(m.Getoffset())
	return x.Buf
}

// CodecDecode:messages_affectedHistory
func (m *TLmessages_affectedHistory) Decode(dbuf *DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	m.Setoffset(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:stats_megagroupStats
func (m *TLstats_megagroupStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-276825834)
	x.Bytes(m.Getperiod().Encode())
	x.Bytes(m.Getmembers().Encode())
	x.Bytes(m.Getmessages().Encode())
	x.Bytes(m.Getviewers().Encode())
	x.Bytes(m.Getposters().Encode())
	x.Bytes(m.Getgrowth_graph().Encode())
	x.Bytes(m.Getmembers_graph().Encode())
	x.Bytes(m.Getnew_members_by_source_graph().Encode())
	x.Bytes(m.Getlanguages_graph().Encode())
	x.Bytes(m.Getmessages_graph().Encode())
	x.Bytes(m.Getactions_graph().Encode())
	x.Bytes(m.Gettop_hours_graph().Encode())
	x.Bytes(m.Getweekdays_graph().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_posters())))
	for _, v := range m.Gettop_posters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_admins())))
	for _, v := range m.Gettop_admins() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Gettop_inviters())))
	for _, v := range m.Gettop_inviters() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stats_megagroupStats
func (m *TLstats_megagroupStats) Decode(dbuf *DecodeBuf) error {
	m0 := &StatsDateRangeDays{}
	m0.Decode(dbuf)
	m.Setperiod(m0)
	m1 := &StatsAbsValueAndPrev{}
	m1.Decode(dbuf)
	m.Setmembers(m1)
	m2 := &StatsAbsValueAndPrev{}
	m2.Decode(dbuf)
	m.Setmessages(m2)
	m3 := &StatsAbsValueAndPrev{}
	m3.Decode(dbuf)
	m.Setviewers(m3)
	m4 := &StatsAbsValueAndPrev{}
	m4.Decode(dbuf)
	m.Setposters(m4)
	m5 := &StatsGraph{}
	m5.Decode(dbuf)
	m.Setgrowth_graph(m5)
	m6 := &StatsGraph{}
	m6.Decode(dbuf)
	m.Setmembers_graph(m6)
	m7 := &StatsGraph{}
	m7.Decode(dbuf)
	m.Setnew_members_by_source_graph(m7)
	m8 := &StatsGraph{}
	m8.Decode(dbuf)
	m.Setlanguages_graph(m8)
	m9 := &StatsGraph{}
	m9.Decode(dbuf)
	m.Setmessages_graph(m9)
	m10 := &StatsGraph{}
	m10.Decode(dbuf)
	m.Setactions_graph(m10)
	m11 := &StatsGraph{}
	m11.Decode(dbuf)
	m.Settop_hours_graph(m11)
	m12 := &StatsGraph{}
	m12.Decode(dbuf)
	m.Setweekdays_graph(m12)
	c13 := dbuf.Int()
	if c13 != 481674261 {
		return dbuf.Err
	}
	l13 := dbuf.Int()
	v13 := make([]*StatsGroupTopPoster, l13)
	for i := int32(0); i < l13; i++ {
		v13[i] = &StatsGroupTopPoster{}
		v13[i].Decode(dbuf)
	}
	m.Settop_posters(v13)
	c14 := dbuf.Int()
	if c14 != 481674261 {
		return dbuf.Err
	}
	l14 := dbuf.Int()
	v14 := make([]*StatsGroupTopAdmin, l14)
	for i := int32(0); i < l14; i++ {
		v14[i] = &StatsGroupTopAdmin{}
		v14[i].Decode(dbuf)
	}
	m.Settop_admins(v14)
	c15 := dbuf.Int()
	if c15 != 481674261 {
		return dbuf.Err
	}
	l15 := dbuf.Int()
	v15 := make([]*StatsGroupTopInviter, l15)
	for i := int32(0); i < l15; i++ {
		v15[i] = &StatsGroupTopInviter{}
		v15[i].Decode(dbuf)
	}
	m.Settop_inviters(v15)
	c16 := dbuf.Int()
	if c16 != 481674261 {
		return dbuf.Err
	}
	l16 := dbuf.Int()
	v16 := make([]*User, l16)
	for i := int32(0); i < l16; i++ {
		v16[i] = &User{}
		v16[i].Decode(dbuf)
	}
	m.Setusers(v16)
	return dbuf.Err
}

// CodecEncode:themeSettings
func (m *TLthemeSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1676371894)
	var flags uint32 = 0
	if m.Getmessage_top_color() != 0 {
		flags |= 1 << 0
	}
	if m.Getmessage_bottom_color() != 0 {
		flags |= 1 << 0
	}
	if m.Getwallpaper() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getbase_theme().Encode())
	x.Int(m.Getaccent_color())
	if m.Getmessage_top_color() != 0 {
		x.Int(m.Getmessage_top_color())
	}
	if m.Getmessage_bottom_color() != 0 {
		x.Int(m.Getmessage_bottom_color())
	}
	if m.Getwallpaper() != nil {
		x.Bytes(m.Getwallpaper().Encode())
	}
	return x.Buf
}

// CodecDecode:themeSettings
func (m *TLthemeSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &BaseTheme{}
	m0.Decode(dbuf)
	m.Setbase_theme(m0)
	m.Setaccent_color(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setmessage_top_color(dbuf.Int())
	}
	if (flags & (1 << 0)) != 0 {
		m.Setmessage_bottom_color(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m4 := &WallPaper{}
		m4.Decode(dbuf)
		m.Setwallpaper(m4)
	}
	return dbuf.Err
}

// CodecEncode:messages_dialogs
func (m *TLmessages_dialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(364538944)
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_dialogs
func (m *TLmessages_dialogs) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Dialog, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Dialog{}
		v0[i].Decode(dbuf)
	}
	m.Setdialogs(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Message, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Message{}
		v1[i].Decode(dbuf)
	}
	m.Setmessages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

// CodecEncode:messages_dialogsSlice
func (m *TLmessages_dialogsSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1910543603)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_dialogsSlice
func (m *TLmessages_dialogsSlice) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Dialog, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Dialog{}
		v1[i].Decode(dbuf)
	}
	m.Setdialogs(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Message, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Message{}
		v2[i].Decode(dbuf)
	}
	m.Setmessages(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	return dbuf.Err
}

// CodecEncode:messages_dialogsNotModified
func (m *TLmessages_dialogsNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-253500010)
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_dialogsNotModified
func (m *TLmessages_dialogsNotModified) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageRange
func (m *TLmessageRange) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(182649427)
	x.Int(m.Getmin_id())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:messageRange
func (m *TLmessageRange) Decode(dbuf *DecodeBuf) error {
	m.Setmin_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:upload_webFile
func (m *TLupload_webFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(568808380)
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Bytes(m.Getfile_type().Encode())
	x.Int(m.Getmtime())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_webFile
func (m *TLupload_webFile) Decode(dbuf *DecodeBuf) error {
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	m2 := &storage_FileType{}
	m2.Decode(dbuf)
	m.Setfile_type(m2)
	m.Setmtime(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:messageEntityUnknown
func (m *TLmessageEntityUnknown) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1148011883)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUnknown
func (m *TLmessageEntityUnknown) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityMention
func (m *TLmessageEntityMention) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-100378723)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityMention
func (m *TLmessageEntityMention) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityHashtag
func (m *TLmessageEntityHashtag) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1868782349)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityHashtag
func (m *TLmessageEntityHashtag) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityBotCommand
func (m *TLmessageEntityBotCommand) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1827637959)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBotCommand
func (m *TLmessageEntityBotCommand) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityUrl
func (m *TLmessageEntityUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1859134776)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUrl
func (m *TLmessageEntityUrl) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityEmail
func (m *TLmessageEntityEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1692693954)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityEmail
func (m *TLmessageEntityEmail) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityBold
func (m *TLmessageEntityBold) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1117713463)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBold
func (m *TLmessageEntityBold) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityItalic
func (m *TLmessageEntityItalic) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2106619040)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityItalic
func (m *TLmessageEntityItalic) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityCode
func (m *TLmessageEntityCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(681706865)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityCode
func (m *TLmessageEntityCode) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityPre
func (m *TLmessageEntityPre) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1938967520)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.String(m.Getlanguage())
	return x.Buf
}

// CodecDecode:messageEntityPre
func (m *TLmessageEntityPre) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Setlanguage(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageEntityTextUrl
func (m *TLmessageEntityTextUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1990644519)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:messageEntityTextUrl
func (m *TLmessageEntityTextUrl) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageEntityMentionName
func (m *TLmessageEntityMentionName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(892193368)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageEntityMentionName
func (m *TLmessageEntityMentionName) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputMessageEntityMentionName
func (m *TLinputMessageEntityMentionName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(546203849)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	x.Bytes(m.Getuser_id_6().Encode())
	return x.Buf
}

// CodecDecode:inputMessageEntityMentionName
func (m *TLinputMessageEntityMentionName) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	m2 := &InputUser{}
	m2.Decode(dbuf)
	m.Setuser_id_6(m2)
	return dbuf.Err
}

// CodecEncode:messageEntityPhone
func (m *TLmessageEntityPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1687559349)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityPhone
func (m *TLmessageEntityPhone) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityCashtag
func (m *TLmessageEntityCashtag) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1280209983)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityCashtag
func (m *TLmessageEntityCashtag) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityUnderline
func (m *TLmessageEntityUnderline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1672577397)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityUnderline
func (m *TLmessageEntityUnderline) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityStrike
func (m *TLmessageEntityStrike) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1090087980)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityStrike
func (m *TLmessageEntityStrike) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityBlockquote
func (m *TLmessageEntityBlockquote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(34469328)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBlockquote
func (m *TLmessageEntityBlockquote) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageEntityBankCard
func (m *TLmessageEntityBankCard) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1981704948)
	x.Int(m.Getoffset())
	x.Int(m.Getlength())
	return x.Buf
}

// CodecDecode:messageEntityBankCard
func (m *TLmessageEntityBankCard) Decode(dbuf *DecodeBuf) error {
	m.Setoffset(dbuf.Int())
	m.Setlength(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:stats_messageStats
func (m *TLstats_messageStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1986399595)
	x.Bytes(m.Getviews_graph().Encode())
	return x.Buf
}

// CodecDecode:stats_messageStats
func (m *TLstats_messageStats) Decode(dbuf *DecodeBuf) error {
	m0 := &StatsGraph{}
	m0.Decode(dbuf)
	m.Setviews_graph(m0)
	return dbuf.Err
}

// CodecEncode:sendMessageTypingAction
func (m *TLsendMessageTypingAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(381645902)
	return x.Buf
}

// CodecDecode:sendMessageTypingAction
func (m *TLsendMessageTypingAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageCancelAction
func (m *TLsendMessageCancelAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-44119819)
	return x.Buf
}

// CodecDecode:sendMessageCancelAction
func (m *TLsendMessageCancelAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageRecordVideoAction
func (m *TLsendMessageRecordVideoAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1584933265)
	return x.Buf
}

// CodecDecode:sendMessageRecordVideoAction
func (m *TLsendMessageRecordVideoAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageUploadVideoAction
func (m *TLsendMessageUploadVideoAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-378127636)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadVideoAction
func (m *TLsendMessageUploadVideoAction) Decode(dbuf *DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:sendMessageRecordAudioAction
func (m *TLsendMessageRecordAudioAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-718310409)
	return x.Buf
}

// CodecDecode:sendMessageRecordAudioAction
func (m *TLsendMessageRecordAudioAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageUploadAudioAction
func (m *TLsendMessageUploadAudioAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-212740181)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadAudioAction
func (m *TLsendMessageUploadAudioAction) Decode(dbuf *DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:sendMessageUploadPhotoAction
func (m *TLsendMessageUploadPhotoAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-774682074)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadPhotoAction
func (m *TLsendMessageUploadPhotoAction) Decode(dbuf *DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:sendMessageUploadDocumentAction
func (m *TLsendMessageUploadDocumentAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1441998364)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadDocumentAction
func (m *TLsendMessageUploadDocumentAction) Decode(dbuf *DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:sendMessageGeoLocationAction
func (m *TLsendMessageGeoLocationAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(393186209)
	return x.Buf
}

// CodecDecode:sendMessageGeoLocationAction
func (m *TLsendMessageGeoLocationAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageChooseContactAction
func (m *TLsendMessageChooseContactAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1653390447)
	return x.Buf
}

// CodecDecode:sendMessageChooseContactAction
func (m *TLsendMessageChooseContactAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageGamePlayAction
func (m *TLsendMessageGamePlayAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-580219064)
	return x.Buf
}

// CodecDecode:sendMessageGamePlayAction
func (m *TLsendMessageGamePlayAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageRecordRoundAction
func (m *TLsendMessageRecordRoundAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1997373508)
	return x.Buf
}

// CodecDecode:sendMessageRecordRoundAction
func (m *TLsendMessageRecordRoundAction) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:sendMessageUploadRoundAction
func (m *TLsendMessageUploadRoundAction) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(608050278)
	x.Int(m.Getprogress())
	return x.Buf
}

// CodecDecode:sendMessageUploadRoundAction
func (m *TLsendMessageUploadRoundAction) Decode(dbuf *DecodeBuf) error {
	m.Setprogress(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputWebDocument
func (m *TLinputWebDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1678949555)
	x.String(m.Geturl())
	x.Int(m.Getsize())
	x.String(m.Getmime_type())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:inputWebDocument
func (m *TLinputWebDocument) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setsize(dbuf.Int())
	m.Setmime_type(dbuf.String())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*DocumentAttribute, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &DocumentAttribute{}
		v3[i].Decode(dbuf)
	}
	m.Setattributes(v3)
	return dbuf.Err
}

// CodecEncode:folderPeer
func (m *TLfolderPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-373643672)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:folderPeer
func (m *TLfolderPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:dialogFilterSuggested
func (m *TLdialogFilterSuggested) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2004110666)
	x.Bytes(m.Getfilter().Encode())
	x.String(m.Getdescription())
	return x.Buf
}

// CodecDecode:dialogFilterSuggested
func (m *TLdialogFilterSuggested) Decode(dbuf *DecodeBuf) error {
	m0 := &DialogFilter{}
	m0.Decode(dbuf)
	m.Setfilter(m0)
	m.Setdescription(dbuf.String())
	return dbuf.Err
}

// CodecEncode:account_passwordSettings
func (m *TLaccount_passwordSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1705233435)
	var flags uint32 = 0
	if m.Getemail() != "" {
		flags |= 1 << 0
	}
	if m.Getsecure_settings() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getsecure_settings() != nil {
		x.Bytes(m.Getsecure_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:account_passwordSettings
func (m *TLaccount_passwordSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &SecureSecretSettings{}
		m1.Decode(dbuf)
		m.Setsecure_settings(m1)
	}
	return dbuf.Err
}

// CodecEncode:userFull
func (m *TLuserFull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-302941166)
	var flags uint32 = 0
	if m.Getblocked() != false {
		flags |= 1 << 0
	}
	if m.Getphone_calls_available() != false {
		flags |= 1 << 4
	}
	if m.Getphone_calls_private() != false {
		flags |= 1 << 5
	}
	if m.Getcan_pin_message() != false {
		flags |= 1 << 7
	}
	if m.Gethas_scheduled() != false {
		flags |= 1 << 12
	}
	if m.Getvideo_calls_available() != false {
		flags |= 1 << 13
	}
	if m.Getabout() != "" {
		flags |= 1 << 1
	}
	if m.Getprofile_photo() != nil {
		flags |= 1 << 2
	}
	if m.Getbot_info() != nil {
		flags |= 1 << 3
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 1 << 6
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 11
	}
	x.UInt(flags)
	x.Bytes(m.Getuser().Encode())
	if m.Getabout() != "" {
		x.String(m.Getabout())
	}
	x.Bytes(m.Getsettings().Encode())
	if m.Getprofile_photo() != nil {
		x.Bytes(m.Getprofile_photo().Encode())
	}
	x.Bytes(m.Getnotify_settings().Encode())
	if m.Getbot_info() != nil {
		x.Bytes(m.Getbot_info().Encode())
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	x.Int(m.Getcommon_chats_count())
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:userFull
func (m *TLuserFull) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setblocked(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setphone_calls_available(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setphone_calls_private(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setcan_pin_message(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Sethas_scheduled(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setvideo_calls_available(true)
	}
	m6 := &User{}
	m6.Decode(dbuf)
	m.Setuser(m6)
	if (flags & (1 << 1)) != 0 {
		m.Setabout(dbuf.String())
	}
	m8 := &PeerSettings{}
	m8.Decode(dbuf)
	m.Setsettings(m8)
	if (flags & (1 << 2)) != 0 {
		m9 := &Photo{}
		m9.Decode(dbuf)
		m.Setprofile_photo(m9)
	}
	m10 := &PeerNotifySettings{}
	m10.Decode(dbuf)
	m.Setnotify_settings(m10)
	if (flags & (1 << 3)) != 0 {
		m11 := &BotInfo{}
		m11.Decode(dbuf)
		m.Setbot_info(m11)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	m.Setcommon_chats_count(dbuf.Int())
	if (flags & (1 << 11)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:stats_broadcastStats
func (m *TLstats_broadcastStats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1107852396)
	x.Bytes(m.Getperiod().Encode())
	x.Bytes(m.Getfollowers().Encode())
	x.Bytes(m.Getviews_per_post().Encode())
	x.Bytes(m.Getshares_per_post().Encode())
	x.Bytes(m.Getenabled_notifications().Encode())
	x.Bytes(m.Getgrowth_graph().Encode())
	x.Bytes(m.Getfollowers_graph().Encode())
	x.Bytes(m.Getmute_graph().Encode())
	x.Bytes(m.Gettop_hours_graph().Encode())
	x.Bytes(m.Getinteractions_graph().Encode())
	x.Bytes(m.Getiv_interactions_graph().Encode())
	x.Bytes(m.Getviews_by_source_graph().Encode())
	x.Bytes(m.Getnew_followers_by_source_graph().Encode())
	x.Bytes(m.Getlanguages_graph().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrecent_message_interactions())))
	for _, v := range m.Getrecent_message_interactions() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stats_broadcastStats
func (m *TLstats_broadcastStats) Decode(dbuf *DecodeBuf) error {
	m0 := &StatsDateRangeDays{}
	m0.Decode(dbuf)
	m.Setperiod(m0)
	m1 := &StatsAbsValueAndPrev{}
	m1.Decode(dbuf)
	m.Setfollowers(m1)
	m2 := &StatsAbsValueAndPrev{}
	m2.Decode(dbuf)
	m.Setviews_per_post(m2)
	m3 := &StatsAbsValueAndPrev{}
	m3.Decode(dbuf)
	m.Setshares_per_post(m3)
	m4 := &StatsPercentValue{}
	m4.Decode(dbuf)
	m.Setenabled_notifications(m4)
	m5 := &StatsGraph{}
	m5.Decode(dbuf)
	m.Setgrowth_graph(m5)
	m6 := &StatsGraph{}
	m6.Decode(dbuf)
	m.Setfollowers_graph(m6)
	m7 := &StatsGraph{}
	m7.Decode(dbuf)
	m.Setmute_graph(m7)
	m8 := &StatsGraph{}
	m8.Decode(dbuf)
	m.Settop_hours_graph(m8)
	m9 := &StatsGraph{}
	m9.Decode(dbuf)
	m.Setinteractions_graph(m9)
	m10 := &StatsGraph{}
	m10.Decode(dbuf)
	m.Setiv_interactions_graph(m10)
	m11 := &StatsGraph{}
	m11.Decode(dbuf)
	m.Setviews_by_source_graph(m11)
	m12 := &StatsGraph{}
	m12.Decode(dbuf)
	m.Setnew_followers_by_source_graph(m12)
	m13 := &StatsGraph{}
	m13.Decode(dbuf)
	m.Setlanguages_graph(m13)
	c14 := dbuf.Int()
	if c14 != 481674261 {
		return dbuf.Err
	}
	l14 := dbuf.Int()
	v14 := make([]*MessageInteractionCounters, l14)
	for i := int32(0); i < l14; i++ {
		v14[i] = &MessageInteractionCounters{}
		v14[i].Decode(dbuf)
	}
	m.Setrecent_message_interactions(v14)
	return dbuf.Err
}

// CodecEncode:auth_exportedAuthorization
func (m *TLauth_exportedAuthorization) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-543777747)
	x.Int(m.Getid())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:auth_exportedAuthorization
func (m *TLauth_exportedAuthorization) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:stickerSet
func (m *TLstickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-290164953)
	var flags uint32 = 0
	if m.Getarchived() != false {
		flags |= 1 << 1
	}
	if m.Getofficial() != false {
		flags |= 1 << 2
	}
	if m.Getmasks() != false {
		flags |= 1 << 3
	}
	if m.Getanimated() != false {
		flags |= 1 << 5
	}
	if m.Getinstalled_date() != 0 {
		flags |= 1 << 0
	}
	if m.Getthumb() != nil {
		flags |= 1 << 4
	}
	if m.Getthumb_dc_id() != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	if m.Getinstalled_date() != 0 {
		x.Int(m.Getinstalled_date())
	}
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Gettitle())
	x.String(m.Getshort_name())
	if m.Getthumb() != nil {
		x.Bytes(m.Getthumb().Encode())
	}
	if m.Getthumb_dc_id() != 0 {
		x.Int(m.Getthumb_dc_id())
	}
	x.Int(m.Getcount())
	x.Int(m.Gethash())
	return x.Buf
}

// CodecDecode:stickerSet
func (m *TLstickerSet) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setarchived(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setofficial(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmasks(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setanimated(true)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setinstalled_date(dbuf.Int())
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Settitle(dbuf.String())
	m.Setshort_name(dbuf.String())
	if (flags & (1 << 4)) != 0 {
		m9 := &PhotoSize{}
		m9.Decode(dbuf)
		m.Setthumb(m9)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setthumb_dc_id(dbuf.Int())
	}
	m.Setcount(dbuf.Int())
	m.Sethash(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:secureRequiredType
func (m *TLsecureRequiredType) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2103600678)
	var flags uint32 = 0
	if m.Getnative_names() != false {
		flags |= 1 << 0
	}
	if m.Getselfie_required() != false {
		flags |= 1 << 1
	}
	if m.Gettranslation_required() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Gettype_key().Encode())
	return x.Buf
}

// CodecDecode:secureRequiredType
func (m *TLsecureRequiredType) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setnative_names(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setselfie_required(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settranslation_required(true)
	}
	m3 := &SecureValueType{}
	m3.Decode(dbuf)
	m.Settype_key(m3)
	return dbuf.Err
}

// CodecEncode:secureRequiredTypeOneOf
func (m *TLsecureRequiredTypeOneOf) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(41187252)
	x.Int(481674261)
	x.Int(int32(len(m.Gettypes())))
	for _, v := range m.Gettypes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:secureRequiredTypeOneOf
func (m *TLsecureRequiredTypeOneOf) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureRequiredType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureRequiredType{}
		v0[i].Decode(dbuf)
	}
	m.Settypes(v0)
	return dbuf.Err
}

// CodecEncode:inputThemeSettings
func (m *TLinputThemeSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1118798639)
	var flags uint32 = 0
	if m.Getmessage_top_color() != 0 {
		flags |= 1 << 0
	}
	if m.Getmessage_bottom_color() != 0 {
		flags |= 1 << 0
	}
	if m.Getwallpaper() != nil {
		flags |= 1 << 1
	}
	if m.Getwallpaper_settings() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getbase_theme().Encode())
	x.Int(m.Getaccent_color())
	if m.Getmessage_top_color() != 0 {
		x.Int(m.Getmessage_top_color())
	}
	if m.Getmessage_bottom_color() != 0 {
		x.Int(m.Getmessage_bottom_color())
	}
	if m.Getwallpaper() != nil {
		x.Bytes(m.Getwallpaper().Encode())
	}
	if m.Getwallpaper_settings() != nil {
		x.Bytes(m.Getwallpaper_settings().Encode())
	}
	return x.Buf
}

// CodecDecode:inputThemeSettings
func (m *TLinputThemeSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &BaseTheme{}
	m0.Decode(dbuf)
	m.Setbase_theme(m0)
	m.Setaccent_color(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setmessage_top_color(dbuf.Int())
	}
	if (flags & (1 << 0)) != 0 {
		m.Setmessage_bottom_color(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m4 := &InputWallPaper{}
		m4.Decode(dbuf)
		m.Setwallpaper(m4)
	}
	if (flags & (1 << 1)) != 0 {
		m5 := &WallPaperSettings{}
		m5.Decode(dbuf)
		m.Setwallpaper_settings(m5)
	}
	return dbuf.Err
}

// CodecEncode:documentEmpty
func (m *TLdocumentEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(922273905)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:documentEmpty
func (m *TLdocumentEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:document
func (m *TLdocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(512177195)
	var flags uint32 = 0
	if len(m.Getthumbs()) > 0 {
		flags |= 1 << 0
	}
	if len(m.Getvideo_thumbs()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	x.Int(m.Getdate())
	x.String(m.Getmime_type())
	x.Int(m.Getsize())
	if len(m.Getthumbs()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getthumbs())))
		for _, v := range m.Getthumbs() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getvideo_thumbs()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getvideo_thumbs())))
		for _, v := range m.Getvideo_thumbs() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	x.Int(m.Getdc_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getattributes())))
	for _, v := range m.Getattributes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:document
func (m *TLdocument) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	m.Setdate(dbuf.Int())
	m.Setmime_type(dbuf.String())
	m.Setsize(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*PhotoSize, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &PhotoSize{}
			v6[i].Decode(dbuf)
		}
		m.Setthumbs(v6)
	}
	if (flags & (1 << 1)) != 0 {
		c7 := dbuf.Int()
		if c7 != 481674261 {
			return dbuf.Err
		}
		l7 := dbuf.Int()
		v7 := make([]*VideoSize, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &VideoSize{}
			v7[i].Decode(dbuf)
		}
		m.Setvideo_thumbs(v7)
	}
	m.Setdc_id(dbuf.Int())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]*DocumentAttribute, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = &DocumentAttribute{}
		v9[i].Decode(dbuf)
	}
	m.Setattributes(v9)
	return dbuf.Err
}

// CodecEncode:account_wallPapersNotModified
func (m *TLaccount_wallPapersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(471437699)
	return x.Buf
}

// CodecDecode:account_wallPapersNotModified
func (m *TLaccount_wallPapersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:account_wallPapers
func (m *TLaccount_wallPapers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1881892265)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getwallpapers())))
	for _, v := range m.Getwallpapers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_wallPapers
func (m *TLaccount_wallPapers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*WallPaper, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &WallPaper{}
		v1[i].Decode(dbuf)
	}
	m.Setwallpapers(v1)
	return dbuf.Err
}

// CodecEncode:messages_botCallbackAnswer
func (m *TLmessages_botCallbackAnswer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(911761060)
	var flags uint32 = 0
	if m.Getalert() != false {
		flags |= 1 << 1
	}
	if m.Gethas_url() != false {
		flags |= 1 << 3
	}
	if m.Getnative_ui() != false {
		flags |= 1 << 4
	}
	if m.Getmessage() != "" {
		flags |= 1 << 0
	}
	if m.Geturl() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getmessage() != "" {
		x.String(m.Getmessage())
	}
	if m.Geturl() != "" {
		x.String(m.Geturl())
	}
	x.Int(m.Getcache_time())
	return x.Buf
}

// CodecDecode:messages_botCallbackAnswer
func (m *TLmessages_botCallbackAnswer) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setalert(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Sethas_url(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setnative_ui(true)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setmessage(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Seturl(dbuf.String())
	}
	m.Setcache_time(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputDialogPeer
func (m *TLinputDialogPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-55902537)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:inputDialogPeer
func (m *TLinputDialogPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

// CodecEncode:inputDialogPeerFolder
func (m *TLinputDialogPeerFolder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1684014375)
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:inputDialogPeerFolder
func (m *TLinputDialogPeerFolder) Decode(dbuf *DecodeBuf) error {
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:globalPrivacySettings
func (m *TLglobalPrivacySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1096616924)
	var flags uint32 = 0
	if m.Getarchive_and_mute_new_noncontact_peers() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getarchive_and_mute_new_noncontact_peers() != nil {
		x.Bytes(m.Getarchive_and_mute_new_noncontact_peers().Encode())
	}
	return x.Buf
}

// CodecDecode:globalPrivacySettings
func (m *TLglobalPrivacySettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setarchive_and_mute_new_noncontact_peers(m0)
	}
	return dbuf.Err
}

// CodecEncode:contacts_blocked
func (m *TLcontacts_blocked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(182326673)
	x.Int(481674261)
	x.Int(int32(len(m.Getblocked())))
	for _, v := range m.Getblocked() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_blocked
func (m *TLcontacts_blocked) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PeerBlocked, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PeerBlocked{}
		v0[i].Decode(dbuf)
	}
	m.Setblocked(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:contacts_blockedSlice
func (m *TLcontacts_blockedSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-513392236)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocked())))
	for _, v := range m.Getblocked() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_blockedSlice
func (m *TLcontacts_blockedSlice) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PeerBlocked, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PeerBlocked{}
		v1[i].Decode(dbuf)
	}
	m.Setblocked(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

// CodecEncode:paymentCharge
func (m *TLpaymentCharge) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-368917890)
	x.String(m.Getid())
	x.String(m.Getprovider_charge_id())
	return x.Buf
}

// CodecDecode:paymentCharge
func (m *TLpaymentCharge) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Setprovider_charge_id(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageMediaEmpty
func (m *TLmessageMediaEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1038967584)
	return x.Buf
}

// CodecDecode:messageMediaEmpty
func (m *TLmessageMediaEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageMediaPhoto
func (m *TLmessageMediaPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1766936791)
	var flags uint32 = 0
	if m.Getphoto() != nil {
		flags |= 1 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:messageMediaPhoto
func (m *TLmessageMediaPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Photo{}
		m0.Decode(dbuf)
		m.Setphoto(m0)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messageMediaGeo
func (m *TLmessageMediaGeo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1457575028)
	x.Bytes(m.Getgeo().Encode())
	return x.Buf
}

// CodecDecode:messageMediaGeo
func (m *TLmessageMediaGeo) Decode(dbuf *DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	return dbuf.Err
}

// CodecEncode:messageMediaContact
func (m *TLmessageMediaContact) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-873313984)
	x.String(m.Getphone_number())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getvcard())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:messageMediaContact
func (m *TLmessageMediaContact) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setvcard(dbuf.String())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageMediaUnsupported
func (m *TLmessageMediaUnsupported) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1618676578)
	return x.Buf
}

// CodecDecode:messageMediaUnsupported
func (m *TLmessageMediaUnsupported) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageMediaDocument
func (m *TLmessageMediaDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1666158377)
	var flags uint32 = 0
	if m.Getdocument() != nil {
		flags |= 1 << 0
	}
	if m.Getttl_seconds() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getttl_seconds() != 0 {
		x.Int(m.Getttl_seconds())
	}
	return x.Buf
}

// CodecDecode:messageMediaDocument
func (m *TLmessageMediaDocument) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Document{}
		m0.Decode(dbuf)
		m.Setdocument(m0)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setttl_seconds(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messageMediaWebPage
func (m *TLmessageMediaWebPage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1557277184)
	x.Bytes(m.Getwebpage().Encode())
	return x.Buf
}

// CodecDecode:messageMediaWebPage
func (m *TLmessageMediaWebPage) Decode(dbuf *DecodeBuf) error {
	m0 := &WebPage{}
	m0.Decode(dbuf)
	m.Setwebpage(m0)
	return dbuf.Err
}

// CodecEncode:messageMediaVenue
func (m *TLmessageMediaVenue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(784356159)
	x.Bytes(m.Getgeo().Encode())
	x.String(m.Gettitle())
	x.String(m.Getaddress())
	x.String(m.Getprovider())
	x.String(m.Getvenue_id())
	x.String(m.Getvenue_type())
	return x.Buf
}

// CodecDecode:messageMediaVenue
func (m *TLmessageMediaVenue) Decode(dbuf *DecodeBuf) error {
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	m.Settitle(dbuf.String())
	m.Setaddress(dbuf.String())
	m.Setprovider(dbuf.String())
	m.Setvenue_id(dbuf.String())
	m.Setvenue_type(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageMediaGame
func (m *TLmessageMediaGame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-38694904)
	x.Bytes(m.Getgame().Encode())
	return x.Buf
}

// CodecDecode:messageMediaGame
func (m *TLmessageMediaGame) Decode(dbuf *DecodeBuf) error {
	m0 := &Game{}
	m0.Decode(dbuf)
	m.Setgame(m0)
	return dbuf.Err
}

// CodecEncode:messageMediaInvoice
func (m *TLmessageMediaInvoice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2074799289)
	var flags uint32 = 0
	if m.Getshipping_address_requested() != false {
		flags |= 1 << 1
	}
	if m.Gettest() != false {
		flags |= 1 << 3
	}
	if m.Getphoto_20() != nil {
		flags |= 1 << 0
	}
	if m.Getreceipt_msg_id() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.String(m.Getdescription())
	if m.Getphoto_20() != nil {
		x.Bytes(m.Getphoto_20().Encode())
	}
	if m.Getreceipt_msg_id() != 0 {
		x.Int(m.Getreceipt_msg_id())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.String(m.Getstart_param())
	return x.Buf
}

// CodecDecode:messageMediaInvoice
func (m *TLmessageMediaInvoice) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setshipping_address_requested(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Settest(true)
	}
	m.Settitle(dbuf.String())
	m.Setdescription(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m4 := &WebDocument{}
		m4.Decode(dbuf)
		m.Setphoto_20(m4)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setreceipt_msg_id(dbuf.Int())
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setstart_param(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messageMediaGeoLive
func (m *TLmessageMediaGeoLive) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1186937242)
	var flags uint32 = 0
	if m.Getheading() != 0 {
		flags |= 1 << 0
	}
	if m.Getproximity_notification_radius() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getgeo().Encode())
	if m.Getheading() != 0 {
		x.Int(m.Getheading())
	}
	x.Int(m.Getperiod())
	if m.Getproximity_notification_radius() != 0 {
		x.Int(m.Getproximity_notification_radius())
	}
	return x.Buf
}

// CodecDecode:messageMediaGeoLive
func (m *TLmessageMediaGeoLive) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &GeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo(m0)
	if (flags & (1 << 0)) != 0 {
		m.Setheading(dbuf.Int())
	}
	m.Setperiod(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Setproximity_notification_radius(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messageMediaPoll
func (m *TLmessageMediaPoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1272375192)
	x.Bytes(m.Getpoll().Encode())
	x.Bytes(m.Getresults().Encode())
	return x.Buf
}

// CodecDecode:messageMediaPoll
func (m *TLmessageMediaPoll) Decode(dbuf *DecodeBuf) error {
	m0 := &Poll{}
	m0.Decode(dbuf)
	m.Setpoll(m0)
	m1 := &PollResults{}
	m1.Decode(dbuf)
	m.Setresults(m1)
	return dbuf.Err
}

// CodecEncode:messageMediaDice
func (m *TLmessageMediaDice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1065280907)
	x.Int(m.Getvalue())
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:messageMediaDice
func (m *TLmessageMediaDice) Decode(dbuf *DecodeBuf) error {
	m.Setvalue(dbuf.Int())
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

// CodecEncode:labeledPrice
func (m *TLlabeledPrice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-886477832)
	x.String(m.Getlabel())
	x.Long(m.Getamount())
	return x.Buf
}

// CodecDecode:labeledPrice
func (m *TLlabeledPrice) Decode(dbuf *DecodeBuf) error {
	m.Setlabel(dbuf.String())
	m.Setamount(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:cdnConfig
func (m *TLcdnConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1462101002)
	x.Int(481674261)
	x.Int(int32(len(m.Getpublic_keys())))
	for _, v := range m.Getpublic_keys() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:cdnConfig
func (m *TLcdnConfig) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*CdnPublicKey, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &CdnPublicKey{}
		v0[i].Decode(dbuf)
	}
	m.Setpublic_keys(v0)
	return dbuf.Err
}

// CodecEncode:inputClientProxy
func (m *TLinputClientProxy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1968737087)
	x.String(m.Getaddress())
	x.Int(m.Getport())
	return x.Buf
}

// CodecDecode:inputClientProxy
func (m *TLinputClientProxy) Decode(dbuf *DecodeBuf) error {
	m.Setaddress(dbuf.String())
	m.Setport(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputChannelEmpty
func (m *TLinputChannelEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-292807034)
	return x.Buf
}

// CodecDecode:inputChannelEmpty
func (m *TLinputChannelEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputChannel
func (m *TLinputChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1343524562)
	x.Int(m.Getchannel_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputChannel
func (m *TLinputChannel) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputChannelFromMessage
func (m *TLinputChannelFromMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(707290417)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:inputChannelFromMessage
func (m *TLinputChannelFromMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:secureCredentialsEncrypted
func (m *TLsecureCredentialsEncrypted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(871426631)
	x.Bytes(m.Getdata())
	x.Bytes(m.Gethash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureCredentialsEncrypted
func (m *TLsecureCredentialsEncrypted) Decode(dbuf *DecodeBuf) error {
	m.Setdata(dbuf.StringBytes())
	m.Sethash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:auth_passwordRecovery
func (m *TLauth_passwordRecovery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(326715557)
	x.String(m.Getemail_pattern())
	return x.Buf
}

// CodecDecode:auth_passwordRecovery
func (m *TLauth_passwordRecovery) Decode(dbuf *DecodeBuf) error {
	m.Setemail_pattern(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_recentStickersNotModified
func (m *TLmessages_recentStickersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(186120336)
	return x.Buf
}

// CodecDecode:messages_recentStickersNotModified
func (m *TLmessages_recentStickersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_recentStickers
func (m *TLmessages_recentStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(586395571)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.VectorInt(m.Getdates())
	return x.Buf
}

// CodecDecode:messages_recentStickers
func (m *TLmessages_recentStickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Document{}
		v2[i].Decode(dbuf)
	}
	m.Setstickers(v2)
	m.Setdates(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:account_password
func (m *TLaccount_password) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1390001672)
	var flags uint32 = 0
	if m.Gethas_recovery() != false {
		flags |= 1 << 0
	}
	if m.Gethas_secure_values() != false {
		flags |= 1 << 1
	}
	if m.Gethas_password() != false {
		flags |= 1 << 2
	}
	if m.Getcurrent_algo() != nil {
		flags |= 1 << 2
	}
	if m.Getsrp_B() != nil {
		flags |= 1 << 2
	}
	if m.Getsrp_id() != 0 {
		flags |= 1 << 2
	}
	if m.Gethint() != "" {
		flags |= 1 << 3
	}
	if m.Getemail_unconfirmed_pattern() != "" {
		flags |= 1 << 4
	}
	x.UInt(flags)
	if m.Getcurrent_algo() != nil {
		x.Bytes(m.Getcurrent_algo().Encode())
	}
	if m.Getsrp_B() != nil {
		x.Bytes(m.Getsrp_B())
	}
	if m.Getsrp_id() != 0 {
		x.Long(m.Getsrp_id())
	}
	if m.Gethint() != "" {
		x.String(m.Gethint())
	}
	if m.Getemail_unconfirmed_pattern() != "" {
		x.String(m.Getemail_unconfirmed_pattern())
	}
	x.Bytes(m.Getnew_algo().Encode())
	x.Bytes(m.Getnew_secure_algo().Encode())
	x.Bytes(m.Getsecure_random())
	return x.Buf
}

// CodecDecode:account_password
func (m *TLaccount_password) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_recovery(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Sethas_secure_values(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Sethas_password(true)
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &PasswordKdfAlgo{}
		m3.Decode(dbuf)
		m.Setcurrent_algo(m3)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setsrp_B(dbuf.StringBytes())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setsrp_id(dbuf.Long())
	}
	if (flags & (1 << 3)) != 0 {
		m.Sethint(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setemail_unconfirmed_pattern(dbuf.String())
	}
	m8 := &PasswordKdfAlgo{}
	m8.Decode(dbuf)
	m.Setnew_algo(m8)
	m9 := &SecurePasswordKdfAlgo{}
	m9.Decode(dbuf)
	m.Setnew_secure_algo(m9)
	m.Setsecure_random(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:config
func (m *TLconfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(856375399)
	var flags uint32 = 0
	if m.Getphonecalls_enabled() != false {
		flags |= 1 << 1
	}
	if m.Getdefault_p2p_contacts() != false {
		flags |= 1 << 3
	}
	if m.Getpreload_featured_stickers() != false {
		flags |= 1 << 4
	}
	if m.Getignore_phone_entities() != false {
		flags |= 1 << 5
	}
	if m.Getrevoke_pm_inbox() != false {
		flags |= 1 << 6
	}
	if m.Getblocked_mode() != false {
		flags |= 1 << 8
	}
	if m.Getpfs_enabled() != false {
		flags |= 1 << 13
	}
	if m.Gettmp_sessions() != 0 {
		flags |= 1 << 0
	}
	if m.Getautoupdate_url_prefix() != "" {
		flags |= 1 << 7
	}
	if m.Getgif_search_username() != "" {
		flags |= 1 << 9
	}
	if m.Getvenue_search_username() != "" {
		flags |= 1 << 10
	}
	if m.Getimg_search_username() != "" {
		flags |= 1 << 11
	}
	if m.Getstatic_maps_provider() != "" {
		flags |= 1 << 12
	}
	if m.Getsuggested_lang_code() != "" {
		flags |= 1 << 2
	}
	if m.Getlang_pack_version() != 0 {
		flags |= 1 << 2
	}
	if m.Getbase_lang_pack_version() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getdate())
	x.Int(m.Getexpires())
	x.Bytes(m.Gettest_mode().Encode())
	x.Int(m.Getthis_dc())
	x.Int(481674261)
	x.Int(int32(len(m.Getdc_options())))
	for _, v := range m.Getdc_options() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Getdc_txt_domain_name())
	x.Int(m.Getchat_size_max())
	x.Int(m.Getmegagroup_size_max())
	x.Int(m.Getforwarded_count_max())
	x.Int(m.Getonline_update_period_ms())
	x.Int(m.Getoffline_blur_timeout_ms())
	x.Int(m.Getoffline_idle_timeout_ms())
	x.Int(m.Getonline_cloud_timeout_ms())
	x.Int(m.Getnotify_cloud_delay_ms())
	x.Int(m.Getnotify_default_delay_ms())
	x.Int(m.Getpush_chat_period_ms())
	x.Int(m.Getpush_chat_limit())
	x.Int(m.Getsaved_gifs_limit())
	x.Int(m.Getedit_time_limit())
	x.Int(m.Getrevoke_time_limit())
	x.Int(m.Getrevoke_pm_time_limit())
	x.Int(m.Getrating_e_decay())
	x.Int(m.Getstickers_recent_limit())
	x.Int(m.Getstickers_faved_limit())
	x.Int(m.Getchannels_read_media_period())
	if m.Gettmp_sessions() != 0 {
		x.Int(m.Gettmp_sessions())
	}
	x.Int(m.Getpinned_dialogs_count_max())
	x.Int(m.Getpinned_infolder_count_max())
	x.Int(m.Getcall_receive_timeout_ms())
	x.Int(m.Getcall_ring_timeout_ms())
	x.Int(m.Getcall_connect_timeout_ms())
	x.Int(m.Getcall_packet_timeout_ms())
	x.String(m.Getme_url_prefix())
	if m.Getautoupdate_url_prefix() != "" {
		x.String(m.Getautoupdate_url_prefix())
	}
	if m.Getgif_search_username() != "" {
		x.String(m.Getgif_search_username())
	}
	if m.Getvenue_search_username() != "" {
		x.String(m.Getvenue_search_username())
	}
	if m.Getimg_search_username() != "" {
		x.String(m.Getimg_search_username())
	}
	if m.Getstatic_maps_provider() != "" {
		x.String(m.Getstatic_maps_provider())
	}
	x.Int(m.Getcaption_length_max())
	x.Int(m.Getmessage_length_max())
	x.Int(m.Getwebfile_dc_id())
	if m.Getsuggested_lang_code() != "" {
		x.String(m.Getsuggested_lang_code())
	}
	if m.Getlang_pack_version() != 0 {
		x.Int(m.Getlang_pack_version())
	}
	if m.Getbase_lang_pack_version() != 0 {
		x.Int(m.Getbase_lang_pack_version())
	}
	return x.Buf
}

// CodecDecode:config
func (m *TLconfig) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setphonecalls_enabled(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdefault_p2p_contacts(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setpreload_featured_stickers(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setignore_phone_entities(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setrevoke_pm_inbox(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setblocked_mode(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setpfs_enabled(true)
	}
	m.Setdate(dbuf.Int())
	m.Setexpires(dbuf.Int())
	m9 := &Bool{}
	m9.Decode(dbuf)
	m.Settest_mode(m9)
	m.Setthis_dc(dbuf.Int())
	c11 := dbuf.Int()
	if c11 != 481674261 {
		return dbuf.Err
	}
	l11 := dbuf.Int()
	v11 := make([]*DcOption, l11)
	for i := int32(0); i < l11; i++ {
		v11[i] = &DcOption{}
		v11[i].Decode(dbuf)
	}
	m.Setdc_options(v11)
	m.Setdc_txt_domain_name(dbuf.String())
	m.Setchat_size_max(dbuf.Int())
	m.Setmegagroup_size_max(dbuf.Int())
	m.Setforwarded_count_max(dbuf.Int())
	m.Setonline_update_period_ms(dbuf.Int())
	m.Setoffline_blur_timeout_ms(dbuf.Int())
	m.Setoffline_idle_timeout_ms(dbuf.Int())
	m.Setonline_cloud_timeout_ms(dbuf.Int())
	m.Setnotify_cloud_delay_ms(dbuf.Int())
	m.Setnotify_default_delay_ms(dbuf.Int())
	m.Setpush_chat_period_ms(dbuf.Int())
	m.Setpush_chat_limit(dbuf.Int())
	m.Setsaved_gifs_limit(dbuf.Int())
	m.Setedit_time_limit(dbuf.Int())
	m.Setrevoke_time_limit(dbuf.Int())
	m.Setrevoke_pm_time_limit(dbuf.Int())
	m.Setrating_e_decay(dbuf.Int())
	m.Setstickers_recent_limit(dbuf.Int())
	m.Setstickers_faved_limit(dbuf.Int())
	m.Setchannels_read_media_period(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Settmp_sessions(dbuf.Int())
	}
	m.Setpinned_dialogs_count_max(dbuf.Int())
	m.Setpinned_infolder_count_max(dbuf.Int())
	m.Setcall_receive_timeout_ms(dbuf.Int())
	m.Setcall_ring_timeout_ms(dbuf.Int())
	m.Setcall_connect_timeout_ms(dbuf.Int())
	m.Setcall_packet_timeout_ms(dbuf.Int())
	m.Setme_url_prefix(dbuf.String())
	if (flags & (1 << 7)) != 0 {
		m.Setautoupdate_url_prefix(dbuf.String())
	}
	if (flags & (1 << 9)) != 0 {
		m.Setgif_search_username(dbuf.String())
	}
	if (flags & (1 << 10)) != 0 {
		m.Setvenue_search_username(dbuf.String())
	}
	if (flags & (1 << 11)) != 0 {
		m.Setimg_search_username(dbuf.String())
	}
	if (flags & (1 << 12)) != 0 {
		m.Setstatic_maps_provider(dbuf.String())
	}
	m.Setcaption_length_max(dbuf.Int())
	m.Setmessage_length_max(dbuf.Int())
	m.Setwebfile_dc_id(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setsuggested_lang_code(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setlang_pack_version(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbase_lang_pack_version(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:jsonObjectValue
func (m *TLjsonObjectValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1059185703)
	x.String(m.Getkey())
	x.Bytes(m.Getvalue().Encode())
	return x.Buf
}

// CodecDecode:jsonObjectValue
func (m *TLjsonObjectValue) Decode(dbuf *DecodeBuf) error {
	m.Setkey(dbuf.String())
	m1 := &JSONValue{}
	m1.Decode(dbuf)
	m.Setvalue(m1)
	return dbuf.Err
}

// CodecEncode:phoneCallEmpty
func (m *TLphoneCallEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1399245077)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:phoneCallEmpty
func (m *TLphoneCallEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:phoneCallWaiting
func (m *TLphoneCallWaiting) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(462375633)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 6
	}
	if m.Getreceive_date() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getprotocol().Encode())
	if m.Getreceive_date() != 0 {
		x.Int(m.Getreceive_date())
	}
	return x.Buf
}

// CodecDecode:phoneCallWaiting
func (m *TLphoneCallWaiting) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 6)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m6 := &PhoneCallProtocol{}
	m6.Decode(dbuf)
	m.Setprotocol(m6)
	if (flags & (1 << 0)) != 0 {
		m.Setreceive_date(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:phoneCallRequested
func (m *TLphoneCallRequested) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2014659757)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_hash())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phoneCallRequested
func (m *TLphoneCallRequested) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 6)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_hash(dbuf.StringBytes())
	m7 := &PhoneCallProtocol{}
	m7.Decode(dbuf)
	m.Setprotocol(m7)
	return dbuf.Err
}

// CodecEncode:phoneCallAccepted
func (m *TLphoneCallAccepted) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1719909046)
	var flags uint32 = 0
	if m.Getvideo() != false {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_b())
	x.Bytes(m.Getprotocol().Encode())
	return x.Buf
}

// CodecDecode:phoneCallAccepted
func (m *TLphoneCallAccepted) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 6)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_b(dbuf.StringBytes())
	m7 := &PhoneCallProtocol{}
	m7.Decode(dbuf)
	m.Setprotocol(m7)
	return dbuf.Err
}

// CodecEncode:phoneCall
func (m *TLphoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2025673089)
	var flags uint32 = 0
	if m.Getp2p_allowed() != false {
		flags |= 1 << 5
	}
	if m.Getvideo() != false {
		flags |= 1 << 6
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_or_b())
	x.Long(m.Getkey_fingerprint())
	x.Bytes(m.Getprotocol().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getconnections())))
	for _, v := range m.Getconnections() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getstart_date())
	return x.Buf
}

// CodecDecode:phoneCall
func (m *TLphoneCall) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 5)) != 0 {
		m.Setp2p_allowed(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_or_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	m9 := &PhoneCallProtocol{}
	m9.Decode(dbuf)
	m.Setprotocol(m9)
	c10 := dbuf.Int()
	if c10 != 481674261 {
		return dbuf.Err
	}
	l10 := dbuf.Int()
	v10 := make([]*PhoneConnection, l10)
	for i := int32(0); i < l10; i++ {
		v10[i] = &PhoneConnection{}
		v10[i].Decode(dbuf)
	}
	m.Setconnections(v10)
	m.Setstart_date(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:phoneCallDiscarded
func (m *TLphoneCallDiscarded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1355435489)
	var flags uint32 = 0
	if m.Getneed_rating() != false {
		flags |= 1 << 2
	}
	if m.Getneed_debug() != false {
		flags |= 1 << 3
	}
	if m.Getvideo() != false {
		flags |= 1 << 6
	}
	if m.Getreason() != nil {
		flags |= 1 << 0
	}
	if m.Getduration() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	if m.Getreason() != nil {
		x.Bytes(m.Getreason().Encode())
	}
	if m.Getduration() != 0 {
		x.Int(m.Getduration())
	}
	return x.Buf
}

// CodecDecode:phoneCallDiscarded
func (m *TLphoneCallDiscarded) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setneed_rating(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setneed_debug(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setvideo(true)
	}
	m.Setid(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m4 := &PhoneCallDiscardReason{}
		m4.Decode(dbuf)
		m.Setreason(m4)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setduration(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:inputPaymentCredentialsSaved
func (m *TLinputPaymentCredentialsSaved) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1056001329)
	x.String(m.Getid())
	x.Bytes(m.Gettmp_password())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsSaved
func (m *TLinputPaymentCredentialsSaved) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settmp_password(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:inputPaymentCredentials
func (m *TLinputPaymentCredentials) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(873977640)
	var flags uint32 = 0
	if m.Getsave() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:inputPaymentCredentials
func (m *TLinputPaymentCredentials) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsave(true)
	}
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata(m1)
	return dbuf.Err
}

// CodecEncode:inputPaymentCredentialsApplePay
func (m *TLinputPaymentCredentialsApplePay) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(178373535)
	x.Bytes(m.Getpayment_data().Encode())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsApplePay
func (m *TLinputPaymentCredentialsApplePay) Decode(dbuf *DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setpayment_data(m0)
	return dbuf.Err
}

// CodecEncode:inputPaymentCredentialsAndroidPay
func (m *TLinputPaymentCredentialsAndroidPay) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-905587442)
	x.Bytes(m.Getpayment_token().Encode())
	x.String(m.Getgoogle_transaction_id())
	return x.Buf
}

// CodecDecode:inputPaymentCredentialsAndroidPay
func (m *TLinputPaymentCredentialsAndroidPay) Decode(dbuf *DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setpayment_token(m0)
	m.Setgoogle_transaction_id(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_affectedMessages
func (m *TLmessages_affectedMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2066640507)
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:messages_affectedMessages
func (m *TLmessages_affectedMessages) Decode(dbuf *DecodeBuf) error {
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:account_autoDownloadSettings
func (m *TLaccount_autoDownloadSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1674235686)
	x.Bytes(m.Getlow().Encode())
	x.Bytes(m.Getmedium().Encode())
	x.Bytes(m.Gethigh().Encode())
	return x.Buf
}

// CodecDecode:account_autoDownloadSettings
func (m *TLaccount_autoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &AutoDownloadSettings{}
	m0.Decode(dbuf)
	m.Setlow(m0)
	m1 := &AutoDownloadSettings{}
	m1.Decode(dbuf)
	m.Setmedium(m1)
	m2 := &AutoDownloadSettings{}
	m2.Decode(dbuf)
	m.Sethigh(m2)
	return dbuf.Err
}

// CodecEncode:chatParticipantsForbidden
func (m *TLchatParticipantsForbidden) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-57668565)
	var flags uint32 = 0
	if m.Getself_participant() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchat_id())
	if m.Getself_participant() != nil {
		x.Bytes(m.Getself_participant().Encode())
	}
	return x.Buf
}

// CodecDecode:chatParticipantsForbidden
func (m *TLchatParticipantsForbidden) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchat_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m1 := &ChatParticipant{}
		m1.Decode(dbuf)
		m.Setself_participant(m1)
	}
	return dbuf.Err
}

// CodecEncode:chatParticipants
func (m *TLchatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1061556205)
	x.Int(m.Getchat_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getparticipants())))
	for _, v := range m.Getparticipants() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:chatParticipants
func (m *TLchatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*ChatParticipant, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &ChatParticipant{}
		v1[i].Decode(dbuf)
	}
	m.Setparticipants(v1)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatBannedRights
func (m *TLchatBannedRights) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1626209256)
	var flags uint32 = 0
	if m.Getview_messages() != false {
		flags |= 1 << 0
	}
	if m.Getsend_messages() != false {
		flags |= 1 << 1
	}
	if m.Getsend_media() != false {
		flags |= 1 << 2
	}
	if m.Getsend_stickers() != false {
		flags |= 1 << 3
	}
	if m.Getsend_gifs() != false {
		flags |= 1 << 4
	}
	if m.Getsend_games() != false {
		flags |= 1 << 5
	}
	if m.Getsend_inline() != false {
		flags |= 1 << 6
	}
	if m.Getembed_links() != false {
		flags |= 1 << 7
	}
	if m.Getsend_polls() != false {
		flags |= 1 << 8
	}
	if m.Getchange_info() != false {
		flags |= 1 << 10
	}
	if m.Getinvite_users() != false {
		flags |= 1 << 15
	}
	if m.Getpin_messages() != false {
		flags |= 1 << 17
	}
	x.UInt(flags)
	x.Int(m.Getuntil_date())
	return x.Buf
}

// CodecDecode:chatBannedRights
func (m *TLchatBannedRights) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setview_messages(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsend_messages(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setsend_media(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setsend_stickers(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsend_gifs(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setsend_games(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setsend_inline(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setembed_links(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setsend_polls(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setchange_info(true)
	}
	if (flags & (1 << 15)) != 0 {
		m.Setinvite_users(true)
	}
	if (flags & (1 << 17)) != 0 {
		m.Setpin_messages(true)
	}
	m.Setuntil_date(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:wallPaperSettings
func (m *TLwallPaperSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(84438264)
	var flags uint32 = 0
	if m.Getblur() != false {
		flags |= 1 << 1
	}
	if m.Getmotion() != false {
		flags |= 1 << 2
	}
	if m.Getbackground_color() != 0 {
		flags |= 1 << 0
	}
	if m.Getsecond_background_color() != 0 {
		flags |= 1 << 4
	}
	if m.Getintensity() != 0 {
		flags |= 1 << 3
	}
	if m.Getrotation() != 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	if m.Getbackground_color() != 0 {
		x.Int(m.Getbackground_color())
	}
	if m.Getsecond_background_color() != 0 {
		x.Int(m.Getsecond_background_color())
	}
	if m.Getintensity() != 0 {
		x.Int(m.Getintensity())
	}
	if m.Getrotation() != 0 {
		x.Int(m.Getrotation())
	}
	return x.Buf
}

// CodecDecode:wallPaperSettings
func (m *TLwallPaperSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setblur(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmotion(true)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setbackground_color(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsecond_background_color(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setintensity(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setrotation(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:paymentRequestedInfo
func (m *TLpaymentRequestedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1868808300)
	var flags uint32 = 0
	if m.Getname() != "" {
		flags |= 1 << 0
	}
	if m.Getphone() != "" {
		flags |= 1 << 1
	}
	if m.Getemail() != "" {
		flags |= 1 << 2
	}
	if m.Getshipping_address() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	if m.Getname() != "" {
		x.String(m.Getname())
	}
	if m.Getphone() != "" {
		x.String(m.Getphone())
	}
	if m.Getemail() != "" {
		x.String(m.Getemail())
	}
	if m.Getshipping_address() != nil {
		x.Bytes(m.Getshipping_address().Encode())
	}
	return x.Buf
}

// CodecDecode:paymentRequestedInfo
func (m *TLpaymentRequestedInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setname(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setphone(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setemail(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m3 := &PostAddress{}
		m3.Decode(dbuf)
		m.Setshipping_address(m3)
	}
	return dbuf.Err
}

// CodecEncode:account_authorizations
func (m *TLaccount_authorizations) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(307276766)
	x.Int(481674261)
	x.Int(int32(len(m.Getauthorizations())))
	for _, v := range m.Getauthorizations() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:account_authorizations
func (m *TLaccount_authorizations) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Authorization, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Authorization{}
		v0[i].Decode(dbuf)
	}
	m.Setauthorizations(v0)
	return dbuf.Err
}

// CodecEncode:messages_discussionMessage
func (m *TLmessages_discussionMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-170029155)
	var flags uint32 = 0
	if m.Getmax_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getread_inbox_max_id() != 0 {
		flags |= 1 << 1
	}
	if m.Getread_outbox_max_id() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmax_id() != 0 {
		x.Int(m.Getmax_id())
	}
	if m.Getread_inbox_max_id() != 0 {
		x.Int(m.Getread_inbox_max_id())
	}
	if m.Getread_outbox_max_id() != 0 {
		x.Int(m.Getread_outbox_max_id())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_discussionMessage
func (m *TLmessages_discussionMessage) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Message{}
		v0[i].Decode(dbuf)
	}
	m.Setmessages(v0)
	if (flags & (1 << 0)) != 0 {
		m.Setmax_id(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setread_inbox_max_id(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setread_outbox_max_id(dbuf.Int())
	}
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*Chat, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &Chat{}
		v4[i].Decode(dbuf)
	}
	m.Setchats(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*User, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &User{}
		v5[i].Decode(dbuf)
	}
	m.Setusers(v5)
	return dbuf.Err
}

// CodecEncode:messages_inactiveChats
func (m *TLmessages_inactiveChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1456996667)
	x.VectorInt(m.Getdates())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_inactiveChats
func (m *TLmessages_inactiveChats) Decode(dbuf *DecodeBuf) error {
	m.Setdates(dbuf.VectorInt())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:secureValue
func (m *TLsecureValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(411017418)
	var flags uint32 = 0
	if m.Getdata() != nil {
		flags |= 1 << 0
	}
	if m.Getfront_side() != nil {
		flags |= 1 << 1
	}
	if m.Getreverse_side() != nil {
		flags |= 1 << 2
	}
	if m.Getselfie() != nil {
		flags |= 1 << 3
	}
	if len(m.Gettranslation()) > 0 {
		flags |= 1 << 6
	}
	if len(m.Getfiles()) > 0 {
		flags |= 1 << 4
	}
	if m.Getplain_data() != nil {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Bytes(m.Gettype_key().Encode())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata().Encode())
	}
	if m.Getfront_side() != nil {
		x.Bytes(m.Getfront_side().Encode())
	}
	if m.Getreverse_side() != nil {
		x.Bytes(m.Getreverse_side().Encode())
	}
	if m.Getselfie() != nil {
		x.Bytes(m.Getselfie().Encode())
	}
	if len(m.Gettranslation()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Gettranslation())))
		for _, v := range m.Gettranslation() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getfiles()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getfiles())))
		for _, v := range m.Getfiles() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getplain_data() != nil {
		x.Bytes(m.Getplain_data().Encode())
	}
	x.Bytes(m.Gethash())
	return x.Buf
}

// CodecDecode:secureValue
func (m *TLsecureValue) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	if (flags & (1 << 0)) != 0 {
		m1 := &SecureData{}
		m1.Decode(dbuf)
		m.Setdata(m1)
	}
	if (flags & (1 << 1)) != 0 {
		m2 := &SecureFile{}
		m2.Decode(dbuf)
		m.Setfront_side(m2)
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &SecureFile{}
		m3.Decode(dbuf)
		m.Setreverse_side(m3)
	}
	if (flags & (1 << 3)) != 0 {
		m4 := &SecureFile{}
		m4.Decode(dbuf)
		m.Setselfie(m4)
	}
	if (flags & (1 << 6)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]*SecureFile, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &SecureFile{}
			v5[i].Decode(dbuf)
		}
		m.Settranslation(v5)
	}
	if (flags & (1 << 4)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*SecureFile, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &SecureFile{}
			v6[i].Decode(dbuf)
		}
		m.Setfiles(v6)
	}
	if (flags & (1 << 5)) != 0 {
		m7 := &SecurePlainData{}
		m7.Decode(dbuf)
		m.Setplain_data(m7)
	}
	m.Sethash(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:userEmpty
func (m *TLuserEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(537022650)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:userEmpty
func (m *TLuserEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:user
func (m *TLuser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1820043071)
	var flags uint32 = 0
	if m.Getself() != false {
		flags |= 1 << 10
	}
	if m.Getcontact() != false {
		flags |= 1 << 11
	}
	if m.Getmutual_contact() != false {
		flags |= 1 << 12
	}
	if m.Getdeleted() != false {
		flags |= 1 << 13
	}
	if m.Getbot() != false {
		flags |= 1 << 14
	}
	if m.Getbot_chat_history() != false {
		flags |= 1 << 15
	}
	if m.Getbot_nochats() != false {
		flags |= 1 << 16
	}
	if m.Getverified() != false {
		flags |= 1 << 17
	}
	if m.Getrestricted() != false {
		flags |= 1 << 18
	}
	if m.Getmin() != false {
		flags |= 1 << 20
	}
	if m.Getbot_inline_geo() != false {
		flags |= 1 << 21
	}
	if m.Getsupport() != false {
		flags |= 1 << 23
	}
	if m.Getscam() != false {
		flags |= 1 << 24
	}
	if m.Getapply_min_photo() != false {
		flags |= 1 << 25
	}
	if m.Getaccess_hash() != 0 {
		flags |= 1 << 0
	}
	if m.Getfirst_name() != "" {
		flags |= 1 << 1
	}
	if m.Getlast_name() != "" {
		flags |= 1 << 2
	}
	if m.Getusername() != "" {
		flags |= 1 << 3
	}
	if m.Getphone() != "" {
		flags |= 1 << 4
	}
	if m.Getphoto() != nil {
		flags |= 1 << 5
	}
	if m.Getstatus() != nil {
		flags |= 1 << 6
	}
	if m.Getbot_info_version() != 0 {
		flags |= 1 << 14
	}
	if len(m.Getrestriction_reason()) > 0 {
		flags |= 1 << 18
	}
	if m.Getbot_inline_placeholder() != "" {
		flags |= 1 << 19
	}
	if m.Getlang_code() != "" {
		flags |= 1 << 22
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getaccess_hash() != 0 {
		x.Long(m.Getaccess_hash())
	}
	if m.Getfirst_name() != "" {
		x.String(m.Getfirst_name())
	}
	if m.Getlast_name() != "" {
		x.String(m.Getlast_name())
	}
	if m.Getusername() != "" {
		x.String(m.Getusername())
	}
	if m.Getphone() != "" {
		x.String(m.Getphone())
	}
	if m.Getphoto() != nil {
		x.Bytes(m.Getphoto().Encode())
	}
	if m.Getstatus() != nil {
		x.Bytes(m.Getstatus().Encode())
	}
	if m.Getbot_info_version() != 0 {
		x.Int(m.Getbot_info_version())
	}
	if len(m.Getrestriction_reason()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrestriction_reason())))
		for _, v := range m.Getrestriction_reason() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getbot_inline_placeholder() != "" {
		x.String(m.Getbot_inline_placeholder())
	}
	if m.Getlang_code() != "" {
		x.String(m.Getlang_code())
	}
	return x.Buf
}

// CodecDecode:user
func (m *TLuser) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 10)) != 0 {
		m.Setself(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setcontact(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setmutual_contact(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setdeleted(true)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setbot(true)
	}
	if (flags & (1 << 15)) != 0 {
		m.Setbot_chat_history(true)
	}
	if (flags & (1 << 16)) != 0 {
		m.Setbot_nochats(true)
	}
	if (flags & (1 << 17)) != 0 {
		m.Setverified(true)
	}
	if (flags & (1 << 18)) != 0 {
		m.Setrestricted(true)
	}
	if (flags & (1 << 20)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 21)) != 0 {
		m.Setbot_inline_geo(true)
	}
	if (flags & (1 << 23)) != 0 {
		m.Setsupport(true)
	}
	if (flags & (1 << 24)) != 0 {
		m.Setscam(true)
	}
	if (flags & (1 << 25)) != 0 {
		m.Setapply_min_photo(true)
	}
	m.Setid(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setaccess_hash(dbuf.Long())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfirst_name(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setlast_name(dbuf.String())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setusername(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setphone(dbuf.String())
	}
	if (flags & (1 << 5)) != 0 {
		m20 := &UserProfilePhoto{}
		m20.Decode(dbuf)
		m.Setphoto(m20)
	}
	if (flags & (1 << 6)) != 0 {
		m21 := &UserStatus{}
		m21.Decode(dbuf)
		m.Setstatus(m21)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setbot_info_version(dbuf.Int())
	}
	if (flags & (1 << 18)) != 0 {
		c23 := dbuf.Int()
		if c23 != 481674261 {
			return dbuf.Err
		}
		l23 := dbuf.Int()
		v23 := make([]*RestrictionReason, l23)
		for i := int32(0); i < l23; i++ {
			v23[i] = &RestrictionReason{}
			v23[i].Decode(dbuf)
		}
		m.Setrestriction_reason(v23)
	}
	if (flags & (1 << 19)) != 0 {
		m.Setbot_inline_placeholder(dbuf.String())
	}
	if (flags & (1 << 22)) != 0 {
		m.Setlang_code(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:inputGeoPointEmpty
func (m *TLinputGeoPointEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-457104426)
	return x.Buf
}

// CodecDecode:inputGeoPointEmpty
func (m *TLinputGeoPointEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputGeoPoint
func (m *TLinputGeoPoint) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1210199983)
	var flags uint32 = 0
	if m.Getaccuracy_radius() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Double(m.Getlat())
	x.Double(m.Getlong())
	if m.Getaccuracy_radius() != 0 {
		x.Int(m.Getaccuracy_radius())
	}
	return x.Buf
}

// CodecDecode:inputGeoPoint
func (m *TLinputGeoPoint) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setlat(dbuf.Double())
	m.Setlong(dbuf.Double())
	if (flags & (1 << 0)) != 0 {
		m.Setaccuracy_radius(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:postAddress
func (m *TLpostAddress) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(512535275)
	x.String(m.Getstreet_line1())
	x.String(m.Getstreet_line2())
	x.String(m.Getcity())
	x.String(m.Getstate())
	x.String(m.Getcountry_iso2())
	x.String(m.Getpost_code())
	return x.Buf
}

// CodecDecode:postAddress
func (m *TLpostAddress) Decode(dbuf *DecodeBuf) error {
	m.Setstreet_line1(dbuf.String())
	m.Setstreet_line2(dbuf.String())
	m.Setcity(dbuf.String())
	m.Setstate(dbuf.String())
	m.Setcountry_iso2(dbuf.String())
	m.Setpost_code(dbuf.String())
	return dbuf.Err
}

// CodecEncode:boolFalse
func (m *TLboolFalse) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1132882121)
	return x.Buf
}

// CodecDecode:boolFalse
func (m *TLboolFalse) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:boolTrue
func (m *TLboolTrue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1720552011)
	return x.Buf
}

// CodecDecode:boolTrue
func (m *TLboolTrue) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyStatusTimestamp
func (m *TLinputPrivacyKeyStatusTimestamp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1335282456)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyStatusTimestamp
func (m *TLinputPrivacyKeyStatusTimestamp) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyChatInvite
func (m *TLinputPrivacyKeyChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1107622874)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyChatInvite
func (m *TLinputPrivacyKeyChatInvite) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyPhoneCall
func (m *TLinputPrivacyKeyPhoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-88417185)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneCall
func (m *TLinputPrivacyKeyPhoneCall) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyPhoneP2P
func (m *TLinputPrivacyKeyPhoneP2P) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-610373422)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneP2P
func (m *TLinputPrivacyKeyPhoneP2P) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyForwards
func (m *TLinputPrivacyKeyForwards) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1529000952)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyForwards
func (m *TLinputPrivacyKeyForwards) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyProfilePhoto
func (m *TLinputPrivacyKeyProfilePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1461304012)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyProfilePhoto
func (m *TLinputPrivacyKeyProfilePhoto) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyPhoneNumber
func (m *TLinputPrivacyKeyPhoneNumber) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(55761658)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyPhoneNumber
func (m *TLinputPrivacyKeyPhoneNumber) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputPrivacyKeyAddedByPhone
func (m *TLinputPrivacyKeyAddedByPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-786326563)
	return x.Buf
}

// CodecDecode:inputPrivacyKeyAddedByPhone
func (m *TLinputPrivacyKeyAddedByPhone) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputDocumentEmpty
func (m *TLinputDocumentEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1928391342)
	return x.Buf
}

// CodecDecode:inputDocumentEmpty
func (m *TLinputDocumentEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputDocument
func (m *TLinputDocument) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(448771445)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Bytes(m.Getfile_reference())
	return x.Buf
}

// CodecDecode:inputDocument
func (m *TLinputDocument) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setfile_reference(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:statsDateRangeDays
func (m *TLstatsDateRangeDays) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1237848657)
	x.Int(m.Getmin_date())
	x.Int(m.Getmax_date())
	return x.Buf
}

// CodecDecode:statsDateRangeDays
func (m *TLstatsDateRangeDays) Decode(dbuf *DecodeBuf) error {
	m.Setmin_date(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatFull
func (m *TLchatFull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(461151667)
	var flags uint32 = 0
	if m.Getcan_set_username() != false {
		flags |= 1 << 7
	}
	if m.Gethas_scheduled() != false {
		flags |= 1 << 8
	}
	if m.Getchat_photo() != nil {
		flags |= 1 << 2
	}
	if len(m.Getbot_info()) > 0 {
		flags |= 1 << 3
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 1 << 6
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 11
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getabout())
	x.Bytes(m.Getparticipants().Encode())
	if m.Getchat_photo() != nil {
		x.Bytes(m.Getchat_photo().Encode())
	}
	x.Bytes(m.Getnotify_settings().Encode())
	x.Bytes(m.Getexported_invite().Encode())
	if len(m.Getbot_info()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getbot_info())))
		for _, v := range m.Getbot_info() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	return x.Buf
}

// CodecDecode:chatFull
func (m *TLchatFull) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 7)) != 0 {
		m.Setcan_set_username(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Sethas_scheduled(true)
	}
	m.Setid(dbuf.Int())
	m.Setabout(dbuf.String())
	m4 := &ChatParticipants{}
	m4.Decode(dbuf)
	m.Setparticipants(m4)
	if (flags & (1 << 2)) != 0 {
		m5 := &Photo{}
		m5.Decode(dbuf)
		m.Setchat_photo(m5)
	}
	m6 := &PeerNotifySettings{}
	m6.Decode(dbuf)
	m.Setnotify_settings(m6)
	m7 := &ExportedChatInvite{}
	m7.Decode(dbuf)
	m.Setexported_invite(m7)
	if (flags & (1 << 3)) != 0 {
		c8 := dbuf.Int()
		if c8 != 481674261 {
			return dbuf.Err
		}
		l8 := dbuf.Int()
		v8 := make([]*BotInfo, l8)
		for i := int32(0); i < l8; i++ {
			v8[i] = &BotInfo{}
			v8[i].Decode(dbuf)
		}
		m.Setbot_info(v8)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	if (flags & (1 << 11)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:channelFull
func (m *TLchannelFull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-253335766)
	var flags uint32 = 0
	if m.Getcan_view_participants() != false {
		flags |= 1 << 3
	}
	if m.Getcan_set_username() != false {
		flags |= 1 << 6
	}
	if m.Getcan_set_stickers() != false {
		flags |= 1 << 7
	}
	if m.Gethidden_prehistory() != false {
		flags |= 1 << 10
	}
	if m.Getcan_set_location() != false {
		flags |= 1 << 16
	}
	if m.Gethas_scheduled() != false {
		flags |= 1 << 19
	}
	if m.Getcan_view_stats() != false {
		flags |= 1 << 20
	}
	if m.Getblocked() != false {
		flags |= 1 << 22
	}
	if m.Getparticipants_count() != 0 {
		flags |= 1 << 0
	}
	if m.Getadmins_count() != 0 {
		flags |= 1 << 1
	}
	if m.Getkicked_count() != 0 {
		flags |= 1 << 2
	}
	if m.Getbanned_count() != 0 {
		flags |= 1 << 2
	}
	if m.Getonline_count() != 0 {
		flags |= 1 << 13
	}
	if m.Getmigrated_from_chat_id() != 0 {
		flags |= 1 << 4
	}
	if m.Getmigrated_from_max_id() != 0 {
		flags |= 1 << 4
	}
	if m.Getpinned_msg_id() != 0 {
		flags |= 1 << 5
	}
	if m.Getstickerset() != nil {
		flags |= 1 << 8
	}
	if m.Getavailable_min_id() != 0 {
		flags |= 1 << 9
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 11
	}
	if m.Getlinked_chat_id() != 0 {
		flags |= 1 << 14
	}
	if m.Getlocation() != nil {
		flags |= 1 << 15
	}
	if m.Getslowmode_seconds() != 0 {
		flags |= 1 << 17
	}
	if m.Getslowmode_next_send_date() != 0 {
		flags |= 1 << 18
	}
	if m.Getstats_dc() != 0 {
		flags |= 1 << 12
	}
	x.UInt(flags)
	x.Int(m.Getid())
	x.String(m.Getabout())
	if m.Getparticipants_count() != 0 {
		x.Int(m.Getparticipants_count())
	}
	if m.Getadmins_count() != 0 {
		x.Int(m.Getadmins_count())
	}
	if m.Getkicked_count() != 0 {
		x.Int(m.Getkicked_count())
	}
	if m.Getbanned_count() != 0 {
		x.Int(m.Getbanned_count())
	}
	if m.Getonline_count() != 0 {
		x.Int(m.Getonline_count())
	}
	x.Int(m.Getread_inbox_max_id())
	x.Int(m.Getread_outbox_max_id())
	x.Int(m.Getunread_count())
	x.Bytes(m.Getchat_photo().Encode())
	x.Bytes(m.Getnotify_settings().Encode())
	x.Bytes(m.Getexported_invite().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getbot_info())))
	for _, v := range m.Getbot_info() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getmigrated_from_chat_id() != 0 {
		x.Int(m.Getmigrated_from_chat_id())
	}
	if m.Getmigrated_from_max_id() != 0 {
		x.Int(m.Getmigrated_from_max_id())
	}
	if m.Getpinned_msg_id() != 0 {
		x.Int(m.Getpinned_msg_id())
	}
	if m.Getstickerset() != nil {
		x.Bytes(m.Getstickerset().Encode())
	}
	if m.Getavailable_min_id() != 0 {
		x.Int(m.Getavailable_min_id())
	}
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	if m.Getlinked_chat_id() != 0 {
		x.Int(m.Getlinked_chat_id())
	}
	if m.Getlocation() != nil {
		x.Bytes(m.Getlocation().Encode())
	}
	if m.Getslowmode_seconds() != 0 {
		x.Int(m.Getslowmode_seconds())
	}
	if m.Getslowmode_next_send_date() != 0 {
		x.Int(m.Getslowmode_next_send_date())
	}
	if m.Getstats_dc() != 0 {
		x.Int(m.Getstats_dc())
	}
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:channelFull
func (m *TLchannelFull) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 3)) != 0 {
		m.Setcan_view_participants(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setcan_set_username(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setcan_set_stickers(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Sethidden_prehistory(true)
	}
	if (flags & (1 << 16)) != 0 {
		m.Setcan_set_location(true)
	}
	if (flags & (1 << 19)) != 0 {
		m.Sethas_scheduled(true)
	}
	if (flags & (1 << 20)) != 0 {
		m.Setcan_view_stats(true)
	}
	if (flags & (1 << 22)) != 0 {
		m.Setblocked(true)
	}
	m.Setid(dbuf.Int())
	m.Setabout(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setparticipants_count(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setadmins_count(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setkicked_count(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setbanned_count(dbuf.Int())
	}
	if (flags & (1 << 13)) != 0 {
		m.Setonline_count(dbuf.Int())
	}
	m.Setread_inbox_max_id(dbuf.Int())
	m.Setread_outbox_max_id(dbuf.Int())
	m.Setunread_count(dbuf.Int())
	m18 := &Photo{}
	m18.Decode(dbuf)
	m.Setchat_photo(m18)
	m19 := &PeerNotifySettings{}
	m19.Decode(dbuf)
	m.Setnotify_settings(m19)
	m20 := &ExportedChatInvite{}
	m20.Decode(dbuf)
	m.Setexported_invite(m20)
	c21 := dbuf.Int()
	if c21 != 481674261 {
		return dbuf.Err
	}
	l21 := dbuf.Int()
	v21 := make([]*BotInfo, l21)
	for i := int32(0); i < l21; i++ {
		v21[i] = &BotInfo{}
		v21[i].Decode(dbuf)
	}
	m.Setbot_info(v21)
	if (flags & (1 << 4)) != 0 {
		m.Setmigrated_from_chat_id(dbuf.Int())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setmigrated_from_max_id(dbuf.Int())
	}
	if (flags & (1 << 5)) != 0 {
		m.Setpinned_msg_id(dbuf.Int())
	}
	if (flags & (1 << 8)) != 0 {
		m25 := &StickerSet{}
		m25.Decode(dbuf)
		m.Setstickerset(m25)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setavailable_min_id(dbuf.Int())
	}
	if (flags & (1 << 11)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	if (flags & (1 << 14)) != 0 {
		m.Setlinked_chat_id(dbuf.Int())
	}
	if (flags & (1 << 15)) != 0 {
		m29 := &ChannelLocation{}
		m29.Decode(dbuf)
		m.Setlocation(m29)
	}
	if (flags & (1 << 17)) != 0 {
		m.Setslowmode_seconds(dbuf.Int())
	}
	if (flags & (1 << 18)) != 0 {
		m.Setslowmode_next_send_date(dbuf.Int())
	}
	if (flags & (1 << 12)) != 0 {
		m.Setstats_dc(dbuf.Int())
	}
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:invoice
func (m *TLinvoice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1022713000)
	var flags uint32 = 0
	if m.Gettest() != false {
		flags |= 1 << 0
	}
	if m.Getname_requested() != false {
		flags |= 1 << 1
	}
	if m.Getphone_requested() != false {
		flags |= 1 << 2
	}
	if m.Getemail_requested() != false {
		flags |= 1 << 3
	}
	if m.Getshipping_address_requested() != false {
		flags |= 1 << 4
	}
	if m.Getflexible() != false {
		flags |= 1 << 5
	}
	if m.Getphone_to_provider() != false {
		flags |= 1 << 6
	}
	if m.Getemail_to_provider() != false {
		flags |= 1 << 7
	}
	x.UInt(flags)
	x.String(m.Getcurrency())
	x.Int(481674261)
	x.Int(int32(len(m.Getprices())))
	for _, v := range m.Getprices() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:invoice
func (m *TLinvoice) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Settest(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setname_requested(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setphone_requested(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setemail_requested(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setshipping_address_requested(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setflexible(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setphone_to_provider(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setemail_to_provider(true)
	}
	m.Setcurrency(dbuf.String())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]*LabeledPrice, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = &LabeledPrice{}
		v9[i].Decode(dbuf)
	}
	m.Setprices(v9)
	return dbuf.Err
}

// CodecEncode:true
func (m *TLtrue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1072550713)
	return x.Buf
}

// CodecDecode:true
func (m *TLtrue) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:auth_sentCode
func (m *TLauth_sentCode) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1577067778)
	var flags uint32 = 0
	if m.Getnext_type() != nil {
		flags |= 1 << 1
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Bytes(m.Gettype_key().Encode())
	x.String(m.Getphone_code_hash())
	if m.Getnext_type() != nil {
		x.Bytes(m.Getnext_type().Encode())
	}
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	return x.Buf
}

// CodecDecode:auth_sentCode
func (m *TLauth_sentCode) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &auth_SentCodeType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setphone_code_hash(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m2 := &auth_CodeType{}
		m2.Decode(dbuf)
		m.Setnext_type(m2)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:pollAnswer
func (m *TLpollAnswer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1823064809)
	x.String(m.Gettext())
	x.Bytes(m.Getoption())
	return x.Buf
}

// CodecDecode:pollAnswer
func (m *TLpollAnswer) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Setoption(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:emojiKeywordsDifference
func (m *TLemojiKeywordsDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1556570557)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	x.Int(m.Getversion())
	x.Int(481674261)
	x.Int(int32(len(m.Getkeywords())))
	for _, v := range m.Getkeywords() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:emojiKeywordsDifference
func (m *TLemojiKeywordsDifference) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	m.Setversion(dbuf.Int())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*EmojiKeyword, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &EmojiKeyword{}
		v3[i].Decode(dbuf)
	}
	m.Setkeywords(v3)
	return dbuf.Err
}

// CodecEncode:statsGroupTopInviter
func (m *TLstatsGroupTopInviter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(831924812)
	x.Int(m.Getuser_id())
	x.Int(m.Getinvitations())
	return x.Buf
}

// CodecDecode:statsGroupTopInviter
func (m *TLstatsGroupTopInviter) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setinvitations(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputSecureFileUploaded
func (m *TLinputSecureFileUploaded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(859091184)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getmd5_checksum())
	x.Bytes(m.Getfile_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:inputSecureFileUploaded
func (m *TLinputSecureFileUploaded) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setmd5_checksum(dbuf.String())
	m.Setfile_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:inputSecureFile
func (m *TLinputSecureFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1399317950)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputSecureFile
func (m *TLinputSecureFile) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:secureFileEmpty
func (m *TLsecureFileEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1679398724)
	return x.Buf
}

// CodecDecode:secureFileEmpty
func (m *TLsecureFileEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureFile
func (m *TLsecureFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-534283678)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.Int(m.Getdc_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getfile_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureFile
func (m *TLsecureFile) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setdc_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setfile_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:peerUser
func (m *TLpeerUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1649296275)
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:peerUser
func (m *TLpeerUser) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:peerChat
func (m *TLpeerChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1160714821)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:peerChat
func (m *TLpeerChat) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:peerChannel
func (m *TLpeerChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1109531342)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:peerChannel
func (m *TLpeerChannel) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:channelAdminLogEventsFilter
func (m *TLchannelAdminLogEventsFilter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-368018716)
	var flags uint32 = 0
	if m.Getjoin() != false {
		flags |= 1 << 0
	}
	if m.Getleave() != false {
		flags |= 1 << 1
	}
	if m.Getinvite() != false {
		flags |= 1 << 2
	}
	if m.Getban() != false {
		flags |= 1 << 3
	}
	if m.Getunban() != false {
		flags |= 1 << 4
	}
	if m.Getkick() != false {
		flags |= 1 << 5
	}
	if m.Getunkick() != false {
		flags |= 1 << 6
	}
	if m.Getpromote() != false {
		flags |= 1 << 7
	}
	if m.Getdemote() != false {
		flags |= 1 << 8
	}
	if m.Getinfo() != false {
		flags |= 1 << 9
	}
	if m.Getsettings() != false {
		flags |= 1 << 10
	}
	if m.Getpinned() != false {
		flags |= 1 << 11
	}
	if m.Getedit() != false {
		flags |= 1 << 12
	}
	if m.Getdelete() != false {
		flags |= 1 << 13
	}
	if m.Getgroup_call() != false {
		flags |= 1 << 14
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:channelAdminLogEventsFilter
func (m *TLchannelAdminLogEventsFilter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setjoin(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setleave(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setinvite(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setban(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setunban(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setkick(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setunkick(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setpromote(true)
	}
	if (flags & (1 << 8)) != 0 {
		m.Setdemote(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setinfo(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setsettings(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 12)) != 0 {
		m.Setedit(true)
	}
	if (flags & (1 << 13)) != 0 {
		m.Setdelete(true)
	}
	if (flags & (1 << 14)) != 0 {
		m.Setgroup_call(true)
	}
	return dbuf.Err
}

// CodecEncode:help_promoDataEmpty
func (m *TLhelp_promoDataEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1728664459)
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:help_promoDataEmpty
func (m *TLhelp_promoDataEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:help_promoData
func (m *TLhelp_promoData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1942390465)
	var flags uint32 = 0
	if m.Getproxy() != false {
		flags |= 1 << 0
	}
	if m.Getpsa_type() != "" {
		flags |= 1 << 1
	}
	if m.Getpsa_message() != "" {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(m.Getexpires())
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getpsa_type() != "" {
		x.String(m.Getpsa_type())
	}
	if m.Getpsa_message() != "" {
		x.String(m.Getpsa_message())
	}
	return x.Buf
}

// CodecDecode:help_promoData
func (m *TLhelp_promoData) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setproxy(true)
	}
	m.Setexpires(dbuf.Int())
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	if (flags & (1 << 1)) != 0 {
		m.Setpsa_type(dbuf.String())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpsa_message(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:keyboardButton
func (m *TLkeyboardButton) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1560655744)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButton
func (m *TLkeyboardButton) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonUrl
func (m *TLkeyboardButtonUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(629866245)
	x.String(m.Gettext())
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:keyboardButtonUrl
func (m *TLkeyboardButtonUrl) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonCallback
func (m *TLkeyboardButtonCallback) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(901503851)
	var flags uint32 = 0
	if m.Getrequires_password() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettext())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:keyboardButtonCallback
func (m *TLkeyboardButtonCallback) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequires_password(true)
	}
	m.Settext(dbuf.String())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:keyboardButtonRequestPhone
func (m *TLkeyboardButtonRequestPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1318425559)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestPhone
func (m *TLkeyboardButtonRequestPhone) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonRequestGeoLocation
func (m *TLkeyboardButtonRequestGeoLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-59151553)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestGeoLocation
func (m *TLkeyboardButtonRequestGeoLocation) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonSwitchInline
func (m *TLkeyboardButtonSwitchInline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(90744648)
	var flags uint32 = 0
	if m.Getsame_peer() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettext())
	x.String(m.Getquery())
	return x.Buf
}

// CodecDecode:keyboardButtonSwitchInline
func (m *TLkeyboardButtonSwitchInline) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setsame_peer(true)
	}
	m.Settext(dbuf.String())
	m.Setquery(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonGame
func (m *TLkeyboardButtonGame) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1358175439)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonGame
func (m *TLkeyboardButtonGame) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonBuy
func (m *TLkeyboardButtonBuy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1344716869)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonBuy
func (m *TLkeyboardButtonBuy) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:keyboardButtonUrlAuth
func (m *TLkeyboardButtonUrlAuth) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(280464681)
	var flags uint32 = 0
	if m.Getfwd_text() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettext())
	if m.Getfwd_text() != "" {
		x.String(m.Getfwd_text())
	}
	x.String(m.Geturl())
	x.Int(m.Getbutton_id())
	return x.Buf
}

// CodecDecode:keyboardButtonUrlAuth
func (m *TLkeyboardButtonUrlAuth) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settext(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m.Setfwd_text(dbuf.String())
	}
	m.Seturl(dbuf.String())
	m.Setbutton_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputKeyboardButtonUrlAuth
func (m *TLinputKeyboardButtonUrlAuth) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-802258988)
	var flags uint32 = 0
	if m.Getrequest_write_access() != false {
		flags |= 1 << 0
	}
	if m.Getfwd_text() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.String(m.Gettext())
	if m.Getfwd_text() != "" {
		x.String(m.Getfwd_text())
	}
	x.String(m.Geturl())
	x.Bytes(m.Getbot().Encode())
	return x.Buf
}

// CodecDecode:inputKeyboardButtonUrlAuth
func (m *TLinputKeyboardButtonUrlAuth) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setrequest_write_access(true)
	}
	m.Settext(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m.Setfwd_text(dbuf.String())
	}
	m.Seturl(dbuf.String())
	m4 := &InputUser{}
	m4.Decode(dbuf)
	m.Setbot(m4)
	return dbuf.Err
}

// CodecEncode:keyboardButtonRequestPoll
func (m *TLkeyboardButtonRequestPoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1144565411)
	var flags uint32 = 0
	if m.Getquiz() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getquiz() != nil {
		x.Bytes(m.Getquiz().Encode())
	}
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:keyboardButtonRequestPoll
func (m *TLkeyboardButtonRequestPoll) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Bool{}
		m0.Decode(dbuf)
		m.Setquiz(m0)
	}
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:auth_loginToken
func (m *TLauth_loginToken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1654593920)
	x.Int(m.Getexpires())
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_loginToken
func (m *TLauth_loginToken) Decode(dbuf *DecodeBuf) error {
	m.Setexpires(dbuf.Int())
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:auth_loginTokenMigrateTo
func (m *TLauth_loginTokenMigrateTo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(110008598)
	x.Int(m.Getdc_id())
	x.Bytes(m.Gettoken())
	return x.Buf
}

// CodecDecode:auth_loginTokenMigrateTo
func (m *TLauth_loginTokenMigrateTo) Decode(dbuf *DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Settoken(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:auth_loginTokenSuccess
func (m *TLauth_loginTokenSuccess) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(957176926)
	x.Bytes(m.Getauthorization().Encode())
	return x.Buf
}

// CodecDecode:auth_loginTokenSuccess
func (m *TLauth_loginTokenSuccess) Decode(dbuf *DecodeBuf) error {
	m0 := &auth_Authorization{}
	m0.Decode(dbuf)
	m.Setauthorization(m0)
	return dbuf.Err
}

// CodecEncode:messages_stickersNotModified
func (m *TLmessages_stickersNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-244016606)
	return x.Buf
}

// CodecDecode:messages_stickersNotModified
func (m *TLmessages_stickersNotModified) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_stickers
func (m *TLmessages_stickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-463889475)
	x.Int(m.Gethash())
	x.Int(481674261)
	x.Int(int32(len(m.Getstickers())))
	for _, v := range m.Getstickers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickers
func (m *TLmessages_stickers) Decode(dbuf *DecodeBuf) error {
	m.Sethash(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Document{}
		v1[i].Decode(dbuf)
	}
	m.Setstickers(v1)
	return dbuf.Err
}

// CodecEncode:statsURL
func (m *TLstatsURL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1202287072)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:statsURL
func (m *TLstatsURL) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputWebFileLocation
func (m *TLinputWebFileLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1036396922)
	x.String(m.Geturl())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputWebFileLocation
func (m *TLinputWebFileLocation) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputWebFileGeoPointLocation
func (m *TLinputWebFileGeoPointLocation) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1625153079)
	x.Bytes(m.Getgeo_point().Encode())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getzoom())
	x.Int(m.Getscale())
	return x.Buf
}

// CodecDecode:inputWebFileGeoPointLocation
func (m *TLinputWebFileGeoPointLocation) Decode(dbuf *DecodeBuf) error {
	m0 := &InputGeoPoint{}
	m0.Decode(dbuf)
	m.Setgeo_point(m0)
	m.Setaccess_hash(dbuf.Long())
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setzoom(dbuf.Int())
	m.Setscale(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_peerDialogs
func (m *TLmessages_peerDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(863093588)
	x.Int(481674261)
	x.Int(int32(len(m.Getdialogs())))
	for _, v := range m.Getdialogs() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getstate().Encode())
	return x.Buf
}

// CodecDecode:messages_peerDialogs
func (m *TLmessages_peerDialogs) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Dialog, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Dialog{}
		v0[i].Decode(dbuf)
	}
	m.Setdialogs(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Message, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Message{}
		v1[i].Decode(dbuf)
	}
	m.Setmessages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Chat, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Chat{}
		v2[i].Decode(dbuf)
	}
	m.Setchats(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	m4 := &updates_State{}
	m4.Decode(dbuf)
	m.Setstate(m4)
	return dbuf.Err
}

// CodecEncode:contacts_resolvedPeer
func (m *TLcontacts_resolvedPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2131196633)
	x.Bytes(m.Getpeer().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_resolvedPeer
func (m *TLcontacts_resolvedPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:theme
func (m *TLtheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(42930452)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 1 << 0
	}
	if m.Getdefault_key() != false {
		flags |= 1 << 1
	}
	if m.Getdocument() != nil {
		flags |= 1 << 2
	}
	if m.Getsettings() != nil {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getslug())
	x.String(m.Gettitle())
	if m.Getdocument() != nil {
		x.Bytes(m.Getdocument().Encode())
	}
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	x.Int(m.Getinstalls_count())
	return x.Buf
}

// CodecDecode:theme
func (m *TLtheme) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdefault_key(true)
	}
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setslug(dbuf.String())
	m.Settitle(dbuf.String())
	if (flags & (1 << 2)) != 0 {
		m6 := &Document{}
		m6.Decode(dbuf)
		m.Setdocument(m6)
	}
	if (flags & (1 << 3)) != 0 {
		m7 := &ThemeSettings{}
		m7.Decode(dbuf)
		m.Setsettings(m7)
	}
	m.Setinstalls_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:stickerPack
func (m *TLstickerPack) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(313694676)
	x.String(m.Getemoticon())
	x.VectorLong(m.Getdocuments())
	return x.Buf
}

// CodecDecode:stickerPack
func (m *TLstickerPack) Decode(dbuf *DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	m.Setdocuments(dbuf.VectorLong())
	return dbuf.Err
}

// CodecEncode:paymentSavedCredentialsCard
func (m *TLpaymentSavedCredentialsCard) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-842892769)
	x.String(m.Getid())
	x.String(m.Gettitle())
	return x.Buf
}

// CodecDecode:paymentSavedCredentialsCard
func (m *TLpaymentSavedCredentialsCard) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.String())
	m.Settitle(dbuf.String())
	return dbuf.Err
}

// CodecEncode:photos_photos
func (m *TLphotos_photos) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1916114267)
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photos
func (m *TLphotos_photos) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Photo, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Photo{}
		v0[i].Decode(dbuf)
	}
	m.Setphotos(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:photos_photosSlice
func (m *TLphotos_photosSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(352657236)
	x.Int(m.Getcount())
	x.Int(481674261)
	x.Int(int32(len(m.Getphotos())))
	for _, v := range m.Getphotos() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photosSlice
func (m *TLphotos_photosSlice) Decode(dbuf *DecodeBuf) error {
	m.Setcount(dbuf.Int())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Photo, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Photo{}
		v1[i].Decode(dbuf)
	}
	m.Setphotos(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:messageInteractionCounters
func (m *TLmessageInteractionCounters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1387279939)
	x.Int(m.Getmsg_id())
	x.Int(m.Getviews())
	x.Int(m.Getforwards())
	return x.Buf
}

// CodecDecode:messageInteractionCounters
func (m *TLmessageInteractionCounters) Decode(dbuf *DecodeBuf) error {
	m.Setmsg_id(dbuf.Int())
	m.Setviews(dbuf.Int())
	m.Setforwards(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:nearestDc
func (m *TLnearestDc) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1910892683)
	x.String(m.Getcountry())
	x.Int(m.Getthis_dc())
	x.Int(m.Getnearest_dc())
	return x.Buf
}

// CodecDecode:nearestDc
func (m *TLnearestDc) Decode(dbuf *DecodeBuf) error {
	m.Setcountry(dbuf.String())
	m.Setthis_dc(dbuf.Int())
	m.Setnearest_dc(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatInviteEmpty
func (m *TLchatInviteEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1776236393)
	return x.Buf
}

// CodecDecode:chatInviteEmpty
func (m *TLchatInviteEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:chatInviteExported
func (m *TLchatInviteExported) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-64092740)
	x.String(m.Getlink())
	return x.Buf
}

// CodecDecode:chatInviteExported
func (m *TLchatInviteExported) Decode(dbuf *DecodeBuf) error {
	m.Setlink(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_chatFull
func (m *TLmessages_chatFull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-438840932)
	x.Bytes(m.Getfull_chat().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_chatFull
func (m *TLmessages_chatFull) Decode(dbuf *DecodeBuf) error {
	m0 := &ChatFull{}
	m0.Decode(dbuf)
	m.Setfull_chat(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:peerSettings
func (m *TLpeerSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1933519201)
	var flags uint32 = 0
	if m.Getreport_spam() != false {
		flags |= 1 << 0
	}
	if m.Getadd_contact() != false {
		flags |= 1 << 1
	}
	if m.Getblock_contact() != false {
		flags |= 1 << 2
	}
	if m.Getshare_contact() != false {
		flags |= 1 << 3
	}
	if m.Getneed_contacts_exception() != false {
		flags |= 1 << 4
	}
	if m.Getreport_geo() != false {
		flags |= 1 << 5
	}
	if m.Getautoarchived() != false {
		flags |= 1 << 7
	}
	if m.Getgeo_distance() != 0 {
		flags |= 1 << 6
	}
	x.UInt(flags)
	if m.Getgeo_distance() != 0 {
		x.Int(m.Getgeo_distance())
	}
	return x.Buf
}

// CodecDecode:peerSettings
func (m *TLpeerSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setreport_spam(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setadd_contact(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setblock_contact(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setshare_contact(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setneed_contacts_exception(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setreport_geo(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setautoarchived(true)
	}
	if (flags & (1 << 6)) != 0 {
		m.Setgeo_distance(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:null
func (m *TLnull) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1450380236)
	return x.Buf
}

// CodecDecode:null
func (m *TLnull) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:botInfo
func (m *TLbotInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1729618630)
	x.Int(m.Getuser_id())
	x.String(m.Getdescription())
	x.Int(481674261)
	x.Int(int32(len(m.Getcommands())))
	for _, v := range m.Getcommands() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:botInfo
func (m *TLbotInfo) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdescription(dbuf.String())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*BotCommand, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &BotCommand{}
		v2[i].Decode(dbuf)
	}
	m.Setcommands(v2)
	return dbuf.Err
}

// CodecEncode:channelParticipantsRecent
func (m *TLchannelParticipantsRecent) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-566281095)
	return x.Buf
}

// CodecDecode:channelParticipantsRecent
func (m *TLchannelParticipantsRecent) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelParticipantsAdmins
func (m *TLchannelParticipantsAdmins) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1268741783)
	return x.Buf
}

// CodecDecode:channelParticipantsAdmins
func (m *TLchannelParticipantsAdmins) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelParticipantsKicked
func (m *TLchannelParticipantsKicked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1548400251)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsKicked
func (m *TLchannelParticipantsKicked) Decode(dbuf *DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelParticipantsBots
func (m *TLchannelParticipantsBots) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1328445861)
	return x.Buf
}

// CodecDecode:channelParticipantsBots
func (m *TLchannelParticipantsBots) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:channelParticipantsBanned
func (m *TLchannelParticipantsBanned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(338142689)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsBanned
func (m *TLchannelParticipantsBanned) Decode(dbuf *DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelParticipantsSearch
func (m *TLchannelParticipantsSearch) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(106343499)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsSearch
func (m *TLchannelParticipantsSearch) Decode(dbuf *DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelParticipantsContacts
func (m *TLchannelParticipantsContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1150621555)
	x.String(m.Getq())
	return x.Buf
}

// CodecDecode:channelParticipantsContacts
func (m *TLchannelParticipantsContacts) Decode(dbuf *DecodeBuf) error {
	m.Setq(dbuf.String())
	return dbuf.Err
}

// CodecEncode:channelParticipantsMentions
func (m *TLchannelParticipantsMentions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-531931925)
	var flags uint32 = 0
	if m.Getq() != "" {
		flags |= 1 << 0
	}
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getq() != "" {
		x.String(m.Getq())
	}
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	return x.Buf
}

// CodecDecode:channelParticipantsMentions
func (m *TLchannelParticipantsMentions) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setq(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:messages_messageViews
func (m *TLmessages_messageViews) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1228606141)
	x.Int(481674261)
	x.Int(int32(len(m.Getviews())))
	for _, v := range m.Getviews() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_messageViews
func (m *TLmessages_messageViews) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*MessageViews, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &MessageViews{}
		v0[i].Decode(dbuf)
	}
	m.Setviews(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Chat, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Chat{}
		v1[i].Decode(dbuf)
	}
	m.Setchats(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*User, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &User{}
		v2[i].Decode(dbuf)
	}
	m.Setusers(v2)
	return dbuf.Err
}

// CodecEncode:chatInviteAlready
func (m *TLchatInviteAlready) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1516793212)
	x.Bytes(m.Getchat().Encode())
	return x.Buf
}

// CodecDecode:chatInviteAlready
func (m *TLchatInviteAlready) Decode(dbuf *DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	return dbuf.Err
}

// CodecEncode:chatInvite
func (m *TLchatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-540871282)
	var flags uint32 = 0
	if m.Getchannel() != false {
		flags |= 1 << 0
	}
	if m.Getbroadcast() != false {
		flags |= 1 << 1
	}
	if m.Getpublic() != false {
		flags |= 1 << 2
	}
	if m.Getmegagroup() != false {
		flags |= 1 << 3
	}
	if len(m.Getparticipants()) > 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	x.String(m.Gettitle())
	x.Bytes(m.Getphoto().Encode())
	x.Int(m.Getparticipants_count())
	if len(m.Getparticipants()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getparticipants())))
		for _, v := range m.Getparticipants() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:chatInvite
func (m *TLchatInvite) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchannel(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setbroadcast(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setpublic(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setmegagroup(true)
	}
	m.Settitle(dbuf.String())
	m5 := &Photo{}
	m5.Decode(dbuf)
	m.Setphoto(m5)
	m.Setparticipants_count(dbuf.Int())
	if (flags & (1 << 4)) != 0 {
		c7 := dbuf.Int()
		if c7 != 481674261 {
			return dbuf.Err
		}
		l7 := dbuf.Int()
		v7 := make([]*User, l7)
		for i := int32(0); i < l7; i++ {
			v7[i] = &User{}
			v7[i].Decode(dbuf)
		}
		m.Setparticipants(v7)
	}
	return dbuf.Err
}

// CodecEncode:chatInvitePeek
func (m *TLchatInvitePeek) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1634294960)
	x.Bytes(m.Getchat().Encode())
	x.Int(m.Getexpires())
	return x.Buf
}

// CodecDecode:chatInvitePeek
func (m *TLchatInvitePeek) Decode(dbuf *DecodeBuf) error {
	m0 := &Chat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	m.Setexpires(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:chatOnlines
func (m *TLchatOnlines) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-264117680)
	x.Int(m.Getonlines())
	return x.Buf
}

// CodecDecode:chatOnlines
func (m *TLchatOnlines) Decode(dbuf *DecodeBuf) error {
	m.Setonlines(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updates_differenceEmpty
func (m *TLupdates_differenceEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1567990072)
	x.Int(m.Getdate())
	x.Int(m.Getseq())
	return x.Buf
}

// CodecDecode:updates_differenceEmpty
func (m *TLupdates_differenceEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setdate(dbuf.Int())
	m.Setseq(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updates_difference
func (m *TLupdates_difference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(16030880)
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_encrypted_messages())))
	for _, v := range m.Getnew_encrypted_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getstate().Encode())
	return x.Buf
}

// CodecDecode:updates_difference
func (m *TLupdates_difference) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Message{}
		v0[i].Decode(dbuf)
	}
	m.Setnew_messages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*EncryptedMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &EncryptedMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setnew_encrypted_messages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Update, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Update{}
		v2[i].Decode(dbuf)
	}
	m.Setother_updates(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	m5 := &updates_State{}
	m5.Decode(dbuf)
	m.Setstate(m5)
	return dbuf.Err
}

// CodecEncode:updates_differenceSlice
func (m *TLupdates_differenceSlice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1459938943)
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_encrypted_messages())))
	for _, v := range m.Getnew_encrypted_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Bytes(m.Getintermediate_state().Encode())
	return x.Buf
}

// CodecDecode:updates_differenceSlice
func (m *TLupdates_differenceSlice) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*Message, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &Message{}
		v0[i].Decode(dbuf)
	}
	m.Setnew_messages(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*EncryptedMessage, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &EncryptedMessage{}
		v1[i].Decode(dbuf)
	}
	m.Setnew_encrypted_messages(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Update, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Update{}
		v2[i].Decode(dbuf)
	}
	m.Setother_updates(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Chat, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Chat{}
		v3[i].Decode(dbuf)
	}
	m.Setchats(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*User, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &User{}
		v4[i].Decode(dbuf)
	}
	m.Setusers(v4)
	m5 := &updates_State{}
	m5.Decode(dbuf)
	m.Setintermediate_state(m5)
	return dbuf.Err
}

// CodecEncode:updates_differenceTooLong
func (m *TLupdates_differenceTooLong) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1258196845)
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:updates_differenceTooLong
func (m *TLupdates_differenceTooLong) Decode(dbuf *DecodeBuf) error {
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:topPeerCategoryBotsPM
func (m *TLtopPeerCategoryBotsPM) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1419371685)
	return x.Buf
}

// CodecDecode:topPeerCategoryBotsPM
func (m *TLtopPeerCategoryBotsPM) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryBotsInline
func (m *TLtopPeerCategoryBotsInline) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(344356834)
	return x.Buf
}

// CodecDecode:topPeerCategoryBotsInline
func (m *TLtopPeerCategoryBotsInline) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryCorrespondents
func (m *TLtopPeerCategoryCorrespondents) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(104314861)
	return x.Buf
}

// CodecDecode:topPeerCategoryCorrespondents
func (m *TLtopPeerCategoryCorrespondents) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryGroups
func (m *TLtopPeerCategoryGroups) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1122524854)
	return x.Buf
}

// CodecDecode:topPeerCategoryGroups
func (m *TLtopPeerCategoryGroups) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryChannels
func (m *TLtopPeerCategoryChannels) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(371037736)
	return x.Buf
}

// CodecDecode:topPeerCategoryChannels
func (m *TLtopPeerCategoryChannels) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryPhoneCalls
func (m *TLtopPeerCategoryPhoneCalls) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(511092620)
	return x.Buf
}

// CodecDecode:topPeerCategoryPhoneCalls
func (m *TLtopPeerCategoryPhoneCalls) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryForwardUsers
func (m *TLtopPeerCategoryForwardUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1472172887)
	return x.Buf
}

// CodecDecode:topPeerCategoryForwardUsers
func (m *TLtopPeerCategoryForwardUsers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:topPeerCategoryForwardChats
func (m *TLtopPeerCategoryForwardChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-68239120)
	return x.Buf
}

// CodecDecode:topPeerCategoryForwardChats
func (m *TLtopPeerCategoryForwardChats) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:replyKeyboardHide
func (m *TLreplyKeyboardHide) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1606526075)
	var flags uint32 = 0
	if m.Getselective() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:replyKeyboardHide
func (m *TLreplyKeyboardHide) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 2)) != 0 {
		m.Setselective(true)
	}
	return dbuf.Err
}

// CodecEncode:replyKeyboardForceReply
func (m *TLreplyKeyboardForceReply) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-200242528)
	var flags uint32 = 0
	if m.Getsingle_use() != false {
		flags |= 1 << 1
	}
	if m.Getselective() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:replyKeyboardForceReply
func (m *TLreplyKeyboardForceReply) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setsingle_use(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setselective(true)
	}
	return dbuf.Err
}

// CodecEncode:replyKeyboardMarkup
func (m *TLreplyKeyboardMarkup) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(889353612)
	var flags uint32 = 0
	if m.Getresize() != false {
		flags |= 1 << 0
	}
	if m.Getsingle_use() != false {
		flags |= 1 << 1
	}
	if m.Getselective() != false {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:replyKeyboardMarkup
func (m *TLreplyKeyboardMarkup) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setresize(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setsingle_use(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setselective(true)
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*KeyboardButtonRow, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &KeyboardButtonRow{}
		v3[i].Decode(dbuf)
	}
	m.Setrows(v3)
	return dbuf.Err
}

// CodecEncode:replyInlineMarkup
func (m *TLreplyInlineMarkup) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1218642516)
	x.Int(481674261)
	x.Int(int32(len(m.Getrows())))
	for _, v := range m.Getrows() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:replyInlineMarkup
func (m *TLreplyInlineMarkup) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*KeyboardButtonRow, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &KeyboardButtonRow{}
		v0[i].Decode(dbuf)
	}
	m.Setrows(v0)
	return dbuf.Err
}

// CodecEncode:inputFolderPeer
func (m *TLinputFolderPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-70073706)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getfolder_id())
	return x.Buf
}

// CodecDecode:inputFolderPeer
func (m *TLinputFolderPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setfolder_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:statsGroupTopAdmin
func (m *TLstatsGroupTopAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1611985938)
	x.Int(m.Getuser_id())
	x.Int(m.Getdeleted())
	x.Int(m.Getkicked())
	x.Int(m.Getbanned())
	return x.Buf
}

// CodecDecode:statsGroupTopAdmin
func (m *TLstatsGroupTopAdmin) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdeleted(dbuf.Int())
	m.Setkicked(dbuf.Int())
	m.Setbanned(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:wallPaper
func (m *TLwallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1539849235)
	var flags uint32 = 0
	if m.Getcreator() != false {
		flags |= 1 << 0
	}
	if m.Getdefault_key() != false {
		flags |= 1 << 1
	}
	if m.Getpattern() != false {
		flags |= 1 << 3
	}
	if m.Getdark() != false {
		flags |= 1 << 4
	}
	if m.Getsettings() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.String(m.Getslug())
	x.Bytes(m.Getdocument().Encode())
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:wallPaper
func (m *TLwallPaper) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setcreator(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setdefault_key(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setpattern(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setdark(true)
	}
	m.Setaccess_hash(dbuf.Long())
	m.Setslug(dbuf.String())
	m7 := &Document{}
	m7.Decode(dbuf)
	m.Setdocument(m7)
	if (flags & (1 << 2)) != 0 {
		m8 := &WallPaperSettings{}
		m8.Decode(dbuf)
		m.Setsettings(m8)
	}
	return dbuf.Err
}

// CodecEncode:wallPaperNoFile
func (m *TLwallPaperNoFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1963717851)
	var flags uint32 = 0
	if m.Getdefault_key() != false {
		flags |= 1 << 1
	}
	if m.Getdark() != false {
		flags |= 1 << 4
	}
	if m.Getsettings() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getsettings() != nil {
		x.Bytes(m.Getsettings().Encode())
	}
	return x.Buf
}

// CodecDecode:wallPaperNoFile
func (m *TLwallPaperNoFile) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setdefault_key(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setdark(true)
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &WallPaperSettings{}
		m2.Decode(dbuf)
		m.Setsettings(m2)
	}
	return dbuf.Err
}

// CodecEncode:messages_searchCounter
func (m *TLmessages_searchCounter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-398136321)
	var flags uint32 = 0
	if m.Getinexact() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Bytes(m.Getfilter().Encode())
	x.Int(m.Getcount())
	return x.Buf
}

// CodecDecode:messages_searchCounter
func (m *TLmessages_searchCounter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setinexact(true)
	}
	m1 := &MessagesFilter{}
	m1.Decode(dbuf)
	m.Setfilter(m1)
	m.Setcount(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updates_channelDifferenceEmpty
func (m *TLupdates_channelDifferenceEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1041346555)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 1 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	return x.Buf
}

// CodecDecode:updates_channelDifferenceEmpty
func (m *TLupdates_channelDifferenceEmpty) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	m.Setpts(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:updates_channelDifferenceTooLong
func (m *TLupdates_channelDifferenceTooLong) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1531132162)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 1 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	x.Bytes(m.Getdialog().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getmessages())))
	for _, v := range m.Getmessages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updates_channelDifferenceTooLong
func (m *TLupdates_channelDifferenceTooLong) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	m2 := &Dialog{}
	m2.Decode(dbuf)
	m.Setdialog(m2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Message, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Message{}
		v3[i].Decode(dbuf)
	}
	m.Setmessages(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*Chat, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &Chat{}
		v4[i].Decode(dbuf)
	}
	m.Setchats(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*User, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &User{}
		v5[i].Decode(dbuf)
	}
	m.Setusers(v5)
	return dbuf.Err
}

// CodecEncode:updates_channelDifference
func (m *TLupdates_channelDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(543450958)
	var flags uint32 = 0
	if m.Getfinal() != false {
		flags |= 1 << 0
	}
	if m.Gettimeout() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getpts())
	if m.Gettimeout() != 0 {
		x.Int(m.Gettimeout())
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getnew_messages())))
	for _, v := range m.Getnew_messages() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getother_updates())))
	for _, v := range m.Getother_updates() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getchats())))
	for _, v := range m.Getchats() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updates_channelDifference
func (m *TLupdates_channelDifference) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfinal(true)
	}
	m.Setpts(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		m.Settimeout(dbuf.Int())
	}
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*Message, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &Message{}
		v3[i].Decode(dbuf)
	}
	m.Setnew_messages(v3)
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*Update, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &Update{}
		v4[i].Decode(dbuf)
	}
	m.Setother_updates(v4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*Chat, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &Chat{}
		v5[i].Decode(dbuf)
	}
	m.Setchats(v5)
	c6 := dbuf.Int()
	if c6 != 481674261 {
		return dbuf.Err
	}
	l6 := dbuf.Int()
	v6 := make([]*User, l6)
	for i := int32(0); i < l6; i++ {
		v6[i] = &User{}
		v6[i].Decode(dbuf)
	}
	m.Setusers(v6)
	return dbuf.Err
}

// CodecEncode:inputGameID
func (m *TLinputGameID) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(53231223)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputGameID
func (m *TLinputGameID) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputGameShortName
func (m *TLinputGameShortName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1020139510)
	x.Bytes(m.Getbot_id().Encode())
	x.String(m.Getshort_name())
	return x.Buf
}

// CodecDecode:inputGameShortName
func (m *TLinputGameShortName) Decode(dbuf *DecodeBuf) error {
	m0 := &InputUser{}
	m0.Decode(dbuf)
	m.Setbot_id(m0)
	m.Setshort_name(dbuf.String())
	return dbuf.Err
}

// CodecEncode:privacyValueAllowContacts
func (m *TLprivacyValueAllowContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-123988)
	return x.Buf
}

// CodecDecode:privacyValueAllowContacts
func (m *TLprivacyValueAllowContacts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyValueAllowAll
func (m *TLprivacyValueAllowAll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1698855810)
	return x.Buf
}

// CodecDecode:privacyValueAllowAll
func (m *TLprivacyValueAllowAll) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyValueAllowUsers
func (m *TLprivacyValueAllowUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1297858060)
	x.VectorInt(m.Getusers())
	return x.Buf
}

// CodecDecode:privacyValueAllowUsers
func (m *TLprivacyValueAllowUsers) Decode(dbuf *DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:privacyValueDisallowContacts
func (m *TLprivacyValueDisallowContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-125240806)
	return x.Buf
}

// CodecDecode:privacyValueDisallowContacts
func (m *TLprivacyValueDisallowContacts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyValueDisallowAll
func (m *TLprivacyValueDisallowAll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1955338397)
	return x.Buf
}

// CodecDecode:privacyValueDisallowAll
func (m *TLprivacyValueDisallowAll) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyValueDisallowUsers
func (m *TLprivacyValueDisallowUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(209668535)
	x.VectorInt(m.Getusers())
	return x.Buf
}

// CodecDecode:privacyValueDisallowUsers
func (m *TLprivacyValueDisallowUsers) Decode(dbuf *DecodeBuf) error {
	m.Setusers(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:privacyValueAllowChatParticipants
func (m *TLprivacyValueAllowChatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(415136107)
	x.VectorInt(m.Getchats())
	return x.Buf
}

// CodecDecode:privacyValueAllowChatParticipants
func (m *TLprivacyValueAllowChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:privacyValueDisallowChatParticipants
func (m *TLprivacyValueDisallowChatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1397881200)
	x.VectorInt(m.Getchats())
	return x.Buf
}

// CodecDecode:privacyValueDisallowChatParticipants
func (m *TLprivacyValueDisallowChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.Setchats(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:inputNotifyPeer
func (m *TLinputNotifyPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1195615476)
	x.Bytes(m.Getpeer().Encode())
	return x.Buf
}

// CodecDecode:inputNotifyPeer
func (m *TLinputNotifyPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	return dbuf.Err
}

// CodecEncode:inputNotifyUsers
func (m *TLinputNotifyUsers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(423314455)
	return x.Buf
}

// CodecDecode:inputNotifyUsers
func (m *TLinputNotifyUsers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputNotifyChats
func (m *TLinputNotifyChats) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1251338318)
	return x.Buf
}

// CodecDecode:inputNotifyChats
func (m *TLinputNotifyChats) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputNotifyBroadcasts
func (m *TLinputNotifyBroadcasts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1311015810)
	return x.Buf
}

// CodecDecode:inputNotifyBroadcasts
func (m *TLinputNotifyBroadcasts) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messageReplies
func (m *TLmessageReplies) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1093204652)
	var flags uint32 = 0
	if m.Getcomments() != false {
		flags |= 1 << 0
	}
	if len(m.Getrecent_repliers()) > 0 {
		flags |= 1 << 1
	}
	if m.Getchannel_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getmax_id() != 0 {
		flags |= 1 << 2
	}
	if m.Getread_max_id() != 0 {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Int(m.Getreplies())
	x.Int(m.Getreplies_pts())
	if len(m.Getrecent_repliers()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getrecent_repliers())))
		for _, v := range m.Getrecent_repliers() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getchannel_id() != 0 {
		x.Int(m.Getchannel_id())
	}
	if m.Getmax_id() != 0 {
		x.Int(m.Getmax_id())
	}
	if m.Getread_max_id() != 0 {
		x.Int(m.Getread_max_id())
	}
	return x.Buf
}

// CodecDecode:messageReplies
func (m *TLmessageReplies) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setcomments(true)
	}
	m.Setreplies(dbuf.Int())
	m.Setreplies_pts(dbuf.Int())
	if (flags & (1 << 1)) != 0 {
		c3 := dbuf.Int()
		if c3 != 481674261 {
			return dbuf.Err
		}
		l3 := dbuf.Int()
		v3 := make([]*Peer, l3)
		for i := int32(0); i < l3; i++ {
			v3[i] = &Peer{}
			v3[i].Decode(dbuf)
		}
		m.Setrecent_repliers(v3)
	}
	if (flags & (1 << 0)) != 0 {
		m.Setchannel_id(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m.Setmax_id(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setread_max_id(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:privacyKeyStatusTimestamp
func (m *TLprivacyKeyStatusTimestamp) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1137792208)
	return x.Buf
}

// CodecDecode:privacyKeyStatusTimestamp
func (m *TLprivacyKeyStatusTimestamp) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyChatInvite
func (m *TLprivacyKeyChatInvite) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1343122938)
	return x.Buf
}

// CodecDecode:privacyKeyChatInvite
func (m *TLprivacyKeyChatInvite) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyPhoneCall
func (m *TLprivacyKeyPhoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1030105979)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneCall
func (m *TLprivacyKeyPhoneCall) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyPhoneP2P
func (m *TLprivacyKeyPhoneP2P) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(961092808)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneP2P
func (m *TLprivacyKeyPhoneP2P) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyForwards
func (m *TLprivacyKeyForwards) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1777096355)
	return x.Buf
}

// CodecDecode:privacyKeyForwards
func (m *TLprivacyKeyForwards) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyProfilePhoto
func (m *TLprivacyKeyProfilePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1777000467)
	return x.Buf
}

// CodecDecode:privacyKeyProfilePhoto
func (m *TLprivacyKeyProfilePhoto) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyPhoneNumber
func (m *TLprivacyKeyPhoneNumber) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-778378131)
	return x.Buf
}

// CodecDecode:privacyKeyPhoneNumber
func (m *TLprivacyKeyPhoneNumber) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:privacyKeyAddedByPhone
func (m *TLprivacyKeyAddedByPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1124062251)
	return x.Buf
}

// CodecDecode:privacyKeyAddedByPhone
func (m *TLprivacyKeyAddedByPhone) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_support
func (m *TLhelp_support) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(398898678)
	x.String(m.Getphone_number())
	x.Bytes(m.Getuser().Encode())
	return x.Buf
}

// CodecDecode:help_support
func (m *TLhelp_support) Decode(dbuf *DecodeBuf) error {
	m.Setphone_number(dbuf.String())
	m1 := &User{}
	m1.Decode(dbuf)
	m.Setuser(m1)
	return dbuf.Err
}

// CodecEncode:topPeer
func (m *TLtopPeer) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-305282981)
	x.Bytes(m.Getpeer().Encode())
	x.Double(m.Getrating())
	return x.Buf
}

// CodecDecode:topPeer
func (m *TLtopPeer) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setrating(dbuf.Double())
	return dbuf.Err
}

// CodecEncode:help_supportName
func (m *TLhelp_supportName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1945767479)
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:help_supportName
func (m *TLhelp_supportName) Decode(dbuf *DecodeBuf) error {
	m.Setname(dbuf.String())
	return dbuf.Err
}

// CodecEncode:photoSizeEmpty
func (m *TLphotoSizeEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(236446268)
	x.String(m.Gettype_key())
	return x.Buf
}

// CodecDecode:photoSizeEmpty
func (m *TLphotoSizeEmpty) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	return dbuf.Err
}

// CodecEncode:photoSize
func (m *TLphotoSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2009052699)
	x.String(m.Gettype_key())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getsize())
	return x.Buf
}

// CodecDecode:photoSize
func (m *TLphotoSize) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsize(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:photoCachedSize
func (m *TLphotoCachedSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-374917894)
	x.String(m.Gettype_key())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoCachedSize
func (m *TLphotoCachedSize) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:photoStrippedSize
func (m *TLphotoStrippedSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-525288402)
	x.String(m.Gettype_key())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoStrippedSize
func (m *TLphotoStrippedSize) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:photoSizeProgressive
func (m *TLphotoSizeProgressive) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1520986705)
	x.String(m.Gettype_key())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.VectorInt(m.Getsizes())
	return x.Buf
}

// CodecDecode:photoSizeProgressive
func (m *TLphotoSizeProgressive) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsizes(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:photoPathSize
func (m *TLphotoPathSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-668906175)
	x.String(m.Gettype_key())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:photoPathSize
func (m *TLphotoPathSize) Decode(dbuf *DecodeBuf) error {
	m.Settype_key(dbuf.String())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:inputSecureValue
func (m *TLinputSecureValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-618540889)
	var flags uint32 = 0
	if m.Getdata() != nil {
		flags |= 1 << 0
	}
	if m.Getfront_side() != nil {
		flags |= 1 << 1
	}
	if m.Getreverse_side() != nil {
		flags |= 1 << 2
	}
	if m.Getselfie() != nil {
		flags |= 1 << 3
	}
	if len(m.Gettranslation()) > 0 {
		flags |= 1 << 6
	}
	if len(m.Getfiles()) > 0 {
		flags |= 1 << 4
	}
	if m.Getplain_data() != nil {
		flags |= 1 << 5
	}
	x.UInt(flags)
	x.Bytes(m.Gettype_key().Encode())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata().Encode())
	}
	if m.Getfront_side() != nil {
		x.Bytes(m.Getfront_side().Encode())
	}
	if m.Getreverse_side() != nil {
		x.Bytes(m.Getreverse_side().Encode())
	}
	if m.Getselfie() != nil {
		x.Bytes(m.Getselfie().Encode())
	}
	if len(m.Gettranslation()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Gettranslation())))
		for _, v := range m.Gettranslation() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if len(m.Getfiles()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getfiles())))
		for _, v := range m.Getfiles() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Getplain_data() != nil {
		x.Bytes(m.Getplain_data().Encode())
	}
	return x.Buf
}

// CodecDecode:inputSecureValue
func (m *TLinputSecureValue) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &SecureValueType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	if (flags & (1 << 0)) != 0 {
		m1 := &SecureData{}
		m1.Decode(dbuf)
		m.Setdata(m1)
	}
	if (flags & (1 << 1)) != 0 {
		m2 := &InputSecureFile{}
		m2.Decode(dbuf)
		m.Setfront_side(m2)
	}
	if (flags & (1 << 2)) != 0 {
		m3 := &InputSecureFile{}
		m3.Decode(dbuf)
		m.Setreverse_side(m3)
	}
	if (flags & (1 << 3)) != 0 {
		m4 := &InputSecureFile{}
		m4.Decode(dbuf)
		m.Setselfie(m4)
	}
	if (flags & (1 << 6)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]*InputSecureFile, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &InputSecureFile{}
			v5[i].Decode(dbuf)
		}
		m.Settranslation(v5)
	}
	if (flags & (1 << 4)) != 0 {
		c6 := dbuf.Int()
		if c6 != 481674261 {
			return dbuf.Err
		}
		l6 := dbuf.Int()
		v6 := make([]*InputSecureFile, l6)
		for i := int32(0); i < l6; i++ {
			v6[i] = &InputSecureFile{}
			v6[i].Decode(dbuf)
		}
		m.Setfiles(v6)
	}
	if (flags & (1 << 5)) != 0 {
		m7 := &SecurePlainData{}
		m7.Decode(dbuf)
		m.Setplain_data(m7)
	}
	return dbuf.Err
}

// CodecEncode:langPackDifference
func (m *TLlangPackDifference) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-209337866)
	x.String(m.Getlang_code())
	x.Int(m.Getfrom_version())
	x.Int(m.Getversion())
	x.Int(481674261)
	x.Int(int32(len(m.Getstrings())))
	for _, v := range m.Getstrings() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:langPackDifference
func (m *TLlangPackDifference) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	m.Setfrom_version(dbuf.Int())
	m.Setversion(dbuf.Int())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*LangPackString, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &LangPackString{}
		v3[i].Decode(dbuf)
	}
	m.Setstrings(v3)
	return dbuf.Err
}

// CodecEncode:fileLocationToBeDeprecated
func (m *TLfileLocationToBeDeprecated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1132476723)
	x.Long(m.Getvolume_id())
	x.Int(m.Getlocal_id())
	return x.Buf
}

// CodecDecode:fileLocationToBeDeprecated
func (m *TLfileLocationToBeDeprecated) Decode(dbuf *DecodeBuf) error {
	m.Setvolume_id(dbuf.Long())
	m.Setlocal_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:phoneConnection
func (m *TLphoneConnection) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1655957568)
	x.Long(m.Getid())
	x.String(m.Getip())
	x.String(m.Getipv6())
	x.Int(m.Getport())
	x.Bytes(m.Getpeer_tag())
	return x.Buf
}

// CodecDecode:phoneConnection
func (m *TLphoneConnection) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setip(dbuf.String())
	m.Setipv6(dbuf.String())
	m.Setport(dbuf.Int())
	m.Setpeer_tag(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:phoneConnectionWebrtc
func (m *TLphoneConnectionWebrtc) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1667228533)
	var flags uint32 = 0
	if m.Getturn() != false {
		flags |= 1 << 0
	}
	if m.Getstun() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getid())
	x.String(m.Getip())
	x.String(m.Getipv6())
	x.Int(m.Getport())
	x.String(m.Getusername())
	x.String(m.Getpassword())
	return x.Buf
}

// CodecDecode:phoneConnectionWebrtc
func (m *TLphoneConnectionWebrtc) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setturn(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setstun(true)
	}
	m.Setid(dbuf.Long())
	m.Setip(dbuf.String())
	m.Setipv6(dbuf.String())
	m.Setport(dbuf.Int())
	m.Setusername(dbuf.String())
	m.Setpassword(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputUserEmpty
func (m *TLinputUserEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1182234929)
	return x.Buf
}

// CodecDecode:inputUserEmpty
func (m *TLinputUserEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputUserSelf
func (m *TLinputUserSelf) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-138301121)
	return x.Buf
}

// CodecDecode:inputUserSelf
func (m *TLinputUserSelf) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputUser
func (m *TLinputUser) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-668391402)
	x.Int(m.Getuser_id())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputUser
func (m *TLinputUser) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputUserFromMessage
func (m *TLinputUserFromMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(756118935)
	x.Bytes(m.Getpeer().Encode())
	x.Int(m.Getmsg_id())
	x.Int(m.Getuser_id())
	return x.Buf
}

// CodecDecode:inputUserFromMessage
func (m *TLinputUserFromMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m.Setmsg_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputFile
func (m *TLinputFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-181407105)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getname())
	x.String(m.Getmd5_checksum())
	return x.Buf
}

// CodecDecode:inputFile
func (m *TLinputFile) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setname(dbuf.String())
	m.Setmd5_checksum(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputFileBig
func (m *TLinputFileBig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-95482955)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:inputFileBig
func (m *TLinputFileBig) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setname(dbuf.String())
	return dbuf.Err
}

// CodecEncode:videoSize
func (m *TLvideoSize) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-399391402)
	var flags uint32 = 0
	if m.Getvideo_start_ts() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.String(m.Gettype_key())
	x.Bytes(m.Getlocation().Encode())
	x.Int(m.Getw())
	x.Int(m.Geth())
	x.Int(m.Getsize())
	if m.Getvideo_start_ts() != 0 {
		x.Double(m.Getvideo_start_ts())
	}
	return x.Buf
}

// CodecDecode:videoSize
func (m *TLvideoSize) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Settype_key(dbuf.String())
	m1 := &FileLocation{}
	m1.Decode(dbuf)
	m.Setlocation(m1)
	m.Setw(dbuf.Int())
	m.Seth(dbuf.Int())
	m.Setsize(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}

// CodecEncode:account_takeout
func (m *TLaccount_takeout) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1304052993)
	x.Long(m.Getid())
	return x.Buf
}

// CodecDecode:account_takeout
func (m *TLaccount_takeout) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:upload_file
func (m *TLupload_file) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(157948117)
	x.Bytes(m.Gettype_key().Encode())
	x.Int(m.Getmtime())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_file
func (m *TLupload_file) Decode(dbuf *DecodeBuf) error {
	m0 := &storage_FileType{}
	m0.Decode(dbuf)
	m.Settype_key(m0)
	m.Setmtime(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:upload_fileCdnRedirect
func (m *TLupload_fileCdnRedirect) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-242427324)
	x.Int(m.Getdc_id())
	x.Bytes(m.Getfile_token())
	x.Bytes(m.Getencryption_key())
	x.Bytes(m.Getencryption_iv())
	x.Int(481674261)
	x.Int(int32(len(m.Getfile_hashes())))
	for _, v := range m.Getfile_hashes() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:upload_fileCdnRedirect
func (m *TLupload_fileCdnRedirect) Decode(dbuf *DecodeBuf) error {
	m.Setdc_id(dbuf.Int())
	m.Setfile_token(dbuf.StringBytes())
	m.Setencryption_key(dbuf.StringBytes())
	m.Setencryption_iv(dbuf.StringBytes())
	c4 := dbuf.Int()
	if c4 != 481674261 {
		return dbuf.Err
	}
	l4 := dbuf.Int()
	v4 := make([]*FileHash, l4)
	for i := int32(0); i < l4; i++ {
		v4[i] = &FileHash{}
		v4[i].Decode(dbuf)
	}
	m.Setfile_hashes(v4)
	return dbuf.Err
}

// CodecEncode:peerBlocked
func (m *TLpeerBlocked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-386039788)
	x.Bytes(m.Getpeer_id().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:peerBlocked
func (m *TLpeerBlocked) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_id(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:upload_cdnFileReuploadNeeded
func (m *TLupload_cdnFileReuploadNeeded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-290921362)
	x.Bytes(m.Getrequest_token())
	return x.Buf
}

// CodecDecode:upload_cdnFileReuploadNeeded
func (m *TLupload_cdnFileReuploadNeeded) Decode(dbuf *DecodeBuf) error {
	m.Setrequest_token(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:upload_cdnFile
func (m *TLupload_cdnFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1449145777)
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:upload_cdnFile
func (m *TLupload_cdnFile) Decode(dbuf *DecodeBuf) error {
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:phone_phoneCall
func (m *TLphone_phoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-326966976)
	x.Bytes(m.Getphone_call().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:phone_phoneCall
func (m *TLphone_phoneCall) Decode(dbuf *DecodeBuf) error {
	m0 := &PhoneCall{}
	m0.Decode(dbuf)
	m.Setphone_call(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:securePlainPhone
func (m *TLsecurePlainPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2103482845)
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:securePlainPhone
func (m *TLsecurePlainPhone) Decode(dbuf *DecodeBuf) error {
	m.Setphone(dbuf.String())
	return dbuf.Err
}

// CodecEncode:securePlainEmail
func (m *TLsecurePlainEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(569137759)
	x.String(m.Getemail())
	return x.Buf
}

// CodecDecode:securePlainEmail
func (m *TLsecurePlainEmail) Decode(dbuf *DecodeBuf) error {
	m.Setemail(dbuf.String())
	return dbuf.Err
}

// CodecEncode:updateNewMessage
func (m *TLupdateNewMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(522914557)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateNewMessage
func (m *TLupdateNewMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateMessageID
func (m *TLupdateMessageID) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1318109142)
	x.Int(m.Getid())
	x.Long(m.Getrandom_id())
	return x.Buf
}

// CodecDecode:updateMessageID
func (m *TLupdateMessageID) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setrandom_id(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:updateDeleteMessages
func (m *TLupdateDeleteMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1576161051)
	x.VectorInt(m.Getmessages())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateDeleteMessages
func (m *TLupdateDeleteMessages) Decode(dbuf *DecodeBuf) error {
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateUserTyping
func (m *TLupdateUserTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1548249383)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateUserTyping
func (m *TLupdateUserTyping) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &SendMessageAction{}
	m1.Decode(dbuf)
	m.Setaction(m1)
	return dbuf.Err
}

// CodecEncode:updateChatUserTyping
func (m *TLupdateChatUserTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1704596961)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateChatUserTyping
func (m *TLupdateChatUserTyping) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m2 := &SendMessageAction{}
	m2.Decode(dbuf)
	m.Setaction(m2)
	return dbuf.Err
}

// CodecEncode:updateChatParticipants
func (m *TLupdateChatParticipants) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(125178264)
	x.Bytes(m.Getparticipants().Encode())
	return x.Buf
}

// CodecDecode:updateChatParticipants
func (m *TLupdateChatParticipants) Decode(dbuf *DecodeBuf) error {
	m0 := &ChatParticipants{}
	m0.Decode(dbuf)
	m.Setparticipants(m0)
	return dbuf.Err
}

// CodecEncode:updateUserStatus
func (m *TLupdateUserStatus) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(469489699)
	x.Int(m.Getuser_id())
	x.Bytes(m.Getstatus().Encode())
	return x.Buf
}

// CodecDecode:updateUserStatus
func (m *TLupdateUserStatus) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m1 := &UserStatus{}
	m1.Decode(dbuf)
	m.Setstatus(m1)
	return dbuf.Err
}

// CodecEncode:updateUserName
func (m *TLupdateUserName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1489818765)
	x.Int(m.Getuser_id())
	x.String(m.Getfirst_name())
	x.String(m.Getlast_name())
	x.String(m.Getusername())
	return x.Buf
}

// CodecDecode:updateUserName
func (m *TLupdateUserName) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setfirst_name(dbuf.String())
	m.Setlast_name(dbuf.String())
	m.Setusername(dbuf.String())
	return dbuf.Err
}

// CodecEncode:updateUserPhoto
func (m *TLupdateUserPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1791935732)
	x.Int(m.Getuser_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getphoto().Encode())
	x.Bytes(m.Getprevious().Encode())
	return x.Buf
}

// CodecDecode:updateUserPhoto
func (m *TLupdateUserPhoto) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m2 := &UserProfilePhoto{}
	m2.Decode(dbuf)
	m.Setphoto(m2)
	m3 := &Bool{}
	m3.Decode(dbuf)
	m.Setprevious(m3)
	return dbuf.Err
}

// CodecEncode:updateNewEncryptedMessage
func (m *TLupdateNewEncryptedMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(314359194)
	x.Bytes(m.Getmessage_18().Encode())
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updateNewEncryptedMessage
func (m *TLupdateNewEncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &EncryptedMessage{}
	m0.Decode(dbuf)
	m.Setmessage_18(m0)
	m.Setqts(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateEncryptedChatTyping
func (m *TLupdateEncryptedChatTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(386986326)
	x.Int(m.Getchat_id())
	return x.Buf
}

// CodecDecode:updateEncryptedChatTyping
func (m *TLupdateEncryptedChatTyping) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateEncryption
func (m *TLupdateEncryption) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1264392051)
	x.Bytes(m.Getchat().Encode())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateEncryption
func (m *TLupdateEncryption) Decode(dbuf *DecodeBuf) error {
	m0 := &EncryptedChat{}
	m0.Decode(dbuf)
	m.Setchat(m0)
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateEncryptedMessagesRead
func (m *TLupdateEncryptedMessagesRead) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(956179895)
	x.Int(m.Getchat_id())
	x.Int(m.Getmax_date())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:updateEncryptedMessagesRead
func (m *TLupdateEncryptedMessagesRead) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setmax_date(dbuf.Int())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChatParticipantAdd
func (m *TLupdateChatParticipantAdd) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-364179876)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Int(m.Getinviter_id())
	x.Int(m.Getdate())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantAdd
func (m *TLupdateChatParticipantAdd) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setinviter_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChatParticipantDelete
func (m *TLupdateChatParticipantDelete) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1851755554)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantDelete
func (m *TLupdateChatParticipantDelete) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateDcOptions
func (m *TLupdateDcOptions) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1906403213)
	x.Int(481674261)
	x.Int(int32(len(m.Getdc_options())))
	for _, v := range m.Getdc_options() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateDcOptions
func (m *TLupdateDcOptions) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*DcOption, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &DcOption{}
		v0[i].Decode(dbuf)
	}
	m.Setdc_options(v0)
	return dbuf.Err
}

// CodecEncode:updateNotifySettings
func (m *TLupdateNotifySettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1094555409)
	x.Bytes(m.Getpeer().Encode())
	x.Bytes(m.Getnotify_settings().Encode())
	return x.Buf
}

// CodecDecode:updateNotifySettings
func (m *TLupdateNotifySettings) Decode(dbuf *DecodeBuf) error {
	m0 := &NotifyPeer{}
	m0.Decode(dbuf)
	m.Setpeer(m0)
	m1 := &PeerNotifySettings{}
	m1.Decode(dbuf)
	m.Setnotify_settings(m1)
	return dbuf.Err
}

// CodecEncode:updateServiceNotification
func (m *TLupdateServiceNotification) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-337352679)
	var flags uint32 = 0
	if m.Getpopup() != false {
		flags |= 1 << 0
	}
	if m.Getinbox_date() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getinbox_date() != 0 {
		x.Int(m.Getinbox_date())
	}
	x.String(m.Gettype_key())
	x.String(m.Getmessage_30())
	x.Bytes(m.Getmedia().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updateServiceNotification
func (m *TLupdateServiceNotification) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpopup(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setinbox_date(dbuf.Int())
	}
	m.Settype_key(dbuf.String())
	m.Setmessage_30(dbuf.String())
	m4 := &MessageMedia{}
	m4.Decode(dbuf)
	m.Setmedia(m4)
	c5 := dbuf.Int()
	if c5 != 481674261 {
		return dbuf.Err
	}
	l5 := dbuf.Int()
	v5 := make([]*MessageEntity, l5)
	for i := int32(0); i < l5; i++ {
		v5[i] = &MessageEntity{}
		v5[i].Decode(dbuf)
	}
	m.Setentities(v5)
	return dbuf.Err
}

// CodecEncode:updatePrivacy
func (m *TLupdatePrivacy) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-298113238)
	x.Bytes(m.Getkey().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getrules())))
	for _, v := range m.Getrules() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updatePrivacy
func (m *TLupdatePrivacy) Decode(dbuf *DecodeBuf) error {
	m0 := &PrivacyKey{}
	m0.Decode(dbuf)
	m.Setkey(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PrivacyRule, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PrivacyRule{}
		v1[i].Decode(dbuf)
	}
	m.Setrules(v1)
	return dbuf.Err
}

// CodecEncode:updateUserPhone
func (m *TLupdateUserPhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(314130811)
	x.Int(m.Getuser_id())
	x.String(m.Getphone())
	return x.Buf
}

// CodecDecode:updateUserPhone
func (m *TLupdateUserPhone) Decode(dbuf *DecodeBuf) error {
	m.Setuser_id(dbuf.Int())
	m.Setphone(dbuf.String())
	return dbuf.Err
}

// CodecEncode:updateReadHistoryInbox
func (m *TLupdateReadHistoryInbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1667805217)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getstill_unread_count())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadHistoryInbox
func (m *TLupdateReadHistoryInbox) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setpeer_37(m1)
	m.Setmax_id(dbuf.Int())
	m.Setstill_unread_count(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateReadHistoryOutbox
func (m *TLupdateReadHistoryOutbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(791617983)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmax_id())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadHistoryOutbox
func (m *TLupdateReadHistoryOutbox) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmax_id(dbuf.Int())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateWebPage
func (m *TLupdateWebPage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2139689491)
	x.Bytes(m.Getwebpage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateWebPage
func (m *TLupdateWebPage) Decode(dbuf *DecodeBuf) error {
	m0 := &WebPage{}
	m0.Decode(dbuf)
	m.Setwebpage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateReadMessagesContents
func (m *TLupdateReadMessagesContents) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1757493555)
	x.VectorInt(m.Getmessages())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateReadMessagesContents
func (m *TLupdateReadMessagesContents) Decode(dbuf *DecodeBuf) error {
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChannelTooLong
func (m *TLupdateChannelTooLong) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-352032773)
	var flags uint32 = 0
	if m.Getpts() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	if m.Getpts() != 0 {
		x.Int(m.Getpts())
	}
	return x.Buf
}

// CodecDecode:updateChannelTooLong
func (m *TLupdateChannelTooLong) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setpts(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:updateChannel
func (m *TLupdateChannel) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1227598250)
	x.Int(m.Getchannel_id())
	return x.Buf
}

// CodecDecode:updateChannel
func (m *TLupdateChannel) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateNewChannelMessage
func (m *TLupdateNewChannelMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1656358105)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateNewChannelMessage
func (m *TLupdateNewChannelMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateReadChannelInbox
func (m *TLupdateReadChannelInbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(856380452)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getchannel_id())
	x.Int(m.Getmax_id())
	x.Int(m.Getstill_unread_count())
	x.Int(m.Getpts())
	return x.Buf
}

// CodecDecode:updateReadChannelInbox
func (m *TLupdateReadChannelInbox) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setchannel_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	m.Setstill_unread_count(dbuf.Int())
	m.Setpts(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateDeleteChannelMessages
func (m *TLupdateDeleteChannelMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1015733815)
	x.Int(m.Getchannel_id())
	x.VectorInt(m.Getmessages())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateDeleteChannelMessages
func (m *TLupdateDeleteChannelMessages) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChannelMessageViews
func (m *TLupdateChannelMessageViews) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1734268085)
	x.Int(m.Getchannel_id())
	x.Int(m.Getid())
	x.Int(m.Getviews())
	return x.Buf
}

// CodecDecode:updateChannelMessageViews
func (m *TLupdateChannelMessageViews) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setid(dbuf.Int())
	m.Setviews(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChatParticipantAdmin
func (m *TLupdateChatParticipantAdmin) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1232070311)
	x.Int(m.Getchat_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getis_admin().Encode())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatParticipantAdmin
func (m *TLupdateChatParticipantAdmin) Decode(dbuf *DecodeBuf) error {
	m.Setchat_id(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	m2 := &Bool{}
	m2.Decode(dbuf)
	m.Setis_admin(m2)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateNewStickerSet
func (m *TLupdateNewStickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1753886890)
	x.Bytes(m.Getstickerset().Encode())
	return x.Buf
}

// CodecDecode:updateNewStickerSet
func (m *TLupdateNewStickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &messages_StickerSet{}
	m0.Decode(dbuf)
	m.Setstickerset(m0)
	return dbuf.Err
}

// CodecEncode:updateStickerSetsOrder
func (m *TLupdateStickerSetsOrder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(196268545)
	var flags uint32 = 0
	if m.Getmasks() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.VectorLong(m.Getorder())
	return x.Buf
}

// CodecDecode:updateStickerSetsOrder
func (m *TLupdateStickerSetsOrder) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmasks(true)
	}
	m.Setorder(dbuf.VectorLong())
	return dbuf.Err
}

// CodecEncode:updateStickerSets
func (m *TLupdateStickerSets) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1135492588)
	return x.Buf
}

// CodecDecode:updateStickerSets
func (m *TLupdateStickerSets) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateSavedGifs
func (m *TLupdateSavedGifs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1821035490)
	return x.Buf
}

// CodecDecode:updateSavedGifs
func (m *TLupdateSavedGifs) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateBotInlineQuery
func (m *TLupdateBotInlineQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1417832080)
	var flags uint32 = 0
	if m.Getgeo() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.String(m.Getquery())
	if m.Getgeo() != nil {
		x.Bytes(m.Getgeo().Encode())
	}
	x.String(m.Getoffset())
	return x.Buf
}

// CodecDecode:updateBotInlineQuery
func (m *TLupdateBotInlineQuery) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setquery(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m3 := &GeoPoint{}
		m3.Decode(dbuf)
		m.Setgeo(m3)
	}
	m.Setoffset(dbuf.String())
	return dbuf.Err
}

// CodecEncode:updateBotInlineSend
func (m *TLupdateBotInlineSend) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(239663460)
	var flags uint32 = 0
	if m.Getgeo() != nil {
		flags |= 1 << 0
	}
	if m.Getmsg_id() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getuser_id())
	x.String(m.Getquery())
	if m.Getgeo() != nil {
		x.Bytes(m.Getgeo().Encode())
	}
	x.String(m.Getid_51())
	if m.Getmsg_id() != nil {
		x.Bytes(m.Getmsg_id().Encode())
	}
	return x.Buf
}

// CodecDecode:updateBotInlineSend
func (m *TLupdateBotInlineSend) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setuser_id(dbuf.Int())
	m.Setquery(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &GeoPoint{}
		m2.Decode(dbuf)
		m.Setgeo(m2)
	}
	m.Setid_51(dbuf.String())
	if (flags & (1 << 1)) != 0 {
		m4 := &InputBotInlineMessageID{}
		m4.Decode(dbuf)
		m.Setmsg_id(m4)
	}
	return dbuf.Err
}

// CodecEncode:updateEditChannelMessage
func (m *TLupdateEditChannelMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(457133559)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateEditChannelMessage
func (m *TLupdateEditChannelMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateBotCallbackQuery
func (m *TLupdateBotCallbackQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-415938591)
	var flags uint32 = 0
	if m.Getdata() != nil {
		flags |= 1 << 0
	}
	if m.Getgame_short_name() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmsg_id_53())
	x.Long(m.Getchat_instance())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getgame_short_name() != "" {
		x.String(m.Getgame_short_name())
	}
	return x.Buf
}

// CodecDecode:updateBotCallbackQuery
func (m *TLupdateBotCallbackQuery) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m2 := &Peer{}
	m2.Decode(dbuf)
	m.Setpeer_37(m2)
	m.Setmsg_id_53(dbuf.Int())
	m.Setchat_instance(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setgame_short_name(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:updateEditMessage
func (m *TLupdateEditMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-469536605)
	x.Bytes(m.Getmessage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateEditMessage
func (m *TLupdateEditMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateInlineBotCallbackQuery
func (m *TLupdateInlineBotCallbackQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-103646630)
	var flags uint32 = 0
	if m.Getdata() != nil {
		flags |= 1 << 0
	}
	if m.Getgame_short_name() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getmsg_id().Encode())
	x.Long(m.Getchat_instance())
	if m.Getdata() != nil {
		x.Bytes(m.Getdata())
	}
	if m.Getgame_short_name() != "" {
		x.String(m.Getgame_short_name())
	}
	return x.Buf
}

// CodecDecode:updateInlineBotCallbackQuery
func (m *TLupdateInlineBotCallbackQuery) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m2 := &InputBotInlineMessageID{}
	m2.Decode(dbuf)
	m.Setmsg_id(m2)
	m.Setchat_instance(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m.Setdata(dbuf.StringBytes())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setgame_short_name(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:updateReadChannelOutbox
func (m *TLupdateReadChannelOutbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(634833351)
	x.Int(m.Getchannel_id())
	x.Int(m.Getmax_id())
	return x.Buf
}

// CodecDecode:updateReadChannelOutbox
func (m *TLupdateReadChannelOutbox) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmax_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateDraftMessage
func (m *TLupdateDraftMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-299124375)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getdraft().Encode())
	return x.Buf
}

// CodecDecode:updateDraftMessage
func (m *TLupdateDraftMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &DraftMessage{}
	m1.Decode(dbuf)
	m.Setdraft(m1)
	return dbuf.Err
}

// CodecEncode:updateReadFeaturedStickers
func (m *TLupdateReadFeaturedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1461528386)
	return x.Buf
}

// CodecDecode:updateReadFeaturedStickers
func (m *TLupdateReadFeaturedStickers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateRecentStickers
func (m *TLupdateRecentStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1706939360)
	return x.Buf
}

// CodecDecode:updateRecentStickers
func (m *TLupdateRecentStickers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateConfig
func (m *TLupdateConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1574314746)
	return x.Buf
}

// CodecDecode:updateConfig
func (m *TLupdateConfig) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updatePtsChanged
func (m *TLupdatePtsChanged) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(861169551)
	return x.Buf
}

// CodecDecode:updatePtsChanged
func (m *TLupdatePtsChanged) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateChannelWebPage
func (m *TLupdateChannelWebPage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1081547008)
	x.Int(m.Getchannel_id())
	x.Bytes(m.Getwebpage().Encode())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateChannelWebPage
func (m *TLupdateChannelWebPage) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m1 := &WebPage{}
	m1.Decode(dbuf)
	m.Setwebpage(m1)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateDialogPinned
func (m *TLupdateDialogPinned) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1852826908)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 0
	}
	if m.Getfolder_id() != 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Bytes(m.Getpeer_59().Encode())
	return x.Buf
}

// CodecDecode:updateDialogPinned
func (m *TLupdateDialogPinned) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m2 := &DialogPeer{}
	m2.Decode(dbuf)
	m.Setpeer_59(m2)
	return dbuf.Err
}

// CodecEncode:updatePinnedDialogs
func (m *TLupdatePinnedDialogs) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-99664734)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 1
	}
	if len(m.Getorder_60()) > 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	if len(m.Getorder_60()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getorder_60())))
		for _, v := range m.Getorder_60() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:updatePinnedDialogs
func (m *TLupdatePinnedDialogs) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 1)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	if (flags & (1 << 0)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*DialogPeer, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &DialogPeer{}
			v1[i].Decode(dbuf)
		}
		m.Setorder_60(v1)
	}
	return dbuf.Err
}

// CodecEncode:updateBotWebhookJSON
func (m *TLupdateBotWebhookJSON) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2095595325)
	x.Bytes(m.Getdata_61().Encode())
	return x.Buf
}

// CodecDecode:updateBotWebhookJSON
func (m *TLupdateBotWebhookJSON) Decode(dbuf *DecodeBuf) error {
	m0 := &DataJSON{}
	m0.Decode(dbuf)
	m.Setdata_61(m0)
	return dbuf.Err
}

// CodecEncode:updateBotWebhookJSONQuery
func (m *TLupdateBotWebhookJSONQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1684914010)
	x.Long(m.Getquery_id())
	x.Bytes(m.Getdata_61().Encode())
	x.Int(m.Gettimeout())
	return x.Buf
}

// CodecDecode:updateBotWebhookJSONQuery
func (m *TLupdateBotWebhookJSONQuery) Decode(dbuf *DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m1 := &DataJSON{}
	m1.Decode(dbuf)
	m.Setdata_61(m1)
	m.Settimeout(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateBotShippingQuery
func (m *TLupdateBotShippingQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-523384512)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpayload())
	x.Bytes(m.Getshipping_address().Encode())
	return x.Buf
}

// CodecDecode:updateBotShippingQuery
func (m *TLupdateBotShippingQuery) Decode(dbuf *DecodeBuf) error {
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setpayload(dbuf.StringBytes())
	m3 := &PostAddress{}
	m3.Decode(dbuf)
	m.Setshipping_address(m3)
	return dbuf.Err
}

// CodecEncode:updateBotPrecheckoutQuery
func (m *TLupdateBotPrecheckoutQuery) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1563376297)
	var flags uint32 = 0
	if m.Getinfo() != nil {
		flags |= 1 << 0
	}
	if m.Getshipping_option_id() != "" {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Long(m.Getquery_id())
	x.Int(m.Getuser_id())
	x.Bytes(m.Getpayload())
	if m.Getinfo() != nil {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping_option_id() != "" {
		x.String(m.Getshipping_option_id())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	return x.Buf
}

// CodecDecode:updateBotPrecheckoutQuery
func (m *TLupdateBotPrecheckoutQuery) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setquery_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	m.Setpayload(dbuf.StringBytes())
	if (flags & (1 << 0)) != 0 {
		m3 := &PaymentRequestedInfo{}
		m3.Decode(dbuf)
		m.Setinfo(m3)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setshipping_option_id(dbuf.String())
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:updatePhoneCall
func (m *TLupdatePhoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1425052898)
	x.Bytes(m.Getphone_call().Encode())
	return x.Buf
}

// CodecDecode:updatePhoneCall
func (m *TLupdatePhoneCall) Decode(dbuf *DecodeBuf) error {
	m0 := &PhoneCall{}
	m0.Decode(dbuf)
	m.Setphone_call(m0)
	return dbuf.Err
}

// CodecEncode:updateLangPackTooLong
func (m *TLupdateLangPackTooLong) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1180041828)
	x.String(m.Getlang_code())
	return x.Buf
}

// CodecDecode:updateLangPackTooLong
func (m *TLupdateLangPackTooLong) Decode(dbuf *DecodeBuf) error {
	m.Setlang_code(dbuf.String())
	return dbuf.Err
}

// CodecEncode:updateLangPack
func (m *TLupdateLangPack) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1442983757)
	x.Bytes(m.Getdifference().Encode())
	return x.Buf
}

// CodecDecode:updateLangPack
func (m *TLupdateLangPack) Decode(dbuf *DecodeBuf) error {
	m0 := &LangPackDifference{}
	m0.Decode(dbuf)
	m.Setdifference(m0)
	return dbuf.Err
}

// CodecEncode:updateFavedStickers
func (m *TLupdateFavedStickers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-451831443)
	return x.Buf
}

// CodecDecode:updateFavedStickers
func (m *TLupdateFavedStickers) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateChannelReadMessagesContents
func (m *TLupdateChannelReadMessagesContents) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1987495099)
	x.Int(m.Getchannel_id())
	x.VectorInt(m.Getmessages())
	return x.Buf
}

// CodecDecode:updateChannelReadMessagesContents
func (m *TLupdateChannelReadMessagesContents) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:updateContactsReset
func (m *TLupdateContactsReset) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1887741886)
	return x.Buf
}

// CodecDecode:updateContactsReset
func (m *TLupdateContactsReset) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateChannelAvailableMessages
func (m *TLupdateChannelAvailableMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1893427255)
	x.Int(m.Getchannel_id())
	x.Int(m.Getavailable_min_id())
	return x.Buf
}

// CodecDecode:updateChannelAvailableMessages
func (m *TLupdateChannelAvailableMessages) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setavailable_min_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateDialogUnreadMark
func (m *TLupdateDialogUnreadMark) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-513517117)
	var flags uint32 = 0
	if m.Getunread() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer_59().Encode())
	return x.Buf
}

// CodecDecode:updateDialogUnreadMark
func (m *TLupdateDialogUnreadMark) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setunread(true)
	}
	m1 := &DialogPeer{}
	m1.Decode(dbuf)
	m.Setpeer_59(m1)
	return dbuf.Err
}

// CodecEncode:updateMessagePoll
func (m *TLupdateMessagePoll) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1398708869)
	var flags uint32 = 0
	if m.Getpoll() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getpoll_id())
	if m.Getpoll() != nil {
		x.Bytes(m.Getpoll().Encode())
	}
	x.Bytes(m.Getresults().Encode())
	return x.Buf
}

// CodecDecode:updateMessagePoll
func (m *TLupdateMessagePoll) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setpoll_id(dbuf.Long())
	if (flags & (1 << 0)) != 0 {
		m1 := &Poll{}
		m1.Decode(dbuf)
		m.Setpoll(m1)
	}
	m2 := &PollResults{}
	m2.Decode(dbuf)
	m.Setresults(m2)
	return dbuf.Err
}

// CodecEncode:updateChatDefaultBannedRights
func (m *TLupdateChatDefaultBannedRights) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1421875280)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getdefault_banned_rights().Encode())
	x.Int(m.Getversion())
	return x.Buf
}

// CodecDecode:updateChatDefaultBannedRights
func (m *TLupdateChatDefaultBannedRights) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &ChatBannedRights{}
	m1.Decode(dbuf)
	m.Setdefault_banned_rights(m1)
	m.Setversion(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateFolderPeers
func (m *TLupdateFolderPeers) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(422972864)
	x.Int(481674261)
	x.Int(int32(len(m.Getfolder_peers())))
	for _, v := range m.Getfolder_peers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updateFolderPeers
func (m *TLupdateFolderPeers) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*FolderPeer, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &FolderPeer{}
		v0[i].Decode(dbuf)
	}
	m.Setfolder_peers(v0)
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updatePeerSettings
func (m *TLupdatePeerSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1786671974)
	x.Bytes(m.Getpeer_37().Encode())
	x.Bytes(m.Getsettings().Encode())
	return x.Buf
}

// CodecDecode:updatePeerSettings
func (m *TLupdatePeerSettings) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m1 := &PeerSettings{}
	m1.Decode(dbuf)
	m.Setsettings(m1)
	return dbuf.Err
}

// CodecEncode:updatePeerLocated
func (m *TLupdatePeerLocated) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1263546448)
	x.Int(481674261)
	x.Int(int32(len(m.Getpeers())))
	for _, v := range m.Getpeers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:updatePeerLocated
func (m *TLupdatePeerLocated) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*PeerLocated, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &PeerLocated{}
		v0[i].Decode(dbuf)
	}
	m.Setpeers(v0)
	return dbuf.Err
}

// CodecEncode:updateNewScheduledMessage
func (m *TLupdateNewScheduledMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(967122427)
	x.Bytes(m.Getmessage().Encode())
	return x.Buf
}

// CodecDecode:updateNewScheduledMessage
func (m *TLupdateNewScheduledMessage) Decode(dbuf *DecodeBuf) error {
	m0 := &Message{}
	m0.Decode(dbuf)
	m.Setmessage(m0)
	return dbuf.Err
}

// CodecEncode:updateDeleteScheduledMessages
func (m *TLupdateDeleteScheduledMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1870238482)
	x.Bytes(m.Getpeer_37().Encode())
	x.VectorInt(m.Getmessages())
	return x.Buf
}

// CodecDecode:updateDeleteScheduledMessages
func (m *TLupdateDeleteScheduledMessages) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmessages(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:updateTheme
func (m *TLupdateTheme) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2112423005)
	x.Bytes(m.Gettheme().Encode())
	return x.Buf
}

// CodecDecode:updateTheme
func (m *TLupdateTheme) Decode(dbuf *DecodeBuf) error {
	m0 := &Theme{}
	m0.Decode(dbuf)
	m.Settheme(m0)
	return dbuf.Err
}

// CodecEncode:updateGeoLiveViewed
func (m *TLupdateGeoLiveViewed) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2027964103)
	x.Bytes(m.Getpeer_37().Encode())
	x.Int(m.Getmsg_id_53())
	return x.Buf
}

// CodecDecode:updateGeoLiveViewed
func (m *TLupdateGeoLiveViewed) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_37(m0)
	m.Setmsg_id_53(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateLoginToken
func (m *TLupdateLoginToken) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1448076945)
	return x.Buf
}

// CodecDecode:updateLoginToken
func (m *TLupdateLoginToken) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updateMessagePollVote
func (m *TLupdateMessagePollVote) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1123585836)
	x.Long(m.Getpoll_id())
	x.Int(m.Getuser_id())
	x.Int(481674261)
	x.Int(int32(len(m.Getoptions())))
	for _, v := range m.Getoptions() {
		x.Buf = append(x.Buf, v...)
	}
	return x.Buf
}

// CodecDecode:updateMessagePollVote
func (m *TLupdateMessagePollVote) Decode(dbuf *DecodeBuf) error {
	m.Setpoll_id(dbuf.Long())
	m.Setuser_id(dbuf.Int())
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([][]byte, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = dbuf.StringBytes()
	}
	m.Setoptions(v2)
	return dbuf.Err
}

// CodecEncode:updateDialogFilter
func (m *TLupdateDialogFilter) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(654302845)
	var flags uint32 = 0
	if m.Getfilter() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getid())
	if m.Getfilter() != nil {
		x.Bytes(m.Getfilter().Encode())
	}
	return x.Buf
}

// CodecDecode:updateDialogFilter
func (m *TLupdateDialogFilter) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setid(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m1 := &DialogFilter{}
		m1.Decode(dbuf)
		m.Setfilter(m1)
	}
	return dbuf.Err
}

// CodecEncode:updateDialogFilterOrder
func (m *TLupdateDialogFilterOrder) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1512627963)
	x.VectorInt(m.Getorder_84())
	return x.Buf
}

// CodecDecode:updateDialogFilterOrder
func (m *TLupdateDialogFilterOrder) Decode(dbuf *DecodeBuf) error {
	m.Setorder_84(dbuf.VectorInt())
	return dbuf.Err
}

// CodecEncode:updateDialogFilters
func (m *TLupdateDialogFilters) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(889491791)
	return x.Buf
}

// CodecDecode:updateDialogFilters
func (m *TLupdateDialogFilters) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:updatePhoneCallSignalingData
func (m *TLupdatePhoneCallSignalingData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(643940105)
	x.Long(m.Getphone_call_id())
	x.Bytes(m.Getdata())
	return x.Buf
}

// CodecDecode:updatePhoneCallSignalingData
func (m *TLupdatePhoneCallSignalingData) Decode(dbuf *DecodeBuf) error {
	m.Setphone_call_id(dbuf.Long())
	m.Setdata(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:updateChannelParticipant
func (m *TLupdateChannelParticipant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1708307556)
	var flags uint32 = 0
	if m.Getprev_participant() != nil {
		flags |= 1 << 0
	}
	if m.Getnew_participant() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.Int(m.Getdate())
	x.Int(m.Getuser_id())
	if m.Getprev_participant() != nil {
		x.Bytes(m.Getprev_participant().Encode())
	}
	if m.Getnew_participant() != nil {
		x.Bytes(m.Getnew_participant().Encode())
	}
	x.Int(m.Getqts())
	return x.Buf
}

// CodecDecode:updateChannelParticipant
func (m *TLupdateChannelParticipant) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setuser_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m3 := &ChannelParticipant{}
		m3.Decode(dbuf)
		m.Setprev_participant(m3)
	}
	if (flags & (1 << 1)) != 0 {
		m4 := &ChannelParticipant{}
		m4.Decode(dbuf)
		m.Setnew_participant(m4)
	}
	m.Setqts(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateChannelMessageForwards
func (m *TLupdateChannelMessageForwards) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1854571743)
	x.Int(m.Getchannel_id())
	x.Int(m.Getid())
	x.Int(m.Getforwards())
	return x.Buf
}

// CodecDecode:updateChannelMessageForwards
func (m *TLupdateChannelMessageForwards) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Setid(dbuf.Int())
	m.Setforwards(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updateReadChannelDiscussionInbox
func (m *TLupdateReadChannelDiscussionInbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(482860628)
	var flags uint32 = 0
	if m.Getbroadcast_id() != 0 {
		flags |= 1 << 0
	}
	if m.Getbroadcast_post() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.Int(m.Gettop_msg_id())
	x.Int(m.Getread_max_id())
	if m.Getbroadcast_id() != 0 {
		x.Int(m.Getbroadcast_id())
	}
	if m.Getbroadcast_post() != 0 {
		x.Int(m.Getbroadcast_post())
	}
	return x.Buf
}

// CodecDecode:updateReadChannelDiscussionInbox
func (m *TLupdateReadChannelDiscussionInbox) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	m.Settop_msg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Setbroadcast_id(dbuf.Int())
	}
	if (flags & (1 << 0)) != 0 {
		m.Setbroadcast_post(dbuf.Int())
	}
	return dbuf.Err
}

// CodecEncode:updateReadChannelDiscussionOutbox
func (m *TLupdateReadChannelDiscussionOutbox) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1178116716)
	x.Int(m.Getchannel_id())
	x.Int(m.Gettop_msg_id())
	x.Int(m.Getread_max_id())
	return x.Buf
}

// CodecDecode:updateReadChannelDiscussionOutbox
func (m *TLupdateReadChannelDiscussionOutbox) Decode(dbuf *DecodeBuf) error {
	m.Setchannel_id(dbuf.Int())
	m.Settop_msg_id(dbuf.Int())
	m.Setread_max_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updatePeerBlocked
func (m *TLupdatePeerBlocked) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(610945826)
	x.Bytes(m.Getpeer_id().Encode())
	x.Bytes(m.Getblocked().Encode())
	return x.Buf
}

// CodecDecode:updatePeerBlocked
func (m *TLupdatePeerBlocked) Decode(dbuf *DecodeBuf) error {
	m0 := &Peer{}
	m0.Decode(dbuf)
	m.Setpeer_id(m0)
	m1 := &Bool{}
	m1.Decode(dbuf)
	m.Setblocked(m1)
	return dbuf.Err
}

// CodecEncode:updateChannelUserTyping
func (m *TLupdateChannelUserTyping) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-13975905)
	var flags uint32 = 0
	if m.Gettop_msg_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	if m.Gettop_msg_id() != 0 {
		x.Int(m.Gettop_msg_id())
	}
	x.Int(m.Getuser_id())
	x.Bytes(m.Getaction().Encode())
	return x.Buf
}

// CodecDecode:updateChannelUserTyping
func (m *TLupdateChannelUserTyping) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setchannel_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m.Settop_msg_id(dbuf.Int())
	}
	m.Setuser_id(dbuf.Int())
	m3 := &SendMessageAction{}
	m3.Decode(dbuf)
	m.Setaction(m3)
	return dbuf.Err
}

// CodecEncode:updatePinnedMessages
func (m *TLupdatePinnedMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-309990731)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getpeer_37().Encode())
	x.VectorInt(m.Getmessages())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updatePinnedMessages
func (m *TLupdatePinnedMessages) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m1 := &Peer{}
	m1.Decode(dbuf)
	m.Setpeer_37(m1)
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:updatePinnedChannelMessages
func (m *TLupdatePinnedChannelMessages) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2054649973)
	var flags uint32 = 0
	if m.Getpinned() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(m.Getchannel_id())
	x.VectorInt(m.Getmessages())
	x.Int(m.Getpts())
	x.Int(m.Getpts_count())
	return x.Buf
}

// CodecDecode:updatePinnedChannelMessages
func (m *TLupdatePinnedChannelMessages) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setpinned(true)
	}
	m.Setchannel_id(dbuf.Int())
	m.Setmessages(dbuf.VectorInt())
	m.Setpts(dbuf.Int())
	m.Setpts_count(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:contacts_importedContacts
func (m *TLcontacts_importedContacts) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2010127419)
	x.Int(481674261)
	x.Int(int32(len(m.Getimported())))
	for _, v := range m.Getimported() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getpopular_invites())))
	for _, v := range m.Getpopular_invites() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.VectorLong(m.Getretry_contacts())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:contacts_importedContacts
func (m *TLcontacts_importedContacts) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*ImportedContact, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &ImportedContact{}
		v0[i].Decode(dbuf)
	}
	m.Setimported(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PopularContact, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PopularContact{}
		v1[i].Decode(dbuf)
	}
	m.Setpopular_invites(v1)
	m.Setretry_contacts(dbuf.VectorLong())
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	return dbuf.Err
}

// CodecEncode:bankCardOpenUrl
func (m *TLbankCardOpenUrl) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-177732982)
	x.String(m.Geturl())
	x.String(m.Getname())
	return x.Buf
}

// CodecDecode:bankCardOpenUrl
func (m *TLbankCardOpenUrl) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	m.Setname(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputAppEvent
func (m *TLinputAppEvent) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(488313413)
	x.Double(m.Gettime())
	x.String(m.Gettype_key())
	x.Long(m.Getpeer())
	x.Bytes(m.Getdata().Encode())
	return x.Buf
}

// CodecDecode:inputAppEvent
func (m *TLinputAppEvent) Decode(dbuf *DecodeBuf) error {
	m.Settime(dbuf.Double())
	m.Settype_key(dbuf.String())
	m.Setpeer(dbuf.Long())
	m3 := &JSONValue{}
	m3.Decode(dbuf)
	m.Setdata(m3)
	return dbuf.Err
}

// CodecEncode:inputEncryptedFileEmpty
func (m *TLinputEncryptedFileEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(406307684)
	return x.Buf
}

// CodecDecode:inputEncryptedFileEmpty
func (m *TLinputEncryptedFileEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputEncryptedFileUploaded
func (m *TLinputEncryptedFileUploaded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1690108678)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.String(m.Getmd5_checksum())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:inputEncryptedFileUploaded
func (m *TLinputEncryptedFileUploaded) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setmd5_checksum(dbuf.String())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputEncryptedFile
func (m *TLinputEncryptedFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1511503333)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputEncryptedFile
func (m *TLinputEncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputEncryptedFileBigUploaded
func (m *TLinputEncryptedFileBigUploaded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(767652808)
	x.Long(m.Getid())
	x.Int(m.Getparts())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:inputEncryptedFileBigUploaded
func (m *TLinputEncryptedFileBigUploaded) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setparts(dbuf.Int())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:encryptedChatEmpty
func (m *TLencryptedChatEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1417756512)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:encryptedChatEmpty
func (m *TLencryptedChatEmpty) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:encryptedChatWaiting
func (m *TLencryptedChatWaiting) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1006044124)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	return x.Buf
}

// CodecDecode:encryptedChatWaiting
func (m *TLencryptedChatWaiting) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:encryptedChatRequested
func (m *TLencryptedChatRequested) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1651608194)
	var flags uint32 = 0
	if m.Getfolder_id() != 0 {
		flags |= 1 << 0
	}
	x.UInt(flags)
	if m.Getfolder_id() != 0 {
		x.Int(m.Getfolder_id())
	}
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a())
	return x.Buf
}

// CodecDecode:encryptedChatRequested
func (m *TLencryptedChatRequested) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setfolder_id(dbuf.Int())
	}
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:encryptedChat
func (m *TLencryptedChat) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-94974410)
	x.Int(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getdate())
	x.Int(m.Getadmin_id())
	x.Int(m.Getparticipant_id())
	x.Bytes(m.Getg_a_or_b())
	x.Long(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:encryptedChat
func (m *TLencryptedChat) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	m.Setaccess_hash(dbuf.Long())
	m.Setdate(dbuf.Int())
	m.Setadmin_id(dbuf.Int())
	m.Setparticipant_id(dbuf.Int())
	m.Setg_a_or_b(dbuf.StringBytes())
	m.Setkey_fingerprint(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:encryptedChatDiscarded
func (m *TLencryptedChatDiscarded) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(332848423)
	x.Int(m.Getid())
	return x.Buf
}

// CodecDecode:encryptedChatDiscarded
func (m *TLencryptedChatDiscarded) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputStickerSetItem
func (m *TLinputStickerSetItem) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-6249322)
	var flags uint32 = 0
	if m.Getmask_coords() != nil {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Bytes(m.Getdocument().Encode())
	x.String(m.Getemoji())
	if m.Getmask_coords() != nil {
		x.Bytes(m.Getmask_coords().Encode())
	}
	return x.Buf
}

// CodecDecode:inputStickerSetItem
func (m *TLinputStickerSetItem) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m0 := &InputDocument{}
	m0.Decode(dbuf)
	m.Setdocument(m0)
	m.Setemoji(dbuf.String())
	if (flags & (1 << 0)) != 0 {
		m2 := &MaskCoords{}
		m2.Decode(dbuf)
		m.Setmask_coords(m2)
	}
	return dbuf.Err
}

// CodecEncode:inputChatPhotoEmpty
func (m *TLinputChatPhotoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(480546647)
	return x.Buf
}

// CodecDecode:inputChatPhotoEmpty
func (m *TLinputChatPhotoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputChatUploadedPhoto
func (m *TLinputChatUploadedPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-968723890)
	var flags uint32 = 0
	if m.Getfile() != nil {
		flags |= 1 << 0
	}
	if m.Getvideo() != nil {
		flags |= 1 << 1
	}
	if m.Getvideo_start_ts() != 0 {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getfile() != nil {
		x.Bytes(m.Getfile().Encode())
	}
	if m.Getvideo() != nil {
		x.Bytes(m.Getvideo().Encode())
	}
	if m.Getvideo_start_ts() != 0 {
		x.Double(m.Getvideo_start_ts())
	}
	return x.Buf
}

// CodecDecode:inputChatUploadedPhoto
func (m *TLinputChatUploadedPhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &InputFile{}
		m0.Decode(dbuf)
		m.Setfile(m0)
	}
	if (flags & (1 << 1)) != 0 {
		m1 := &InputFile{}
		m1.Decode(dbuf)
		m.Setvideo(m1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setvideo_start_ts(dbuf.Double())
	}
	return dbuf.Err
}

// CodecEncode:inputChatPhoto
func (m *TLinputChatPhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1991004873)
	x.Bytes(m.Getid().Encode())
	return x.Buf
}

// CodecDecode:inputChatPhoto
func (m *TLinputChatPhoto) Decode(dbuf *DecodeBuf) error {
	m0 := &InputPhoto{}
	m0.Decode(dbuf)
	m.Setid(m0)
	return dbuf.Err
}

// CodecEncode:secureValueTypePersonalDetails
func (m *TLsecureValueTypePersonalDetails) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1658158621)
	return x.Buf
}

// CodecDecode:secureValueTypePersonalDetails
func (m *TLsecureValueTypePersonalDetails) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypePassport
func (m *TLsecureValueTypePassport) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1034709504)
	return x.Buf
}

// CodecDecode:secureValueTypePassport
func (m *TLsecureValueTypePassport) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeDriverLicense
func (m *TLsecureValueTypeDriverLicense) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(115615172)
	return x.Buf
}

// CodecDecode:secureValueTypeDriverLicense
func (m *TLsecureValueTypeDriverLicense) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeIdentityCard
func (m *TLsecureValueTypeIdentityCard) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1596951477)
	return x.Buf
}

// CodecDecode:secureValueTypeIdentityCard
func (m *TLsecureValueTypeIdentityCard) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeInternalPassport
func (m *TLsecureValueTypeInternalPassport) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1717268701)
	return x.Buf
}

// CodecDecode:secureValueTypeInternalPassport
func (m *TLsecureValueTypeInternalPassport) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeAddress
func (m *TLsecureValueTypeAddress) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-874308058)
	return x.Buf
}

// CodecDecode:secureValueTypeAddress
func (m *TLsecureValueTypeAddress) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeUtilityBill
func (m *TLsecureValueTypeUtilityBill) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-63531698)
	return x.Buf
}

// CodecDecode:secureValueTypeUtilityBill
func (m *TLsecureValueTypeUtilityBill) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeBankStatement
func (m *TLsecureValueTypeBankStatement) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1995211763)
	return x.Buf
}

// CodecDecode:secureValueTypeBankStatement
func (m *TLsecureValueTypeBankStatement) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeRentalAgreement
func (m *TLsecureValueTypeRentalAgreement) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1954007928)
	return x.Buf
}

// CodecDecode:secureValueTypeRentalAgreement
func (m *TLsecureValueTypeRentalAgreement) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypePassportRegistration
func (m *TLsecureValueTypePassportRegistration) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1713143702)
	return x.Buf
}

// CodecDecode:secureValueTypePassportRegistration
func (m *TLsecureValueTypePassportRegistration) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeTemporaryRegistration
func (m *TLsecureValueTypeTemporaryRegistration) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-368907213)
	return x.Buf
}

// CodecDecode:secureValueTypeTemporaryRegistration
func (m *TLsecureValueTypeTemporaryRegistration) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypePhone
func (m *TLsecureValueTypePhone) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1289704741)
	return x.Buf
}

// CodecDecode:secureValueTypePhone
func (m *TLsecureValueTypePhone) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:secureValueTypeEmail
func (m *TLsecureValueTypeEmail) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1908627474)
	return x.Buf
}

// CodecDecode:secureValueTypeEmail
func (m *TLsecureValueTypeEmail) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:dataJSON
func (m *TLdataJSON) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(2104790276)
	x.String(m.Getdata())
	return x.Buf
}

// CodecDecode:dataJSON
func (m *TLdataJSON) Decode(dbuf *DecodeBuf) error {
	m.Setdata(dbuf.String())
	return dbuf.Err
}

// CodecEncode:restrictionReason
func (m *TLrestrictionReason) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-797791052)
	x.String(m.Getplatform())
	x.String(m.Getreason())
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:restrictionReason
func (m *TLrestrictionReason) Decode(dbuf *DecodeBuf) error {
	m.Setplatform(dbuf.String())
	m.Setreason(dbuf.String())
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_dhConfigNotModified
func (m *TLmessages_dhConfigNotModified) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1058912715)
	x.Bytes(m.Getrandom())
	return x.Buf
}

// CodecDecode:messages_dhConfigNotModified
func (m *TLmessages_dhConfigNotModified) Decode(dbuf *DecodeBuf) error {
	m.Setrandom(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:messages_dhConfig
func (m *TLmessages_dhConfig) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(740433629)
	x.Int(m.Getg())
	x.Bytes(m.Getp())
	x.Int(m.Getversion())
	x.Bytes(m.Getrandom())
	return x.Buf
}

// CodecDecode:messages_dhConfig
func (m *TLmessages_dhConfig) Decode(dbuf *DecodeBuf) error {
	m.Setg(dbuf.Int())
	m.Setp(dbuf.StringBytes())
	m.Setversion(dbuf.Int())
	m.Setrandom(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:messageFwdHeader
func (m *TLmessageFwdHeader) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1601666510)
	var flags uint32 = 0
	if m.Getfrom_id() != nil {
		flags |= 1 << 0
	}
	if m.Getfrom_name() != "" {
		flags |= 1 << 5
	}
	if m.Getchannel_post() != 0 {
		flags |= 1 << 2
	}
	if m.Getpost_author() != "" {
		flags |= 1 << 3
	}
	if m.Getsaved_from_peer() != nil {
		flags |= 1 << 4
	}
	if m.Getsaved_from_msg_id() != 0 {
		flags |= 1 << 4
	}
	if m.Getpsa_type() != "" {
		flags |= 1 << 6
	}
	x.UInt(flags)
	if m.Getfrom_id() != nil {
		x.Bytes(m.Getfrom_id().Encode())
	}
	if m.Getfrom_name() != "" {
		x.String(m.Getfrom_name())
	}
	x.Int(m.Getdate())
	if m.Getchannel_post() != 0 {
		x.Int(m.Getchannel_post())
	}
	if m.Getpost_author() != "" {
		x.String(m.Getpost_author())
	}
	if m.Getsaved_from_peer() != nil {
		x.Bytes(m.Getsaved_from_peer().Encode())
	}
	if m.Getsaved_from_msg_id() != 0 {
		x.Int(m.Getsaved_from_msg_id())
	}
	if m.Getpsa_type() != "" {
		x.String(m.Getpsa_type())
	}
	return x.Buf
}

// CodecDecode:messageFwdHeader
func (m *TLmessageFwdHeader) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m0 := &Peer{}
		m0.Decode(dbuf)
		m.Setfrom_id(m0)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setfrom_name(dbuf.String())
	}
	m.Setdate(dbuf.Int())
	if (flags & (1 << 2)) != 0 {
		m.Setchannel_post(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setpost_author(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		m5 := &Peer{}
		m5.Decode(dbuf)
		m.Setsaved_from_peer(m5)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsaved_from_msg_id(dbuf.Int())
	}
	if (flags & (1 << 6)) != 0 {
		m.Setpsa_type(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:inputPhoneCall
func (m *TLinputPhoneCall) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(506920429)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputPhoneCall
func (m *TLinputPhoneCall) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:photos_photo
func (m *TLphotos_photo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(539045032)
	x.Bytes(m.Getphoto().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:photos_photo
func (m *TLphotos_photo) Decode(dbuf *DecodeBuf) error {
	m0 := &Photo{}
	m0.Decode(dbuf)
	m.Setphoto(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*User, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &User{}
		v1[i].Decode(dbuf)
	}
	m.Setusers(v1)
	return dbuf.Err
}

// CodecEncode:inputReportReasonSpam
func (m *TLinputReportReasonSpam) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1490799288)
	return x.Buf
}

// CodecDecode:inputReportReasonSpam
func (m *TLinputReportReasonSpam) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputReportReasonViolence
func (m *TLinputReportReasonViolence) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(505595789)
	return x.Buf
}

// CodecDecode:inputReportReasonViolence
func (m *TLinputReportReasonViolence) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputReportReasonPornography
func (m *TLinputReportReasonPornography) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(777640226)
	return x.Buf
}

// CodecDecode:inputReportReasonPornography
func (m *TLinputReportReasonPornography) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputReportReasonChildAbuse
func (m *TLinputReportReasonChildAbuse) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1376497949)
	return x.Buf
}

// CodecDecode:inputReportReasonChildAbuse
func (m *TLinputReportReasonChildAbuse) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputReportReasonOther
func (m *TLinputReportReasonOther) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-512463606)
	x.String(m.Gettext())
	return x.Buf
}

// CodecDecode:inputReportReasonOther
func (m *TLinputReportReasonOther) Decode(dbuf *DecodeBuf) error {
	m.Settext(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputReportReasonCopyright
func (m *TLinputReportReasonCopyright) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1685456582)
	return x.Buf
}

// CodecDecode:inputReportReasonCopyright
func (m *TLinputReportReasonCopyright) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputReportReasonGeoIrrelevant
func (m *TLinputReportReasonGeoIrrelevant) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-606798099)
	return x.Buf
}

// CodecDecode:inputReportReasonGeoIrrelevant
func (m *TLinputReportReasonGeoIrrelevant) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:autoDownloadSettings
func (m *TLautoDownloadSettings) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-532532493)
	var flags uint32 = 0
	if m.Getdisabled() != false {
		flags |= 1 << 0
	}
	if m.Getvideo_preload_large() != false {
		flags |= 1 << 1
	}
	if m.Getaudio_preload_next() != false {
		flags |= 1 << 2
	}
	if m.Getphonecalls_less_data() != false {
		flags |= 1 << 3
	}
	x.UInt(flags)
	x.Int(m.Getphoto_size_max())
	x.Int(m.Getvideo_size_max())
	x.Int(m.Getfile_size_max())
	x.Int(m.Getvideo_upload_maxbitrate())
	return x.Buf
}

// CodecDecode:autoDownloadSettings
func (m *TLautoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setdisabled(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setvideo_preload_large(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setaudio_preload_next(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setphonecalls_less_data(true)
	}
	m.Setphoto_size_max(dbuf.Int())
	m.Setvideo_size_max(dbuf.Int())
	m.Setfile_size_max(dbuf.Int())
	m.Setvideo_upload_maxbitrate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messageViews
func (m *TLmessageViews) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1163625789)
	var flags uint32 = 0
	if m.Getviews() != 0 {
		flags |= 1 << 0
	}
	if m.Getforwards() != 0 {
		flags |= 1 << 1
	}
	if m.Getreplies() != nil {
		flags |= 1 << 2
	}
	x.UInt(flags)
	if m.Getviews() != 0 {
		x.Int(m.Getviews())
	}
	if m.Getforwards() != 0 {
		x.Int(m.Getforwards())
	}
	if m.Getreplies() != nil {
		x.Bytes(m.Getreplies().Encode())
	}
	return x.Buf
}

// CodecDecode:messageViews
func (m *TLmessageViews) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setviews(dbuf.Int())
	}
	if (flags & (1 << 1)) != 0 {
		m.Setforwards(dbuf.Int())
	}
	if (flags & (1 << 2)) != 0 {
		m2 := &MessageReplies{}
		m2.Decode(dbuf)
		m.Setreplies(m2)
	}
	return dbuf.Err
}

// CodecEncode:messages_stickerSet
func (m *TLmessages_stickerSet) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1240849242)
	x.Bytes(m.Getset().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getpacks())))
	for _, v := range m.Getpacks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getdocuments())))
	for _, v := range m.Getdocuments() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickerSet
func (m *TLmessages_stickerSet) Decode(dbuf *DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*StickerPack, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &StickerPack{}
		v1[i].Decode(dbuf)
	}
	m.Setpacks(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*Document, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &Document{}
		v2[i].Decode(dbuf)
	}
	m.Setdocuments(v2)
	return dbuf.Err
}

// CodecEncode:messages_stickerSetInstallResultSuccess
func (m *TLmessages_stickerSetInstallResultSuccess) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(946083368)
	return x.Buf
}

// CodecDecode:messages_stickerSetInstallResultSuccess
func (m *TLmessages_stickerSetInstallResultSuccess) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:messages_stickerSetInstallResultArchive
func (m *TLmessages_stickerSetInstallResultArchive) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(904138920)
	x.Int(481674261)
	x.Int(int32(len(m.Getsets())))
	for _, v := range m.Getsets() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:messages_stickerSetInstallResultArchive
func (m *TLmessages_stickerSetInstallResultArchive) Decode(dbuf *DecodeBuf) error {
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*StickerSetCovered, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &StickerSetCovered{}
		v0[i].Decode(dbuf)
	}
	m.Setsets(v0)
	return dbuf.Err
}

// CodecEncode:chatAdminRights
func (m *TLchatAdminRights) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1605510357)
	var flags uint32 = 0
	if m.Getchange_info() != false {
		flags |= 1 << 0
	}
	if m.Getpost_messages() != false {
		flags |= 1 << 1
	}
	if m.Getedit_messages() != false {
		flags |= 1 << 2
	}
	if m.Getdelete_messages() != false {
		flags |= 1 << 3
	}
	if m.Getban_users() != false {
		flags |= 1 << 4
	}
	if m.Getinvite_users() != false {
		flags |= 1 << 5
	}
	if m.Getpin_messages() != false {
		flags |= 1 << 7
	}
	if m.Getadd_admins() != false {
		flags |= 1 << 9
	}
	if m.Getanonymous() != false {
		flags |= 1 << 10
	}
	if m.Getmanage_call() != false {
		flags |= 1 << 11
	}
	x.UInt(flags)
	return x.Buf
}

// CodecDecode:chatAdminRights
func (m *TLchatAdminRights) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setchange_info(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setpost_messages(true)
	}
	if (flags & (1 << 2)) != 0 {
		m.Setedit_messages(true)
	}
	if (flags & (1 << 3)) != 0 {
		m.Setdelete_messages(true)
	}
	if (flags & (1 << 4)) != 0 {
		m.Setban_users(true)
	}
	if (flags & (1 << 5)) != 0 {
		m.Setinvite_users(true)
	}
	if (flags & (1 << 7)) != 0 {
		m.Setpin_messages(true)
	}
	if (flags & (1 << 9)) != 0 {
		m.Setadd_admins(true)
	}
	if (flags & (1 << 10)) != 0 {
		m.Setanonymous(true)
	}
	if (flags & (1 << 11)) != 0 {
		m.Setmanage_call(true)
	}
	return dbuf.Err
}

// CodecEncode:phoneCallProtocol
func (m *TLphoneCallProtocol) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-58224696)
	var flags uint32 = 0
	if m.Getudp_p2p() != false {
		flags |= 1 << 0
	}
	if m.Getudp_reflector() != false {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getmin_layer())
	x.Int(m.Getmax_layer())
	x.VectorString(m.Getlibrary_versions())
	return x.Buf
}

// CodecDecode:phoneCallProtocol
func (m *TLphoneCallProtocol) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setudp_p2p(true)
	}
	if (flags & (1 << 1)) != 0 {
		m.Setudp_reflector(true)
	}
	m.Setmin_layer(dbuf.Int())
	m.Setmax_layer(dbuf.Int())
	m.Setlibrary_versions(dbuf.VectorString())
	return dbuf.Err
}

// CodecEncode:emojiURL
func (m *TLemojiURL) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1519029347)
	x.String(m.Geturl())
	return x.Buf
}

// CodecDecode:emojiURL
func (m *TLemojiURL) Decode(dbuf *DecodeBuf) error {
	m.Seturl(dbuf.String())
	return dbuf.Err
}

// CodecEncode:messages_sentEncryptedMessage
func (m *TLmessages_sentEncryptedMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1443858741)
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:messages_sentEncryptedMessage
func (m *TLmessages_sentEncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:messages_sentEncryptedFile
func (m *TLmessages_sentEncryptedFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1802240206)
	x.Int(m.Getdate())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:messages_sentEncryptedFile
func (m *TLmessages_sentEncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.Setdate(dbuf.Int())
	m1 := &EncryptedFile{}
	m1.Decode(dbuf)
	m.Setfile(m1)
	return dbuf.Err
}

// CodecEncode:encryptedFileEmpty
func (m *TLencryptedFileEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1038136962)
	return x.Buf
}

// CodecDecode:encryptedFileEmpty
func (m *TLencryptedFileEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:encryptedFile
func (m *TLencryptedFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1248893260)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	x.Int(m.Getsize())
	x.Int(m.Getdc_id())
	x.Int(m.Getkey_fingerprint())
	return x.Buf
}

// CodecDecode:encryptedFile
func (m *TLencryptedFile) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	m.Setsize(dbuf.Int())
	m.Setdc_id(dbuf.Int())
	m.Setkey_fingerprint(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputWallPaper
func (m *TLinputWallPaper) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-433014407)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputWallPaper
func (m *TLinputWallPaper) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputWallPaperSlug
func (m *TLinputWallPaperSlug) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1913199744)
	x.String(m.Getslug())
	return x.Buf
}

// CodecDecode:inputWallPaperSlug
func (m *TLinputWallPaperSlug) Decode(dbuf *DecodeBuf) error {
	m.Setslug(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputWallPaperNoFile
func (m *TLinputWallPaperNoFile) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2077770836)
	return x.Buf
}

// CodecDecode:inputWallPaperNoFile
func (m *TLinputWallPaperNoFile) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:payments_validatedRequestedInfo
func (m *TLpayments_validatedRequestedInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-784000893)
	var flags uint32 = 0
	if m.Getid() != "" {
		flags |= 1 << 0
	}
	if len(m.Getshipping_options()) > 0 {
		flags |= 1 << 1
	}
	x.UInt(flags)
	if m.Getid() != "" {
		x.String(m.Getid())
	}
	if len(m.Getshipping_options()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getshipping_options())))
		for _, v := range m.Getshipping_options() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:payments_validatedRequestedInfo
func (m *TLpayments_validatedRequestedInfo) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setid(dbuf.String())
	}
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*ShippingOption, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &ShippingOption{}
			v1[i].Decode(dbuf)
		}
		m.Setshipping_options(v1)
	}
	return dbuf.Err
}

// CodecEncode:userProfilePhotoEmpty
func (m *TLuserProfilePhotoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1326562017)
	return x.Buf
}

// CodecDecode:userProfilePhotoEmpty
func (m *TLuserProfilePhotoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:userProfilePhoto
func (m *TLuserProfilePhoto) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1775479590)
	var flags uint32 = 0
	if m.Gethas_video() != false {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Long(m.Getphoto_id())
	x.Bytes(m.Getphoto_small().Encode())
	x.Bytes(m.Getphoto_big().Encode())
	x.Int(m.Getdc_id())
	return x.Buf
}

// CodecDecode:userProfilePhoto
func (m *TLuserProfilePhoto) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Sethas_video(true)
	}
	m.Setphoto_id(dbuf.Long())
	m2 := &FileLocation{}
	m2.Decode(dbuf)
	m.Setphoto_small(m2)
	m3 := &FileLocation{}
	m3.Decode(dbuf)
	m.Setphoto_big(m3)
	m.Setdc_id(dbuf.Int())
	return dbuf.Err
}

// CodecEncode:inputStickerSetEmpty
func (m *TLinputStickerSetEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-4838507)
	return x.Buf
}

// CodecDecode:inputStickerSetEmpty
func (m *TLinputStickerSetEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputStickerSetID
func (m *TLinputStickerSetID) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1645763991)
	x.Long(m.Getid())
	x.Long(m.Getaccess_hash())
	return x.Buf
}

// CodecDecode:inputStickerSetID
func (m *TLinputStickerSetID) Decode(dbuf *DecodeBuf) error {
	m.Setid(dbuf.Long())
	m.Setaccess_hash(dbuf.Long())
	return dbuf.Err
}

// CodecEncode:inputStickerSetShortName
func (m *TLinputStickerSetShortName) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-2044933984)
	x.String(m.Getshort_name())
	return x.Buf
}

// CodecDecode:inputStickerSetShortName
func (m *TLinputStickerSetShortName) Decode(dbuf *DecodeBuf) error {
	m.Setshort_name(dbuf.String())
	return dbuf.Err
}

// CodecEncode:inputStickerSetAnimatedEmoji
func (m *TLinputStickerSetAnimatedEmoji) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(42402760)
	return x.Buf
}

// CodecDecode:inputStickerSetAnimatedEmoji
func (m *TLinputStickerSetAnimatedEmoji) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:inputStickerSetDice
func (m *TLinputStickerSetDice) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-427863538)
	x.String(m.Getemoticon())
	return x.Buf
}

// CodecDecode:inputStickerSetDice
func (m *TLinputStickerSetDice) Decode(dbuf *DecodeBuf) error {
	m.Setemoticon(dbuf.String())
	return dbuf.Err
}

// CodecEncode:account_authorizationForm
func (m *TLaccount_authorizationForm) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1389486888)
	var flags uint32 = 0
	if m.Getprivacy_policy_url() != "" {
		flags |= 1 << 0
	}
	x.UInt(flags)
	x.Int(481674261)
	x.Int(int32(len(m.Getrequired_types())))
	for _, v := range m.Getrequired_types() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getvalues())))
	for _, v := range m.Getvalues() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Geterrors())))
	for _, v := range m.Geterrors() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	if m.Getprivacy_policy_url() != "" {
		x.String(m.Getprivacy_policy_url())
	}
	return x.Buf
}

// CodecDecode:account_authorizationForm
func (m *TLaccount_authorizationForm) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	c0 := dbuf.Int()
	if c0 != 481674261 {
		return dbuf.Err
	}
	l0 := dbuf.Int()
	v0 := make([]*SecureRequiredType, l0)
	for i := int32(0); i < l0; i++ {
		v0[i] = &SecureRequiredType{}
		v0[i].Decode(dbuf)
	}
	m.Setrequired_types(v0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*SecureValue, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &SecureValue{}
		v1[i].Decode(dbuf)
	}
	m.Setvalues(v1)
	c2 := dbuf.Int()
	if c2 != 481674261 {
		return dbuf.Err
	}
	l2 := dbuf.Int()
	v2 := make([]*SecureValueError, l2)
	for i := int32(0); i < l2; i++ {
		v2[i] = &SecureValueError{}
		v2[i].Decode(dbuf)
	}
	m.Seterrors(v2)
	c3 := dbuf.Int()
	if c3 != 481674261 {
		return dbuf.Err
	}
	l3 := dbuf.Int()
	v3 := make([]*User, l3)
	for i := int32(0); i < l3; i++ {
		v3[i] = &User{}
		v3[i].Decode(dbuf)
	}
	m.Setusers(v3)
	if (flags & (1 << 0)) != 0 {
		m.Setprivacy_policy_url(dbuf.String())
	}
	return dbuf.Err
}

// CodecEncode:encryptedMessage
func (m *TLencryptedMessage) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-317144808)
	x.Long(m.Getrandom_id())
	x.Int(m.Getchat_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getbytes())
	x.Bytes(m.Getfile().Encode())
	return x.Buf
}

// CodecDecode:encryptedMessage
func (m *TLencryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.Setrandom_id(dbuf.Long())
	m.Setchat_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	m4 := &EncryptedFile{}
	m4.Decode(dbuf)
	m.Setfile(m4)
	return dbuf.Err
}

// CodecEncode:encryptedMessageService
func (m *TLencryptedMessageService) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(594758406)
	x.Long(m.Getrandom_id())
	x.Int(m.Getchat_id())
	x.Int(m.Getdate())
	x.Bytes(m.Getbytes())
	return x.Buf
}

// CodecDecode:encryptedMessageService
func (m *TLencryptedMessageService) Decode(dbuf *DecodeBuf) error {
	m.Setrandom_id(dbuf.Long())
	m.Setchat_id(dbuf.Int())
	m.Setdate(dbuf.Int())
	m.Setbytes(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:payments_paymentReceipt
func (m *TLpayments_paymentReceipt) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1342771681)
	var flags uint32 = 0
	if m.Getinfo() != nil {
		flags |= 1 << 0
	}
	if m.Getshipping() != nil {
		flags |= 1 << 1
	}
	x.UInt(flags)
	x.Int(m.Getdate())
	x.Int(m.Getbot_id())
	x.Bytes(m.Getinvoice().Encode())
	x.Int(m.Getprovider_id())
	if m.Getinfo() != nil {
		x.Bytes(m.Getinfo().Encode())
	}
	if m.Getshipping() != nil {
		x.Bytes(m.Getshipping().Encode())
	}
	x.String(m.Getcurrency())
	x.Long(m.Gettotal_amount())
	x.String(m.Getcredentials_title())
	x.Int(481674261)
	x.Int(int32(len(m.Getusers())))
	for _, v := range m.Getusers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:payments_paymentReceipt
func (m *TLpayments_paymentReceipt) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	m.Setdate(dbuf.Int())
	m.Setbot_id(dbuf.Int())
	m2 := &Invoice{}
	m2.Decode(dbuf)
	m.Setinvoice(m2)
	m.Setprovider_id(dbuf.Int())
	if (flags & (1 << 0)) != 0 {
		m4 := &PaymentRequestedInfo{}
		m4.Decode(dbuf)
		m.Setinfo(m4)
	}
	if (flags & (1 << 1)) != 0 {
		m5 := &ShippingOption{}
		m5.Decode(dbuf)
		m.Setshipping(m5)
	}
	m.Setcurrency(dbuf.String())
	m.Settotal_amount(dbuf.Long())
	m.Setcredentials_title(dbuf.String())
	c9 := dbuf.Int()
	if c9 != 481674261 {
		return dbuf.Err
	}
	l9 := dbuf.Int()
	v9 := make([]*User, l9)
	for i := int32(0); i < l9; i++ {
		v9[i] = &User{}
		v9[i].Decode(dbuf)
	}
	m.Setusers(v9)
	return dbuf.Err
}

// CodecEncode:pageListOrderedItemText
func (m *TLpageListOrderedItemText) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1577484359)
	x.String(m.Getnum())
	x.Bytes(m.Gettext().Encode())
	return x.Buf
}

// CodecDecode:pageListOrderedItemText
func (m *TLpageListOrderedItemText) Decode(dbuf *DecodeBuf) error {
	m.Setnum(dbuf.String())
	m1 := &RichText{}
	m1.Decode(dbuf)
	m.Settext(m1)
	return dbuf.Err
}

// CodecEncode:pageListOrderedItemBlocks
func (m *TLpageListOrderedItemBlocks) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1730311882)
	x.String(m.Getnum())
	x.Int(481674261)
	x.Int(int32(len(m.Getblocks())))
	for _, v := range m.Getblocks() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:pageListOrderedItemBlocks
func (m *TLpageListOrderedItemBlocks) Decode(dbuf *DecodeBuf) error {
	m.Setnum(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*PageBlock, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &PageBlock{}
		v1[i].Decode(dbuf)
	}
	m.Setblocks(v1)
	return dbuf.Err
}

// CodecEncode:stickerSetCovered
func (m *TLstickerSetCovered) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(1678812626)
	x.Bytes(m.Getset().Encode())
	x.Bytes(m.Getcover().Encode())
	return x.Buf
}

// CodecDecode:stickerSetCovered
func (m *TLstickerSetCovered) Decode(dbuf *DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	m1 := &Document{}
	m1.Decode(dbuf)
	m.Setcover(m1)
	return dbuf.Err
}

// CodecEncode:stickerSetMultiCovered
func (m *TLstickerSetMultiCovered) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(872932635)
	x.Bytes(m.Getset().Encode())
	x.Int(481674261)
	x.Int(int32(len(m.Getcovers())))
	for _, v := range m.Getcovers() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	return x.Buf
}

// CodecDecode:stickerSetMultiCovered
func (m *TLstickerSetMultiCovered) Decode(dbuf *DecodeBuf) error {
	m0 := &StickerSet{}
	m0.Decode(dbuf)
	m.Setset(m0)
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*Document, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &Document{}
		v1[i].Decode(dbuf)
	}
	m.Setcovers(v1)
	return dbuf.Err
}

// CodecEncode:statsPercentValue
func (m *TLstatsPercentValue) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-875679776)
	x.Double(m.Getpart())
	x.Double(m.Gettotal())
	return x.Buf
}

// CodecDecode:statsPercentValue
func (m *TLstatsPercentValue) Decode(dbuf *DecodeBuf) error {
	m.Setpart(dbuf.Double())
	m.Settotal(dbuf.Double())
	return dbuf.Err
}

// CodecEncode:pollResults
func (m *TLpollResults) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1159937629)
	var flags uint32 = 0
	if m.Getmin() != false {
		flags |= 1 << 0
	}
	if len(m.Getresults()) > 0 {
		flags |= 1 << 1
	}
	if m.Gettotal_voters() != 0 {
		flags |= 1 << 2
	}
	if m.Getrecent_voters() != nil {
		flags |= 1 << 3
	}
	if m.Getsolution() != "" {
		flags |= 1 << 4
	}
	if len(m.Getsolution_entities()) > 0 {
		flags |= 1 << 4
	}
	x.UInt(flags)
	if len(m.Getresults()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getresults())))
		for _, v := range m.Getresults() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	if m.Gettotal_voters() != 0 {
		x.Int(m.Gettotal_voters())
	}
	if m.Getrecent_voters() != nil {
		x.VectorInt(m.Getrecent_voters())
	}
	if m.Getsolution() != "" {
		x.String(m.Getsolution())
	}
	if len(m.Getsolution_entities()) > 0 {
		x.Int(481674261)
		x.Int(int32(len(m.Getsolution_entities())))
		for _, v := range m.Getsolution_entities() {
			x.Buf = append(x.Buf, v.Encode()...)
		}
	}
	return x.Buf
}

// CodecDecode:pollResults
func (m *TLpollResults) Decode(dbuf *DecodeBuf) error {
	flags := dbuf.UInt()
	_ = flags
	if (flags & (1 << 0)) != 0 {
		m.Setmin(true)
	}
	if (flags & (1 << 1)) != 0 {
		c1 := dbuf.Int()
		if c1 != 481674261 {
			return dbuf.Err
		}
		l1 := dbuf.Int()
		v1 := make([]*PollAnswerVoters, l1)
		for i := int32(0); i < l1; i++ {
			v1[i] = &PollAnswerVoters{}
			v1[i].Decode(dbuf)
		}
		m.Setresults(v1)
	}
	if (flags & (1 << 2)) != 0 {
		m.Settotal_voters(dbuf.Int())
	}
	if (flags & (1 << 3)) != 0 {
		m.Setrecent_voters(dbuf.VectorInt())
	}
	if (flags & (1 << 4)) != 0 {
		m.Setsolution(dbuf.String())
	}
	if (flags & (1 << 4)) != 0 {
		c5 := dbuf.Int()
		if c5 != 481674261 {
			return dbuf.Err
		}
		l5 := dbuf.Int()
		v5 := make([]*MessageEntity, l5)
		for i := int32(0); i < l5; i++ {
			v5[i] = &MessageEntity{}
			v5[i].Decode(dbuf)
		}
		m.Setsolution_entities(v5)
	}
	return dbuf.Err
}

// CodecEncode:secureData
func (m *TLsecureData) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-1964327229)
	x.Bytes(m.Getdata())
	x.Bytes(m.Getdata_hash())
	x.Bytes(m.Getsecret())
	return x.Buf
}

// CodecDecode:secureData
func (m *TLsecureData) Decode(dbuf *DecodeBuf) error {
	m.Setdata(dbuf.StringBytes())
	m.Setdata_hash(dbuf.StringBytes())
	m.Setsecret(dbuf.StringBytes())
	return dbuf.Err
}

// CodecEncode:help_userInfoEmpty
func (m *TLhelp_userInfoEmpty) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(-206688531)
	return x.Buf
}

// CodecDecode:help_userInfoEmpty
func (m *TLhelp_userInfoEmpty) Decode(dbuf *DecodeBuf) error {
	return dbuf.Err
}

// CodecEncode:help_userInfo
func (m *TLhelp_userInfo) Encode() []byte {
	x := NewEncodeBuf(512)
	x.Int(32192344)
	x.String(m.Getmessage())
	x.Int(481674261)
	x.Int(int32(len(m.Getentities())))
	for _, v := range m.Getentities() {
		x.Buf = append(x.Buf, v.Encode()...)
	}
	x.String(m.Getauthor())
	x.Int(m.Getdate())
	return x.Buf
}

// CodecDecode:help_userInfo
func (m *TLhelp_userInfo) Decode(dbuf *DecodeBuf) error {
	m.Setmessage(dbuf.String())
	c1 := dbuf.Int()
	if c1 != 481674261 {
		return dbuf.Err
	}
	l1 := dbuf.Int()
	v1 := make([]*MessageEntity, l1)
	for i := int32(0); i < l1; i++ {
		v1[i] = &MessageEntity{}
		v1[i].Decode(dbuf)
	}
	m.Setentities(v1)
	m.Setauthor(dbuf.String())
	m.Setdate(dbuf.Int())
	return dbuf.Err
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_BotCallbackAnswer
//
func (m messages_BotCallbackAnswer) Encode() []byte {
	switch m.constructor {
	case 911761060:
		t := m.To_messages_botCallbackAnswer()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_BotCallbackAnswer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 911761060:
		m2 := &TLmessages_botCallbackAnswer{data: &messages_BotCallbackAnswer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_BotCallbackAnswer) To_messages_botCallbackAnswer() *TLmessages_botCallbackAnswer {
	return &TLmessages_botCallbackAnswer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputDialogPeer
//
func (m InputDialogPeer) Encode() []byte {
	switch m.constructor {
	case -55902537:
		t := m.To_inputDialogPeer()
		return t.Encode()
	case 1684014375:
		t := m.To_inputDialogPeerFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputDialogPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -55902537:
		m2 := &TLinputDialogPeer{data: &InputDialogPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1684014375:
		m2 := &TLinputDialogPeerFolder{data: &InputDialogPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputDialogPeer) To_inputDialogPeer() *TLinputDialogPeer {
	return &TLinputDialogPeer{
		data: m.data,
	}
}
func (m InputDialogPeer) To_inputDialogPeerFolder() *TLinputDialogPeerFolder {
	return &TLinputDialogPeerFolder{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:GlobalPrivacySettings
//
func (m GlobalPrivacySettings) Encode() []byte {
	switch m.constructor {
	case -1096616924:
		t := m.To_globalPrivacySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m GlobalPrivacySettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1096616924:
		m2 := &TLglobalPrivacySettings{data: &GlobalPrivacySettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m GlobalPrivacySettings) To_globalPrivacySettings() *TLglobalPrivacySettings {
	return &TLglobalPrivacySettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentCharge
//
func (m PaymentCharge) Encode() []byte {
	switch m.constructor {
	case -368917890:
		t := m.To_paymentCharge()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentCharge) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -368917890:
		m2 := &TLpaymentCharge{data: &PaymentCharge_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PaymentCharge) To_paymentCharge() *TLpaymentCharge {
	return &TLpaymentCharge{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageMedia
//
func (m MessageMedia) Encode() []byte {
	switch m.constructor {
	case 1038967584:
		t := m.To_messageMediaEmpty()
		return t.Encode()
	case 1766936791:
		t := m.To_messageMediaPhoto()
		return t.Encode()
	case 1457575028:
		t := m.To_messageMediaGeo()
		return t.Encode()
	case -873313984:
		t := m.To_messageMediaContact()
		return t.Encode()
	case -1618676578:
		t := m.To_messageMediaUnsupported()
		return t.Encode()
	case -1666158377:
		t := m.To_messageMediaDocument()
		return t.Encode()
	case -1557277184:
		t := m.To_messageMediaWebPage()
		return t.Encode()
	case 784356159:
		t := m.To_messageMediaVenue()
		return t.Encode()
	case -38694904:
		t := m.To_messageMediaGame()
		return t.Encode()
	case -2074799289:
		t := m.To_messageMediaInvoice()
		return t.Encode()
	case -1186937242:
		t := m.To_messageMediaGeoLive()
		return t.Encode()
	case 1272375192:
		t := m.To_messageMediaPoll()
		return t.Encode()
	case 1065280907:
		t := m.To_messageMediaDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageMedia) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1038967584:
		m2 := &TLmessageMediaEmpty{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1766936791:
		m2 := &TLmessageMediaPhoto{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1457575028:
		m2 := &TLmessageMediaGeo{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -873313984:
		m2 := &TLmessageMediaContact{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1618676578:
		m2 := &TLmessageMediaUnsupported{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1666158377:
		m2 := &TLmessageMediaDocument{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1557277184:
		m2 := &TLmessageMediaWebPage{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 784356159:
		m2 := &TLmessageMediaVenue{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -38694904:
		m2 := &TLmessageMediaGame{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2074799289:
		m2 := &TLmessageMediaInvoice{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1186937242:
		m2 := &TLmessageMediaGeoLive{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1272375192:
		m2 := &TLmessageMediaPoll{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1065280907:
		m2 := &TLmessageMediaDice{data: &MessageMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageMedia) To_messageMediaEmpty() *TLmessageMediaEmpty {
	return &TLmessageMediaEmpty{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaPhoto() *TLmessageMediaPhoto {
	return &TLmessageMediaPhoto{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaGeo() *TLmessageMediaGeo {
	return &TLmessageMediaGeo{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaContact() *TLmessageMediaContact {
	return &TLmessageMediaContact{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaUnsupported() *TLmessageMediaUnsupported {
	return &TLmessageMediaUnsupported{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaDocument() *TLmessageMediaDocument {
	return &TLmessageMediaDocument{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaWebPage() *TLmessageMediaWebPage {
	return &TLmessageMediaWebPage{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaVenue() *TLmessageMediaVenue {
	return &TLmessageMediaVenue{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaGame() *TLmessageMediaGame {
	return &TLmessageMediaGame{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaInvoice() *TLmessageMediaInvoice {
	return &TLmessageMediaInvoice{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaGeoLive() *TLmessageMediaGeoLive {
	return &TLmessageMediaGeoLive{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaPoll() *TLmessageMediaPoll {
	return &TLmessageMediaPoll{
		data: m.data,
	}
}
func (m MessageMedia) To_messageMediaDice() *TLmessageMediaDice {
	return &TLmessageMediaDice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LabeledPrice
//
func (m LabeledPrice) Encode() []byte {
	switch m.constructor {
	case -886477832:
		t := m.To_labeledPrice()
		return t.Encode()
	default:
		return nil
	}
}
func (m LabeledPrice) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -886477832:
		m2 := &TLlabeledPrice{data: &LabeledPrice_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m LabeledPrice) To_labeledPrice() *TLlabeledPrice {
	return &TLlabeledPrice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CdnConfig
//
func (m CdnConfig) Encode() []byte {
	switch m.constructor {
	case 1462101002:
		t := m.To_cdnConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m CdnConfig) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1462101002:
		m2 := &TLcdnConfig{data: &CdnConfig_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m CdnConfig) To_cdnConfig() *TLcdnConfig {
	return &TLcdnConfig{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Blocked
//
func (m contacts_Blocked) Encode() []byte {
	switch m.constructor {
	case 182326673:
		t := m.To_contacts_blocked()
		return t.Encode()
	case -513392236:
		t := m.To_contacts_blockedSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_Blocked) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 182326673:
		m2 := &TLcontacts_blocked{data: &contacts_Blocked_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -513392236:
		m2 := &TLcontacts_blockedSlice{data: &contacts_Blocked_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_Blocked) To_contacts_blocked() *TLcontacts_blocked {
	return &TLcontacts_blocked{
		data: m.data,
	}
}
func (m contacts_Blocked) To_contacts_blockedSlice() *TLcontacts_blockedSlice {
	return &TLcontacts_blockedSlice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputChannel
//
func (m InputChannel) Encode() []byte {
	switch m.constructor {
	case -292807034:
		t := m.To_inputChannelEmpty()
		return t.Encode()
	case -1343524562:
		t := m.To_inputChannel()
		return t.Encode()
	case 707290417:
		t := m.To_inputChannelFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputChannel) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -292807034:
		m2 := &TLinputChannelEmpty{data: &InputChannel_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1343524562:
		m2 := &TLinputChannel{data: &InputChannel_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 707290417:
		m2 := &TLinputChannelFromMessage{data: &InputChannel_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputChannel) To_inputChannelEmpty() *TLinputChannelEmpty {
	return &TLinputChannelEmpty{
		data: m.data,
	}
}
func (m InputChannel) To_inputChannel() *TLinputChannel {
	return &TLinputChannel{
		data: m.data,
	}
}
func (m InputChannel) To_inputChannelFromMessage() *TLinputChannelFromMessage {
	return &TLinputChannelFromMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureCredentialsEncrypted
//
func (m SecureCredentialsEncrypted) Encode() []byte {
	switch m.constructor {
	case 871426631:
		t := m.To_secureCredentialsEncrypted()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureCredentialsEncrypted) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 871426631:
		m2 := &TLsecureCredentialsEncrypted{data: &SecureCredentialsEncrypted_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureCredentialsEncrypted) To_secureCredentialsEncrypted() *TLsecureCredentialsEncrypted {
	return &TLsecureCredentialsEncrypted{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_PasswordRecovery
//
func (m auth_PasswordRecovery) Encode() []byte {
	switch m.constructor {
	case 326715557:
		t := m.To_auth_passwordRecovery()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_PasswordRecovery) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 326715557:
		m2 := &TLauth_passwordRecovery{data: &auth_PasswordRecovery_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_PasswordRecovery) To_auth_passwordRecovery() *TLauth_passwordRecovery {
	return &TLauth_passwordRecovery{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_RecentStickers
//
func (m messages_RecentStickers) Encode() []byte {
	switch m.constructor {
	case 186120336:
		t := m.To_messages_recentStickersNotModified()
		return t.Encode()
	case 586395571:
		t := m.To_messages_recentStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_RecentStickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 186120336:
		m2 := &TLmessages_recentStickersNotModified{data: &messages_RecentStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 586395571:
		m2 := &TLmessages_recentStickers{data: &messages_RecentStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_RecentStickers) To_messages_recentStickersNotModified() *TLmessages_recentStickersNotModified {
	return &TLmessages_recentStickersNotModified{
		data: m.data,
	}
}
func (m messages_RecentStickers) To_messages_recentStickers() *TLmessages_recentStickers {
	return &TLmessages_recentStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Password
//
func (m account_Password) Encode() []byte {
	switch m.constructor {
	case -1390001672:
		t := m.To_account_password()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_Password) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1390001672:
		m2 := &TLaccount_password{data: &account_Password_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_Password) To_account_password() *TLaccount_password {
	return &TLaccount_password{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputClientProxy
//
func (m InputClientProxy) Encode() []byte {
	switch m.constructor {
	case 1968737087:
		t := m.To_inputClientProxy()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputClientProxy) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1968737087:
		m2 := &TLinputClientProxy{data: &InputClientProxy_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputClientProxy) To_inputClientProxy() *TLinputClientProxy {
	return &TLinputClientProxy{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:JSONObjectValue
//
func (m JSONObjectValue) Encode() []byte {
	switch m.constructor {
	case -1059185703:
		t := m.To_jsonObjectValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m JSONObjectValue) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1059185703:
		m2 := &TLjsonObjectValue{data: &JSONObjectValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m JSONObjectValue) To_jsonObjectValue() *TLjsonObjectValue {
	return &TLjsonObjectValue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCall
//
func (m PhoneCall) Encode() []byte {
	switch m.constructor {
	case 1399245077:
		t := m.To_phoneCallEmpty()
		return t.Encode()
	case 462375633:
		t := m.To_phoneCallWaiting()
		return t.Encode()
	case -2014659757:
		t := m.To_phoneCallRequested()
		return t.Encode()
	case -1719909046:
		t := m.To_phoneCallAccepted()
		return t.Encode()
	case -2025673089:
		t := m.To_phoneCall()
		return t.Encode()
	case 1355435489:
		t := m.To_phoneCallDiscarded()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCall) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1399245077:
		m2 := &TLphoneCallEmpty{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 462375633:
		m2 := &TLphoneCallWaiting{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2014659757:
		m2 := &TLphoneCallRequested{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1719909046:
		m2 := &TLphoneCallAccepted{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2025673089:
		m2 := &TLphoneCall{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1355435489:
		m2 := &TLphoneCallDiscarded{data: &PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PhoneCall) To_phoneCallEmpty() *TLphoneCallEmpty {
	return &TLphoneCallEmpty{
		data: m.data,
	}
}
func (m PhoneCall) To_phoneCallWaiting() *TLphoneCallWaiting {
	return &TLphoneCallWaiting{
		data: m.data,
	}
}
func (m PhoneCall) To_phoneCallRequested() *TLphoneCallRequested {
	return &TLphoneCallRequested{
		data: m.data,
	}
}
func (m PhoneCall) To_phoneCallAccepted() *TLphoneCallAccepted {
	return &TLphoneCallAccepted{
		data: m.data,
	}
}
func (m PhoneCall) To_phoneCall() *TLphoneCall {
	return &TLphoneCall{
		data: m.data,
	}
}
func (m PhoneCall) To_phoneCallDiscarded() *TLphoneCallDiscarded {
	return &TLphoneCallDiscarded{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPaymentCredentials
//
func (m InputPaymentCredentials) Encode() []byte {
	switch m.constructor {
	case -1056001329:
		t := m.To_inputPaymentCredentialsSaved()
		return t.Encode()
	case 873977640:
		t := m.To_inputPaymentCredentials()
		return t.Encode()
	case 178373535:
		t := m.To_inputPaymentCredentialsApplePay()
		return t.Encode()
	case -905587442:
		t := m.To_inputPaymentCredentialsAndroidPay()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPaymentCredentials) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1056001329:
		m2 := &TLinputPaymentCredentialsSaved{data: &InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 873977640:
		m2 := &TLinputPaymentCredentials{data: &InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 178373535:
		m2 := &TLinputPaymentCredentialsApplePay{data: &InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -905587442:
		m2 := &TLinputPaymentCredentialsAndroidPay{data: &InputPaymentCredentials_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsSaved() *TLinputPaymentCredentialsSaved {
	return &TLinputPaymentCredentialsSaved{
		data: m.data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentials() *TLinputPaymentCredentials {
	return &TLinputPaymentCredentials{
		data: m.data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsApplePay() *TLinputPaymentCredentialsApplePay {
	return &TLinputPaymentCredentialsApplePay{
		data: m.data,
	}
}
func (m InputPaymentCredentials) To_inputPaymentCredentialsAndroidPay() *TLinputPaymentCredentialsAndroidPay {
	return &TLinputPaymentCredentialsAndroidPay{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AffectedMessages
//
func (m messages_AffectedMessages) Encode() []byte {
	switch m.constructor {
	case -2066640507:
		t := m.To_messages_affectedMessages()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_AffectedMessages) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2066640507:
		m2 := &TLmessages_affectedMessages{data: &messages_AffectedMessages_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_AffectedMessages) To_messages_affectedMessages() *TLmessages_affectedMessages {
	return &TLmessages_affectedMessages{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_AutoDownloadSettings
//
func (m account_AutoDownloadSettings) Encode() []byte {
	switch m.constructor {
	case 1674235686:
		t := m.To_account_autoDownloadSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_AutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1674235686:
		m2 := &TLaccount_autoDownloadSettings{data: &account_AutoDownloadSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_AutoDownloadSettings) To_account_autoDownloadSettings() *TLaccount_autoDownloadSettings {
	return &TLaccount_autoDownloadSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatParticipants
//
func (m ChatParticipants) Encode() []byte {
	switch m.constructor {
	case -57668565:
		t := m.To_chatParticipantsForbidden()
		return t.Encode()
	case 1061556205:
		t := m.To_chatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatParticipants) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -57668565:
		m2 := &TLchatParticipantsForbidden{data: &ChatParticipants_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1061556205:
		m2 := &TLchatParticipants{data: &ChatParticipants_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatParticipants) To_chatParticipantsForbidden() *TLchatParticipantsForbidden {
	return &TLchatParticipantsForbidden{
		data: m.data,
	}
}
func (m ChatParticipants) To_chatParticipants() *TLchatParticipants {
	return &TLchatParticipants{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatBannedRights
//
func (m ChatBannedRights) Encode() []byte {
	switch m.constructor {
	case -1626209256:
		t := m.To_chatBannedRights()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatBannedRights) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1626209256:
		m2 := &TLchatBannedRights{data: &ChatBannedRights_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatBannedRights) To_chatBannedRights() *TLchatBannedRights {
	return &TLchatBannedRights{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Config
//
func (m Config) Encode() []byte {
	switch m.constructor {
	case 856375399:
		t := m.To_config()
		return t.Encode()
	default:
		return nil
	}
}
func (m Config) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 856375399:
		m2 := &TLconfig{data: &Config_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Config) To_config() *TLconfig {
	return &TLconfig{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentRequestedInfo
//
func (m PaymentRequestedInfo) Encode() []byte {
	switch m.constructor {
	case -1868808300:
		t := m.To_paymentRequestedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentRequestedInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1868808300:
		m2 := &TLpaymentRequestedInfo{data: &PaymentRequestedInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PaymentRequestedInfo) To_paymentRequestedInfo() *TLpaymentRequestedInfo {
	return &TLpaymentRequestedInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Authorizations
//
func (m account_Authorizations) Encode() []byte {
	switch m.constructor {
	case 307276766:
		t := m.To_account_authorizations()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_Authorizations) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 307276766:
		m2 := &TLaccount_authorizations{data: &account_Authorizations_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_Authorizations) To_account_authorizations() *TLaccount_authorizations {
	return &TLaccount_authorizations{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_DiscussionMessage
//
func (m messages_DiscussionMessage) Encode() []byte {
	switch m.constructor {
	case -170029155:
		t := m.To_messages_discussionMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_DiscussionMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -170029155:
		m2 := &TLmessages_discussionMessage{data: &messages_DiscussionMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_DiscussionMessage) To_messages_discussionMessage() *TLmessages_discussionMessage {
	return &TLmessages_discussionMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_InactiveChats
//
func (m messages_InactiveChats) Encode() []byte {
	switch m.constructor {
	case -1456996667:
		t := m.To_messages_inactiveChats()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_InactiveChats) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1456996667:
		m2 := &TLmessages_inactiveChats{data: &messages_InactiveChats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_InactiveChats) To_messages_inactiveChats() *TLmessages_inactiveChats {
	return &TLmessages_inactiveChats{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValue
//
func (m SecureValue) Encode() []byte {
	switch m.constructor {
	case 411017418:
		t := m.To_secureValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValue) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 411017418:
		m2 := &TLsecureValue{data: &SecureValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureValue) To_secureValue() *TLsecureValue {
	return &TLsecureValue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:User
//
func (m User) Encode() []byte {
	switch m.constructor {
	case 537022650:
		t := m.To_userEmpty()
		return t.Encode()
	case -1820043071:
		t := m.To_user()
		return t.Encode()
	default:
		return nil
	}
}
func (m User) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 537022650:
		m2 := &TLuserEmpty{data: &User_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1820043071:
		m2 := &TLuser{data: &User_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m User) To_userEmpty() *TLuserEmpty {
	return &TLuserEmpty{
		data: m.data,
	}
}
func (m User) To_user() *TLuser {
	return &TLuser{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WallPaperSettings
//
func (m WallPaperSettings) Encode() []byte {
	switch m.constructor {
	case 84438264:
		t := m.To_wallPaperSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m WallPaperSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 84438264:
		m2 := &TLwallPaperSettings{data: &WallPaperSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WallPaperSettings) To_wallPaperSettings() *TLwallPaperSettings {
	return &TLwallPaperSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PostAddress
//
func (m PostAddress) Encode() []byte {
	switch m.constructor {
	case 512535275:
		t := m.To_postAddress()
		return t.Encode()
	default:
		return nil
	}
}
func (m PostAddress) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 512535275:
		m2 := &TLpostAddress{data: &PostAddress_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PostAddress) To_postAddress() *TLpostAddress {
	return &TLpostAddress{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Bool
//
func (m Bool) Encode() []byte {
	switch m.constructor {
	case -1132882121:
		t := m.To_boolFalse()
		return t.Encode()
	case -1720552011:
		t := m.To_boolTrue()
		return t.Encode()
	default:
		return nil
	}
}
func (m Bool) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1132882121:
		m2 := &TLboolFalse{data: &Bool_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1720552011:
		m2 := &TLboolTrue{data: &Bool_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Bool) To_boolFalse() *TLboolFalse {
	return &TLboolFalse{
		data: m.data,
	}
}
func (m Bool) To_boolTrue() *TLboolTrue {
	return &TLboolTrue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPrivacyKey
//
func (m InputPrivacyKey) Encode() []byte {
	switch m.constructor {
	case 1335282456:
		t := m.To_inputPrivacyKeyStatusTimestamp()
		return t.Encode()
	case -1107622874:
		t := m.To_inputPrivacyKeyChatInvite()
		return t.Encode()
	case -88417185:
		t := m.To_inputPrivacyKeyPhoneCall()
		return t.Encode()
	case -610373422:
		t := m.To_inputPrivacyKeyPhoneP2P()
		return t.Encode()
	case -1529000952:
		t := m.To_inputPrivacyKeyForwards()
		return t.Encode()
	case 1461304012:
		t := m.To_inputPrivacyKeyProfilePhoto()
		return t.Encode()
	case 55761658:
		t := m.To_inputPrivacyKeyPhoneNumber()
		return t.Encode()
	case -786326563:
		t := m.To_inputPrivacyKeyAddedByPhone()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPrivacyKey) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1335282456:
		m2 := &TLinputPrivacyKeyStatusTimestamp{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1107622874:
		m2 := &TLinputPrivacyKeyChatInvite{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -88417185:
		m2 := &TLinputPrivacyKeyPhoneCall{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -610373422:
		m2 := &TLinputPrivacyKeyPhoneP2P{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1529000952:
		m2 := &TLinputPrivacyKeyForwards{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1461304012:
		m2 := &TLinputPrivacyKeyProfilePhoto{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 55761658:
		m2 := &TLinputPrivacyKeyPhoneNumber{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -786326563:
		m2 := &TLinputPrivacyKeyAddedByPhone{data: &InputPrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPrivacyKey) To_inputPrivacyKeyStatusTimestamp() *TLinputPrivacyKeyStatusTimestamp {
	return &TLinputPrivacyKeyStatusTimestamp{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyChatInvite() *TLinputPrivacyKeyChatInvite {
	return &TLinputPrivacyKeyChatInvite{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneCall() *TLinputPrivacyKeyPhoneCall {
	return &TLinputPrivacyKeyPhoneCall{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneP2P() *TLinputPrivacyKeyPhoneP2P {
	return &TLinputPrivacyKeyPhoneP2P{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyForwards() *TLinputPrivacyKeyForwards {
	return &TLinputPrivacyKeyForwards{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyProfilePhoto() *TLinputPrivacyKeyProfilePhoto {
	return &TLinputPrivacyKeyProfilePhoto{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyPhoneNumber() *TLinputPrivacyKeyPhoneNumber {
	return &TLinputPrivacyKeyPhoneNumber{
		data: m.data,
	}
}
func (m InputPrivacyKey) To_inputPrivacyKeyAddedByPhone() *TLinputPrivacyKeyAddedByPhone {
	return &TLinputPrivacyKeyAddedByPhone{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputDocument
//
func (m InputDocument) Encode() []byte {
	switch m.constructor {
	case 1928391342:
		t := m.To_inputDocumentEmpty()
		return t.Encode()
	case 448771445:
		t := m.To_inputDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputDocument) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1928391342:
		m2 := &TLinputDocumentEmpty{data: &InputDocument_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 448771445:
		m2 := &TLinputDocument{data: &InputDocument_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputDocument) To_inputDocumentEmpty() *TLinputDocumentEmpty {
	return &TLinputDocumentEmpty{
		data: m.data,
	}
}
func (m InputDocument) To_inputDocument() *TLinputDocument {
	return &TLinputDocument{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsDateRangeDays
//
func (m StatsDateRangeDays) Encode() []byte {
	switch m.constructor {
	case -1237848657:
		t := m.To_statsDateRangeDays()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsDateRangeDays) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1237848657:
		m2 := &TLstatsDateRangeDays{data: &StatsDateRangeDays_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsDateRangeDays) To_statsDateRangeDays() *TLstatsDateRangeDays {
	return &TLstatsDateRangeDays{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatFull
//
func (m ChatFull) Encode() []byte {
	switch m.constructor {
	case 461151667:
		t := m.To_chatFull()
		return t.Encode()
	case -253335766:
		t := m.To_channelFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatFull) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 461151667:
		m2 := &TLchatFull{data: &ChatFull_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -253335766:
		m2 := &TLchannelFull{data: &ChatFull_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatFull) To_chatFull() *TLchatFull {
	return &TLchatFull{
		data: m.data,
	}
}
func (m ChatFull) To_channelFull() *TLchannelFull {
	return &TLchannelFull{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputGeoPoint
//
func (m InputGeoPoint) Encode() []byte {
	switch m.constructor {
	case -457104426:
		t := m.To_inputGeoPointEmpty()
		return t.Encode()
	case 1210199983:
		t := m.To_inputGeoPoint()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputGeoPoint) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -457104426:
		m2 := &TLinputGeoPointEmpty{data: &InputGeoPoint_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1210199983:
		m2 := &TLinputGeoPoint{data: &InputGeoPoint_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputGeoPoint) To_inputGeoPointEmpty() *TLinputGeoPointEmpty {
	return &TLinputGeoPointEmpty{
		data: m.data,
	}
}
func (m InputGeoPoint) To_inputGeoPoint() *TLinputGeoPoint {
	return &TLinputGeoPoint{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:True
//
func (m True) Encode() []byte {
	switch m.constructor {
	case 1072550713:
		t := m.To_true()
		return t.Encode()
	default:
		return nil
	}
}
func (m True) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1072550713:
		m2 := &TLtrue{data: &True_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m True) To_true() *TLtrue {
	return &TLtrue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_SentCode
//
func (m auth_SentCode) Encode() []byte {
	switch m.constructor {
	case 1577067778:
		t := m.To_auth_sentCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_SentCode) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1577067778:
		m2 := &TLauth_sentCode{data: &auth_SentCode_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_SentCode) To_auth_sentCode() *TLauth_sentCode {
	return &TLauth_sentCode{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollAnswer
//
func (m PollAnswer) Encode() []byte {
	switch m.constructor {
	case 1823064809:
		t := m.To_pollAnswer()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollAnswer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1823064809:
		m2 := &TLpollAnswer{data: &PollAnswer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PollAnswer) To_pollAnswer() *TLpollAnswer {
	return &TLpollAnswer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Invoice
//
func (m Invoice) Encode() []byte {
	switch m.constructor {
	case -1022713000:
		t := m.To_invoice()
		return t.Encode()
	default:
		return nil
	}
}
func (m Invoice) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1022713000:
		m2 := &TLinvoice{data: &Invoice_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Invoice) To_invoice() *TLinvoice {
	return &TLinvoice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopInviter
//
func (m StatsGroupTopInviter) Encode() []byte {
	switch m.constructor {
	case 831924812:
		t := m.To_statsGroupTopInviter()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopInviter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 831924812:
		m2 := &TLstatsGroupTopInviter{data: &StatsGroupTopInviter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopInviter) To_statsGroupTopInviter() *TLstatsGroupTopInviter {
	return &TLstatsGroupTopInviter{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSecureFile
//
func (m InputSecureFile) Encode() []byte {
	switch m.constructor {
	case 859091184:
		t := m.To_inputSecureFileUploaded()
		return t.Encode()
	case 1399317950:
		t := m.To_inputSecureFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSecureFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 859091184:
		m2 := &TLinputSecureFileUploaded{data: &InputSecureFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1399317950:
		m2 := &TLinputSecureFile{data: &InputSecureFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputSecureFile) To_inputSecureFileUploaded() *TLinputSecureFileUploaded {
	return &TLinputSecureFileUploaded{
		data: m.data,
	}
}
func (m InputSecureFile) To_inputSecureFile() *TLinputSecureFile {
	return &TLinputSecureFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureFile
//
func (m SecureFile) Encode() []byte {
	switch m.constructor {
	case 1679398724:
		t := m.To_secureFileEmpty()
		return t.Encode()
	case -534283678:
		t := m.To_secureFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1679398724:
		m2 := &TLsecureFileEmpty{data: &SecureFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -534283678:
		m2 := &TLsecureFile{data: &SecureFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureFile) To_secureFileEmpty() *TLsecureFileEmpty {
	return &TLsecureFileEmpty{
		data: m.data,
	}
}
func (m SecureFile) To_secureFile() *TLsecureFile {
	return &TLsecureFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Peer
//
func (m Peer) Encode() []byte {
	switch m.constructor {
	case -1649296275:
		t := m.To_peerUser()
		return t.Encode()
	case -1160714821:
		t := m.To_peerChat()
		return t.Encode()
	case -1109531342:
		t := m.To_peerChannel()
		return t.Encode()
	default:
		return nil
	}
}
func (m Peer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1649296275:
		m2 := &TLpeerUser{data: &Peer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1160714821:
		m2 := &TLpeerChat{data: &Peer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1109531342:
		m2 := &TLpeerChannel{data: &Peer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Peer) To_peerUser() *TLpeerUser {
	return &TLpeerUser{
		data: m.data,
	}
}
func (m Peer) To_peerChat() *TLpeerChat {
	return &TLpeerChat{
		data: m.data,
	}
}
func (m Peer) To_peerChannel() *TLpeerChannel {
	return &TLpeerChannel{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEventsFilter
//
func (m ChannelAdminLogEventsFilter) Encode() []byte {
	switch m.constructor {
	case -368018716:
		t := m.To_channelAdminLogEventsFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEventsFilter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -368018716:
		m2 := &TLchannelAdminLogEventsFilter{data: &ChannelAdminLogEventsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEventsFilter) To_channelAdminLogEventsFilter() *TLchannelAdminLogEventsFilter {
	return &TLchannelAdminLogEventsFilter{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_PromoData
//
func (m help_PromoData) Encode() []byte {
	switch m.constructor {
	case -1728664459:
		t := m.To_help_promoDataEmpty()
		return t.Encode()
	case -1942390465:
		t := m.To_help_promoData()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_PromoData) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1728664459:
		m2 := &TLhelp_promoDataEmpty{data: &help_PromoData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1942390465:
		m2 := &TLhelp_promoData{data: &help_PromoData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_PromoData) To_help_promoDataEmpty() *TLhelp_promoDataEmpty {
	return &TLhelp_promoDataEmpty{
		data: m.data,
	}
}
func (m help_PromoData) To_help_promoData() *TLhelp_promoData {
	return &TLhelp_promoData{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiKeywordsDifference
//
func (m EmojiKeywordsDifference) Encode() []byte {
	switch m.constructor {
	case 1556570557:
		t := m.To_emojiKeywordsDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiKeywordsDifference) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1556570557:
		m2 := &TLemojiKeywordsDifference{data: &EmojiKeywordsDifference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EmojiKeywordsDifference) To_emojiKeywordsDifference() *TLemojiKeywordsDifference {
	return &TLemojiKeywordsDifference{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:KeyboardButton
//
func (m KeyboardButton) Encode() []byte {
	switch m.constructor {
	case -1560655744:
		t := m.To_keyboardButton()
		return t.Encode()
	case 629866245:
		t := m.To_keyboardButtonUrl()
		return t.Encode()
	case 901503851:
		t := m.To_keyboardButtonCallback()
		return t.Encode()
	case -1318425559:
		t := m.To_keyboardButtonRequestPhone()
		return t.Encode()
	case -59151553:
		t := m.To_keyboardButtonRequestGeoLocation()
		return t.Encode()
	case 90744648:
		t := m.To_keyboardButtonSwitchInline()
		return t.Encode()
	case 1358175439:
		t := m.To_keyboardButtonGame()
		return t.Encode()
	case -1344716869:
		t := m.To_keyboardButtonBuy()
		return t.Encode()
	case 280464681:
		t := m.To_keyboardButtonUrlAuth()
		return t.Encode()
	case -802258988:
		t := m.To_inputKeyboardButtonUrlAuth()
		return t.Encode()
	case -1144565411:
		t := m.To_keyboardButtonRequestPoll()
		return t.Encode()
	default:
		return nil
	}
}
func (m KeyboardButton) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1560655744:
		m2 := &TLkeyboardButton{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 629866245:
		m2 := &TLkeyboardButtonUrl{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 901503851:
		m2 := &TLkeyboardButtonCallback{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1318425559:
		m2 := &TLkeyboardButtonRequestPhone{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -59151553:
		m2 := &TLkeyboardButtonRequestGeoLocation{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 90744648:
		m2 := &TLkeyboardButtonSwitchInline{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1358175439:
		m2 := &TLkeyboardButtonGame{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1344716869:
		m2 := &TLkeyboardButtonBuy{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 280464681:
		m2 := &TLkeyboardButtonUrlAuth{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -802258988:
		m2 := &TLinputKeyboardButtonUrlAuth{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1144565411:
		m2 := &TLkeyboardButtonRequestPoll{data: &KeyboardButton_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m KeyboardButton) To_keyboardButton() *TLkeyboardButton {
	return &TLkeyboardButton{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonUrl() *TLkeyboardButtonUrl {
	return &TLkeyboardButtonUrl{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonCallback() *TLkeyboardButtonCallback {
	return &TLkeyboardButtonCallback{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestPhone() *TLkeyboardButtonRequestPhone {
	return &TLkeyboardButtonRequestPhone{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestGeoLocation() *TLkeyboardButtonRequestGeoLocation {
	return &TLkeyboardButtonRequestGeoLocation{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonSwitchInline() *TLkeyboardButtonSwitchInline {
	return &TLkeyboardButtonSwitchInline{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonGame() *TLkeyboardButtonGame {
	return &TLkeyboardButtonGame{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonBuy() *TLkeyboardButtonBuy {
	return &TLkeyboardButtonBuy{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonUrlAuth() *TLkeyboardButtonUrlAuth {
	return &TLkeyboardButtonUrlAuth{
		data: m.data,
	}
}
func (m KeyboardButton) To_inputKeyboardButtonUrlAuth() *TLinputKeyboardButtonUrlAuth {
	return &TLinputKeyboardButtonUrlAuth{
		data: m.data,
	}
}
func (m KeyboardButton) To_keyboardButtonRequestPoll() *TLkeyboardButtonRequestPoll {
	return &TLkeyboardButtonRequestPoll{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Stickers
//
func (m messages_Stickers) Encode() []byte {
	switch m.constructor {
	case -244016606:
		t := m.To_messages_stickersNotModified()
		return t.Encode()
	case -463889475:
		t := m.To_messages_stickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_Stickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -244016606:
		m2 := &TLmessages_stickersNotModified{data: &messages_Stickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -463889475:
		m2 := &TLmessages_stickers{data: &messages_Stickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_Stickers) To_messages_stickersNotModified() *TLmessages_stickersNotModified {
	return &TLmessages_stickersNotModified{
		data: m.data,
	}
}
func (m messages_Stickers) To_messages_stickers() *TLmessages_stickers {
	return &TLmessages_stickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsURL
//
func (m StatsURL) Encode() []byte {
	switch m.constructor {
	case 1202287072:
		t := m.To_statsURL()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsURL) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1202287072:
		m2 := &TLstatsURL{data: &StatsURL_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsURL) To_statsURL() *TLstatsURL {
	return &TLstatsURL{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWebFileLocation
//
func (m InputWebFileLocation) Encode() []byte {
	switch m.constructor {
	case -1036396922:
		t := m.To_inputWebFileLocation()
		return t.Encode()
	case -1625153079:
		t := m.To_inputWebFileGeoPointLocation()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWebFileLocation) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1036396922:
		m2 := &TLinputWebFileLocation{data: &InputWebFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1625153079:
		m2 := &TLinputWebFileGeoPointLocation{data: &InputWebFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputWebFileLocation) To_inputWebFileLocation() *TLinputWebFileLocation {
	return &TLinputWebFileLocation{
		data: m.data,
	}
}
func (m InputWebFileLocation) To_inputWebFileGeoPointLocation() *TLinputWebFileGeoPointLocation {
	return &TLinputWebFileGeoPointLocation{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_PeerDialogs
//
func (m messages_PeerDialogs) Encode() []byte {
	switch m.constructor {
	case 863093588:
		t := m.To_messages_peerDialogs()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_PeerDialogs) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 863093588:
		m2 := &TLmessages_peerDialogs{data: &messages_PeerDialogs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_PeerDialogs) To_messages_peerDialogs() *TLmessages_peerDialogs {
	return &TLmessages_peerDialogs{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_ResolvedPeer
//
func (m contacts_ResolvedPeer) Encode() []byte {
	switch m.constructor {
	case 2131196633:
		t := m.To_contacts_resolvedPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_ResolvedPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2131196633:
		m2 := &TLcontacts_resolvedPeer{data: &contacts_ResolvedPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_ResolvedPeer) To_contacts_resolvedPeer() *TLcontacts_resolvedPeer {
	return &TLcontacts_resolvedPeer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Theme
//
func (m Theme) Encode() []byte {
	switch m.constructor {
	case 42930452:
		t := m.To_theme()
		return t.Encode()
	default:
		return nil
	}
}
func (m Theme) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 42930452:
		m2 := &TLtheme{data: &Theme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Theme) To_theme() *TLtheme {
	return &TLtheme{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerPack
//
func (m StickerPack) Encode() []byte {
	switch m.constructor {
	case 313694676:
		t := m.To_stickerPack()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerPack) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 313694676:
		m2 := &TLstickerPack{data: &StickerPack_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StickerPack) To_stickerPack() *TLstickerPack {
	return &TLstickerPack{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_LoginToken
//
func (m auth_LoginToken) Encode() []byte {
	switch m.constructor {
	case 1654593920:
		t := m.To_auth_loginToken()
		return t.Encode()
	case 110008598:
		t := m.To_auth_loginTokenMigrateTo()
		return t.Encode()
	case 957176926:
		t := m.To_auth_loginTokenSuccess()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_LoginToken) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1654593920:
		m2 := &TLauth_loginToken{data: &auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 110008598:
		m2 := &TLauth_loginTokenMigrateTo{data: &auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 957176926:
		m2 := &TLauth_loginTokenSuccess{data: &auth_LoginToken_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_LoginToken) To_auth_loginToken() *TLauth_loginToken {
	return &TLauth_loginToken{
		data: m.data,
	}
}
func (m auth_LoginToken) To_auth_loginTokenMigrateTo() *TLauth_loginTokenMigrateTo {
	return &TLauth_loginTokenMigrateTo{
		data: m.data,
	}
}
func (m auth_LoginToken) To_auth_loginTokenSuccess() *TLauth_loginTokenSuccess {
	return &TLauth_loginTokenSuccess{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PaymentSavedCredentials
//
func (m PaymentSavedCredentials) Encode() []byte {
	switch m.constructor {
	case -842892769:
		t := m.To_paymentSavedCredentialsCard()
		return t.Encode()
	default:
		return nil
	}
}
func (m PaymentSavedCredentials) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -842892769:
		m2 := &TLpaymentSavedCredentialsCard{data: &PaymentSavedCredentials_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PaymentSavedCredentials) To_paymentSavedCredentialsCard() *TLpaymentSavedCredentialsCard {
	return &TLpaymentSavedCredentialsCard{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:photos_Photos
//
func (m photos_Photos) Encode() []byte {
	switch m.constructor {
	case -1916114267:
		t := m.To_photos_photos()
		return t.Encode()
	case 352657236:
		t := m.To_photos_photosSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m photos_Photos) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1916114267:
		m2 := &TLphotos_photos{data: &photos_Photos_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 352657236:
		m2 := &TLphotos_photosSlice{data: &photos_Photos_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m photos_Photos) To_photos_photos() *TLphotos_photos {
	return &TLphotos_photos{
		data: m.data,
	}
}
func (m photos_Photos) To_photos_photosSlice() *TLphotos_photosSlice {
	return &TLphotos_photosSlice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageInteractionCounters
//
func (m MessageInteractionCounters) Encode() []byte {
	switch m.constructor {
	case -1387279939:
		t := m.To_messageInteractionCounters()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageInteractionCounters) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1387279939:
		m2 := &TLmessageInteractionCounters{data: &MessageInteractionCounters_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageInteractionCounters) To_messageInteractionCounters() *TLmessageInteractionCounters {
	return &TLmessageInteractionCounters{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:NearestDc
//
func (m NearestDc) Encode() []byte {
	switch m.constructor {
	case -1910892683:
		t := m.To_nearestDc()
		return t.Encode()
	default:
		return nil
	}
}
func (m NearestDc) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1910892683:
		m2 := &TLnearestDc{data: &NearestDc_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m NearestDc) To_nearestDc() *TLnearestDc {
	return &TLnearestDc{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ExportedChatInvite
//
func (m ExportedChatInvite) Encode() []byte {
	switch m.constructor {
	case 1776236393:
		t := m.To_chatInviteEmpty()
		return t.Encode()
	case -64092740:
		t := m.To_chatInviteExported()
		return t.Encode()
	default:
		return nil
	}
}
func (m ExportedChatInvite) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1776236393:
		m2 := &TLchatInviteEmpty{data: &ExportedChatInvite_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -64092740:
		m2 := &TLchatInviteExported{data: &ExportedChatInvite_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ExportedChatInvite) To_chatInviteEmpty() *TLchatInviteEmpty {
	return &TLchatInviteEmpty{
		data: m.data,
	}
}
func (m ExportedChatInvite) To_chatInviteExported() *TLchatInviteExported {
	return &TLchatInviteExported{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerSettings
//
func (m PeerSettings) Encode() []byte {
	switch m.constructor {
	case 1933519201:
		t := m.To_peerSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1933519201:
		m2 := &TLpeerSettings{data: &PeerSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PeerSettings) To_peerSettings() *TLpeerSettings {
	return &TLpeerSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Null
//
func (m Null) Encode() []byte {
	switch m.constructor {
	case 1450380236:
		t := m.To_null()
		return t.Encode()
	default:
		return nil
	}
}
func (m Null) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1450380236:
		m2 := &TLnull{data: &Null_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Null) To_null() *TLnull {
	return &TLnull{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInfo
//
func (m BotInfo) Encode() []byte {
	switch m.constructor {
	case -1729618630:
		t := m.To_botInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1729618630:
		m2 := &TLbotInfo{data: &BotInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BotInfo) To_botInfo() *TLbotInfo {
	return &TLbotInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelParticipantsFilter
//
func (m ChannelParticipantsFilter) Encode() []byte {
	switch m.constructor {
	case -566281095:
		t := m.To_channelParticipantsRecent()
		return t.Encode()
	case -1268741783:
		t := m.To_channelParticipantsAdmins()
		return t.Encode()
	case -1548400251:
		t := m.To_channelParticipantsKicked()
		return t.Encode()
	case -1328445861:
		t := m.To_channelParticipantsBots()
		return t.Encode()
	case 338142689:
		t := m.To_channelParticipantsBanned()
		return t.Encode()
	case 106343499:
		t := m.To_channelParticipantsSearch()
		return t.Encode()
	case -1150621555:
		t := m.To_channelParticipantsContacts()
		return t.Encode()
	case -531931925:
		t := m.To_channelParticipantsMentions()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelParticipantsFilter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -566281095:
		m2 := &TLchannelParticipantsRecent{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1268741783:
		m2 := &TLchannelParticipantsAdmins{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1548400251:
		m2 := &TLchannelParticipantsKicked{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1328445861:
		m2 := &TLchannelParticipantsBots{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 338142689:
		m2 := &TLchannelParticipantsBanned{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 106343499:
		m2 := &TLchannelParticipantsSearch{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1150621555:
		m2 := &TLchannelParticipantsContacts{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -531931925:
		m2 := &TLchannelParticipantsMentions{data: &ChannelParticipantsFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelParticipantsFilter) To_channelParticipantsRecent() *TLchannelParticipantsRecent {
	return &TLchannelParticipantsRecent{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsAdmins() *TLchannelParticipantsAdmins {
	return &TLchannelParticipantsAdmins{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsKicked() *TLchannelParticipantsKicked {
	return &TLchannelParticipantsKicked{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsBots() *TLchannelParticipantsBots {
	return &TLchannelParticipantsBots{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsBanned() *TLchannelParticipantsBanned {
	return &TLchannelParticipantsBanned{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsSearch() *TLchannelParticipantsSearch {
	return &TLchannelParticipantsSearch{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsContacts() *TLchannelParticipantsContacts {
	return &TLchannelParticipantsContacts{
		data: m.data,
	}
}
func (m ChannelParticipantsFilter) To_channelParticipantsMentions() *TLchannelParticipantsMentions {
	return &TLchannelParticipantsMentions{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_ChatFull
//
func (m messages_ChatFull) Encode() []byte {
	switch m.constructor {
	case -438840932:
		t := m.To_messages_chatFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_ChatFull) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -438840932:
		m2 := &TLmessages_chatFull{data: &messages_ChatFull_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_ChatFull) To_messages_chatFull() *TLmessages_chatFull {
	return &TLmessages_chatFull{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatInvite
//
func (m ChatInvite) Encode() []byte {
	switch m.constructor {
	case 1516793212:
		t := m.To_chatInviteAlready()
		return t.Encode()
	case -540871282:
		t := m.To_chatInvite()
		return t.Encode()
	case 1634294960:
		t := m.To_chatInvitePeek()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatInvite) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1516793212:
		m2 := &TLchatInviteAlready{data: &ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -540871282:
		m2 := &TLchatInvite{data: &ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1634294960:
		m2 := &TLchatInvitePeek{data: &ChatInvite_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatInvite) To_chatInviteAlready() *TLchatInviteAlready {
	return &TLchatInviteAlready{
		data: m.data,
	}
}
func (m ChatInvite) To_chatInvite() *TLchatInvite {
	return &TLchatInvite{
		data: m.data,
	}
}
func (m ChatInvite) To_chatInvitePeek() *TLchatInvitePeek {
	return &TLchatInvitePeek{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatOnlines
//
func (m ChatOnlines) Encode() []byte {
	switch m.constructor {
	case -264117680:
		t := m.To_chatOnlines()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatOnlines) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -264117680:
		m2 := &TLchatOnlines{data: &ChatOnlines_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatOnlines) To_chatOnlines() *TLchatOnlines {
	return &TLchatOnlines{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_Difference
//
func (m updates_Difference) Encode() []byte {
	switch m.constructor {
	case 1567990072:
		t := m.To_updates_differenceEmpty()
		return t.Encode()
	case 16030880:
		t := m.To_updates_difference()
		return t.Encode()
	case -1459938943:
		t := m.To_updates_differenceSlice()
		return t.Encode()
	case 1258196845:
		t := m.To_updates_differenceTooLong()
		return t.Encode()
	default:
		return nil
	}
}
func (m updates_Difference) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1567990072:
		m2 := &TLupdates_differenceEmpty{data: &updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 16030880:
		m2 := &TLupdates_difference{data: &updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1459938943:
		m2 := &TLupdates_differenceSlice{data: &updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1258196845:
		m2 := &TLupdates_differenceTooLong{data: &updates_Difference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m updates_Difference) To_updates_differenceEmpty() *TLupdates_differenceEmpty {
	return &TLupdates_differenceEmpty{
		data: m.data,
	}
}
func (m updates_Difference) To_updates_difference() *TLupdates_difference {
	return &TLupdates_difference{
		data: m.data,
	}
}
func (m updates_Difference) To_updates_differenceSlice() *TLupdates_differenceSlice {
	return &TLupdates_differenceSlice{
		data: m.data,
	}
}
func (m updates_Difference) To_updates_differenceTooLong() *TLupdates_differenceTooLong {
	return &TLupdates_differenceTooLong{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeerCategory
//
func (m TopPeerCategory) Encode() []byte {
	switch m.constructor {
	case -1419371685:
		t := m.To_topPeerCategoryBotsPM()
		return t.Encode()
	case 344356834:
		t := m.To_topPeerCategoryBotsInline()
		return t.Encode()
	case 104314861:
		t := m.To_topPeerCategoryCorrespondents()
		return t.Encode()
	case -1122524854:
		t := m.To_topPeerCategoryGroups()
		return t.Encode()
	case 371037736:
		t := m.To_topPeerCategoryChannels()
		return t.Encode()
	case 511092620:
		t := m.To_topPeerCategoryPhoneCalls()
		return t.Encode()
	case -1472172887:
		t := m.To_topPeerCategoryForwardUsers()
		return t.Encode()
	case -68239120:
		t := m.To_topPeerCategoryForwardChats()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeerCategory) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1419371685:
		m2 := &TLtopPeerCategoryBotsPM{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 344356834:
		m2 := &TLtopPeerCategoryBotsInline{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 104314861:
		m2 := &TLtopPeerCategoryCorrespondents{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1122524854:
		m2 := &TLtopPeerCategoryGroups{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 371037736:
		m2 := &TLtopPeerCategoryChannels{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 511092620:
		m2 := &TLtopPeerCategoryPhoneCalls{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1472172887:
		m2 := &TLtopPeerCategoryForwardUsers{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -68239120:
		m2 := &TLtopPeerCategoryForwardChats{data: &TopPeerCategory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m TopPeerCategory) To_topPeerCategoryBotsPM() *TLtopPeerCategoryBotsPM {
	return &TLtopPeerCategoryBotsPM{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryBotsInline() *TLtopPeerCategoryBotsInline {
	return &TLtopPeerCategoryBotsInline{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryCorrespondents() *TLtopPeerCategoryCorrespondents {
	return &TLtopPeerCategoryCorrespondents{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryGroups() *TLtopPeerCategoryGroups {
	return &TLtopPeerCategoryGroups{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryChannels() *TLtopPeerCategoryChannels {
	return &TLtopPeerCategoryChannels{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryPhoneCalls() *TLtopPeerCategoryPhoneCalls {
	return &TLtopPeerCategoryPhoneCalls{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryForwardUsers() *TLtopPeerCategoryForwardUsers {
	return &TLtopPeerCategoryForwardUsers{
		data: m.data,
	}
}
func (m TopPeerCategory) To_topPeerCategoryForwardChats() *TLtopPeerCategoryForwardChats {
	return &TLtopPeerCategoryForwardChats{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReplyMarkup
//
func (m ReplyMarkup) Encode() []byte {
	switch m.constructor {
	case -1606526075:
		t := m.To_replyKeyboardHide()
		return t.Encode()
	case -200242528:
		t := m.To_replyKeyboardForceReply()
		return t.Encode()
	case 889353612:
		t := m.To_replyKeyboardMarkup()
		return t.Encode()
	case 1218642516:
		t := m.To_replyInlineMarkup()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReplyMarkup) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1606526075:
		m2 := &TLreplyKeyboardHide{data: &ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -200242528:
		m2 := &TLreplyKeyboardForceReply{data: &ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 889353612:
		m2 := &TLreplyKeyboardMarkup{data: &ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1218642516:
		m2 := &TLreplyInlineMarkup{data: &ReplyMarkup_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ReplyMarkup) To_replyKeyboardHide() *TLreplyKeyboardHide {
	return &TLreplyKeyboardHide{
		data: m.data,
	}
}
func (m ReplyMarkup) To_replyKeyboardForceReply() *TLreplyKeyboardForceReply {
	return &TLreplyKeyboardForceReply{
		data: m.data,
	}
}
func (m ReplyMarkup) To_replyKeyboardMarkup() *TLreplyKeyboardMarkup {
	return &TLreplyKeyboardMarkup{
		data: m.data,
	}
}
func (m ReplyMarkup) To_replyInlineMarkup() *TLreplyInlineMarkup {
	return &TLreplyInlineMarkup{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFolderPeer
//
func (m InputFolderPeer) Encode() []byte {
	switch m.constructor {
	case -70073706:
		t := m.To_inputFolderPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFolderPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -70073706:
		m2 := &TLinputFolderPeer{data: &InputFolderPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputFolderPeer) To_inputFolderPeer() *TLinputFolderPeer {
	return &TLinputFolderPeer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopAdmin
//
func (m StatsGroupTopAdmin) Encode() []byte {
	switch m.constructor {
	case 1611985938:
		t := m.To_statsGroupTopAdmin()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopAdmin) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1611985938:
		m2 := &TLstatsGroupTopAdmin{data: &StatsGroupTopAdmin_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopAdmin) To_statsGroupTopAdmin() *TLstatsGroupTopAdmin {
	return &TLstatsGroupTopAdmin{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_MessageViews
//
func (m messages_MessageViews) Encode() []byte {
	switch m.constructor {
	case -1228606141:
		t := m.To_messages_messageViews()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_MessageViews) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1228606141:
		m2 := &TLmessages_messageViews{data: &messages_MessageViews_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_MessageViews) To_messages_messageViews() *TLmessages_messageViews {
	return &TLmessages_messageViews{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WallPaper
//
func (m WallPaper) Encode() []byte {
	switch m.constructor {
	case -1539849235:
		t := m.To_wallPaper()
		return t.Encode()
	case -1963717851:
		t := m.To_wallPaperNoFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m WallPaper) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1539849235:
		m2 := &TLwallPaper{data: &WallPaper_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1963717851:
		m2 := &TLwallPaperNoFile{data: &WallPaper_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WallPaper) To_wallPaper() *TLwallPaper {
	return &TLwallPaper{
		data: m.data,
	}
}
func (m WallPaper) To_wallPaperNoFile() *TLwallPaperNoFile {
	return &TLwallPaperNoFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SearchCounter
//
func (m messages_SearchCounter) Encode() []byte {
	switch m.constructor {
	case -398136321:
		t := m.To_messages_searchCounter()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_SearchCounter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -398136321:
		m2 := &TLmessages_searchCounter{data: &messages_SearchCounter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_SearchCounter) To_messages_searchCounter() *TLmessages_searchCounter {
	return &TLmessages_searchCounter{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_ChannelDifference
//
func (m updates_ChannelDifference) Encode() []byte {
	switch m.constructor {
	case 1041346555:
		t := m.To_updates_channelDifferenceEmpty()
		return t.Encode()
	case -1531132162:
		t := m.To_updates_channelDifferenceTooLong()
		return t.Encode()
	case 543450958:
		t := m.To_updates_channelDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m updates_ChannelDifference) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1041346555:
		m2 := &TLupdates_channelDifferenceEmpty{data: &updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1531132162:
		m2 := &TLupdates_channelDifferenceTooLong{data: &updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 543450958:
		m2 := &TLupdates_channelDifference{data: &updates_ChannelDifference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m updates_ChannelDifference) To_updates_channelDifferenceEmpty() *TLupdates_channelDifferenceEmpty {
	return &TLupdates_channelDifferenceEmpty{
		data: m.data,
	}
}
func (m updates_ChannelDifference) To_updates_channelDifferenceTooLong() *TLupdates_channelDifferenceTooLong {
	return &TLupdates_channelDifferenceTooLong{
		data: m.data,
	}
}
func (m updates_ChannelDifference) To_updates_channelDifference() *TLupdates_channelDifference {
	return &TLupdates_channelDifference{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PrivacyRule
//
func (m PrivacyRule) Encode() []byte {
	switch m.constructor {
	case -123988:
		t := m.To_privacyValueAllowContacts()
		return t.Encode()
	case 1698855810:
		t := m.To_privacyValueAllowAll()
		return t.Encode()
	case 1297858060:
		t := m.To_privacyValueAllowUsers()
		return t.Encode()
	case -125240806:
		t := m.To_privacyValueDisallowContacts()
		return t.Encode()
	case -1955338397:
		t := m.To_privacyValueDisallowAll()
		return t.Encode()
	case 209668535:
		t := m.To_privacyValueDisallowUsers()
		return t.Encode()
	case 415136107:
		t := m.To_privacyValueAllowChatParticipants()
		return t.Encode()
	case -1397881200:
		t := m.To_privacyValueDisallowChatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m PrivacyRule) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -123988:
		m2 := &TLprivacyValueAllowContacts{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1698855810:
		m2 := &TLprivacyValueAllowAll{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1297858060:
		m2 := &TLprivacyValueAllowUsers{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -125240806:
		m2 := &TLprivacyValueDisallowContacts{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1955338397:
		m2 := &TLprivacyValueDisallowAll{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 209668535:
		m2 := &TLprivacyValueDisallowUsers{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 415136107:
		m2 := &TLprivacyValueAllowChatParticipants{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1397881200:
		m2 := &TLprivacyValueDisallowChatParticipants{data: &PrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PrivacyRule) To_privacyValueAllowContacts() *TLprivacyValueAllowContacts {
	return &TLprivacyValueAllowContacts{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueAllowAll() *TLprivacyValueAllowAll {
	return &TLprivacyValueAllowAll{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueAllowUsers() *TLprivacyValueAllowUsers {
	return &TLprivacyValueAllowUsers{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowContacts() *TLprivacyValueDisallowContacts {
	return &TLprivacyValueDisallowContacts{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowAll() *TLprivacyValueDisallowAll {
	return &TLprivacyValueDisallowAll{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowUsers() *TLprivacyValueDisallowUsers {
	return &TLprivacyValueDisallowUsers{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueAllowChatParticipants() *TLprivacyValueAllowChatParticipants {
	return &TLprivacyValueAllowChatParticipants{
		data: m.data,
	}
}
func (m PrivacyRule) To_privacyValueDisallowChatParticipants() *TLprivacyValueDisallowChatParticipants {
	return &TLprivacyValueDisallowChatParticipants{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputNotifyPeer
//
func (m InputNotifyPeer) Encode() []byte {
	switch m.constructor {
	case -1195615476:
		t := m.To_inputNotifyPeer()
		return t.Encode()
	case 423314455:
		t := m.To_inputNotifyUsers()
		return t.Encode()
	case 1251338318:
		t := m.To_inputNotifyChats()
		return t.Encode()
	case -1311015810:
		t := m.To_inputNotifyBroadcasts()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputNotifyPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1195615476:
		m2 := &TLinputNotifyPeer{data: &InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 423314455:
		m2 := &TLinputNotifyUsers{data: &InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1251338318:
		m2 := &TLinputNotifyChats{data: &InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1311015810:
		m2 := &TLinputNotifyBroadcasts{data: &InputNotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputNotifyPeer) To_inputNotifyPeer() *TLinputNotifyPeer {
	return &TLinputNotifyPeer{
		data: m.data,
	}
}
func (m InputNotifyPeer) To_inputNotifyUsers() *TLinputNotifyUsers {
	return &TLinputNotifyUsers{
		data: m.data,
	}
}
func (m InputNotifyPeer) To_inputNotifyChats() *TLinputNotifyChats {
	return &TLinputNotifyChats{
		data: m.data,
	}
}
func (m InputNotifyPeer) To_inputNotifyBroadcasts() *TLinputNotifyBroadcasts {
	return &TLinputNotifyBroadcasts{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageReplies
//
func (m MessageReplies) Encode() []byte {
	switch m.constructor {
	case 1093204652:
		t := m.To_messageReplies()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageReplies) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1093204652:
		m2 := &TLmessageReplies{data: &MessageReplies_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageReplies) To_messageReplies() *TLmessageReplies {
	return &TLmessageReplies{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PrivacyKey
//
func (m PrivacyKey) Encode() []byte {
	switch m.constructor {
	case -1137792208:
		t := m.To_privacyKeyStatusTimestamp()
		return t.Encode()
	case 1343122938:
		t := m.To_privacyKeyChatInvite()
		return t.Encode()
	case 1030105979:
		t := m.To_privacyKeyPhoneCall()
		return t.Encode()
	case 961092808:
		t := m.To_privacyKeyPhoneP2P()
		return t.Encode()
	case 1777096355:
		t := m.To_privacyKeyForwards()
		return t.Encode()
	case -1777000467:
		t := m.To_privacyKeyProfilePhoto()
		return t.Encode()
	case -778378131:
		t := m.To_privacyKeyPhoneNumber()
		return t.Encode()
	case 1124062251:
		t := m.To_privacyKeyAddedByPhone()
		return t.Encode()
	default:
		return nil
	}
}
func (m PrivacyKey) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1137792208:
		m2 := &TLprivacyKeyStatusTimestamp{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1343122938:
		m2 := &TLprivacyKeyChatInvite{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1030105979:
		m2 := &TLprivacyKeyPhoneCall{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 961092808:
		m2 := &TLprivacyKeyPhoneP2P{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1777096355:
		m2 := &TLprivacyKeyForwards{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1777000467:
		m2 := &TLprivacyKeyProfilePhoto{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -778378131:
		m2 := &TLprivacyKeyPhoneNumber{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1124062251:
		m2 := &TLprivacyKeyAddedByPhone{data: &PrivacyKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PrivacyKey) To_privacyKeyStatusTimestamp() *TLprivacyKeyStatusTimestamp {
	return &TLprivacyKeyStatusTimestamp{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyChatInvite() *TLprivacyKeyChatInvite {
	return &TLprivacyKeyChatInvite{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneCall() *TLprivacyKeyPhoneCall {
	return &TLprivacyKeyPhoneCall{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneP2P() *TLprivacyKeyPhoneP2P {
	return &TLprivacyKeyPhoneP2P{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyForwards() *TLprivacyKeyForwards {
	return &TLprivacyKeyForwards{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyProfilePhoto() *TLprivacyKeyProfilePhoto {
	return &TLprivacyKeyProfilePhoto{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyPhoneNumber() *TLprivacyKeyPhoneNumber {
	return &TLprivacyKeyPhoneNumber{
		data: m.data,
	}
}
func (m PrivacyKey) To_privacyKeyAddedByPhone() *TLprivacyKeyAddedByPhone {
	return &TLprivacyKeyAddedByPhone{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_Support
//
func (m help_Support) Encode() []byte {
	switch m.constructor {
	case 398898678:
		t := m.To_help_support()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_Support) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 398898678:
		m2 := &TLhelp_support{data: &help_Support_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_Support) To_help_support() *TLhelp_support {
	return &TLhelp_support{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputGame
//
func (m InputGame) Encode() []byte {
	switch m.constructor {
	case 53231223:
		t := m.To_inputGameID()
		return t.Encode()
	case -1020139510:
		t := m.To_inputGameShortName()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputGame) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 53231223:
		m2 := &TLinputGameID{data: &InputGame_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1020139510:
		m2 := &TLinputGameShortName{data: &InputGame_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputGame) To_inputGameID() *TLinputGameID {
	return &TLinputGameID{
		data: m.data,
	}
}
func (m InputGame) To_inputGameShortName() *TLinputGameShortName {
	return &TLinputGameShortName{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_SupportName
//
func (m help_SupportName) Encode() []byte {
	switch m.constructor {
	case -1945767479:
		t := m.To_help_supportName()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_SupportName) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1945767479:
		m2 := &TLhelp_supportName{data: &help_SupportName_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_SupportName) To_help_supportName() *TLhelp_supportName {
	return &TLhelp_supportName{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhotoSize
//
func (m PhotoSize) Encode() []byte {
	switch m.constructor {
	case 236446268:
		t := m.To_photoSizeEmpty()
		return t.Encode()
	case 2009052699:
		t := m.To_photoSize()
		return t.Encode()
	case -374917894:
		t := m.To_photoCachedSize()
		return t.Encode()
	case -525288402:
		t := m.To_photoStrippedSize()
		return t.Encode()
	case 1520986705:
		t := m.To_photoSizeProgressive()
		return t.Encode()
	case -668906175:
		t := m.To_photoPathSize()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhotoSize) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 236446268:
		m2 := &TLphotoSizeEmpty{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2009052699:
		m2 := &TLphotoSize{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -374917894:
		m2 := &TLphotoCachedSize{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -525288402:
		m2 := &TLphotoStrippedSize{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1520986705:
		m2 := &TLphotoSizeProgressive{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -668906175:
		m2 := &TLphotoPathSize{data: &PhotoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PhotoSize) To_photoSizeEmpty() *TLphotoSizeEmpty {
	return &TLphotoSizeEmpty{
		data: m.data,
	}
}
func (m PhotoSize) To_photoSize() *TLphotoSize {
	return &TLphotoSize{
		data: m.data,
	}
}
func (m PhotoSize) To_photoCachedSize() *TLphotoCachedSize {
	return &TLphotoCachedSize{
		data: m.data,
	}
}
func (m PhotoSize) To_photoStrippedSize() *TLphotoStrippedSize {
	return &TLphotoStrippedSize{
		data: m.data,
	}
}
func (m PhotoSize) To_photoSizeProgressive() *TLphotoSizeProgressive {
	return &TLphotoSizeProgressive{
		data: m.data,
	}
}
func (m PhotoSize) To_photoPathSize() *TLphotoPathSize {
	return &TLphotoPathSize{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSecureValue
//
func (m InputSecureValue) Encode() []byte {
	switch m.constructor {
	case -618540889:
		t := m.To_inputSecureValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSecureValue) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -618540889:
		m2 := &TLinputSecureValue{data: &InputSecureValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputSecureValue) To_inputSecureValue() *TLinputSecureValue {
	return &TLinputSecureValue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeer
//
func (m TopPeer) Encode() []byte {
	switch m.constructor {
	case -305282981:
		t := m.To_topPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -305282981:
		m2 := &TLtopPeer{data: &TopPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m TopPeer) To_topPeer() *TLtopPeer {
	return &TLtopPeer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FileLocation
//
func (m FileLocation) Encode() []byte {
	switch m.constructor {
	case -1132476723:
		t := m.To_fileLocationToBeDeprecated()
		return t.Encode()
	default:
		return nil
	}
}
func (m FileLocation) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1132476723:
		m2 := &TLfileLocationToBeDeprecated{data: &FileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m FileLocation) To_fileLocationToBeDeprecated() *TLfileLocationToBeDeprecated {
	return &TLfileLocationToBeDeprecated{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneConnection
//
func (m PhoneConnection) Encode() []byte {
	switch m.constructor {
	case -1655957568:
		t := m.To_phoneConnection()
		return t.Encode()
	case 1667228533:
		t := m.To_phoneConnectionWebrtc()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneConnection) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1655957568:
		m2 := &TLphoneConnection{data: &PhoneConnection_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1667228533:
		m2 := &TLphoneConnectionWebrtc{data: &PhoneConnection_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PhoneConnection) To_phoneConnection() *TLphoneConnection {
	return &TLphoneConnection{
		data: m.data,
	}
}
func (m PhoneConnection) To_phoneConnectionWebrtc() *TLphoneConnectionWebrtc {
	return &TLphoneConnectionWebrtc{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputUser
//
func (m InputUser) Encode() []byte {
	switch m.constructor {
	case -1182234929:
		t := m.To_inputUserEmpty()
		return t.Encode()
	case -138301121:
		t := m.To_inputUserSelf()
		return t.Encode()
	case -668391402:
		t := m.To_inputUser()
		return t.Encode()
	case 756118935:
		t := m.To_inputUserFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputUser) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1182234929:
		m2 := &TLinputUserEmpty{data: &InputUser_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -138301121:
		m2 := &TLinputUserSelf{data: &InputUser_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -668391402:
		m2 := &TLinputUser{data: &InputUser_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 756118935:
		m2 := &TLinputUserFromMessage{data: &InputUser_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputUser) To_inputUserEmpty() *TLinputUserEmpty {
	return &TLinputUserEmpty{
		data: m.data,
	}
}
func (m InputUser) To_inputUserSelf() *TLinputUserSelf {
	return &TLinputUserSelf{
		data: m.data,
	}
}
func (m InputUser) To_inputUser() *TLinputUser {
	return &TLinputUser{
		data: m.data,
	}
}
func (m InputUser) To_inputUserFromMessage() *TLinputUserFromMessage {
	return &TLinputUserFromMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFile
//
func (m InputFile) Encode() []byte {
	switch m.constructor {
	case -181407105:
		t := m.To_inputFile()
		return t.Encode()
	case -95482955:
		t := m.To_inputFileBig()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -181407105:
		m2 := &TLinputFile{data: &InputFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -95482955:
		m2 := &TLinputFileBig{data: &InputFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputFile) To_inputFile() *TLinputFile {
	return &TLinputFile{
		data: m.data,
	}
}
func (m InputFile) To_inputFileBig() *TLinputFileBig {
	return &TLinputFileBig{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:VideoSize
//
func (m VideoSize) Encode() []byte {
	switch m.constructor {
	case -399391402:
		t := m.To_videoSize()
		return t.Encode()
	default:
		return nil
	}
}
func (m VideoSize) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -399391402:
		m2 := &TLvideoSize{data: &VideoSize_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m VideoSize) To_videoSize() *TLvideoSize {
	return &TLvideoSize{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Takeout
//
func (m account_Takeout) Encode() []byte {
	switch m.constructor {
	case 1304052993:
		t := m.To_account_takeout()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_Takeout) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1304052993:
		m2 := &TLaccount_takeout{data: &account_Takeout_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_Takeout) To_account_takeout() *TLaccount_takeout {
	return &TLaccount_takeout{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_File
//
func (m upload_File) Encode() []byte {
	switch m.constructor {
	case 157948117:
		t := m.To_upload_file()
		return t.Encode()
	case -242427324:
		t := m.To_upload_fileCdnRedirect()
		return t.Encode()
	default:
		return nil
	}
}
func (m upload_File) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 157948117:
		m2 := &TLupload_file{data: &upload_File_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -242427324:
		m2 := &TLupload_fileCdnRedirect{data: &upload_File_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m upload_File) To_upload_file() *TLupload_file {
	return &TLupload_file{
		data: m.data,
	}
}
func (m upload_File) To_upload_fileCdnRedirect() *TLupload_fileCdnRedirect {
	return &TLupload_fileCdnRedirect{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackDifference
//
func (m LangPackDifference) Encode() []byte {
	switch m.constructor {
	case -209337866:
		t := m.To_langPackDifference()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackDifference) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -209337866:
		m2 := &TLlangPackDifference{data: &LangPackDifference_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m LangPackDifference) To_langPackDifference() *TLlangPackDifference {
	return &TLlangPackDifference{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerBlocked
//
func (m PeerBlocked) Encode() []byte {
	switch m.constructor {
	case -386039788:
		t := m.To_peerBlocked()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerBlocked) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -386039788:
		m2 := &TLpeerBlocked{data: &PeerBlocked_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PeerBlocked) To_peerBlocked() *TLpeerBlocked {
	return &TLpeerBlocked{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:phone_PhoneCall
//
func (m phone_PhoneCall) Encode() []byte {
	switch m.constructor {
	case -326966976:
		t := m.To_phone_phoneCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m phone_PhoneCall) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -326966976:
		m2 := &TLphone_phoneCall{data: &phone_PhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m phone_PhoneCall) To_phone_phoneCall() *TLphone_phoneCall {
	return &TLphone_phoneCall{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecurePlainData
//
func (m SecurePlainData) Encode() []byte {
	switch m.constructor {
	case 2103482845:
		t := m.To_securePlainPhone()
		return t.Encode()
	case 569137759:
		t := m.To_securePlainEmail()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecurePlainData) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2103482845:
		m2 := &TLsecurePlainPhone{data: &SecurePlainData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 569137759:
		m2 := &TLsecurePlainEmail{data: &SecurePlainData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecurePlainData) To_securePlainPhone() *TLsecurePlainPhone {
	return &TLsecurePlainPhone{
		data: m.data,
	}
}
func (m SecurePlainData) To_securePlainEmail() *TLsecurePlainEmail {
	return &TLsecurePlainEmail{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Update
//
func (m Update) Encode() []byte {
	switch m.constructor {
	case 522914557:
		t := m.To_updateNewMessage()
		return t.Encode()
	case 1318109142:
		t := m.To_updateMessageID()
		return t.Encode()
	case -1576161051:
		t := m.To_updateDeleteMessages()
		return t.Encode()
	case 1548249383:
		t := m.To_updateUserTyping()
		return t.Encode()
	case -1704596961:
		t := m.To_updateChatUserTyping()
		return t.Encode()
	case 125178264:
		t := m.To_updateChatParticipants()
		return t.Encode()
	case 469489699:
		t := m.To_updateUserStatus()
		return t.Encode()
	case -1489818765:
		t := m.To_updateUserName()
		return t.Encode()
	case -1791935732:
		t := m.To_updateUserPhoto()
		return t.Encode()
	case 314359194:
		t := m.To_updateNewEncryptedMessage()
		return t.Encode()
	case 386986326:
		t := m.To_updateEncryptedChatTyping()
		return t.Encode()
	case -1264392051:
		t := m.To_updateEncryption()
		return t.Encode()
	case 956179895:
		t := m.To_updateEncryptedMessagesRead()
		return t.Encode()
	case -364179876:
		t := m.To_updateChatParticipantAdd()
		return t.Encode()
	case 1851755554:
		t := m.To_updateChatParticipantDelete()
		return t.Encode()
	case -1906403213:
		t := m.To_updateDcOptions()
		return t.Encode()
	case -1094555409:
		t := m.To_updateNotifySettings()
		return t.Encode()
	case -337352679:
		t := m.To_updateServiceNotification()
		return t.Encode()
	case -298113238:
		t := m.To_updatePrivacy()
		return t.Encode()
	case 314130811:
		t := m.To_updateUserPhone()
		return t.Encode()
	case -1667805217:
		t := m.To_updateReadHistoryInbox()
		return t.Encode()
	case 791617983:
		t := m.To_updateReadHistoryOutbox()
		return t.Encode()
	case 2139689491:
		t := m.To_updateWebPage()
		return t.Encode()
	case 1757493555:
		t := m.To_updateReadMessagesContents()
		return t.Encode()
	case -352032773:
		t := m.To_updateChannelTooLong()
		return t.Encode()
	case -1227598250:
		t := m.To_updateChannel()
		return t.Encode()
	case 1656358105:
		t := m.To_updateNewChannelMessage()
		return t.Encode()
	case 856380452:
		t := m.To_updateReadChannelInbox()
		return t.Encode()
	case -1015733815:
		t := m.To_updateDeleteChannelMessages()
		return t.Encode()
	case -1734268085:
		t := m.To_updateChannelMessageViews()
		return t.Encode()
	case -1232070311:
		t := m.To_updateChatParticipantAdmin()
		return t.Encode()
	case 1753886890:
		t := m.To_updateNewStickerSet()
		return t.Encode()
	case 196268545:
		t := m.To_updateStickerSetsOrder()
		return t.Encode()
	case 1135492588:
		t := m.To_updateStickerSets()
		return t.Encode()
	case -1821035490:
		t := m.To_updateSavedGifs()
		return t.Encode()
	case 1417832080:
		t := m.To_updateBotInlineQuery()
		return t.Encode()
	case 239663460:
		t := m.To_updateBotInlineSend()
		return t.Encode()
	case 457133559:
		t := m.To_updateEditChannelMessage()
		return t.Encode()
	case -415938591:
		t := m.To_updateBotCallbackQuery()
		return t.Encode()
	case -469536605:
		t := m.To_updateEditMessage()
		return t.Encode()
	case -103646630:
		t := m.To_updateInlineBotCallbackQuery()
		return t.Encode()
	case 634833351:
		t := m.To_updateReadChannelOutbox()
		return t.Encode()
	case -299124375:
		t := m.To_updateDraftMessage()
		return t.Encode()
	case 1461528386:
		t := m.To_updateReadFeaturedStickers()
		return t.Encode()
	case -1706939360:
		t := m.To_updateRecentStickers()
		return t.Encode()
	case -1574314746:
		t := m.To_updateConfig()
		return t.Encode()
	case 861169551:
		t := m.To_updatePtsChanged()
		return t.Encode()
	case 1081547008:
		t := m.To_updateChannelWebPage()
		return t.Encode()
	case 1852826908:
		t := m.To_updateDialogPinned()
		return t.Encode()
	case -99664734:
		t := m.To_updatePinnedDialogs()
		return t.Encode()
	case -2095595325:
		t := m.To_updateBotWebhookJSON()
		return t.Encode()
	case -1684914010:
		t := m.To_updateBotWebhookJSONQuery()
		return t.Encode()
	case -523384512:
		t := m.To_updateBotShippingQuery()
		return t.Encode()
	case 1563376297:
		t := m.To_updateBotPrecheckoutQuery()
		return t.Encode()
	case -1425052898:
		t := m.To_updatePhoneCall()
		return t.Encode()
	case 1180041828:
		t := m.To_updateLangPackTooLong()
		return t.Encode()
	case 1442983757:
		t := m.To_updateLangPack()
		return t.Encode()
	case -451831443:
		t := m.To_updateFavedStickers()
		return t.Encode()
	case -1987495099:
		t := m.To_updateChannelReadMessagesContents()
		return t.Encode()
	case 1887741886:
		t := m.To_updateContactsReset()
		return t.Encode()
	case 1893427255:
		t := m.To_updateChannelAvailableMessages()
		return t.Encode()
	case -513517117:
		t := m.To_updateDialogUnreadMark()
		return t.Encode()
	case -1398708869:
		t := m.To_updateMessagePoll()
		return t.Encode()
	case 1421875280:
		t := m.To_updateChatDefaultBannedRights()
		return t.Encode()
	case 422972864:
		t := m.To_updateFolderPeers()
		return t.Encode()
	case 1786671974:
		t := m.To_updatePeerSettings()
		return t.Encode()
	case -1263546448:
		t := m.To_updatePeerLocated()
		return t.Encode()
	case 967122427:
		t := m.To_updateNewScheduledMessage()
		return t.Encode()
	case -1870238482:
		t := m.To_updateDeleteScheduledMessages()
		return t.Encode()
	case -2112423005:
		t := m.To_updateTheme()
		return t.Encode()
	case -2027964103:
		t := m.To_updateGeoLiveViewed()
		return t.Encode()
	case 1448076945:
		t := m.To_updateLoginToken()
		return t.Encode()
	case 1123585836:
		t := m.To_updateMessagePollVote()
		return t.Encode()
	case 654302845:
		t := m.To_updateDialogFilter()
		return t.Encode()
	case -1512627963:
		t := m.To_updateDialogFilterOrder()
		return t.Encode()
	case 889491791:
		t := m.To_updateDialogFilters()
		return t.Encode()
	case 643940105:
		t := m.To_updatePhoneCallSignalingData()
		return t.Encode()
	case 1708307556:
		t := m.To_updateChannelParticipant()
		return t.Encode()
	case 1854571743:
		t := m.To_updateChannelMessageForwards()
		return t.Encode()
	case 482860628:
		t := m.To_updateReadChannelDiscussionInbox()
		return t.Encode()
	case 1178116716:
		t := m.To_updateReadChannelDiscussionOutbox()
		return t.Encode()
	case 610945826:
		t := m.To_updatePeerBlocked()
		return t.Encode()
	case -13975905:
		t := m.To_updateChannelUserTyping()
		return t.Encode()
	case -309990731:
		t := m.To_updatePinnedMessages()
		return t.Encode()
	case -2054649973:
		t := m.To_updatePinnedChannelMessages()
		return t.Encode()
	default:
		return nil
	}
}
func (m Update) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 522914557:
		m2 := &TLupdateNewMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1318109142:
		m2 := &TLupdateMessageID{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1576161051:
		m2 := &TLupdateDeleteMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1548249383:
		m2 := &TLupdateUserTyping{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1704596961:
		m2 := &TLupdateChatUserTyping{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 125178264:
		m2 := &TLupdateChatParticipants{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 469489699:
		m2 := &TLupdateUserStatus{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1489818765:
		m2 := &TLupdateUserName{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1791935732:
		m2 := &TLupdateUserPhoto{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 314359194:
		m2 := &TLupdateNewEncryptedMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 386986326:
		m2 := &TLupdateEncryptedChatTyping{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1264392051:
		m2 := &TLupdateEncryption{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 956179895:
		m2 := &TLupdateEncryptedMessagesRead{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -364179876:
		m2 := &TLupdateChatParticipantAdd{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1851755554:
		m2 := &TLupdateChatParticipantDelete{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1906403213:
		m2 := &TLupdateDcOptions{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1094555409:
		m2 := &TLupdateNotifySettings{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -337352679:
		m2 := &TLupdateServiceNotification{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -298113238:
		m2 := &TLupdatePrivacy{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 314130811:
		m2 := &TLupdateUserPhone{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1667805217:
		m2 := &TLupdateReadHistoryInbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 791617983:
		m2 := &TLupdateReadHistoryOutbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2139689491:
		m2 := &TLupdateWebPage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1757493555:
		m2 := &TLupdateReadMessagesContents{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -352032773:
		m2 := &TLupdateChannelTooLong{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1227598250:
		m2 := &TLupdateChannel{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1656358105:
		m2 := &TLupdateNewChannelMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 856380452:
		m2 := &TLupdateReadChannelInbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1015733815:
		m2 := &TLupdateDeleteChannelMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1734268085:
		m2 := &TLupdateChannelMessageViews{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1232070311:
		m2 := &TLupdateChatParticipantAdmin{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1753886890:
		m2 := &TLupdateNewStickerSet{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 196268545:
		m2 := &TLupdateStickerSetsOrder{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1135492588:
		m2 := &TLupdateStickerSets{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1821035490:
		m2 := &TLupdateSavedGifs{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1417832080:
		m2 := &TLupdateBotInlineQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 239663460:
		m2 := &TLupdateBotInlineSend{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 457133559:
		m2 := &TLupdateEditChannelMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -415938591:
		m2 := &TLupdateBotCallbackQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -469536605:
		m2 := &TLupdateEditMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -103646630:
		m2 := &TLupdateInlineBotCallbackQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 634833351:
		m2 := &TLupdateReadChannelOutbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -299124375:
		m2 := &TLupdateDraftMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1461528386:
		m2 := &TLupdateReadFeaturedStickers{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1706939360:
		m2 := &TLupdateRecentStickers{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1574314746:
		m2 := &TLupdateConfig{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 861169551:
		m2 := &TLupdatePtsChanged{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1081547008:
		m2 := &TLupdateChannelWebPage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1852826908:
		m2 := &TLupdateDialogPinned{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -99664734:
		m2 := &TLupdatePinnedDialogs{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2095595325:
		m2 := &TLupdateBotWebhookJSON{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1684914010:
		m2 := &TLupdateBotWebhookJSONQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -523384512:
		m2 := &TLupdateBotShippingQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1563376297:
		m2 := &TLupdateBotPrecheckoutQuery{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1425052898:
		m2 := &TLupdatePhoneCall{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1180041828:
		m2 := &TLupdateLangPackTooLong{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1442983757:
		m2 := &TLupdateLangPack{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -451831443:
		m2 := &TLupdateFavedStickers{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1987495099:
		m2 := &TLupdateChannelReadMessagesContents{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1887741886:
		m2 := &TLupdateContactsReset{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1893427255:
		m2 := &TLupdateChannelAvailableMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -513517117:
		m2 := &TLupdateDialogUnreadMark{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1398708869:
		m2 := &TLupdateMessagePoll{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1421875280:
		m2 := &TLupdateChatDefaultBannedRights{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 422972864:
		m2 := &TLupdateFolderPeers{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1786671974:
		m2 := &TLupdatePeerSettings{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1263546448:
		m2 := &TLupdatePeerLocated{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 967122427:
		m2 := &TLupdateNewScheduledMessage{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1870238482:
		m2 := &TLupdateDeleteScheduledMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2112423005:
		m2 := &TLupdateTheme{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2027964103:
		m2 := &TLupdateGeoLiveViewed{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1448076945:
		m2 := &TLupdateLoginToken{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1123585836:
		m2 := &TLupdateMessagePollVote{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 654302845:
		m2 := &TLupdateDialogFilter{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1512627963:
		m2 := &TLupdateDialogFilterOrder{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 889491791:
		m2 := &TLupdateDialogFilters{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 643940105:
		m2 := &TLupdatePhoneCallSignalingData{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1708307556:
		m2 := &TLupdateChannelParticipant{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1854571743:
		m2 := &TLupdateChannelMessageForwards{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 482860628:
		m2 := &TLupdateReadChannelDiscussionInbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1178116716:
		m2 := &TLupdateReadChannelDiscussionOutbox{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 610945826:
		m2 := &TLupdatePeerBlocked{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -13975905:
		m2 := &TLupdateChannelUserTyping{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -309990731:
		m2 := &TLupdatePinnedMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2054649973:
		m2 := &TLupdatePinnedChannelMessages{data: &Update_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Update) To_updateNewMessage() *TLupdateNewMessage {
	return &TLupdateNewMessage{
		data: m.data,
	}
}
func (m Update) To_updateMessageID() *TLupdateMessageID {
	return &TLupdateMessageID{
		data: m.data,
	}
}
func (m Update) To_updateDeleteMessages() *TLupdateDeleteMessages {
	return &TLupdateDeleteMessages{
		data: m.data,
	}
}
func (m Update) To_updateUserTyping() *TLupdateUserTyping {
	return &TLupdateUserTyping{
		data: m.data,
	}
}
func (m Update) To_updateChatUserTyping() *TLupdateChatUserTyping {
	return &TLupdateChatUserTyping{
		data: m.data,
	}
}
func (m Update) To_updateChatParticipants() *TLupdateChatParticipants {
	return &TLupdateChatParticipants{
		data: m.data,
	}
}
func (m Update) To_updateUserStatus() *TLupdateUserStatus {
	return &TLupdateUserStatus{
		data: m.data,
	}
}
func (m Update) To_updateUserName() *TLupdateUserName {
	return &TLupdateUserName{
		data: m.data,
	}
}
func (m Update) To_updateUserPhoto() *TLupdateUserPhoto {
	return &TLupdateUserPhoto{
		data: m.data,
	}
}
func (m Update) To_updateNewEncryptedMessage() *TLupdateNewEncryptedMessage {
	return &TLupdateNewEncryptedMessage{
		data: m.data,
	}
}
func (m Update) To_updateEncryptedChatTyping() *TLupdateEncryptedChatTyping {
	return &TLupdateEncryptedChatTyping{
		data: m.data,
	}
}
func (m Update) To_updateEncryption() *TLupdateEncryption {
	return &TLupdateEncryption{
		data: m.data,
	}
}
func (m Update) To_updateEncryptedMessagesRead() *TLupdateEncryptedMessagesRead {
	return &TLupdateEncryptedMessagesRead{
		data: m.data,
	}
}
func (m Update) To_updateChatParticipantAdd() *TLupdateChatParticipantAdd {
	return &TLupdateChatParticipantAdd{
		data: m.data,
	}
}
func (m Update) To_updateChatParticipantDelete() *TLupdateChatParticipantDelete {
	return &TLupdateChatParticipantDelete{
		data: m.data,
	}
}
func (m Update) To_updateDcOptions() *TLupdateDcOptions {
	return &TLupdateDcOptions{
		data: m.data,
	}
}
func (m Update) To_updateNotifySettings() *TLupdateNotifySettings {
	return &TLupdateNotifySettings{
		data: m.data,
	}
}
func (m Update) To_updateServiceNotification() *TLupdateServiceNotification {
	return &TLupdateServiceNotification{
		data: m.data,
	}
}
func (m Update) To_updatePrivacy() *TLupdatePrivacy {
	return &TLupdatePrivacy{
		data: m.data,
	}
}
func (m Update) To_updateUserPhone() *TLupdateUserPhone {
	return &TLupdateUserPhone{
		data: m.data,
	}
}
func (m Update) To_updateReadHistoryInbox() *TLupdateReadHistoryInbox {
	return &TLupdateReadHistoryInbox{
		data: m.data,
	}
}
func (m Update) To_updateReadHistoryOutbox() *TLupdateReadHistoryOutbox {
	return &TLupdateReadHistoryOutbox{
		data: m.data,
	}
}
func (m Update) To_updateWebPage() *TLupdateWebPage {
	return &TLupdateWebPage{
		data: m.data,
	}
}
func (m Update) To_updateReadMessagesContents() *TLupdateReadMessagesContents {
	return &TLupdateReadMessagesContents{
		data: m.data,
	}
}
func (m Update) To_updateChannelTooLong() *TLupdateChannelTooLong {
	return &TLupdateChannelTooLong{
		data: m.data,
	}
}
func (m Update) To_updateChannel() *TLupdateChannel {
	return &TLupdateChannel{
		data: m.data,
	}
}
func (m Update) To_updateNewChannelMessage() *TLupdateNewChannelMessage {
	return &TLupdateNewChannelMessage{
		data: m.data,
	}
}
func (m Update) To_updateReadChannelInbox() *TLupdateReadChannelInbox {
	return &TLupdateReadChannelInbox{
		data: m.data,
	}
}
func (m Update) To_updateDeleteChannelMessages() *TLupdateDeleteChannelMessages {
	return &TLupdateDeleteChannelMessages{
		data: m.data,
	}
}
func (m Update) To_updateChannelMessageViews() *TLupdateChannelMessageViews {
	return &TLupdateChannelMessageViews{
		data: m.data,
	}
}
func (m Update) To_updateChatParticipantAdmin() *TLupdateChatParticipantAdmin {
	return &TLupdateChatParticipantAdmin{
		data: m.data,
	}
}
func (m Update) To_updateNewStickerSet() *TLupdateNewStickerSet {
	return &TLupdateNewStickerSet{
		data: m.data,
	}
}
func (m Update) To_updateStickerSetsOrder() *TLupdateStickerSetsOrder {
	return &TLupdateStickerSetsOrder{
		data: m.data,
	}
}
func (m Update) To_updateStickerSets() *TLupdateStickerSets {
	return &TLupdateStickerSets{
		data: m.data,
	}
}
func (m Update) To_updateSavedGifs() *TLupdateSavedGifs {
	return &TLupdateSavedGifs{
		data: m.data,
	}
}
func (m Update) To_updateBotInlineQuery() *TLupdateBotInlineQuery {
	return &TLupdateBotInlineQuery{
		data: m.data,
	}
}
func (m Update) To_updateBotInlineSend() *TLupdateBotInlineSend {
	return &TLupdateBotInlineSend{
		data: m.data,
	}
}
func (m Update) To_updateEditChannelMessage() *TLupdateEditChannelMessage {
	return &TLupdateEditChannelMessage{
		data: m.data,
	}
}
func (m Update) To_updateBotCallbackQuery() *TLupdateBotCallbackQuery {
	return &TLupdateBotCallbackQuery{
		data: m.data,
	}
}
func (m Update) To_updateEditMessage() *TLupdateEditMessage {
	return &TLupdateEditMessage{
		data: m.data,
	}
}
func (m Update) To_updateInlineBotCallbackQuery() *TLupdateInlineBotCallbackQuery {
	return &TLupdateInlineBotCallbackQuery{
		data: m.data,
	}
}
func (m Update) To_updateReadChannelOutbox() *TLupdateReadChannelOutbox {
	return &TLupdateReadChannelOutbox{
		data: m.data,
	}
}
func (m Update) To_updateDraftMessage() *TLupdateDraftMessage {
	return &TLupdateDraftMessage{
		data: m.data,
	}
}
func (m Update) To_updateReadFeaturedStickers() *TLupdateReadFeaturedStickers {
	return &TLupdateReadFeaturedStickers{
		data: m.data,
	}
}
func (m Update) To_updateRecentStickers() *TLupdateRecentStickers {
	return &TLupdateRecentStickers{
		data: m.data,
	}
}
func (m Update) To_updateConfig() *TLupdateConfig {
	return &TLupdateConfig{
		data: m.data,
	}
}
func (m Update) To_updatePtsChanged() *TLupdatePtsChanged {
	return &TLupdatePtsChanged{
		data: m.data,
	}
}
func (m Update) To_updateChannelWebPage() *TLupdateChannelWebPage {
	return &TLupdateChannelWebPage{
		data: m.data,
	}
}
func (m Update) To_updateDialogPinned() *TLupdateDialogPinned {
	return &TLupdateDialogPinned{
		data: m.data,
	}
}
func (m Update) To_updatePinnedDialogs() *TLupdatePinnedDialogs {
	return &TLupdatePinnedDialogs{
		data: m.data,
	}
}
func (m Update) To_updateBotWebhookJSON() *TLupdateBotWebhookJSON {
	return &TLupdateBotWebhookJSON{
		data: m.data,
	}
}
func (m Update) To_updateBotWebhookJSONQuery() *TLupdateBotWebhookJSONQuery {
	return &TLupdateBotWebhookJSONQuery{
		data: m.data,
	}
}
func (m Update) To_updateBotShippingQuery() *TLupdateBotShippingQuery {
	return &TLupdateBotShippingQuery{
		data: m.data,
	}
}
func (m Update) To_updateBotPrecheckoutQuery() *TLupdateBotPrecheckoutQuery {
	return &TLupdateBotPrecheckoutQuery{
		data: m.data,
	}
}
func (m Update) To_updatePhoneCall() *TLupdatePhoneCall {
	return &TLupdatePhoneCall{
		data: m.data,
	}
}
func (m Update) To_updateLangPackTooLong() *TLupdateLangPackTooLong {
	return &TLupdateLangPackTooLong{
		data: m.data,
	}
}
func (m Update) To_updateLangPack() *TLupdateLangPack {
	return &TLupdateLangPack{
		data: m.data,
	}
}
func (m Update) To_updateFavedStickers() *TLupdateFavedStickers {
	return &TLupdateFavedStickers{
		data: m.data,
	}
}
func (m Update) To_updateChannelReadMessagesContents() *TLupdateChannelReadMessagesContents {
	return &TLupdateChannelReadMessagesContents{
		data: m.data,
	}
}
func (m Update) To_updateContactsReset() *TLupdateContactsReset {
	return &TLupdateContactsReset{
		data: m.data,
	}
}
func (m Update) To_updateChannelAvailableMessages() *TLupdateChannelAvailableMessages {
	return &TLupdateChannelAvailableMessages{
		data: m.data,
	}
}
func (m Update) To_updateDialogUnreadMark() *TLupdateDialogUnreadMark {
	return &TLupdateDialogUnreadMark{
		data: m.data,
	}
}
func (m Update) To_updateMessagePoll() *TLupdateMessagePoll {
	return &TLupdateMessagePoll{
		data: m.data,
	}
}
func (m Update) To_updateChatDefaultBannedRights() *TLupdateChatDefaultBannedRights {
	return &TLupdateChatDefaultBannedRights{
		data: m.data,
	}
}
func (m Update) To_updateFolderPeers() *TLupdateFolderPeers {
	return &TLupdateFolderPeers{
		data: m.data,
	}
}
func (m Update) To_updatePeerSettings() *TLupdatePeerSettings {
	return &TLupdatePeerSettings{
		data: m.data,
	}
}
func (m Update) To_updatePeerLocated() *TLupdatePeerLocated {
	return &TLupdatePeerLocated{
		data: m.data,
	}
}
func (m Update) To_updateNewScheduledMessage() *TLupdateNewScheduledMessage {
	return &TLupdateNewScheduledMessage{
		data: m.data,
	}
}
func (m Update) To_updateDeleteScheduledMessages() *TLupdateDeleteScheduledMessages {
	return &TLupdateDeleteScheduledMessages{
		data: m.data,
	}
}
func (m Update) To_updateTheme() *TLupdateTheme {
	return &TLupdateTheme{
		data: m.data,
	}
}
func (m Update) To_updateGeoLiveViewed() *TLupdateGeoLiveViewed {
	return &TLupdateGeoLiveViewed{
		data: m.data,
	}
}
func (m Update) To_updateLoginToken() *TLupdateLoginToken {
	return &TLupdateLoginToken{
		data: m.data,
	}
}
func (m Update) To_updateMessagePollVote() *TLupdateMessagePollVote {
	return &TLupdateMessagePollVote{
		data: m.data,
	}
}
func (m Update) To_updateDialogFilter() *TLupdateDialogFilter {
	return &TLupdateDialogFilter{
		data: m.data,
	}
}
func (m Update) To_updateDialogFilterOrder() *TLupdateDialogFilterOrder {
	return &TLupdateDialogFilterOrder{
		data: m.data,
	}
}
func (m Update) To_updateDialogFilters() *TLupdateDialogFilters {
	return &TLupdateDialogFilters{
		data: m.data,
	}
}
func (m Update) To_updatePhoneCallSignalingData() *TLupdatePhoneCallSignalingData {
	return &TLupdatePhoneCallSignalingData{
		data: m.data,
	}
}
func (m Update) To_updateChannelParticipant() *TLupdateChannelParticipant {
	return &TLupdateChannelParticipant{
		data: m.data,
	}
}
func (m Update) To_updateChannelMessageForwards() *TLupdateChannelMessageForwards {
	return &TLupdateChannelMessageForwards{
		data: m.data,
	}
}
func (m Update) To_updateReadChannelDiscussionInbox() *TLupdateReadChannelDiscussionInbox {
	return &TLupdateReadChannelDiscussionInbox{
		data: m.data,
	}
}
func (m Update) To_updateReadChannelDiscussionOutbox() *TLupdateReadChannelDiscussionOutbox {
	return &TLupdateReadChannelDiscussionOutbox{
		data: m.data,
	}
}
func (m Update) To_updatePeerBlocked() *TLupdatePeerBlocked {
	return &TLupdatePeerBlocked{
		data: m.data,
	}
}
func (m Update) To_updateChannelUserTyping() *TLupdateChannelUserTyping {
	return &TLupdateChannelUserTyping{
		data: m.data,
	}
}
func (m Update) To_updatePinnedMessages() *TLupdatePinnedMessages {
	return &TLupdatePinnedMessages{
		data: m.data,
	}
}
func (m Update) To_updatePinnedChannelMessages() *TLupdatePinnedChannelMessages {
	return &TLupdatePinnedChannelMessages{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_ImportedContacts
//
func (m contacts_ImportedContacts) Encode() []byte {
	switch m.constructor {
	case 2010127419:
		t := m.To_contacts_importedContacts()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_ImportedContacts) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2010127419:
		m2 := &TLcontacts_importedContacts{data: &contacts_ImportedContacts_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_ImportedContacts) To_contacts_importedContacts() *TLcontacts_importedContacts {
	return &TLcontacts_importedContacts{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BankCardOpenUrl
//
func (m BankCardOpenUrl) Encode() []byte {
	switch m.constructor {
	case -177732982:
		t := m.To_bankCardOpenUrl()
		return t.Encode()
	default:
		return nil
	}
}
func (m BankCardOpenUrl) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -177732982:
		m2 := &TLbankCardOpenUrl{data: &BankCardOpenUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BankCardOpenUrl) To_bankCardOpenUrl() *TLbankCardOpenUrl {
	return &TLbankCardOpenUrl{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_CdnFile
//
func (m upload_CdnFile) Encode() []byte {
	switch m.constructor {
	case -290921362:
		t := m.To_upload_cdnFileReuploadNeeded()
		return t.Encode()
	case -1449145777:
		t := m.To_upload_cdnFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m upload_CdnFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -290921362:
		m2 := &TLupload_cdnFileReuploadNeeded{data: &upload_CdnFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1449145777:
		m2 := &TLupload_cdnFile{data: &upload_CdnFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m upload_CdnFile) To_upload_cdnFileReuploadNeeded() *TLupload_cdnFileReuploadNeeded {
	return &TLupload_cdnFileReuploadNeeded{
		data: m.data,
	}
}
func (m upload_CdnFile) To_upload_cdnFile() *TLupload_cdnFile {
	return &TLupload_cdnFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputEncryptedFile
//
func (m InputEncryptedFile) Encode() []byte {
	switch m.constructor {
	case 406307684:
		t := m.To_inputEncryptedFileEmpty()
		return t.Encode()
	case 1690108678:
		t := m.To_inputEncryptedFileUploaded()
		return t.Encode()
	case 1511503333:
		t := m.To_inputEncryptedFile()
		return t.Encode()
	case 767652808:
		t := m.To_inputEncryptedFileBigUploaded()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputEncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 406307684:
		m2 := &TLinputEncryptedFileEmpty{data: &InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1690108678:
		m2 := &TLinputEncryptedFileUploaded{data: &InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1511503333:
		m2 := &TLinputEncryptedFile{data: &InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 767652808:
		m2 := &TLinputEncryptedFileBigUploaded{data: &InputEncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputEncryptedFile) To_inputEncryptedFileEmpty() *TLinputEncryptedFileEmpty {
	return &TLinputEncryptedFileEmpty{
		data: m.data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFileUploaded() *TLinputEncryptedFileUploaded {
	return &TLinputEncryptedFileUploaded{
		data: m.data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFile() *TLinputEncryptedFile {
	return &TLinputEncryptedFile{
		data: m.data,
	}
}
func (m InputEncryptedFile) To_inputEncryptedFileBigUploaded() *TLinputEncryptedFileBigUploaded {
	return &TLinputEncryptedFileBigUploaded{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedChat
//
func (m EncryptedChat) Encode() []byte {
	switch m.constructor {
	case -1417756512:
		t := m.To_encryptedChatEmpty()
		return t.Encode()
	case 1006044124:
		t := m.To_encryptedChatWaiting()
		return t.Encode()
	case 1651608194:
		t := m.To_encryptedChatRequested()
		return t.Encode()
	case -94974410:
		t := m.To_encryptedChat()
		return t.Encode()
	case 332848423:
		t := m.To_encryptedChatDiscarded()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedChat) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1417756512:
		m2 := &TLencryptedChatEmpty{data: &EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1006044124:
		m2 := &TLencryptedChatWaiting{data: &EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1651608194:
		m2 := &TLencryptedChatRequested{data: &EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -94974410:
		m2 := &TLencryptedChat{data: &EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 332848423:
		m2 := &TLencryptedChatDiscarded{data: &EncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EncryptedChat) To_encryptedChatEmpty() *TLencryptedChatEmpty {
	return &TLencryptedChatEmpty{
		data: m.data,
	}
}
func (m EncryptedChat) To_encryptedChatWaiting() *TLencryptedChatWaiting {
	return &TLencryptedChatWaiting{
		data: m.data,
	}
}
func (m EncryptedChat) To_encryptedChatRequested() *TLencryptedChatRequested {
	return &TLencryptedChatRequested{
		data: m.data,
	}
}
func (m EncryptedChat) To_encryptedChat() *TLencryptedChat {
	return &TLencryptedChat{
		data: m.data,
	}
}
func (m EncryptedChat) To_encryptedChatDiscarded() *TLencryptedChatDiscarded {
	return &TLencryptedChatDiscarded{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickerSetItem
//
func (m InputStickerSetItem) Encode() []byte {
	switch m.constructor {
	case -6249322:
		t := m.To_inputStickerSetItem()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickerSetItem) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -6249322:
		m2 := &TLinputStickerSetItem{data: &InputStickerSetItem_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputStickerSetItem) To_inputStickerSetItem() *TLinputStickerSetItem {
	return &TLinputStickerSetItem{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputChatPhoto
//
func (m InputChatPhoto) Encode() []byte {
	switch m.constructor {
	case 480546647:
		t := m.To_inputChatPhotoEmpty()
		return t.Encode()
	case -968723890:
		t := m.To_inputChatUploadedPhoto()
		return t.Encode()
	case -1991004873:
		t := m.To_inputChatPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputChatPhoto) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 480546647:
		m2 := &TLinputChatPhotoEmpty{data: &InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -968723890:
		m2 := &TLinputChatUploadedPhoto{data: &InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1991004873:
		m2 := &TLinputChatPhoto{data: &InputChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputChatPhoto) To_inputChatPhotoEmpty() *TLinputChatPhotoEmpty {
	return &TLinputChatPhotoEmpty{
		data: m.data,
	}
}
func (m InputChatPhoto) To_inputChatUploadedPhoto() *TLinputChatUploadedPhoto {
	return &TLinputChatUploadedPhoto{
		data: m.data,
	}
}
func (m InputChatPhoto) To_inputChatPhoto() *TLinputChatPhoto {
	return &TLinputChatPhoto{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueType
//
func (m SecureValueType) Encode() []byte {
	switch m.constructor {
	case -1658158621:
		t := m.To_secureValueTypePersonalDetails()
		return t.Encode()
	case 1034709504:
		t := m.To_secureValueTypePassport()
		return t.Encode()
	case 115615172:
		t := m.To_secureValueTypeDriverLicense()
		return t.Encode()
	case -1596951477:
		t := m.To_secureValueTypeIdentityCard()
		return t.Encode()
	case -1717268701:
		t := m.To_secureValueTypeInternalPassport()
		return t.Encode()
	case -874308058:
		t := m.To_secureValueTypeAddress()
		return t.Encode()
	case -63531698:
		t := m.To_secureValueTypeUtilityBill()
		return t.Encode()
	case -1995211763:
		t := m.To_secureValueTypeBankStatement()
		return t.Encode()
	case -1954007928:
		t := m.To_secureValueTypeRentalAgreement()
		return t.Encode()
	case -1713143702:
		t := m.To_secureValueTypePassportRegistration()
		return t.Encode()
	case -368907213:
		t := m.To_secureValueTypeTemporaryRegistration()
		return t.Encode()
	case -1289704741:
		t := m.To_secureValueTypePhone()
		return t.Encode()
	case -1908627474:
		t := m.To_secureValueTypeEmail()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueType) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1658158621:
		m2 := &TLsecureValueTypePersonalDetails{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1034709504:
		m2 := &TLsecureValueTypePassport{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 115615172:
		m2 := &TLsecureValueTypeDriverLicense{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1596951477:
		m2 := &TLsecureValueTypeIdentityCard{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1717268701:
		m2 := &TLsecureValueTypeInternalPassport{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -874308058:
		m2 := &TLsecureValueTypeAddress{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -63531698:
		m2 := &TLsecureValueTypeUtilityBill{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1995211763:
		m2 := &TLsecureValueTypeBankStatement{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1954007928:
		m2 := &TLsecureValueTypeRentalAgreement{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1713143702:
		m2 := &TLsecureValueTypePassportRegistration{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -368907213:
		m2 := &TLsecureValueTypeTemporaryRegistration{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1289704741:
		m2 := &TLsecureValueTypePhone{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1908627474:
		m2 := &TLsecureValueTypeEmail{data: &SecureValueType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureValueType) To_secureValueTypePersonalDetails() *TLsecureValueTypePersonalDetails {
	return &TLsecureValueTypePersonalDetails{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypePassport() *TLsecureValueTypePassport {
	return &TLsecureValueTypePassport{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeDriverLicense() *TLsecureValueTypeDriverLicense {
	return &TLsecureValueTypeDriverLicense{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeIdentityCard() *TLsecureValueTypeIdentityCard {
	return &TLsecureValueTypeIdentityCard{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeInternalPassport() *TLsecureValueTypeInternalPassport {
	return &TLsecureValueTypeInternalPassport{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeAddress() *TLsecureValueTypeAddress {
	return &TLsecureValueTypeAddress{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeUtilityBill() *TLsecureValueTypeUtilityBill {
	return &TLsecureValueTypeUtilityBill{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeBankStatement() *TLsecureValueTypeBankStatement {
	return &TLsecureValueTypeBankStatement{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeRentalAgreement() *TLsecureValueTypeRentalAgreement {
	return &TLsecureValueTypeRentalAgreement{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypePassportRegistration() *TLsecureValueTypePassportRegistration {
	return &TLsecureValueTypePassportRegistration{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeTemporaryRegistration() *TLsecureValueTypeTemporaryRegistration {
	return &TLsecureValueTypeTemporaryRegistration{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypePhone() *TLsecureValueTypePhone {
	return &TLsecureValueTypePhone{
		data: m.data,
	}
}
func (m SecureValueType) To_secureValueTypeEmail() *TLsecureValueTypeEmail {
	return &TLsecureValueTypeEmail{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DataJSON
//
func (m DataJSON) Encode() []byte {
	switch m.constructor {
	case 2104790276:
		t := m.To_dataJSON()
		return t.Encode()
	default:
		return nil
	}
}
func (m DataJSON) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2104790276:
		m2 := &TLdataJSON{data: &DataJSON_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DataJSON) To_dataJSON() *TLdataJSON {
	return &TLdataJSON{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputAppEvent
//
func (m InputAppEvent) Encode() []byte {
	switch m.constructor {
	case 488313413:
		t := m.To_inputAppEvent()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputAppEvent) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 488313413:
		m2 := &TLinputAppEvent{data: &InputAppEvent_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputAppEvent) To_inputAppEvent() *TLinputAppEvent {
	return &TLinputAppEvent{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_DhConfig
//
func (m messages_DhConfig) Encode() []byte {
	switch m.constructor {
	case -1058912715:
		t := m.To_messages_dhConfigNotModified()
		return t.Encode()
	case 740433629:
		t := m.To_messages_dhConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_DhConfig) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1058912715:
		m2 := &TLmessages_dhConfigNotModified{data: &messages_DhConfig_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 740433629:
		m2 := &TLmessages_dhConfig{data: &messages_DhConfig_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_DhConfig) To_messages_dhConfigNotModified() *TLmessages_dhConfigNotModified {
	return &TLmessages_dhConfigNotModified{
		data: m.data,
	}
}
func (m messages_DhConfig) To_messages_dhConfig() *TLmessages_dhConfig {
	return &TLmessages_dhConfig{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageFwdHeader
//
func (m MessageFwdHeader) Encode() []byte {
	switch m.constructor {
	case 1601666510:
		t := m.To_messageFwdHeader()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageFwdHeader) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1601666510:
		m2 := &TLmessageFwdHeader{data: &MessageFwdHeader_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageFwdHeader) To_messageFwdHeader() *TLmessageFwdHeader {
	return &TLmessageFwdHeader{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPhoneCall
//
func (m InputPhoneCall) Encode() []byte {
	switch m.constructor {
	case 506920429:
		t := m.To_inputPhoneCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPhoneCall) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 506920429:
		m2 := &TLinputPhoneCall{data: &InputPhoneCall_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPhoneCall) To_inputPhoneCall() *TLinputPhoneCall {
	return &TLinputPhoneCall{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:photos_Photo
//
func (m photos_Photo) Encode() []byte {
	switch m.constructor {
	case 539045032:
		t := m.To_photos_photo()
		return t.Encode()
	default:
		return nil
	}
}
func (m photos_Photo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 539045032:
		m2 := &TLphotos_photo{data: &photos_Photo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m photos_Photo) To_photos_photo() *TLphotos_photo {
	return &TLphotos_photo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RestrictionReason
//
func (m RestrictionReason) Encode() []byte {
	switch m.constructor {
	case -797791052:
		t := m.To_restrictionReason()
		return t.Encode()
	default:
		return nil
	}
}
func (m RestrictionReason) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -797791052:
		m2 := &TLrestrictionReason{data: &RestrictionReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m RestrictionReason) To_restrictionReason() *TLrestrictionReason {
	return &TLrestrictionReason{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:AutoDownloadSettings
//
func (m AutoDownloadSettings) Encode() []byte {
	switch m.constructor {
	case -532532493:
		t := m.To_autoDownloadSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m AutoDownloadSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -532532493:
		m2 := &TLautoDownloadSettings{data: &AutoDownloadSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m AutoDownloadSettings) To_autoDownloadSettings() *TLautoDownloadSettings {
	return &TLautoDownloadSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageViews
//
func (m MessageViews) Encode() []byte {
	switch m.constructor {
	case 1163625789:
		t := m.To_messageViews()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageViews) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1163625789:
		m2 := &TLmessageViews{data: &MessageViews_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageViews) To_messageViews() *TLmessageViews {
	return &TLmessageViews{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_StickerSet
//
func (m messages_StickerSet) Encode() []byte {
	switch m.constructor {
	case -1240849242:
		t := m.To_messages_stickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_StickerSet) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1240849242:
		m2 := &TLmessages_stickerSet{data: &messages_StickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_StickerSet) To_messages_stickerSet() *TLmessages_stickerSet {
	return &TLmessages_stickerSet{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_StickerSetInstallResult
//
func (m messages_StickerSetInstallResult) Encode() []byte {
	switch m.constructor {
	case 946083368:
		t := m.To_messages_stickerSetInstallResultSuccess()
		return t.Encode()
	case 904138920:
		t := m.To_messages_stickerSetInstallResultArchive()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_StickerSetInstallResult) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 946083368:
		m2 := &TLmessages_stickerSetInstallResultSuccess{data: &messages_StickerSetInstallResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 904138920:
		m2 := &TLmessages_stickerSetInstallResultArchive{data: &messages_StickerSetInstallResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_StickerSetInstallResult) To_messages_stickerSetInstallResultSuccess() *TLmessages_stickerSetInstallResultSuccess {
	return &TLmessages_stickerSetInstallResultSuccess{
		data: m.data,
	}
}
func (m messages_StickerSetInstallResult) To_messages_stickerSetInstallResultArchive() *TLmessages_stickerSetInstallResultArchive {
	return &TLmessages_stickerSetInstallResultArchive{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatAdminRights
//
func (m ChatAdminRights) Encode() []byte {
	switch m.constructor {
	case 1605510357:
		t := m.To_chatAdminRights()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatAdminRights) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1605510357:
		m2 := &TLchatAdminRights{data: &ChatAdminRights_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatAdminRights) To_chatAdminRights() *TLchatAdminRights {
	return &TLchatAdminRights{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReportReason
//
func (m ReportReason) Encode() []byte {
	switch m.constructor {
	case 1490799288:
		t := m.To_inputReportReasonSpam()
		return t.Encode()
	case 505595789:
		t := m.To_inputReportReasonViolence()
		return t.Encode()
	case 777640226:
		t := m.To_inputReportReasonPornography()
		return t.Encode()
	case -1376497949:
		t := m.To_inputReportReasonChildAbuse()
		return t.Encode()
	case -512463606:
		t := m.To_inputReportReasonOther()
		return t.Encode()
	case -1685456582:
		t := m.To_inputReportReasonCopyright()
		return t.Encode()
	case -606798099:
		t := m.To_inputReportReasonGeoIrrelevant()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReportReason) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1490799288:
		m2 := &TLinputReportReasonSpam{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 505595789:
		m2 := &TLinputReportReasonViolence{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 777640226:
		m2 := &TLinputReportReasonPornography{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1376497949:
		m2 := &TLinputReportReasonChildAbuse{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -512463606:
		m2 := &TLinputReportReasonOther{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1685456582:
		m2 := &TLinputReportReasonCopyright{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -606798099:
		m2 := &TLinputReportReasonGeoIrrelevant{data: &ReportReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ReportReason) To_inputReportReasonSpam() *TLinputReportReasonSpam {
	return &TLinputReportReasonSpam{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonViolence() *TLinputReportReasonViolence {
	return &TLinputReportReasonViolence{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonPornography() *TLinputReportReasonPornography {
	return &TLinputReportReasonPornography{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonChildAbuse() *TLinputReportReasonChildAbuse {
	return &TLinputReportReasonChildAbuse{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonOther() *TLinputReportReasonOther {
	return &TLinputReportReasonOther{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonCopyright() *TLinputReportReasonCopyright {
	return &TLinputReportReasonCopyright{
		data: m.data,
	}
}
func (m ReportReason) To_inputReportReasonGeoIrrelevant() *TLinputReportReasonGeoIrrelevant {
	return &TLinputReportReasonGeoIrrelevant{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiURL
//
func (m EmojiURL) Encode() []byte {
	switch m.constructor {
	case -1519029347:
		t := m.To_emojiURL()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiURL) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1519029347:
		m2 := &TLemojiURL{data: &EmojiURL_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EmojiURL) To_emojiURL() *TLemojiURL {
	return &TLemojiURL{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SentEncryptedMessage
//
func (m messages_SentEncryptedMessage) Encode() []byte {
	switch m.constructor {
	case 1443858741:
		t := m.To_messages_sentEncryptedMessage()
		return t.Encode()
	case -1802240206:
		t := m.To_messages_sentEncryptedFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_SentEncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1443858741:
		m2 := &TLmessages_sentEncryptedMessage{data: &messages_SentEncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1802240206:
		m2 := &TLmessages_sentEncryptedFile{data: &messages_SentEncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_SentEncryptedMessage) To_messages_sentEncryptedMessage() *TLmessages_sentEncryptedMessage {
	return &TLmessages_sentEncryptedMessage{
		data: m.data,
	}
}
func (m messages_SentEncryptedMessage) To_messages_sentEncryptedFile() *TLmessages_sentEncryptedFile {
	return &TLmessages_sentEncryptedFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedFile
//
func (m EncryptedFile) Encode() []byte {
	switch m.constructor {
	case -1038136962:
		t := m.To_encryptedFileEmpty()
		return t.Encode()
	case 1248893260:
		t := m.To_encryptedFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1038136962:
		m2 := &TLencryptedFileEmpty{data: &EncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1248893260:
		m2 := &TLencryptedFile{data: &EncryptedFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EncryptedFile) To_encryptedFileEmpty() *TLencryptedFileEmpty {
	return &TLencryptedFileEmpty{
		data: m.data,
	}
}
func (m EncryptedFile) To_encryptedFile() *TLencryptedFile {
	return &TLencryptedFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWallPaper
//
func (m InputWallPaper) Encode() []byte {
	switch m.constructor {
	case -433014407:
		t := m.To_inputWallPaper()
		return t.Encode()
	case 1913199744:
		t := m.To_inputWallPaperSlug()
		return t.Encode()
	case -2077770836:
		t := m.To_inputWallPaperNoFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWallPaper) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -433014407:
		m2 := &TLinputWallPaper{data: &InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1913199744:
		m2 := &TLinputWallPaperSlug{data: &InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2077770836:
		m2 := &TLinputWallPaperNoFile{data: &InputWallPaper_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputWallPaper) To_inputWallPaper() *TLinputWallPaper {
	return &TLinputWallPaper{
		data: m.data,
	}
}
func (m InputWallPaper) To_inputWallPaperSlug() *TLinputWallPaperSlug {
	return &TLinputWallPaperSlug{
		data: m.data,
	}
}
func (m InputWallPaper) To_inputWallPaperNoFile() *TLinputWallPaperNoFile {
	return &TLinputWallPaperNoFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_ValidatedRequestedInfo
//
func (m payments_ValidatedRequestedInfo) Encode() []byte {
	switch m.constructor {
	case -784000893:
		t := m.To_payments_validatedRequestedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_ValidatedRequestedInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -784000893:
		m2 := &TLpayments_validatedRequestedInfo{data: &payments_ValidatedRequestedInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_ValidatedRequestedInfo) To_payments_validatedRequestedInfo() *TLpayments_validatedRequestedInfo {
	return &TLpayments_validatedRequestedInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCallProtocol
//
func (m PhoneCallProtocol) Encode() []byte {
	switch m.constructor {
	case -58224696:
		t := m.To_phoneCallProtocol()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCallProtocol) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -58224696:
		m2 := &TLphoneCallProtocol{data: &PhoneCallProtocol_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PhoneCallProtocol) To_phoneCallProtocol() *TLphoneCallProtocol {
	return &TLphoneCallProtocol{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserProfilePhoto
//
func (m UserProfilePhoto) Encode() []byte {
	switch m.constructor {
	case 1326562017:
		t := m.To_userProfilePhotoEmpty()
		return t.Encode()
	case 1775479590:
		t := m.To_userProfilePhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserProfilePhoto) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1326562017:
		m2 := &TLuserProfilePhotoEmpty{data: &UserProfilePhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1775479590:
		m2 := &TLuserProfilePhoto{data: &UserProfilePhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m UserProfilePhoto) To_userProfilePhotoEmpty() *TLuserProfilePhotoEmpty {
	return &TLuserProfilePhotoEmpty{
		data: m.data,
	}
}
func (m UserProfilePhoto) To_userProfilePhoto() *TLuserProfilePhoto {
	return &TLuserProfilePhoto{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickerSet
//
func (m InputStickerSet) Encode() []byte {
	switch m.constructor {
	case -4838507:
		t := m.To_inputStickerSetEmpty()
		return t.Encode()
	case -1645763991:
		t := m.To_inputStickerSetID()
		return t.Encode()
	case -2044933984:
		t := m.To_inputStickerSetShortName()
		return t.Encode()
	case 42402760:
		t := m.To_inputStickerSetAnimatedEmoji()
		return t.Encode()
	case -427863538:
		t := m.To_inputStickerSetDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickerSet) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -4838507:
		m2 := &TLinputStickerSetEmpty{data: &InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1645763991:
		m2 := &TLinputStickerSetID{data: &InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2044933984:
		m2 := &TLinputStickerSetShortName{data: &InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 42402760:
		m2 := &TLinputStickerSetAnimatedEmoji{data: &InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -427863538:
		m2 := &TLinputStickerSetDice{data: &InputStickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputStickerSet) To_inputStickerSetEmpty() *TLinputStickerSetEmpty {
	return &TLinputStickerSetEmpty{
		data: m.data,
	}
}
func (m InputStickerSet) To_inputStickerSetID() *TLinputStickerSetID {
	return &TLinputStickerSetID{
		data: m.data,
	}
}
func (m InputStickerSet) To_inputStickerSetShortName() *TLinputStickerSetShortName {
	return &TLinputStickerSetShortName{
		data: m.data,
	}
}
func (m InputStickerSet) To_inputStickerSetAnimatedEmoji() *TLinputStickerSetAnimatedEmoji {
	return &TLinputStickerSetAnimatedEmoji{
		data: m.data,
	}
}
func (m InputStickerSet) To_inputStickerSetDice() *TLinputStickerSetDice {
	return &TLinputStickerSetDice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_AuthorizationForm
//
func (m account_AuthorizationForm) Encode() []byte {
	switch m.constructor {
	case -1389486888:
		t := m.To_account_authorizationForm()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_AuthorizationForm) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1389486888:
		m2 := &TLaccount_authorizationForm{data: &account_AuthorizationForm_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_AuthorizationForm) To_account_authorizationForm() *TLaccount_authorizationForm {
	return &TLaccount_authorizationForm{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentReceipt
//
func (m payments_PaymentReceipt) Encode() []byte {
	switch m.constructor {
	case 1342771681:
		t := m.To_payments_paymentReceipt()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_PaymentReceipt) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1342771681:
		m2 := &TLpayments_paymentReceipt{data: &payments_PaymentReceipt_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_PaymentReceipt) To_payments_paymentReceipt() *TLpayments_paymentReceipt {
	return &TLpayments_paymentReceipt{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageListOrderedItem
//
func (m PageListOrderedItem) Encode() []byte {
	switch m.constructor {
	case 1577484359:
		t := m.To_pageListOrderedItemText()
		return t.Encode()
	case -1730311882:
		t := m.To_pageListOrderedItemBlocks()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageListOrderedItem) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1577484359:
		m2 := &TLpageListOrderedItemText{data: &PageListOrderedItem_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1730311882:
		m2 := &TLpageListOrderedItemBlocks{data: &PageListOrderedItem_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageListOrderedItem) To_pageListOrderedItemText() *TLpageListOrderedItemText {
	return &TLpageListOrderedItemText{
		data: m.data,
	}
}
func (m PageListOrderedItem) To_pageListOrderedItemBlocks() *TLpageListOrderedItemBlocks {
	return &TLpageListOrderedItemBlocks{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerSetCovered
//
func (m StickerSetCovered) Encode() []byte {
	switch m.constructor {
	case 1678812626:
		t := m.To_stickerSetCovered()
		return t.Encode()
	case 872932635:
		t := m.To_stickerSetMultiCovered()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerSetCovered) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1678812626:
		m2 := &TLstickerSetCovered{data: &StickerSetCovered_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 872932635:
		m2 := &TLstickerSetMultiCovered{data: &StickerSetCovered_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StickerSetCovered) To_stickerSetCovered() *TLstickerSetCovered {
	return &TLstickerSetCovered{
		data: m.data,
	}
}
func (m StickerSetCovered) To_stickerSetMultiCovered() *TLstickerSetMultiCovered {
	return &TLstickerSetMultiCovered{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsPercentValue
//
func (m StatsPercentValue) Encode() []byte {
	switch m.constructor {
	case -875679776:
		t := m.To_statsPercentValue()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsPercentValue) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -875679776:
		m2 := &TLstatsPercentValue{data: &StatsPercentValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsPercentValue) To_statsPercentValue() *TLstatsPercentValue {
	return &TLstatsPercentValue{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollResults
//
func (m PollResults) Encode() []byte {
	switch m.constructor {
	case -1159937629:
		t := m.To_pollResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollResults) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1159937629:
		m2 := &TLpollResults{data: &PollResults_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PollResults) To_pollResults() *TLpollResults {
	return &TLpollResults{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureData
//
func (m SecureData) Encode() []byte {
	switch m.constructor {
	case -1964327229:
		t := m.To_secureData()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureData) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1964327229:
		m2 := &TLsecureData{data: &SecureData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureData) To_secureData() *TLsecureData {
	return &TLsecureData{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_UserInfo
//
func (m help_UserInfo) Encode() []byte {
	switch m.constructor {
	case -206688531:
		t := m.To_help_userInfoEmpty()
		return t.Encode()
	case 32192344:
		t := m.To_help_userInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_UserInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -206688531:
		m2 := &TLhelp_userInfoEmpty{data: &help_UserInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 32192344:
		m2 := &TLhelp_userInfo{data: &help_UserInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_UserInfo) To_help_userInfoEmpty() *TLhelp_userInfoEmpty {
	return &TLhelp_userInfoEmpty{
		data: m.data,
	}
}
func (m help_UserInfo) To_help_userInfo() *TLhelp_userInfo {
	return &TLhelp_userInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EncryptedMessage
//
func (m EncryptedMessage) Encode() []byte {
	switch m.constructor {
	case -317144808:
		t := m.To_encryptedMessage()
		return t.Encode()
	case 594758406:
		t := m.To_encryptedMessageService()
		return t.Encode()
	default:
		return nil
	}
}
func (m EncryptedMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -317144808:
		m2 := &TLencryptedMessage{data: &EncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 594758406:
		m2 := &TLencryptedMessageService{data: &EncryptedMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EncryptedMessage) To_encryptedMessage() *TLencryptedMessage {
	return &TLencryptedMessage{
		data: m.data,
	}
}
func (m EncryptedMessage) To_encryptedMessageService() *TLencryptedMessageService {
	return &TLencryptedMessageService{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ReceivedNotifyMessage
//
func (m ReceivedNotifyMessage) Encode() []byte {
	switch m.constructor {
	case -1551583367:
		t := m.To_receivedNotifyMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m ReceivedNotifyMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1551583367:
		m2 := &TLreceivedNotifyMessage{data: &ReceivedNotifyMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ReceivedNotifyMessage) To_receivedNotifyMessage() *TLreceivedNotifyMessage {
	return &TLreceivedNotifyMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageCaption
//
func (m PageCaption) Encode() []byte {
	switch m.constructor {
	case 1869903447:
		t := m.To_pageCaption()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageCaption) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1869903447:
		m2 := &TLpageCaption{data: &PageCaption_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageCaption) To_pageCaption() *TLpageCaption {
	return &TLpageCaption{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Poll
//
func (m Poll) Encode() []byte {
	switch m.constructor {
	case -2032041631:
		t := m.To_poll()
		return t.Encode()
	default:
		return nil
	}
}
func (m Poll) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2032041631:
		m2 := &TLpoll{data: &Poll_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Poll) To_poll() *TLpoll {
	return &TLpoll{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputEncryptedChat
//
func (m InputEncryptedChat) Encode() []byte {
	switch m.constructor {
	case -247351839:
		t := m.To_inputEncryptedChat()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputEncryptedChat) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -247351839:
		m2 := &TLinputEncryptedChat{data: &InputEncryptedChat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputEncryptedChat) To_inputEncryptedChat() *TLinputEncryptedChat {
	return &TLinputEncryptedChat{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_BankCardData
//
func (m payments_BankCardData) Encode() []byte {
	switch m.constructor {
	case 1042605427:
		t := m.To_payments_bankCardData()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_BankCardData) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1042605427:
		m2 := &TLpayments_bankCardData{data: &payments_BankCardData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_BankCardData) To_payments_bankCardData() *TLpayments_bankCardData {
	return &TLpayments_bankCardData{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Messages
//
func (m messages_Messages) Encode() []byte {
	switch m.constructor {
	case -1938715001:
		t := m.To_messages_messages()
		return t.Encode()
	case 978610270:
		t := m.To_messages_messagesSlice()
		return t.Encode()
	case 1682413576:
		t := m.To_messages_channelMessages()
		return t.Encode()
	case 1951620897:
		t := m.To_messages_messagesNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_Messages) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1938715001:
		m2 := &TLmessages_messages{data: &messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 978610270:
		m2 := &TLmessages_messagesSlice{data: &messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1682413576:
		m2 := &TLmessages_channelMessages{data: &messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1951620897:
		m2 := &TLmessages_messagesNotModified{data: &messages_Messages_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_Messages) To_messages_messages() *TLmessages_messages {
	return &TLmessages_messages{
		data: m.data,
	}
}
func (m messages_Messages) To_messages_messagesSlice() *TLmessages_messagesSlice {
	return &TLmessages_messagesSlice{
		data: m.data,
	}
}
func (m messages_Messages) To_messages_channelMessages() *TLmessages_channelMessages {
	return &TLmessages_channelMessages{
		data: m.data,
	}
}
func (m messages_Messages) To_messages_messagesNotModified() *TLmessages_messagesNotModified {
	return &TLmessages_messagesNotModified{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_TermsOfServiceUpdate
//
func (m help_TermsOfServiceUpdate) Encode() []byte {
	switch m.constructor {
	case -483352705:
		t := m.To_help_termsOfServiceUpdateEmpty()
		return t.Encode()
	case 686618977:
		t := m.To_help_termsOfServiceUpdate()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_TermsOfServiceUpdate) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -483352705:
		m2 := &TLhelp_termsOfServiceUpdateEmpty{data: &help_TermsOfServiceUpdate_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 686618977:
		m2 := &TLhelp_termsOfServiceUpdate{data: &help_TermsOfServiceUpdate_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_TermsOfServiceUpdate) To_help_termsOfServiceUpdateEmpty() *TLhelp_termsOfServiceUpdateEmpty {
	return &TLhelp_termsOfServiceUpdateEmpty{
		data: m.data,
	}
}
func (m help_TermsOfServiceUpdate) To_help_termsOfServiceUpdate() *TLhelp_termsOfServiceUpdate {
	return &TLhelp_termsOfServiceUpdate{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_TermsOfService
//
func (m help_TermsOfService) Encode() []byte {
	switch m.constructor {
	case 2013922064:
		t := m.To_help_termsOfService()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_TermsOfService) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2013922064:
		m2 := &TLhelp_termsOfService{data: &help_TermsOfService_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_TermsOfService) To_help_termsOfService() *TLhelp_termsOfService {
	return &TLhelp_termsOfService{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputMessage
//
func (m InputMessage) Encode() []byte {
	switch m.constructor {
	case -1502174430:
		t := m.To_inputMessageID()
		return t.Encode()
	case -1160215659:
		t := m.To_inputMessageReplyTo()
		return t.Encode()
	case -2037963464:
		t := m.To_inputMessagePinned()
		return t.Encode()
	case -1392895362:
		t := m.To_inputMessageCallbackQuery()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1502174430:
		m2 := &TLinputMessageID{data: &InputMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1160215659:
		m2 := &TLinputMessageReplyTo{data: &InputMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2037963464:
		m2 := &TLinputMessagePinned{data: &InputMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1392895362:
		m2 := &TLinputMessageCallbackQuery{data: &InputMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputMessage) To_inputMessageID() *TLinputMessageID {
	return &TLinputMessageID{
		data: m.data,
	}
}
func (m InputMessage) To_inputMessageReplyTo() *TLinputMessageReplyTo {
	return &TLinputMessageReplyTo{
		data: m.data,
	}
}
func (m InputMessage) To_inputMessagePinned() *TLinputMessagePinned {
	return &TLinputMessagePinned{
		data: m.data,
	}
}
func (m InputMessage) To_inputMessageCallbackQuery() *TLinputMessageCallbackQuery {
	return &TLinputMessageCallbackQuery{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RecentMeUrl
//
func (m RecentMeUrl) Encode() []byte {
	switch m.constructor {
	case 1189204285:
		t := m.To_recentMeUrlUnknown()
		return t.Encode()
	case -1917045962:
		t := m.To_recentMeUrlUser()
		return t.Encode()
	case -1608834311:
		t := m.To_recentMeUrlChat()
		return t.Encode()
	case -347535331:
		t := m.To_recentMeUrlChatInvite()
		return t.Encode()
	case -1140172836:
		t := m.To_recentMeUrlStickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m RecentMeUrl) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1189204285:
		m2 := &TLrecentMeUrlUnknown{data: &RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1917045962:
		m2 := &TLrecentMeUrlUser{data: &RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1608834311:
		m2 := &TLrecentMeUrlChat{data: &RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -347535331:
		m2 := &TLrecentMeUrlChatInvite{data: &RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1140172836:
		m2 := &TLrecentMeUrlStickerSet{data: &RecentMeUrl_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m RecentMeUrl) To_recentMeUrlUnknown() *TLrecentMeUrlUnknown {
	return &TLrecentMeUrlUnknown{
		data: m.data,
	}
}
func (m RecentMeUrl) To_recentMeUrlUser() *TLrecentMeUrlUser {
	return &TLrecentMeUrlUser{
		data: m.data,
	}
}
func (m RecentMeUrl) To_recentMeUrlChat() *TLrecentMeUrlChat {
	return &TLrecentMeUrlChat{
		data: m.data,
	}
}
func (m RecentMeUrl) To_recentMeUrlChatInvite() *TLrecentMeUrlChatInvite {
	return &TLrecentMeUrlChatInvite{
		data: m.data,
	}
}
func (m RecentMeUrl) To_recentMeUrlStickerSet() *TLrecentMeUrlStickerSet {
	return &TLrecentMeUrlStickerSet{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageListItem
//
func (m PageListItem) Encode() []byte {
	switch m.constructor {
	case -1188055347:
		t := m.To_pageListItemText()
		return t.Encode()
	case 635466748:
		t := m.To_pageListItemBlocks()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageListItem) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1188055347:
		m2 := &TLpageListItemText{data: &PageListItem_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 635466748:
		m2 := &TLpageListItemBlocks{data: &PageListItem_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageListItem) To_pageListItemText() *TLpageListItemText {
	return &TLpageListItemText{
		data: m.data,
	}
}
func (m PageListItem) To_pageListItemBlocks() *TLpageListItemBlocks {
	return &TLpageListItemBlocks{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebPageAttribute
//
func (m WebPageAttribute) Encode() []byte {
	switch m.constructor {
	case 1421174295:
		t := m.To_webPageAttributeTheme()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebPageAttribute) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1421174295:
		m2 := &TLwebPageAttributeTheme{data: &WebPageAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WebPageAttribute) To_webPageAttributeTheme() *TLwebPageAttributeTheme {
	return &TLwebPageAttributeTheme{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UrlAuthResult
//
func (m UrlAuthResult) Encode() []byte {
	switch m.constructor {
	case -1831650802:
		t := m.To_urlAuthResultRequest()
		return t.Encode()
	case -1886646706:
		t := m.To_urlAuthResultAccepted()
		return t.Encode()
	case -1445536993:
		t := m.To_urlAuthResultDefault()
		return t.Encode()
	default:
		return nil
	}
}
func (m UrlAuthResult) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1831650802:
		m2 := &TLurlAuthResultRequest{data: &UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1886646706:
		m2 := &TLurlAuthResultAccepted{data: &UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1445536993:
		m2 := &TLurlAuthResultDefault{data: &UrlAuthResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m UrlAuthResult) To_urlAuthResultRequest() *TLurlAuthResultRequest {
	return &TLurlAuthResultRequest{
		data: m.data,
	}
}
func (m UrlAuthResult) To_urlAuthResultAccepted() *TLurlAuthResultAccepted {
	return &TLurlAuthResultAccepted{
		data: m.data,
	}
}
func (m UrlAuthResult) To_urlAuthResultDefault() *TLurlAuthResultDefault {
	return &TLurlAuthResultDefault{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatParticipant
//
func (m ChatParticipant) Encode() []byte {
	switch m.constructor {
	case -925415106:
		t := m.To_chatParticipant()
		return t.Encode()
	case -636267638:
		t := m.To_chatParticipantCreator()
		return t.Encode()
	case -489233354:
		t := m.To_chatParticipantAdmin()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatParticipant) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -925415106:
		m2 := &TLchatParticipant{data: &ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -636267638:
		m2 := &TLchatParticipantCreator{data: &ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -489233354:
		m2 := &TLchatParticipantAdmin{data: &ChatParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatParticipant) To_chatParticipant() *TLchatParticipant {
	return &TLchatParticipant{
		data: m.data,
	}
}
func (m ChatParticipant) To_chatParticipantCreator() *TLchatParticipantCreator {
	return &TLchatParticipantCreator{
		data: m.data,
	}
}
func (m ChatParticipant) To_chatParticipantAdmin() *TLchatParticipantAdmin {
	return &TLchatParticipantAdmin{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelMessagesFilter
//
func (m ChannelMessagesFilter) Encode() []byte {
	switch m.constructor {
	case -1798033689:
		t := m.To_channelMessagesFilterEmpty()
		return t.Encode()
	case -847783593:
		t := m.To_channelMessagesFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelMessagesFilter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1798033689:
		m2 := &TLchannelMessagesFilterEmpty{data: &ChannelMessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -847783593:
		m2 := &TLchannelMessagesFilter{data: &ChannelMessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelMessagesFilter) To_channelMessagesFilterEmpty() *TLchannelMessagesFilterEmpty {
	return &TLchannelMessagesFilterEmpty{
		data: m.data,
	}
}
func (m ChannelMessagesFilter) To_channelMessagesFilter() *TLchannelMessagesFilter {
	return &TLchannelMessagesFilter{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_CountryCode
//
func (m help_CountryCode) Encode() []byte {
	switch m.constructor {
	case 1107543535:
		t := m.To_help_countryCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_CountryCode) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1107543535:
		m2 := &TLhelp_countryCode{data: &help_CountryCode_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_CountryCode) To_help_countryCode() *TLhelp_countryCode {
	return &TLhelp_countryCode{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_CodeType
//
func (m auth_CodeType) Encode() []byte {
	switch m.constructor {
	case 1923290508:
		t := m.To_auth_codeTypeSms()
		return t.Encode()
	case 1948046307:
		t := m.To_auth_codeTypeCall()
		return t.Encode()
	case 577556219:
		t := m.To_auth_codeTypeFlashCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_CodeType) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1923290508:
		m2 := &TLauth_codeTypeSms{data: &auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1948046307:
		m2 := &TLauth_codeTypeCall{data: &auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 577556219:
		m2 := &TLauth_codeTypeFlashCall{data: &auth_CodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_CodeType) To_auth_codeTypeSms() *TLauth_codeTypeSms {
	return &TLauth_codeTypeSms{
		data: m.data,
	}
}
func (m auth_CodeType) To_auth_codeTypeCall() *TLauth_codeTypeCall {
	return &TLauth_codeTypeCall{
		data: m.data,
	}
}
func (m auth_CodeType) To_auth_codeTypeFlashCall() *TLauth_codeTypeFlashCall {
	return &TLauth_codeTypeFlashCall{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPrivacyRule
//
func (m InputPrivacyRule) Encode() []byte {
	switch m.constructor {
	case 218751099:
		t := m.To_inputPrivacyValueAllowContacts()
		return t.Encode()
	case 407582158:
		t := m.To_inputPrivacyValueAllowAll()
		return t.Encode()
	case 320652927:
		t := m.To_inputPrivacyValueAllowUsers()
		return t.Encode()
	case 195371015:
		t := m.To_inputPrivacyValueDisallowContacts()
		return t.Encode()
	case -697604407:
		t := m.To_inputPrivacyValueDisallowAll()
		return t.Encode()
	case -1877932953:
		t := m.To_inputPrivacyValueDisallowUsers()
		return t.Encode()
	case 1283572154:
		t := m.To_inputPrivacyValueAllowChatParticipants()
		return t.Encode()
	case -668769361:
		t := m.To_inputPrivacyValueDisallowChatParticipants()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPrivacyRule) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 218751099:
		m2 := &TLinputPrivacyValueAllowContacts{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 407582158:
		m2 := &TLinputPrivacyValueAllowAll{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 320652927:
		m2 := &TLinputPrivacyValueAllowUsers{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 195371015:
		m2 := &TLinputPrivacyValueDisallowContacts{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -697604407:
		m2 := &TLinputPrivacyValueDisallowAll{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1877932953:
		m2 := &TLinputPrivacyValueDisallowUsers{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1283572154:
		m2 := &TLinputPrivacyValueAllowChatParticipants{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -668769361:
		m2 := &TLinputPrivacyValueDisallowChatParticipants{data: &InputPrivacyRule_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowContacts() *TLinputPrivacyValueAllowContacts {
	return &TLinputPrivacyValueAllowContacts{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowAll() *TLinputPrivacyValueAllowAll {
	return &TLinputPrivacyValueAllowAll{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowUsers() *TLinputPrivacyValueAllowUsers {
	return &TLinputPrivacyValueAllowUsers{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowContacts() *TLinputPrivacyValueDisallowContacts {
	return &TLinputPrivacyValueDisallowContacts{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowAll() *TLinputPrivacyValueDisallowAll {
	return &TLinputPrivacyValueDisallowAll{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowUsers() *TLinputPrivacyValueDisallowUsers {
	return &TLinputPrivacyValueDisallowUsers{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueAllowChatParticipants() *TLinputPrivacyValueAllowChatParticipants {
	return &TLinputPrivacyValueAllowChatParticipants{
		data: m.data,
	}
}
func (m InputPrivacyRule) To_inputPrivacyValueDisallowChatParticipants() *TLinputPrivacyValueDisallowChatParticipants {
	return &TLinputPrivacyValueDisallowChatParticipants{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_SavedGifs
//
func (m messages_SavedGifs) Encode() []byte {
	switch m.constructor {
	case -402498398:
		t := m.To_messages_savedGifsNotModified()
		return t.Encode()
	case 772213157:
		t := m.To_messages_savedGifs()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_SavedGifs) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -402498398:
		m2 := &TLmessages_savedGifsNotModified{data: &messages_SavedGifs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 772213157:
		m2 := &TLmessages_savedGifs{data: &messages_SavedGifs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_SavedGifs) To_messages_savedGifsNotModified() *TLmessages_savedGifsNotModified {
	return &TLmessages_savedGifsNotModified{
		data: m.data,
	}
}
func (m messages_SavedGifs) To_messages_savedGifs() *TLmessages_savedGifs {
	return &TLmessages_savedGifs{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGraph
//
func (m StatsGraph) Encode() []byte {
	switch m.constructor {
	case 1244130093:
		t := m.To_statsGraphAsync()
		return t.Encode()
	case -1092839390:
		t := m.To_statsGraphError()
		return t.Encode()
	case -1901828938:
		t := m.To_statsGraph()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGraph) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1244130093:
		m2 := &TLstatsGraphAsync{data: &StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1092839390:
		m2 := &TLstatsGraphError{data: &StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1901828938:
		m2 := &TLstatsGraph{data: &StatsGraph_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsGraph) To_statsGraphAsync() *TLstatsGraphAsync {
	return &TLstatsGraphAsync{
		data: m.data,
	}
}
func (m StatsGraph) To_statsGraphError() *TLstatsGraphError {
	return &TLstatsGraphError{
		data: m.data,
	}
}
func (m StatsGraph) To_statsGraph() *TLstatsGraph {
	return &TLstatsGraph{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageTableCell
//
func (m PageTableCell) Encode() []byte {
	switch m.constructor {
	case 878078826:
		t := m.To_pageTableCell()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageTableCell) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 878078826:
		m2 := &TLpageTableCell{data: &PageTableCell_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageTableCell) To_pageTableCell() *TLpageTableCell {
	return &TLpageTableCell{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BaseTheme
//
func (m BaseTheme) Encode() []byte {
	switch m.constructor {
	case -1012849566:
		t := m.To_baseThemeClassic()
		return t.Encode()
	case -69724536:
		t := m.To_baseThemeDay()
		return t.Encode()
	case -1212997976:
		t := m.To_baseThemeNight()
		return t.Encode()
	case 1834973166:
		t := m.To_baseThemeTinted()
		return t.Encode()
	case 1527845466:
		t := m.To_baseThemeArctic()
		return t.Encode()
	default:
		return nil
	}
}
func (m BaseTheme) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1012849566:
		m2 := &TLbaseThemeClassic{data: &BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -69724536:
		m2 := &TLbaseThemeDay{data: &BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1212997976:
		m2 := &TLbaseThemeNight{data: &BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1834973166:
		m2 := &TLbaseThemeTinted{data: &BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1527845466:
		m2 := &TLbaseThemeArctic{data: &BaseTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BaseTheme) To_baseThemeClassic() *TLbaseThemeClassic {
	return &TLbaseThemeClassic{
		data: m.data,
	}
}
func (m BaseTheme) To_baseThemeDay() *TLbaseThemeDay {
	return &TLbaseThemeDay{
		data: m.data,
	}
}
func (m BaseTheme) To_baseThemeNight() *TLbaseThemeNight {
	return &TLbaseThemeNight{
		data: m.data,
	}
}
func (m BaseTheme) To_baseThemeTinted() *TLbaseThemeTinted {
	return &TLbaseThemeTinted{
		data: m.data,
	}
}
func (m BaseTheme) To_baseThemeArctic() *TLbaseThemeArctic {
	return &TLbaseThemeArctic{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:updates_State
//
func (m updates_State) Encode() []byte {
	switch m.constructor {
	case -1519637954:
		t := m.To_updates_state()
		return t.Encode()
	default:
		return nil
	}
}
func (m updates_State) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1519637954:
		m2 := &TLupdates_state{data: &updates_State_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m updates_State) To_updates_state() *TLupdates_state {
	return &TLupdates_state{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_HighScores
//
func (m messages_HighScores) Encode() []byte {
	switch m.constructor {
	case -1707344487:
		t := m.To_messages_highScores()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_HighScores) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1707344487:
		m2 := &TLmessages_highScores{data: &messages_HighScores_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_HighScores) To_messages_highScores() *TLmessages_highScores {
	return &TLmessages_highScores{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Dialog
//
func (m Dialog) Encode() []byte {
	switch m.constructor {
	case 739712882:
		t := m.To_dialog()
		return t.Encode()
	case 1908216652:
		t := m.To_dialogFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m Dialog) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 739712882:
		m2 := &TLdialog{data: &Dialog_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1908216652:
		m2 := &TLdialogFolder{data: &Dialog_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Dialog) To_dialog() *TLdialog {
	return &TLdialog{
		data: m.data,
	}
}
func (m Dialog) To_dialogFolder() *TLdialogFolder {
	return &TLdialogFolder{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_WebAuthorizations
//
func (m account_WebAuthorizations) Encode() []byte {
	switch m.constructor {
	case -313079300:
		t := m.To_account_webAuthorizations()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_WebAuthorizations) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -313079300:
		m2 := &TLaccount_webAuthorizations{data: &account_WebAuthorizations_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_WebAuthorizations) To_account_webAuthorizations() *TLaccount_webAuthorizations {
	return &TLaccount_webAuthorizations{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueHash
//
func (m SecureValueHash) Encode() []byte {
	switch m.constructor {
	case -316748368:
		t := m.To_secureValueHash()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueHash) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -316748368:
		m2 := &TLsecureValueHash{data: &SecureValueHash_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureValueHash) To_secureValueHash() *TLsecureValueHash {
	return &TLsecureValueHash{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:RichText
//
func (m RichText) Encode() []byte {
	switch m.constructor {
	case -599948721:
		t := m.To_textEmpty()
		return t.Encode()
	case 1950782688:
		t := m.To_textPlain()
		return t.Encode()
	case 1730456516:
		t := m.To_textBold()
		return t.Encode()
	case -653089380:
		t := m.To_textItalic()
		return t.Encode()
	case -1054465340:
		t := m.To_textUnderline()
		return t.Encode()
	case -1678197867:
		t := m.To_textStrike()
		return t.Encode()
	case 1816074681:
		t := m.To_textFixed()
		return t.Encode()
	case 1009288385:
		t := m.To_textUrl()
		return t.Encode()
	case -564523562:
		t := m.To_textEmail()
		return t.Encode()
	case 2120376535:
		t := m.To_textConcat()
		return t.Encode()
	case -311786236:
		t := m.To_textSubscript()
		return t.Encode()
	case -939827711:
		t := m.To_textSuperscript()
		return t.Encode()
	case 55281185:
		t := m.To_textMarked()
		return t.Encode()
	case 483104362:
		t := m.To_textPhone()
		return t.Encode()
	case 136105807:
		t := m.To_textImage()
		return t.Encode()
	case 894777186:
		t := m.To_textAnchor()
		return t.Encode()
	default:
		return nil
	}
}
func (m RichText) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -599948721:
		m2 := &TLtextEmpty{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1950782688:
		m2 := &TLtextPlain{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1730456516:
		m2 := &TLtextBold{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -653089380:
		m2 := &TLtextItalic{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1054465340:
		m2 := &TLtextUnderline{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1678197867:
		m2 := &TLtextStrike{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1816074681:
		m2 := &TLtextFixed{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1009288385:
		m2 := &TLtextUrl{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -564523562:
		m2 := &TLtextEmail{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2120376535:
		m2 := &TLtextConcat{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -311786236:
		m2 := &TLtextSubscript{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -939827711:
		m2 := &TLtextSuperscript{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 55281185:
		m2 := &TLtextMarked{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 483104362:
		m2 := &TLtextPhone{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 136105807:
		m2 := &TLtextImage{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 894777186:
		m2 := &TLtextAnchor{data: &RichText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m RichText) To_textEmpty() *TLtextEmpty {
	return &TLtextEmpty{
		data: m.data,
	}
}
func (m RichText) To_textPlain() *TLtextPlain {
	return &TLtextPlain{
		data: m.data,
	}
}
func (m RichText) To_textBold() *TLtextBold {
	return &TLtextBold{
		data: m.data,
	}
}
func (m RichText) To_textItalic() *TLtextItalic {
	return &TLtextItalic{
		data: m.data,
	}
}
func (m RichText) To_textUnderline() *TLtextUnderline {
	return &TLtextUnderline{
		data: m.data,
	}
}
func (m RichText) To_textStrike() *TLtextStrike {
	return &TLtextStrike{
		data: m.data,
	}
}
func (m RichText) To_textFixed() *TLtextFixed {
	return &TLtextFixed{
		data: m.data,
	}
}
func (m RichText) To_textUrl() *TLtextUrl {
	return &TLtextUrl{
		data: m.data,
	}
}
func (m RichText) To_textEmail() *TLtextEmail {
	return &TLtextEmail{
		data: m.data,
	}
}
func (m RichText) To_textConcat() *TLtextConcat {
	return &TLtextConcat{
		data: m.data,
	}
}
func (m RichText) To_textSubscript() *TLtextSubscript {
	return &TLtextSubscript{
		data: m.data,
	}
}
func (m RichText) To_textSuperscript() *TLtextSuperscript {
	return &TLtextSuperscript{
		data: m.data,
	}
}
func (m RichText) To_textMarked() *TLtextMarked {
	return &TLtextMarked{
		data: m.data,
	}
}
func (m RichText) To_textPhone() *TLtextPhone {
	return &TLtextPhone{
		data: m.data,
	}
}
func (m RichText) To_textImage() *TLtextImage {
	return &TLtextImage{
		data: m.data,
	}
}
func (m RichText) To_textAnchor() *TLtextAnchor {
	return &TLtextAnchor{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Chat
//
func (m Chat) Encode() []byte {
	switch m.constructor {
	case -1683826688:
		t := m.To_chatEmpty()
		return t.Encode()
	case 1004149726:
		t := m.To_chat()
		return t.Encode()
	case 120753115:
		t := m.To_chatForbidden()
		return t.Encode()
	case -753232354:
		t := m.To_channel()
		return t.Encode()
	case 681420594:
		t := m.To_channelForbidden()
		return t.Encode()
	default:
		return nil
	}
}
func (m Chat) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1683826688:
		m2 := &TLchatEmpty{data: &Chat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1004149726:
		m2 := &TLchat{data: &Chat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 120753115:
		m2 := &TLchatForbidden{data: &Chat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -753232354:
		m2 := &TLchannel{data: &Chat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 681420594:
		m2 := &TLchannelForbidden{data: &Chat_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Chat) To_chatEmpty() *TLchatEmpty {
	return &TLchatEmpty{
		data: m.data,
	}
}
func (m Chat) To_chat() *TLchat {
	return &TLchat{
		data: m.data,
	}
}
func (m Chat) To_chatForbidden() *TLchatForbidden {
	return &TLchatForbidden{
		data: m.data,
	}
}
func (m Chat) To_channel() *TLchannel {
	return &TLchannel{
		data: m.data,
	}
}
func (m Chat) To_channelForbidden() *TLchannelForbidden {
	return &TLchannelForbidden{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogFilter
//
func (m DialogFilter) Encode() []byte {
	switch m.constructor {
	case 1949890536:
		t := m.To_dialogFilter()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogFilter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1949890536:
		m2 := &TLdialogFilter{data: &DialogFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DialogFilter) To_dialogFilter() *TLdialogFilter {
	return &TLdialogFilter{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiLanguage
//
func (m EmojiLanguage) Encode() []byte {
	switch m.constructor {
	case -1275374751:
		t := m.To_emojiLanguage()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiLanguage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1275374751:
		m2 := &TLemojiLanguage{data: &EmojiLanguage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EmojiLanguage) To_emojiLanguage() *TLemojiLanguage {
	return &TLemojiLanguage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_Themes
//
func (m account_Themes) Encode() []byte {
	switch m.constructor {
	case -199313886:
		t := m.To_account_themesNotModified()
		return t.Encode()
	case 2137482273:
		t := m.To_account_themes()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_Themes) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -199313886:
		m2 := &TLaccount_themesNotModified{data: &account_Themes_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2137482273:
		m2 := &TLaccount_themes{data: &account_Themes_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_Themes) To_account_themesNotModified() *TLaccount_themesNotModified {
	return &TLaccount_themesNotModified{
		data: m.data,
	}
}
func (m account_Themes) To_account_themes() *TLaccount_themes {
	return &TLaccount_themes{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerLocated
//
func (m PeerLocated) Encode() []byte {
	switch m.constructor {
	case -901375139:
		t := m.To_peerLocated()
		return t.Encode()
	case -118740917:
		t := m.To_peerSelfLocated()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerLocated) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -901375139:
		m2 := &TLpeerLocated{data: &PeerLocated_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -118740917:
		m2 := &TLpeerSelfLocated{data: &PeerLocated_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PeerLocated) To_peerLocated() *TLpeerLocated {
	return &TLpeerLocated{
		data: m.data,
	}
}
func (m PeerLocated) To_peerSelfLocated() *TLpeerSelfLocated {
	return &TLpeerSelfLocated{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_SentEmailCode
//
func (m account_SentEmailCode) Encode() []byte {
	switch m.constructor {
	case -2128640689:
		t := m.To_account_sentEmailCode()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_SentEmailCode) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2128640689:
		m2 := &TLaccount_sentEmailCode{data: &account_SentEmailCode_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_SentEmailCode) To_account_sentEmailCode() *TLaccount_sentEmailCode {
	return &TLaccount_sentEmailCode{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackString
//
func (m LangPackString) Encode() []byte {
	switch m.constructor {
	case -892239370:
		t := m.To_langPackString()
		return t.Encode()
	case 1816636575:
		t := m.To_langPackStringPluralized()
		return t.Encode()
	case 695856818:
		t := m.To_langPackStringDeleted()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackString) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -892239370:
		m2 := &TLlangPackString{data: &LangPackString_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1816636575:
		m2 := &TLlangPackStringPluralized{data: &LangPackString_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 695856818:
		m2 := &TLlangPackStringDeleted{data: &LangPackString_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m LangPackString) To_langPackString() *TLlangPackString {
	return &TLlangPackString{
		data: m.data,
	}
}
func (m LangPackString) To_langPackStringPluralized() *TLlangPackStringPluralized {
	return &TLlangPackStringPluralized{
		data: m.data,
	}
}
func (m LangPackString) To_langPackStringDeleted() *TLlangPackStringDeleted {
	return &TLlangPackStringDeleted{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DraftMessage
//
func (m DraftMessage) Encode() []byte {
	switch m.constructor {
	case 453805082:
		t := m.To_draftMessageEmpty()
		return t.Encode()
	case -40996577:
		t := m.To_draftMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m DraftMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 453805082:
		m2 := &TLdraftMessageEmpty{data: &DraftMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -40996577:
		m2 := &TLdraftMessage{data: &DraftMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DraftMessage) To_draftMessageEmpty() *TLdraftMessageEmpty {
	return &TLdraftMessageEmpty{
		data: m.data,
	}
}
func (m DraftMessage) To_draftMessage() *TLdraftMessage {
	return &TLdraftMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentResult
//
func (m payments_PaymentResult) Encode() []byte {
	switch m.constructor {
	case 1314881805:
		t := m.To_payments_paymentResult()
		return t.Encode()
	case -666824391:
		t := m.To_payments_paymentVerificationNeeded()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_PaymentResult) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1314881805:
		m2 := &TLpayments_paymentResult{data: &payments_PaymentResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -666824391:
		m2 := &TLpayments_paymentVerificationNeeded{data: &payments_PaymentResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_PaymentResult) To_payments_paymentResult() *TLpayments_paymentResult {
	return &TLpayments_paymentResult{
		data: m.data,
	}
}
func (m payments_PaymentResult) To_payments_paymentVerificationNeeded() *TLpayments_paymentVerificationNeeded {
	return &TLpayments_paymentVerificationNeeded{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FoundStickerSets
//
func (m messages_FoundStickerSets) Encode() []byte {
	switch m.constructor {
	case 223655517:
		t := m.To_messages_foundStickerSetsNotModified()
		return t.Encode()
	case 1359533640:
		t := m.To_messages_foundStickerSets()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_FoundStickerSets) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 223655517:
		m2 := &TLmessages_foundStickerSetsNotModified{data: &messages_FoundStickerSets_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1359533640:
		m2 := &TLmessages_foundStickerSets{data: &messages_FoundStickerSets_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_FoundStickerSets) To_messages_foundStickerSetsNotModified() *TLmessages_foundStickerSetsNotModified {
	return &TLmessages_foundStickerSetsNotModified{
		data: m.data,
	}
}
func (m messages_FoundStickerSets) To_messages_foundStickerSets() *TLmessages_foundStickerSets {
	return &TLmessages_foundStickerSets{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Game
//
func (m Game) Encode() []byte {
	switch m.constructor {
	case -1107729093:
		t := m.To_game()
		return t.Encode()
	default:
		return nil
	}
}
func (m Game) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1107729093:
		m2 := &TLgame{data: &Game_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Game) To_game() *TLgame {
	return &TLgame{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputTheme
//
func (m InputTheme) Encode() []byte {
	switch m.constructor {
	case 1012306921:
		t := m.To_inputTheme()
		return t.Encode()
	case -175567375:
		t := m.To_inputThemeSlug()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputTheme) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1012306921:
		m2 := &TLinputTheme{data: &InputTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -175567375:
		m2 := &TLinputThemeSlug{data: &InputTheme_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputTheme) To_inputTheme() *TLinputTheme {
	return &TLinputTheme{
		data: m.data,
	}
}
func (m InputTheme) To_inputThemeSlug() *TLinputThemeSlug {
	return &TLinputThemeSlug{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputStickeredMedia
//
func (m InputStickeredMedia) Encode() []byte {
	switch m.constructor {
	case 1251549527:
		t := m.To_inputStickeredMediaPhoto()
		return t.Encode()
	case 70813275:
		t := m.To_inputStickeredMediaDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputStickeredMedia) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1251549527:
		m2 := &TLinputStickeredMediaPhoto{data: &InputStickeredMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 70813275:
		m2 := &TLinputStickeredMediaDocument{data: &InputStickeredMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputStickeredMedia) To_inputStickeredMediaPhoto() *TLinputStickeredMediaPhoto {
	return &TLinputStickeredMediaPhoto{
		data: m.data,
	}
}
func (m InputStickeredMedia) To_inputStickeredMediaDocument() *TLinputStickeredMediaDocument {
	return &TLinputStickeredMediaDocument{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_AdminLogResults
//
func (m channels_AdminLogResults) Encode() []byte {
	switch m.constructor {
	case -309659827:
		t := m.To_channels_adminLogResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m channels_AdminLogResults) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -309659827:
		m2 := &TLchannels_adminLogResults{data: &channels_AdminLogResults_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m channels_AdminLogResults) To_channels_adminLogResults() *TLchannels_adminLogResults {
	return &TLchannels_adminLogResults{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_VotesList
//
func (m messages_VotesList) Encode() []byte {
	switch m.constructor {
	case 136574537:
		t := m.To_messages_votesList()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_VotesList) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 136574537:
		m2 := &TLmessages_votesList{data: &messages_VotesList_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_VotesList) To_messages_votesList() *TLmessages_votesList {
	return &TLmessages_votesList{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecurePasswordKdfAlgo
//
func (m SecurePasswordKdfAlgo) Encode() []byte {
	switch m.constructor {
	case 4883767:
		t := m.To_securePasswordKdfAlgoUnknown()
		return t.Encode()
	case -1141711456:
		t := m.To_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000()
		return t.Encode()
	case -2042159726:
		t := m.To_securePasswordKdfAlgoSHA512()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecurePasswordKdfAlgo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 4883767:
		m2 := &TLsecurePasswordKdfAlgoUnknown{data: &SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1141711456:
		m2 := &TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{data: &SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2042159726:
		m2 := &TLsecurePasswordKdfAlgoSHA512{data: &SecurePasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoUnknown() *TLsecurePasswordKdfAlgoUnknown {
	return &TLsecurePasswordKdfAlgoUnknown{
		data: m.data,
	}
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoPBKDF2HMACSHA512iter100000() *TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 {
	return &TLsecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000{
		data: m.data,
	}
}
func (m SecurePasswordKdfAlgo) To_securePasswordKdfAlgoSHA512() *TLsecurePasswordKdfAlgoSHA512 {
	return &TLsecurePasswordKdfAlgoSHA512{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebPage
//
func (m WebPage) Encode() []byte {
	switch m.constructor {
	case -350980120:
		t := m.To_webPageEmpty()
		return t.Encode()
	case -981018084:
		t := m.To_webPagePending()
		return t.Encode()
	case -392411726:
		t := m.To_webPage()
		return t.Encode()
	case 1930545681:
		t := m.To_webPageNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebPage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -350980120:
		m2 := &TLwebPageEmpty{data: &WebPage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -981018084:
		m2 := &TLwebPagePending{data: &WebPage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -392411726:
		m2 := &TLwebPage{data: &WebPage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1930545681:
		m2 := &TLwebPageNotModified{data: &WebPage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WebPage) To_webPageEmpty() *TLwebPageEmpty {
	return &TLwebPageEmpty{
		data: m.data,
	}
}
func (m WebPage) To_webPagePending() *TLwebPagePending {
	return &TLwebPagePending{
		data: m.data,
	}
}
func (m WebPage) To_webPage() *TLwebPage {
	return &TLwebPage{
		data: m.data,
	}
}
func (m WebPage) To_webPageNotModified() *TLwebPageNotModified {
	return &TLwebPageNotModified{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_SavedInfo
//
func (m payments_SavedInfo) Encode() []byte {
	switch m.constructor {
	case -74456004:
		t := m.To_payments_savedInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_SavedInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -74456004:
		m2 := &TLpayments_savedInfo{data: &payments_SavedInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_SavedInfo) To_payments_savedInfo() *TLpayments_savedInfo {
	return &TLpayments_savedInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessagesFilter
//
func (m MessagesFilter) Encode() []byte {
	switch m.constructor {
	case 1474492012:
		t := m.To_inputMessagesFilterEmpty()
		return t.Encode()
	case -1777752804:
		t := m.To_inputMessagesFilterPhotos()
		return t.Encode()
	case -1614803355:
		t := m.To_inputMessagesFilterVideo()
		return t.Encode()
	case 1458172132:
		t := m.To_inputMessagesFilterPhotoVideo()
		return t.Encode()
	case -1629621880:
		t := m.To_inputMessagesFilterDocument()
		return t.Encode()
	case 2129714567:
		t := m.To_inputMessagesFilterUrl()
		return t.Encode()
	case -3644025:
		t := m.To_inputMessagesFilterGif()
		return t.Encode()
	case 1358283666:
		t := m.To_inputMessagesFilterVoice()
		return t.Encode()
	case 928101534:
		t := m.To_inputMessagesFilterMusic()
		return t.Encode()
	case 975236280:
		t := m.To_inputMessagesFilterChatPhotos()
		return t.Encode()
	case -2134272152:
		t := m.To_inputMessagesFilterPhoneCalls()
		return t.Encode()
	case 2054952868:
		t := m.To_inputMessagesFilterRoundVoice()
		return t.Encode()
	case -1253451181:
		t := m.To_inputMessagesFilterRoundVideo()
		return t.Encode()
	case -1040652646:
		t := m.To_inputMessagesFilterMyMentions()
		return t.Encode()
	case -419271411:
		t := m.To_inputMessagesFilterGeo()
		return t.Encode()
	case -530392189:
		t := m.To_inputMessagesFilterContacts()
		return t.Encode()
	case 464520273:
		t := m.To_inputMessagesFilterPinned()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessagesFilter) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1474492012:
		m2 := &TLinputMessagesFilterEmpty{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1777752804:
		m2 := &TLinputMessagesFilterPhotos{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1614803355:
		m2 := &TLinputMessagesFilterVideo{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1458172132:
		m2 := &TLinputMessagesFilterPhotoVideo{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1629621880:
		m2 := &TLinputMessagesFilterDocument{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2129714567:
		m2 := &TLinputMessagesFilterUrl{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -3644025:
		m2 := &TLinputMessagesFilterGif{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1358283666:
		m2 := &TLinputMessagesFilterVoice{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 928101534:
		m2 := &TLinputMessagesFilterMusic{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 975236280:
		m2 := &TLinputMessagesFilterChatPhotos{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2134272152:
		m2 := &TLinputMessagesFilterPhoneCalls{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2054952868:
		m2 := &TLinputMessagesFilterRoundVoice{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1253451181:
		m2 := &TLinputMessagesFilterRoundVideo{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1040652646:
		m2 := &TLinputMessagesFilterMyMentions{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -419271411:
		m2 := &TLinputMessagesFilterGeo{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -530392189:
		m2 := &TLinputMessagesFilterContacts{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 464520273:
		m2 := &TLinputMessagesFilterPinned{data: &MessagesFilter_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessagesFilter) To_inputMessagesFilterEmpty() *TLinputMessagesFilterEmpty {
	return &TLinputMessagesFilterEmpty{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhotos() *TLinputMessagesFilterPhotos {
	return &TLinputMessagesFilterPhotos{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterVideo() *TLinputMessagesFilterVideo {
	return &TLinputMessagesFilterVideo{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhotoVideo() *TLinputMessagesFilterPhotoVideo {
	return &TLinputMessagesFilterPhotoVideo{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterDocument() *TLinputMessagesFilterDocument {
	return &TLinputMessagesFilterDocument{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterUrl() *TLinputMessagesFilterUrl {
	return &TLinputMessagesFilterUrl{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterGif() *TLinputMessagesFilterGif {
	return &TLinputMessagesFilterGif{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterVoice() *TLinputMessagesFilterVoice {
	return &TLinputMessagesFilterVoice{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterMusic() *TLinputMessagesFilterMusic {
	return &TLinputMessagesFilterMusic{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterChatPhotos() *TLinputMessagesFilterChatPhotos {
	return &TLinputMessagesFilterChatPhotos{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPhoneCalls() *TLinputMessagesFilterPhoneCalls {
	return &TLinputMessagesFilterPhoneCalls{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterRoundVoice() *TLinputMessagesFilterRoundVoice {
	return &TLinputMessagesFilterRoundVoice{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterRoundVideo() *TLinputMessagesFilterRoundVideo {
	return &TLinputMessagesFilterRoundVideo{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterMyMentions() *TLinputMessagesFilterMyMentions {
	return &TLinputMessagesFilterMyMentions{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterGeo() *TLinputMessagesFilterGeo {
	return &TLinputMessagesFilterGeo{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterContacts() *TLinputMessagesFilterContacts {
	return &TLinputMessagesFilterContacts{
		data: m.data,
	}
}
func (m MessagesFilter) To_inputMessagesFilterPinned() *TLinputMessagesFilterPinned {
	return &TLinputMessagesFilterPinned{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ShippingOption
//
func (m ShippingOption) Encode() []byte {
	switch m.constructor {
	case -1239335713:
		t := m.To_shippingOption()
		return t.Encode()
	default:
		return nil
	}
}
func (m ShippingOption) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1239335713:
		m2 := &TLshippingOption{data: &ShippingOption_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ShippingOption) To_shippingOption() *TLshippingOption {
	return &TLshippingOption{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SavedContact
//
func (m SavedContact) Encode() []byte {
	switch m.constructor {
	case 289586518:
		t := m.To_savedPhoneContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m SavedContact) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 289586518:
		m2 := &TLsavedPhoneContact{data: &SavedContact_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SavedContact) To_savedPhoneContact() *TLsavedPhoneContact {
	return &TLsavedPhoneContact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CodeSettings
//
func (m CodeSettings) Encode() []byte {
	switch m.constructor {
	case -557924733:
		t := m.To_codeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m CodeSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -557924733:
		m2 := &TLcodeSettings{data: &CodeSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m CodeSettings) To_codeSettings() *TLcodeSettings {
	return &TLcodeSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:JSONValue
//
func (m JSONValue) Encode() []byte {
	switch m.constructor {
	case 1064139624:
		t := m.To_jsonNull()
		return t.Encode()
	case -952869270:
		t := m.To_jsonBool()
		return t.Encode()
	case 736157604:
		t := m.To_jsonNumber()
		return t.Encode()
	case -1222740358:
		t := m.To_jsonString()
		return t.Encode()
	case -146520221:
		t := m.To_jsonArray()
		return t.Encode()
	case -1715350371:
		t := m.To_jsonObject()
		return t.Encode()
	default:
		return nil
	}
}
func (m JSONValue) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1064139624:
		m2 := &TLjsonNull{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -952869270:
		m2 := &TLjsonBool{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 736157604:
		m2 := &TLjsonNumber{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1222740358:
		m2 := &TLjsonString{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -146520221:
		m2 := &TLjsonArray{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1715350371:
		m2 := &TLjsonObject{data: &JSONValue_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m JSONValue) To_jsonNull() *TLjsonNull {
	return &TLjsonNull{
		data: m.data,
	}
}
func (m JSONValue) To_jsonBool() *TLjsonBool {
	return &TLjsonBool{
		data: m.data,
	}
}
func (m JSONValue) To_jsonNumber() *TLjsonNumber {
	return &TLjsonNumber{
		data: m.data,
	}
}
func (m JSONValue) To_jsonString() *TLjsonString {
	return &TLjsonString{
		data: m.data,
	}
}
func (m JSONValue) To_jsonArray() *TLjsonArray {
	return &TLjsonArray{
		data: m.data,
	}
}
func (m JSONValue) To_jsonObject() *TLjsonObject {
	return &TLjsonObject{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:EmojiKeyword
//
func (m EmojiKeyword) Encode() []byte {
	switch m.constructor {
	case -709641735:
		t := m.To_emojiKeyword()
		return t.Encode()
	case 594408994:
		t := m.To_emojiKeywordDeleted()
		return t.Encode()
	default:
		return nil
	}
}
func (m EmojiKeyword) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -709641735:
		m2 := &TLemojiKeyword{data: &EmojiKeyword_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 594408994:
		m2 := &TLemojiKeywordDeleted{data: &EmojiKeyword_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m EmojiKeyword) To_emojiKeyword() *TLemojiKeyword {
	return &TLemojiKeyword{
		data: m.data,
	}
}
func (m EmojiKeyword) To_emojiKeywordDeleted() *TLemojiKeywordDeleted {
	return &TLemojiKeywordDeleted{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserStatus
//
func (m UserStatus) Encode() []byte {
	switch m.constructor {
	case 164646985:
		t := m.To_userStatusEmpty()
		return t.Encode()
	case -306628279:
		t := m.To_userStatusOnline()
		return t.Encode()
	case 9203775:
		t := m.To_userStatusOffline()
		return t.Encode()
	case -496024847:
		t := m.To_userStatusRecently()
		return t.Encode()
	case 129960444:
		t := m.To_userStatusLastWeek()
		return t.Encode()
	case 2011940674:
		t := m.To_userStatusLastMonth()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserStatus) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 164646985:
		m2 := &TLuserStatusEmpty{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -306628279:
		m2 := &TLuserStatusOnline{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 9203775:
		m2 := &TLuserStatusOffline{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -496024847:
		m2 := &TLuserStatusRecently{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 129960444:
		m2 := &TLuserStatusLastWeek{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2011940674:
		m2 := &TLuserStatusLastMonth{data: &UserStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m UserStatus) To_userStatusEmpty() *TLuserStatusEmpty {
	return &TLuserStatusEmpty{
		data: m.data,
	}
}
func (m UserStatus) To_userStatusOnline() *TLuserStatusOnline {
	return &TLuserStatusOnline{
		data: m.data,
	}
}
func (m UserStatus) To_userStatusOffline() *TLuserStatusOffline {
	return &TLuserStatusOffline{
		data: m.data,
	}
}
func (m UserStatus) To_userStatusRecently() *TLuserStatusRecently {
	return &TLuserStatusRecently{
		data: m.data,
	}
}
func (m UserStatus) To_userStatusLastWeek() *TLuserStatusLastWeek {
	return &TLuserStatusLastWeek{
		data: m.data,
	}
}
func (m UserStatus) To_userStatusLastMonth() *TLuserStatusLastMonth {
	return &TLuserStatusLastMonth{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Found
//
func (m contacts_Found) Encode() []byte {
	switch m.constructor {
	case -1290580579:
		t := m.To_contacts_found()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_Found) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1290580579:
		m2 := &TLcontacts_found{data: &contacts_Found_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_Found) To_contacts_found() *TLcontacts_found {
	return &TLcontacts_found{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotCommand
//
func (m BotCommand) Encode() []byte {
	switch m.constructor {
	case -1032140601:
		t := m.To_botCommand()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotCommand) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1032140601:
		m2 := &TLbotCommand{data: &BotCommand_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BotCommand) To_botCommand() *TLbotCommand {
	return &TLbotCommand{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:AccountDaysTTL
//
func (m AccountDaysTTL) Encode() []byte {
	switch m.constructor {
	case -1194283041:
		t := m.To_accountDaysTTL()
		return t.Encode()
	default:
		return nil
	}
}
func (m AccountDaysTTL) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1194283041:
		m2 := &TLaccountDaysTTL{data: &AccountDaysTTL_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m AccountDaysTTL) To_accountDaysTTL() *TLaccountDaysTTL {
	return &TLaccountDaysTTL{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_AppUpdate
//
func (m help_AppUpdate) Encode() []byte {
	switch m.constructor {
	case 497489295:
		t := m.To_help_appUpdate()
		return t.Encode()
	case -1000708810:
		t := m.To_help_noAppUpdate()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_AppUpdate) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 497489295:
		m2 := &TLhelp_appUpdate{data: &help_AppUpdate_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1000708810:
		m2 := &TLhelp_noAppUpdate{data: &help_AppUpdate_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_AppUpdate) To_help_appUpdate() *TLhelp_appUpdate {
	return &TLhelp_appUpdate{
		data: m.data,
	}
}
func (m help_AppUpdate) To_help_noAppUpdate() *TLhelp_noAppUpdate {
	return &TLhelp_noAppUpdate{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureValueError
//
func (m SecureValueError) Encode() []byte {
	switch m.constructor {
	case -391902247:
		t := m.To_secureValueErrorData()
		return t.Encode()
	case 12467706:
		t := m.To_secureValueErrorFrontSide()
		return t.Encode()
	case -2037765467:
		t := m.To_secureValueErrorReverseSide()
		return t.Encode()
	case -449327402:
		t := m.To_secureValueErrorSelfie()
		return t.Encode()
	case 2054162547:
		t := m.To_secureValueErrorFile()
		return t.Encode()
	case 1717706985:
		t := m.To_secureValueErrorFiles()
		return t.Encode()
	case -2036501105:
		t := m.To_secureValueError()
		return t.Encode()
	case -1592506512:
		t := m.To_secureValueErrorTranslationFile()
		return t.Encode()
	case 878931416:
		t := m.To_secureValueErrorTranslationFiles()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureValueError) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -391902247:
		m2 := &TLsecureValueErrorData{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 12467706:
		m2 := &TLsecureValueErrorFrontSide{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2037765467:
		m2 := &TLsecureValueErrorReverseSide{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -449327402:
		m2 := &TLsecureValueErrorSelfie{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2054162547:
		m2 := &TLsecureValueErrorFile{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1717706985:
		m2 := &TLsecureValueErrorFiles{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2036501105:
		m2 := &TLsecureValueError{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1592506512:
		m2 := &TLsecureValueErrorTranslationFile{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 878931416:
		m2 := &TLsecureValueErrorTranslationFiles{data: &SecureValueError_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureValueError) To_secureValueErrorData() *TLsecureValueErrorData {
	return &TLsecureValueErrorData{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorFrontSide() *TLsecureValueErrorFrontSide {
	return &TLsecureValueErrorFrontSide{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorReverseSide() *TLsecureValueErrorReverseSide {
	return &TLsecureValueErrorReverseSide{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorSelfie() *TLsecureValueErrorSelfie {
	return &TLsecureValueErrorSelfie{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorFile() *TLsecureValueErrorFile {
	return &TLsecureValueErrorFile{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorFiles() *TLsecureValueErrorFiles {
	return &TLsecureValueErrorFiles{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueError() *TLsecureValueError {
	return &TLsecureValueError{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorTranslationFile() *TLsecureValueErrorTranslationFile {
	return &TLsecureValueErrorTranslationFile{
		data: m.data,
	}
}
func (m SecureValueError) To_secureValueErrorTranslationFiles() *TLsecureValueErrorTranslationFiles {
	return &TLsecureValueErrorTranslationFiles{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PhoneCallDiscardReason
//
func (m PhoneCallDiscardReason) Encode() []byte {
	switch m.constructor {
	case -2048646399:
		t := m.To_phoneCallDiscardReasonMissed()
		return t.Encode()
	case -527056480:
		t := m.To_phoneCallDiscardReasonDisconnect()
		return t.Encode()
	case 1471006352:
		t := m.To_phoneCallDiscardReasonHangup()
		return t.Encode()
	case -84416311:
		t := m.To_phoneCallDiscardReasonBusy()
		return t.Encode()
	default:
		return nil
	}
}
func (m PhoneCallDiscardReason) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2048646399:
		m2 := &TLphoneCallDiscardReasonMissed{data: &PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -527056480:
		m2 := &TLphoneCallDiscardReasonDisconnect{data: &PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1471006352:
		m2 := &TLphoneCallDiscardReasonHangup{data: &PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -84416311:
		m2 := &TLphoneCallDiscardReasonBusy{data: &PhoneCallDiscardReason_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonMissed() *TLphoneCallDiscardReasonMissed {
	return &TLphoneCallDiscardReasonMissed{
		data: m.data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonDisconnect() *TLphoneCallDiscardReasonDisconnect {
	return &TLphoneCallDiscardReasonDisconnect{
		data: m.data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonHangup() *TLphoneCallDiscardReasonHangup {
	return &TLphoneCallDiscardReasonHangup{
		data: m.data,
	}
}
func (m PhoneCallDiscardReason) To_phoneCallDiscardReasonBusy() *TLphoneCallDiscardReasonBusy {
	return &TLphoneCallDiscardReasonBusy{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Authorization
//
func (m Authorization) Encode() []byte {
	switch m.constructor {
	case -1392388579:
		t := m.To_authorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m Authorization) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1392388579:
		m2 := &TLauthorization{data: &Authorization_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Authorization) To_authorization() *TLauthorization {
	return &TLauthorization{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PrivacyRules
//
func (m account_PrivacyRules) Encode() []byte {
	switch m.constructor {
	case 1352683077:
		t := m.To_account_privacyRules()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_PrivacyRules) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1352683077:
		m2 := &TLaccount_privacyRules{data: &account_PrivacyRules_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_PrivacyRules) To_account_privacyRules() *TLaccount_privacyRules {
	return &TLaccount_privacyRules{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEventAction
//
func (m ChannelAdminLogEventAction) Encode() []byte {
	switch m.constructor {
	case -421545947:
		t := m.To_channelAdminLogEventActionChangeTitle()
		return t.Encode()
	case 1427671598:
		t := m.To_channelAdminLogEventActionChangeAbout()
		return t.Encode()
	case 1783299128:
		t := m.To_channelAdminLogEventActionChangeUsername()
		return t.Encode()
	case 1129042607:
		t := m.To_channelAdminLogEventActionChangePhoto()
		return t.Encode()
	case 460916654:
		t := m.To_channelAdminLogEventActionToggleInvites()
		return t.Encode()
	case 648939889:
		t := m.To_channelAdminLogEventActionToggleSignatures()
		return t.Encode()
	case -370660328:
		t := m.To_channelAdminLogEventActionUpdatePinned()
		return t.Encode()
	case 1889215493:
		t := m.To_channelAdminLogEventActionEditMessage()
		return t.Encode()
	case 1121994683:
		t := m.To_channelAdminLogEventActionDeleteMessage()
		return t.Encode()
	case 405815507:
		t := m.To_channelAdminLogEventActionParticipantJoin()
		return t.Encode()
	case -124291086:
		t := m.To_channelAdminLogEventActionParticipantLeave()
		return t.Encode()
	case -484690728:
		t := m.To_channelAdminLogEventActionParticipantInvite()
		return t.Encode()
	case -422036098:
		t := m.To_channelAdminLogEventActionParticipantToggleBan()
		return t.Encode()
	case -714643696:
		t := m.To_channelAdminLogEventActionParticipantToggleAdmin()
		return t.Encode()
	case -1312568665:
		t := m.To_channelAdminLogEventActionChangeStickerSet()
		return t.Encode()
	case 1599903217:
		t := m.To_channelAdminLogEventActionTogglePreHistoryHidden()
		return t.Encode()
	case 771095562:
		t := m.To_channelAdminLogEventActionDefaultBannedRights()
		return t.Encode()
	case -1895328189:
		t := m.To_channelAdminLogEventActionStopPoll()
		return t.Encode()
	case -1569748965:
		t := m.To_channelAdminLogEventActionChangeLinkedChat()
		return t.Encode()
	case 241923758:
		t := m.To_channelAdminLogEventActionChangeLocation()
		return t.Encode()
	case 1401984889:
		t := m.To_channelAdminLogEventActionToggleSlowMode()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEventAction) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -421545947:
		m2 := &TLchannelAdminLogEventActionChangeTitle{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1427671598:
		m2 := &TLchannelAdminLogEventActionChangeAbout{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1783299128:
		m2 := &TLchannelAdminLogEventActionChangeUsername{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1129042607:
		m2 := &TLchannelAdminLogEventActionChangePhoto{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 460916654:
		m2 := &TLchannelAdminLogEventActionToggleInvites{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 648939889:
		m2 := &TLchannelAdminLogEventActionToggleSignatures{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -370660328:
		m2 := &TLchannelAdminLogEventActionUpdatePinned{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1889215493:
		m2 := &TLchannelAdminLogEventActionEditMessage{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1121994683:
		m2 := &TLchannelAdminLogEventActionDeleteMessage{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 405815507:
		m2 := &TLchannelAdminLogEventActionParticipantJoin{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -124291086:
		m2 := &TLchannelAdminLogEventActionParticipantLeave{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -484690728:
		m2 := &TLchannelAdminLogEventActionParticipantInvite{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -422036098:
		m2 := &TLchannelAdminLogEventActionParticipantToggleBan{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -714643696:
		m2 := &TLchannelAdminLogEventActionParticipantToggleAdmin{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1312568665:
		m2 := &TLchannelAdminLogEventActionChangeStickerSet{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1599903217:
		m2 := &TLchannelAdminLogEventActionTogglePreHistoryHidden{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 771095562:
		m2 := &TLchannelAdminLogEventActionDefaultBannedRights{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1895328189:
		m2 := &TLchannelAdminLogEventActionStopPoll{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1569748965:
		m2 := &TLchannelAdminLogEventActionChangeLinkedChat{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 241923758:
		m2 := &TLchannelAdminLogEventActionChangeLocation{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1401984889:
		m2 := &TLchannelAdminLogEventActionToggleSlowMode{data: &ChannelAdminLogEventAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeTitle() *TLchannelAdminLogEventActionChangeTitle {
	return &TLchannelAdminLogEventActionChangeTitle{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeAbout() *TLchannelAdminLogEventActionChangeAbout {
	return &TLchannelAdminLogEventActionChangeAbout{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeUsername() *TLchannelAdminLogEventActionChangeUsername {
	return &TLchannelAdminLogEventActionChangeUsername{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangePhoto() *TLchannelAdminLogEventActionChangePhoto {
	return &TLchannelAdminLogEventActionChangePhoto{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleInvites() *TLchannelAdminLogEventActionToggleInvites {
	return &TLchannelAdminLogEventActionToggleInvites{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleSignatures() *TLchannelAdminLogEventActionToggleSignatures {
	return &TLchannelAdminLogEventActionToggleSignatures{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionUpdatePinned() *TLchannelAdminLogEventActionUpdatePinned {
	return &TLchannelAdminLogEventActionUpdatePinned{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionEditMessage() *TLchannelAdminLogEventActionEditMessage {
	return &TLchannelAdminLogEventActionEditMessage{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionDeleteMessage() *TLchannelAdminLogEventActionDeleteMessage {
	return &TLchannelAdminLogEventActionDeleteMessage{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantJoin() *TLchannelAdminLogEventActionParticipantJoin {
	return &TLchannelAdminLogEventActionParticipantJoin{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantLeave() *TLchannelAdminLogEventActionParticipantLeave {
	return &TLchannelAdminLogEventActionParticipantLeave{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantInvite() *TLchannelAdminLogEventActionParticipantInvite {
	return &TLchannelAdminLogEventActionParticipantInvite{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantToggleBan() *TLchannelAdminLogEventActionParticipantToggleBan {
	return &TLchannelAdminLogEventActionParticipantToggleBan{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionParticipantToggleAdmin() *TLchannelAdminLogEventActionParticipantToggleAdmin {
	return &TLchannelAdminLogEventActionParticipantToggleAdmin{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeStickerSet() *TLchannelAdminLogEventActionChangeStickerSet {
	return &TLchannelAdminLogEventActionChangeStickerSet{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionTogglePreHistoryHidden() *TLchannelAdminLogEventActionTogglePreHistoryHidden {
	return &TLchannelAdminLogEventActionTogglePreHistoryHidden{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionDefaultBannedRights() *TLchannelAdminLogEventActionDefaultBannedRights {
	return &TLchannelAdminLogEventActionDefaultBannedRights{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionStopPoll() *TLchannelAdminLogEventActionStopPoll {
	return &TLchannelAdminLogEventActionStopPoll{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeLinkedChat() *TLchannelAdminLogEventActionChangeLinkedChat {
	return &TLchannelAdminLogEventActionChangeLinkedChat{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionChangeLocation() *TLchannelAdminLogEventActionChangeLocation {
	return &TLchannelAdminLogEventActionChangeLocation{
		data: m.data,
	}
}
func (m ChannelAdminLogEventAction) To_channelAdminLogEventActionToggleSlowMode() *TLchannelAdminLogEventActionToggleSlowMode {
	return &TLchannelAdminLogEventActionToggleSlowMode{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebAuthorization
//
func (m WebAuthorization) Encode() []byte {
	switch m.constructor {
	case -892779534:
		t := m.To_webAuthorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebAuthorization) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -892779534:
		m2 := &TLwebAuthorization{data: &WebAuthorization_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WebAuthorization) To_webAuthorization() *TLwebAuthorization {
	return &TLwebAuthorization{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_ChannelParticipants
//
func (m channels_ChannelParticipants) Encode() []byte {
	switch m.constructor {
	case -177282392:
		t := m.To_channels_channelParticipants()
		return t.Encode()
	case -266911767:
		t := m.To_channels_channelParticipantsNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m channels_ChannelParticipants) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -177282392:
		m2 := &TLchannels_channelParticipants{data: &channels_ChannelParticipants_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -266911767:
		m2 := &TLchannels_channelParticipantsNotModified{data: &channels_ChannelParticipants_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m channels_ChannelParticipants) To_channels_channelParticipants() *TLchannels_channelParticipants {
	return &TLchannels_channelParticipants{
		data: m.data,
	}
}
func (m channels_ChannelParticipants) To_channels_channelParticipantsNotModified() *TLchannels_channelParticipantsNotModified {
	return &TLchannels_channelParticipantsNotModified{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PeerNotifySettings
//
func (m PeerNotifySettings) Encode() []byte {
	switch m.constructor {
	case -1353671392:
		t := m.To_peerNotifySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m PeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1353671392:
		m2 := &TLpeerNotifySettings{data: &PeerNotifySettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PeerNotifySettings) To_peerNotifySettings() *TLpeerNotifySettings {
	return &TLpeerNotifySettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageBlock
//
func (m PageBlock) Encode() []byte {
	switch m.constructor {
	case 324435594:
		t := m.To_pageBlockUnsupported()
		return t.Encode()
	case 1890305021:
		t := m.To_pageBlockTitle()
		return t.Encode()
	case -1879401953:
		t := m.To_pageBlockSubtitle()
		return t.Encode()
	case -1162877472:
		t := m.To_pageBlockAuthorDate()
		return t.Encode()
	case -1076861716:
		t := m.To_pageBlockHeader()
		return t.Encode()
	case -248793375:
		t := m.To_pageBlockSubheader()
		return t.Encode()
	case 1182402406:
		t := m.To_pageBlockParagraph()
		return t.Encode()
	case -1066346178:
		t := m.To_pageBlockPreformatted()
		return t.Encode()
	case 1216809369:
		t := m.To_pageBlockFooter()
		return t.Encode()
	case -618614392:
		t := m.To_pageBlockDivider()
		return t.Encode()
	case -837994576:
		t := m.To_pageBlockAnchor()
		return t.Encode()
	case -454524911:
		t := m.To_pageBlockList()
		return t.Encode()
	case 641563686:
		t := m.To_pageBlockBlockquote()
		return t.Encode()
	case 1329878739:
		t := m.To_pageBlockPullquote()
		return t.Encode()
	case 391759200:
		t := m.To_pageBlockPhoto()
		return t.Encode()
	case 2089805750:
		t := m.To_pageBlockVideo()
		return t.Encode()
	case 972174080:
		t := m.To_pageBlockCover()
		return t.Encode()
	case -1468953147:
		t := m.To_pageBlockEmbed()
		return t.Encode()
	case -229005301:
		t := m.To_pageBlockEmbedPost()
		return t.Encode()
	case 1705048653:
		t := m.To_pageBlockCollage()
		return t.Encode()
	case 52401552:
		t := m.To_pageBlockSlideshow()
		return t.Encode()
	case -283684427:
		t := m.To_pageBlockChannel()
		return t.Encode()
	case -2143067670:
		t := m.To_pageBlockAudio()
		return t.Encode()
	case 504660880:
		t := m.To_pageBlockKicker()
		return t.Encode()
	case -1085412734:
		t := m.To_pageBlockTable()
		return t.Encode()
	case -1702174239:
		t := m.To_pageBlockOrderedList()
		return t.Encode()
	case 1987480557:
		t := m.To_pageBlockDetails()
		return t.Encode()
	case 370236054:
		t := m.To_pageBlockRelatedArticles()
		return t.Encode()
	case -1538310410:
		t := m.To_pageBlockMap()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageBlock) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 324435594:
		m2 := &TLpageBlockUnsupported{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1890305021:
		m2 := &TLpageBlockTitle{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1879401953:
		m2 := &TLpageBlockSubtitle{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1162877472:
		m2 := &TLpageBlockAuthorDate{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1076861716:
		m2 := &TLpageBlockHeader{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -248793375:
		m2 := &TLpageBlockSubheader{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1182402406:
		m2 := &TLpageBlockParagraph{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1066346178:
		m2 := &TLpageBlockPreformatted{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1216809369:
		m2 := &TLpageBlockFooter{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -618614392:
		m2 := &TLpageBlockDivider{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -837994576:
		m2 := &TLpageBlockAnchor{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -454524911:
		m2 := &TLpageBlockList{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 641563686:
		m2 := &TLpageBlockBlockquote{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1329878739:
		m2 := &TLpageBlockPullquote{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 391759200:
		m2 := &TLpageBlockPhoto{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2089805750:
		m2 := &TLpageBlockVideo{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 972174080:
		m2 := &TLpageBlockCover{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1468953147:
		m2 := &TLpageBlockEmbed{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -229005301:
		m2 := &TLpageBlockEmbedPost{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1705048653:
		m2 := &TLpageBlockCollage{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 52401552:
		m2 := &TLpageBlockSlideshow{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -283684427:
		m2 := &TLpageBlockChannel{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2143067670:
		m2 := &TLpageBlockAudio{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 504660880:
		m2 := &TLpageBlockKicker{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1085412734:
		m2 := &TLpageBlockTable{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1702174239:
		m2 := &TLpageBlockOrderedList{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1987480557:
		m2 := &TLpageBlockDetails{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 370236054:
		m2 := &TLpageBlockRelatedArticles{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1538310410:
		m2 := &TLpageBlockMap{data: &PageBlock_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageBlock) To_pageBlockUnsupported() *TLpageBlockUnsupported {
	return &TLpageBlockUnsupported{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockTitle() *TLpageBlockTitle {
	return &TLpageBlockTitle{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockSubtitle() *TLpageBlockSubtitle {
	return &TLpageBlockSubtitle{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockAuthorDate() *TLpageBlockAuthorDate {
	return &TLpageBlockAuthorDate{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockHeader() *TLpageBlockHeader {
	return &TLpageBlockHeader{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockSubheader() *TLpageBlockSubheader {
	return &TLpageBlockSubheader{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockParagraph() *TLpageBlockParagraph {
	return &TLpageBlockParagraph{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockPreformatted() *TLpageBlockPreformatted {
	return &TLpageBlockPreformatted{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockFooter() *TLpageBlockFooter {
	return &TLpageBlockFooter{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockDivider() *TLpageBlockDivider {
	return &TLpageBlockDivider{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockAnchor() *TLpageBlockAnchor {
	return &TLpageBlockAnchor{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockList() *TLpageBlockList {
	return &TLpageBlockList{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockBlockquote() *TLpageBlockBlockquote {
	return &TLpageBlockBlockquote{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockPullquote() *TLpageBlockPullquote {
	return &TLpageBlockPullquote{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockPhoto() *TLpageBlockPhoto {
	return &TLpageBlockPhoto{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockVideo() *TLpageBlockVideo {
	return &TLpageBlockVideo{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockCover() *TLpageBlockCover {
	return &TLpageBlockCover{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockEmbed() *TLpageBlockEmbed {
	return &TLpageBlockEmbed{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockEmbedPost() *TLpageBlockEmbedPost {
	return &TLpageBlockEmbedPost{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockCollage() *TLpageBlockCollage {
	return &TLpageBlockCollage{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockSlideshow() *TLpageBlockSlideshow {
	return &TLpageBlockSlideshow{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockChannel() *TLpageBlockChannel {
	return &TLpageBlockChannel{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockAudio() *TLpageBlockAudio {
	return &TLpageBlockAudio{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockKicker() *TLpageBlockKicker {
	return &TLpageBlockKicker{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockTable() *TLpageBlockTable {
	return &TLpageBlockTable{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockOrderedList() *TLpageBlockOrderedList {
	return &TLpageBlockOrderedList{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockDetails() *TLpageBlockDetails {
	return &TLpageBlockDetails{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockRelatedArticles() *TLpageBlockRelatedArticles {
	return &TLpageBlockRelatedArticles{
		data: m.data,
	}
}
func (m PageBlock) To_pageBlockMap() *TLpageBlockMap {
	return &TLpageBlockMap{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:WebDocument
//
func (m WebDocument) Encode() []byte {
	switch m.constructor {
	case 475467473:
		t := m.To_webDocument()
		return t.Encode()
	case -104284986:
		t := m.To_webDocumentNoProxy()
		return t.Encode()
	default:
		return nil
	}
}
func (m WebDocument) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 475467473:
		m2 := &TLwebDocument{data: &WebDocument_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -104284986:
		m2 := &TLwebDocumentNoProxy{data: &WebDocument_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m WebDocument) To_webDocument() *TLwebDocument {
	return &TLwebDocument{
		data: m.data,
	}
}
func (m WebDocument) To_webDocumentNoProxy() *TLwebDocumentNoProxy {
	return &TLwebDocumentNoProxy{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MaskCoords
//
func (m MaskCoords) Encode() []byte {
	switch m.constructor {
	case -1361650766:
		t := m.To_maskCoords()
		return t.Encode()
	default:
		return nil
	}
}
func (m MaskCoords) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1361650766:
		m2 := &TLmaskCoords{data: &MaskCoords_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MaskCoords) To_maskCoords() *TLmaskCoords {
	return &TLmaskCoords{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputContact
//
func (m InputContact) Encode() []byte {
	switch m.constructor {
	case -208488460:
		t := m.To_inputPhoneContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputContact) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -208488460:
		m2 := &TLinputPhoneContact{data: &InputContact_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputContact) To_inputPhoneContact() *TLinputPhoneContact {
	return &TLinputPhoneContact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PollAnswerVoters
//
func (m PollAnswerVoters) Encode() []byte {
	switch m.constructor {
	case 997055186:
		t := m.To_pollAnswerVoters()
		return t.Encode()
	default:
		return nil
	}
}
func (m PollAnswerVoters) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 997055186:
		m2 := &TLpollAnswerVoters{data: &PollAnswerVoters_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PollAnswerVoters) To_pollAnswerVoters() *TLpollAnswerVoters {
	return &TLpollAnswerVoters{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_PassportConfig
//
func (m help_PassportConfig) Encode() []byte {
	switch m.constructor {
	case -1078332329:
		t := m.To_help_passportConfigNotModified()
		return t.Encode()
	case -1600596305:
		t := m.To_help_passportConfig()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_PassportConfig) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1078332329:
		m2 := &TLhelp_passportConfigNotModified{data: &help_PassportConfig_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1600596305:
		m2 := &TLhelp_passportConfig{data: &help_PassportConfig_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_PassportConfig) To_help_passportConfigNotModified() *TLhelp_passportConfigNotModified {
	return &TLhelp_passportConfigNotModified{
		data: m.data,
	}
}
func (m help_PassportConfig) To_help_passportConfig() *TLhelp_passportConfig {
	return &TLhelp_passportConfig{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:KeyboardButtonRow
//
func (m KeyboardButtonRow) Encode() []byte {
	switch m.constructor {
	case 2002815875:
		t := m.To_keyboardButtonRow()
		return t.Encode()
	default:
		return nil
	}
}
func (m KeyboardButtonRow) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2002815875:
		m2 := &TLkeyboardButtonRow{data: &KeyboardButtonRow_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m KeyboardButtonRow) To_keyboardButtonRow() *TLkeyboardButtonRow {
	return &TLkeyboardButtonRow{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInlineMessage
//
func (m BotInlineMessage) Encode() []byte {
	switch m.constructor {
	case 1984755728:
		t := m.To_botInlineMessageMediaAuto()
		return t.Encode()
	case -1937807902:
		t := m.To_botInlineMessageText()
		return t.Encode()
	case 85477117:
		t := m.To_botInlineMessageMediaGeo()
		return t.Encode()
	case -1970903652:
		t := m.To_botInlineMessageMediaVenue()
		return t.Encode()
	case 416402882:
		t := m.To_botInlineMessageMediaContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInlineMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1984755728:
		m2 := &TLbotInlineMessageMediaAuto{data: &BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1937807902:
		m2 := &TLbotInlineMessageText{data: &BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 85477117:
		m2 := &TLbotInlineMessageMediaGeo{data: &BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1970903652:
		m2 := &TLbotInlineMessageMediaVenue{data: &BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 416402882:
		m2 := &TLbotInlineMessageMediaContact{data: &BotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BotInlineMessage) To_botInlineMessageMediaAuto() *TLbotInlineMessageMediaAuto {
	return &TLbotInlineMessageMediaAuto{
		data: m.data,
	}
}
func (m BotInlineMessage) To_botInlineMessageText() *TLbotInlineMessageText {
	return &TLbotInlineMessageText{
		data: m.data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaGeo() *TLbotInlineMessageMediaGeo {
	return &TLbotInlineMessageMediaGeo{
		data: m.data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaVenue() *TLbotInlineMessageMediaVenue {
	return &TLbotInlineMessageMediaVenue{
		data: m.data,
	}
}
func (m BotInlineMessage) To_botInlineMessageMediaContact() *TLbotInlineMessageMediaContact {
	return &TLbotInlineMessageMediaContact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FeaturedStickers
//
func (m messages_FeaturedStickers) Encode() []byte {
	switch m.constructor {
	case -958657434:
		t := m.To_messages_featuredStickersNotModified()
		return t.Encode()
	case -1230257343:
		t := m.To_messages_featuredStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_FeaturedStickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -958657434:
		m2 := &TLmessages_featuredStickersNotModified{data: &messages_FeaturedStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1230257343:
		m2 := &TLmessages_featuredStickers{data: &messages_FeaturedStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_FeaturedStickers) To_messages_featuredStickersNotModified() *TLmessages_featuredStickersNotModified {
	return &TLmessages_featuredStickersNotModified{
		data: m.data,
	}
}
func (m messages_FeaturedStickers) To_messages_featuredStickers() *TLmessages_featuredStickers {
	return &TLmessages_featuredStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PopularContact
//
func (m PopularContact) Encode() []byte {
	switch m.constructor {
	case 1558266229:
		t := m.To_popularContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m PopularContact) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1558266229:
		m2 := &TLpopularContact{data: &PopularContact_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PopularContact) To_popularContact() *TLpopularContact {
	return &TLpopularContact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelParticipant
//
func (m ChannelParticipant) Encode() []byte {
	switch m.constructor {
	case 367766557:
		t := m.To_channelParticipant()
		return t.Encode()
	case -1557620115:
		t := m.To_channelParticipantSelf()
		return t.Encode()
	case 1149094475:
		t := m.To_channelParticipantCreator()
		return t.Encode()
	case -859915345:
		t := m.To_channelParticipantAdmin()
		return t.Encode()
	case 470789295:
		t := m.To_channelParticipantBanned()
		return t.Encode()
	case -1010402965:
		t := m.To_channelParticipantLeft()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelParticipant) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 367766557:
		m2 := &TLchannelParticipant{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1557620115:
		m2 := &TLchannelParticipantSelf{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1149094475:
		m2 := &TLchannelParticipantCreator{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -859915345:
		m2 := &TLchannelParticipantAdmin{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 470789295:
		m2 := &TLchannelParticipantBanned{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1010402965:
		m2 := &TLchannelParticipantLeft{data: &ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelParticipant) To_channelParticipant() *TLchannelParticipant {
	return &TLchannelParticipant{
		data: m.data,
	}
}
func (m ChannelParticipant) To_channelParticipantSelf() *TLchannelParticipantSelf {
	return &TLchannelParticipantSelf{
		data: m.data,
	}
}
func (m ChannelParticipant) To_channelParticipantCreator() *TLchannelParticipantCreator {
	return &TLchannelParticipantCreator{
		data: m.data,
	}
}
func (m ChannelParticipant) To_channelParticipantAdmin() *TLchannelParticipantAdmin {
	return &TLchannelParticipantAdmin{
		data: m.data,
	}
}
func (m ChannelParticipant) To_channelParticipantBanned() *TLchannelParticipantBanned {
	return &TLchannelParticipantBanned{
		data: m.data,
	}
}
func (m ChannelParticipant) To_channelParticipantLeft() *TLchannelParticipantLeft {
	return &TLchannelParticipantLeft{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_CountriesList
//
func (m help_CountriesList) Encode() []byte {
	switch m.constructor {
	case -1815339214:
		t := m.To_help_countriesListNotModified()
		return t.Encode()
	case -2016381538:
		t := m.To_help_countriesList()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_CountriesList) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1815339214:
		m2 := &TLhelp_countriesListNotModified{data: &help_CountriesList_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2016381538:
		m2 := &TLhelp_countriesList{data: &help_CountriesList_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_CountriesList) To_help_countriesListNotModified() *TLhelp_countriesListNotModified {
	return &TLhelp_countriesListNotModified{
		data: m.data,
	}
}
func (m help_CountriesList) To_help_countriesList() *TLhelp_countriesList {
	return &TLhelp_countriesList{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPhoto
//
func (m InputPhoto) Encode() []byte {
	switch m.constructor {
	case 483901197:
		t := m.To_inputPhotoEmpty()
		return t.Encode()
	case 1001634122:
		t := m.To_inputPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPhoto) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 483901197:
		m2 := &TLinputPhotoEmpty{data: &InputPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1001634122:
		m2 := &TLinputPhoto{data: &InputPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPhoto) To_inputPhotoEmpty() *TLinputPhotoEmpty {
	return &TLinputPhotoEmpty{
		data: m.data,
	}
}
func (m InputPhoto) To_inputPhoto() *TLinputPhoto {
	return &TLinputPhoto{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputCheckPasswordSRP
//
func (m InputCheckPasswordSRP) Encode() []byte {
	switch m.constructor {
	case -1736378792:
		t := m.To_inputCheckPasswordEmpty()
		return t.Encode()
	case -763367294:
		t := m.To_inputCheckPasswordSRP()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputCheckPasswordSRP) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1736378792:
		m2 := &TLinputCheckPasswordEmpty{data: &InputCheckPasswordSRP_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -763367294:
		m2 := &TLinputCheckPasswordSRP{data: &InputCheckPasswordSRP_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputCheckPasswordSRP) To_inputCheckPasswordEmpty() *TLinputCheckPasswordEmpty {
	return &TLinputCheckPasswordEmpty{
		data: m.data,
	}
}
func (m InputCheckPasswordSRP) To_inputCheckPasswordSRP() *TLinputCheckPasswordSRP {
	return &TLinputCheckPasswordSRP{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_TopPeers
//
func (m contacts_TopPeers) Encode() []byte {
	switch m.constructor {
	case -567906571:
		t := m.To_contacts_topPeersNotModified()
		return t.Encode()
	case 1891070632:
		t := m.To_contacts_topPeers()
		return t.Encode()
	case -1255369827:
		t := m.To_contacts_topPeersDisabled()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_TopPeers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -567906571:
		m2 := &TLcontacts_topPeersNotModified{data: &contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1891070632:
		m2 := &TLcontacts_topPeers{data: &contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1255369827:
		m2 := &TLcontacts_topPeersDisabled{data: &contacts_TopPeers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_TopPeers) To_contacts_topPeersNotModified() *TLcontacts_topPeersNotModified {
	return &TLcontacts_topPeersNotModified{
		data: m.data,
	}
}
func (m contacts_TopPeers) To_contacts_topPeers() *TLcontacts_topPeers {
	return &TLcontacts_topPeers{
		data: m.data,
	}
}
func (m contacts_TopPeers) To_contacts_topPeersDisabled() *TLcontacts_topPeersDisabled {
	return &TLcontacts_topPeersDisabled{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageReplyHeader
//
func (m MessageReplyHeader) Encode() []byte {
	switch m.constructor {
	case -1495959709:
		t := m.To_messageReplyHeader()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageReplyHeader) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1495959709:
		m2 := &TLmessageReplyHeader{data: &MessageReplyHeader_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageReplyHeader) To_messageReplyHeader() *TLmessageReplyHeader {
	return &TLmessageReplyHeader{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_Authorization
//
func (m auth_Authorization) Encode() []byte {
	switch m.constructor {
	case -855308010:
		t := m.To_auth_authorization()
		return t.Encode()
	case 1148485274:
		t := m.To_auth_authorizationSignUpRequired()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_Authorization) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -855308010:
		m2 := &TLauth_authorization{data: &auth_Authorization_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1148485274:
		m2 := &TLauth_authorizationSignUpRequired{data: &auth_Authorization_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_Authorization) To_auth_authorization() *TLauth_authorization {
	return &TLauth_authorization{
		data: m.data,
	}
}
func (m auth_Authorization) To_auth_authorizationSignUpRequired() *TLauth_authorizationSignUpRequired {
	return &TLauth_authorizationSignUpRequired{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_Country
//
func (m help_Country) Encode() []byte {
	switch m.constructor {
	case -1014526429:
		t := m.To_help_country()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_Country) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1014526429:
		m2 := &TLhelp_country{data: &help_Country_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_Country) To_help_country() *TLhelp_country {
	return &TLhelp_country{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Folder
//
func (m Folder) Encode() []byte {
	switch m.constructor {
	case -11252123:
		t := m.To_folder()
		return t.Encode()
	default:
		return nil
	}
}
func (m Folder) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -11252123:
		m2 := &TLfolder{data: &Folder_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Folder) To_folder() *TLfolder {
	return &TLfolder{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputFileLocation
//
func (m InputFileLocation) Encode() []byte {
	switch m.constructor {
	case -539317279:
		t := m.To_inputFileLocation()
		return t.Encode()
	case -182231723:
		t := m.To_inputEncryptedFileLocation()
		return t.Encode()
	case -1160743548:
		t := m.To_inputDocumentFileLocation()
		return t.Encode()
	case -876089816:
		t := m.To_inputSecureFileLocation()
		return t.Encode()
	case 700340377:
		t := m.To_inputTakeoutFileLocation()
		return t.Encode()
	case 1075322878:
		t := m.To_inputPhotoFileLocation()
		return t.Encode()
	case -667654413:
		t := m.To_inputPhotoLegacyFileLocation()
		return t.Encode()
	case 668375447:
		t := m.To_inputPeerPhotoFileLocation()
		return t.Encode()
	case 230353641:
		t := m.To_inputStickerSetThumb()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputFileLocation) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -539317279:
		m2 := &TLinputFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -182231723:
		m2 := &TLinputEncryptedFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1160743548:
		m2 := &TLinputDocumentFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -876089816:
		m2 := &TLinputSecureFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 700340377:
		m2 := &TLinputTakeoutFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1075322878:
		m2 := &TLinputPhotoFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -667654413:
		m2 := &TLinputPhotoLegacyFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 668375447:
		m2 := &TLinputPeerPhotoFileLocation{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 230353641:
		m2 := &TLinputStickerSetThumb{data: &InputFileLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputFileLocation) To_inputFileLocation() *TLinputFileLocation {
	return &TLinputFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputEncryptedFileLocation() *TLinputEncryptedFileLocation {
	return &TLinputEncryptedFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputDocumentFileLocation() *TLinputDocumentFileLocation {
	return &TLinputDocumentFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputSecureFileLocation() *TLinputSecureFileLocation {
	return &TLinputSecureFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputTakeoutFileLocation() *TLinputTakeoutFileLocation {
	return &TLinputTakeoutFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputPhotoFileLocation() *TLinputPhotoFileLocation {
	return &TLinputPhotoFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputPhotoLegacyFileLocation() *TLinputPhotoLegacyFileLocation {
	return &TLinputPhotoLegacyFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputPeerPhotoFileLocation() *TLinputPeerPhotoFileLocation {
	return &TLinputPeerPhotoFileLocation{
		data: m.data,
	}
}
func (m InputFileLocation) To_inputStickerSetThumb() *TLinputStickerSetThumb {
	return &TLinputStickerSetThumb{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:contacts_Contacts
//
func (m contacts_Contacts) Encode() []byte {
	switch m.constructor {
	case -1219778094:
		t := m.To_contacts_contactsNotModified()
		return t.Encode()
	case -353862078:
		t := m.To_contacts_contacts()
		return t.Encode()
	default:
		return nil
	}
}
func (m contacts_Contacts) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1219778094:
		m2 := &TLcontacts_contactsNotModified{data: &contacts_Contacts_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -353862078:
		m2 := &TLcontacts_contacts{data: &contacts_Contacts_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m contacts_Contacts) To_contacts_contactsNotModified() *TLcontacts_contactsNotModified {
	return &TLcontacts_contactsNotModified{
		data: m.data,
	}
}
func (m contacts_Contacts) To_contacts_contacts() *TLcontacts_contacts {
	return &TLcontacts_contacts{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_FavedStickers
//
func (m messages_FavedStickers) Encode() []byte {
	switch m.constructor {
	case -1634752813:
		t := m.To_messages_favedStickersNotModified()
		return t.Encode()
	case -209768682:
		t := m.To_messages_favedStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_FavedStickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1634752813:
		m2 := &TLmessages_favedStickersNotModified{data: &messages_FavedStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -209768682:
		m2 := &TLmessages_favedStickers{data: &messages_FavedStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_FavedStickers) To_messages_favedStickersNotModified() *TLmessages_favedStickersNotModified {
	return &TLmessages_favedStickersNotModified{
		data: m.data,
	}
}
func (m messages_FavedStickers) To_messages_favedStickers() *TLmessages_favedStickers {
	return &TLmessages_favedStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:channels_ChannelParticipant
//
func (m channels_ChannelParticipant) Encode() []byte {
	switch m.constructor {
	case -791039645:
		t := m.To_channels_channelParticipant()
		return t.Encode()
	default:
		return nil
	}
}
func (m channels_ChannelParticipant) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -791039645:
		m2 := &TLchannels_channelParticipant{data: &channels_ChannelParticipant_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m channels_ChannelParticipant) To_channels_channelParticipant() *TLchannels_channelParticipant {
	return &TLchannels_channelParticipant{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Page
//
func (m Page) Encode() []byte {
	switch m.constructor {
	case -1738178803:
		t := m.To_page()
		return t.Encode()
	default:
		return nil
	}
}
func (m Page) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1738178803:
		m2 := &TLpage{data: &Page_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Page) To_page() *TLpage {
	return &TLpage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_MessageEditData
//
func (m messages_MessageEditData) Encode() []byte {
	switch m.constructor {
	case 649453030:
		t := m.To_messages_messageEditData()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_MessageEditData) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 649453030:
		m2 := &TLmessages_messageEditData{data: &messages_MessageEditData_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_MessageEditData) To_messages_messageEditData() *TLmessages_messageEditData {
	return &TLmessages_messageEditData{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsAbsValueAndPrev
//
func (m StatsAbsValueAndPrev) Encode() []byte {
	switch m.constructor {
	case -884757282:
		t := m.To_statsAbsValueAndPrev()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsAbsValueAndPrev) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -884757282:
		m2 := &TLstatsAbsValueAndPrev{data: &StatsAbsValueAndPrev_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsAbsValueAndPrev) To_statsAbsValueAndPrev() *TLstatsAbsValueAndPrev {
	return &TLstatsAbsValueAndPrev{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AllStickers
//
func (m messages_AllStickers) Encode() []byte {
	switch m.constructor {
	case -395967805:
		t := m.To_messages_allStickersNotModified()
		return t.Encode()
	case -302170017:
		t := m.To_messages_allStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_AllStickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -395967805:
		m2 := &TLmessages_allStickersNotModified{data: &messages_AllStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -302170017:
		m2 := &TLmessages_allStickers{data: &messages_AllStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_AllStickers) To_messages_allStickersNotModified() *TLmessages_allStickersNotModified {
	return &TLmessages_allStickersNotModified{
		data: m.data,
	}
}
func (m messages_AllStickers) To_messages_allStickers() *TLmessages_allStickers {
	return &TLmessages_allStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Error
//
func (m Error) Encode() []byte {
	switch m.constructor {
	case -994444869:
		t := m.To_error()
		return t.Encode()
	default:
		return nil
	}
}
func (m Error) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -994444869:
		m2 := &TLerror{data: &Error_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Error) To_error() *TLerror {
	return &TLerror{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Chats
//
func (m messages_Chats) Encode() []byte {
	switch m.constructor {
	case 1694474197:
		t := m.To_messages_chats()
		return t.Encode()
	case -1663561404:
		t := m.To_messages_chatsSlice()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_Chats) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1694474197:
		m2 := &TLmessages_chats{data: &messages_Chats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1663561404:
		m2 := &TLmessages_chatsSlice{data: &messages_Chats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_Chats) To_messages_chats() *TLmessages_chats {
	return &TLmessages_chats{
		data: m.data,
	}
}
func (m messages_Chats) To_messages_chatsSlice() *TLmessages_chatsSlice {
	return &TLmessages_chatsSlice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageRelatedArticle
//
func (m PageRelatedArticle) Encode() []byte {
	switch m.constructor {
	case -1282352120:
		t := m.To_pageRelatedArticle()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageRelatedArticle) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1282352120:
		m2 := &TLpageRelatedArticle{data: &PageRelatedArticle_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageRelatedArticle) To_pageRelatedArticle() *TLpageRelatedArticle {
	return &TLpageRelatedArticle{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:GeoPoint
//
func (m GeoPoint) Encode() []byte {
	switch m.constructor {
	case 286776671:
		t := m.To_geoPointEmpty()
		return t.Encode()
	case -1297942941:
		t := m.To_geoPoint()
		return t.Encode()
	default:
		return nil
	}
}
func (m GeoPoint) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 286776671:
		m2 := &TLgeoPointEmpty{data: &GeoPoint_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1297942941:
		m2 := &TLgeoPoint{data: &GeoPoint_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m GeoPoint) To_geoPointEmpty() *TLgeoPointEmpty {
	return &TLgeoPointEmpty{
		data: m.data,
	}
}
func (m GeoPoint) To_geoPoint() *TLgeoPoint {
	return &TLgeoPoint{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_InviteText
//
func (m help_InviteText) Encode() []byte {
	switch m.constructor {
	case 415997816:
		t := m.To_help_inviteText()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_InviteText) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 415997816:
		m2 := &TLhelp_inviteText{data: &help_InviteText_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_InviteText) To_help_inviteText() *TLhelp_inviteText {
	return &TLhelp_inviteText{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChatPhoto
//
func (m ChatPhoto) Encode() []byte {
	switch m.constructor {
	case 935395612:
		t := m.To_chatPhotoEmpty()
		return t.Encode()
	case -770990276:
		t := m.To_chatPhoto()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChatPhoto) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 935395612:
		m2 := &TLchatPhotoEmpty{data: &ChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -770990276:
		m2 := &TLchatPhoto{data: &ChatPhoto_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChatPhoto) To_chatPhotoEmpty() *TLchatPhotoEmpty {
	return &TLchatPhotoEmpty{
		data: m.data,
	}
}
func (m ChatPhoto) To_chatPhoto() *TLchatPhoto {
	return &TLchatPhoto{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Message
//
func (m Message) Encode() []byte {
	switch m.constructor {
	case -2082087340:
		t := m.To_messageEmpty()
		return t.Encode()
	case 1487813065:
		t := m.To_message()
		return t.Encode()
	case 678405636:
		t := m.To_messageService()
		return t.Encode()
	default:
		return nil
	}
}
func (m Message) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2082087340:
		m2 := &TLmessageEmpty{data: &Message_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1487813065:
		m2 := &TLmessage{data: &Message_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 678405636:
		m2 := &TLmessageService{data: &Message_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Message) To_messageEmpty() *TLmessageEmpty {
	return &TLmessageEmpty{
		data: m.data,
	}
}
func (m Message) To_message() *TLmessage {
	return &TLmessage{
		data: m.data,
	}
}
func (m Message) To_messageService() *TLmessageService {
	return &TLmessageService{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:storage_FileType
//
func (m storage_FileType) Encode() []byte {
	switch m.constructor {
	case -1432995067:
		t := m.To_storage_fileUnknown()
		return t.Encode()
	case 1086091090:
		t := m.To_storage_filePartial()
		return t.Encode()
	case 8322574:
		t := m.To_storage_fileJpeg()
		return t.Encode()
	case -891180321:
		t := m.To_storage_fileGif()
		return t.Encode()
	case 172975040:
		t := m.To_storage_filePng()
		return t.Encode()
	case -1373745011:
		t := m.To_storage_filePdf()
		return t.Encode()
	case 1384777335:
		t := m.To_storage_fileMp3()
		return t.Encode()
	case 1258941372:
		t := m.To_storage_fileMov()
		return t.Encode()
	case -1278304028:
		t := m.To_storage_fileMp4()
		return t.Encode()
	case 276907596:
		t := m.To_storage_fileWebp()
		return t.Encode()
	default:
		return nil
	}
}
func (m storage_FileType) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1432995067:
		m2 := &TLstorage_fileUnknown{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1086091090:
		m2 := &TLstorage_filePartial{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 8322574:
		m2 := &TLstorage_fileJpeg{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -891180321:
		m2 := &TLstorage_fileGif{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 172975040:
		m2 := &TLstorage_filePng{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1373745011:
		m2 := &TLstorage_filePdf{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1384777335:
		m2 := &TLstorage_fileMp3{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1258941372:
		m2 := &TLstorage_fileMov{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1278304028:
		m2 := &TLstorage_fileMp4{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 276907596:
		m2 := &TLstorage_fileWebp{data: &storage_FileType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m storage_FileType) To_storage_fileUnknown() *TLstorage_fileUnknown {
	return &TLstorage_fileUnknown{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_filePartial() *TLstorage_filePartial {
	return &TLstorage_filePartial{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileJpeg() *TLstorage_fileJpeg {
	return &TLstorage_fileJpeg{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileGif() *TLstorage_fileGif {
	return &TLstorage_fileGif{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_filePng() *TLstorage_filePng {
	return &TLstorage_filePng{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_filePdf() *TLstorage_filePdf {
	return &TLstorage_filePdf{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileMp3() *TLstorage_fileMp3 {
	return &TLstorage_fileMp3{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileMov() *TLstorage_fileMov {
	return &TLstorage_fileMov{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileMp4() *TLstorage_fileMp4 {
	return &TLstorage_fileMp4{
		data: m.data,
	}
}
func (m storage_FileType) To_storage_fileWebp() *TLstorage_fileWebp {
	return &TLstorage_fileWebp{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_DeepLinkInfo
//
func (m help_DeepLinkInfo) Encode() []byte {
	switch m.constructor {
	case 1722786150:
		t := m.To_help_deepLinkInfoEmpty()
		return t.Encode()
	case 1783556146:
		t := m.To_help_deepLinkInfo()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_DeepLinkInfo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1722786150:
		m2 := &TLhelp_deepLinkInfoEmpty{data: &help_DeepLinkInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1783556146:
		m2 := &TLhelp_deepLinkInfo{data: &help_DeepLinkInfo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_DeepLinkInfo) To_help_deepLinkInfoEmpty() *TLhelp_deepLinkInfoEmpty {
	return &TLhelp_deepLinkInfoEmpty{
		data: m.data,
	}
}
func (m help_DeepLinkInfo) To_help_deepLinkInfo() *TLhelp_deepLinkInfo {
	return &TLhelp_deepLinkInfo{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PageTableRow
//
func (m PageTableRow) Encode() []byte {
	switch m.constructor {
	case -524237339:
		t := m.To_pageTableRow()
		return t.Encode()
	default:
		return nil
	}
}
func (m PageTableRow) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -524237339:
		m2 := &TLpageTableRow{data: &PageTableRow_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PageTableRow) To_pageTableRow() *TLpageTableRow {
	return &TLpageTableRow{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FileHash
//
func (m FileHash) Encode() []byte {
	switch m.constructor {
	case 1648543603:
		t := m.To_fileHash()
		return t.Encode()
	default:
		return nil
	}
}
func (m FileHash) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1648543603:
		m2 := &TLfileHash{data: &FileHash_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m FileHash) To_fileHash() *TLfileHash {
	return &TLfileHash{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ImportedContact
//
func (m ImportedContact) Encode() []byte {
	switch m.constructor {
	case -805141448:
		t := m.To_importedContact()
		return t.Encode()
	default:
		return nil
	}
}
func (m ImportedContact) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -805141448:
		m2 := &TLimportedContact{data: &ImportedContact_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ImportedContact) To_importedContact() *TLimportedContact {
	return &TLimportedContact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ContactStatus
//
func (m ContactStatus) Encode() []byte {
	switch m.constructor {
	case -748155807:
		t := m.To_contactStatus()
		return t.Encode()
	default:
		return nil
	}
}
func (m ContactStatus) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -748155807:
		m2 := &TLcontactStatus{data: &ContactStatus_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ContactStatus) To_contactStatus() *TLcontactStatus {
	return &TLcontactStatus{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_ContentSettings
//
func (m account_ContentSettings) Encode() []byte {
	switch m.constructor {
	case 1474462241:
		t := m.To_account_contentSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_ContentSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1474462241:
		m2 := &TLaccount_contentSettings{data: &account_ContentSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_ContentSettings) To_account_contentSettings() *TLaccount_contentSettings {
	return &TLaccount_contentSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineResult
//
func (m InputBotInlineResult) Encode() []byte {
	switch m.constructor {
	case -2000710887:
		t := m.To_inputBotInlineResult()
		return t.Encode()
	case -1462213465:
		t := m.To_inputBotInlineResultPhoto()
		return t.Encode()
	case -459324:
		t := m.To_inputBotInlineResultDocument()
		return t.Encode()
	case 1336154098:
		t := m.To_inputBotInlineResultGame()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineResult) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2000710887:
		m2 := &TLinputBotInlineResult{data: &InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1462213465:
		m2 := &TLinputBotInlineResultPhoto{data: &InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -459324:
		m2 := &TLinputBotInlineResultDocument{data: &InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1336154098:
		m2 := &TLinputBotInlineResultGame{data: &InputBotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineResult) To_inputBotInlineResult() *TLinputBotInlineResult {
	return &TLinputBotInlineResult{
		data: m.data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultPhoto() *TLinputBotInlineResultPhoto {
	return &TLinputBotInlineResultPhoto{
		data: m.data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultDocument() *TLinputBotInlineResultDocument {
	return &TLinputBotInlineResultDocument{
		data: m.data,
	}
}
func (m InputBotInlineResult) To_inputBotInlineResultGame() *TLinputBotInlineResultGame {
	return &TLinputBotInlineResultGame{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineMessage
//
func (m InputBotInlineMessage) Encode() []byte {
	switch m.constructor {
	case 864077702:
		t := m.To_inputBotInlineMessageMediaAuto()
		return t.Encode()
	case 1036876423:
		t := m.To_inputBotInlineMessageText()
		return t.Encode()
	case -1768777083:
		t := m.To_inputBotInlineMessageMediaGeo()
		return t.Encode()
	case 1098628881:
		t := m.To_inputBotInlineMessageMediaVenue()
		return t.Encode()
	case -1494368259:
		t := m.To_inputBotInlineMessageMediaContact()
		return t.Encode()
	case 1262639204:
		t := m.To_inputBotInlineMessageGame()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineMessage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 864077702:
		m2 := &TLinputBotInlineMessageMediaAuto{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1036876423:
		m2 := &TLinputBotInlineMessageText{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1768777083:
		m2 := &TLinputBotInlineMessageMediaGeo{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1098628881:
		m2 := &TLinputBotInlineMessageMediaVenue{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1494368259:
		m2 := &TLinputBotInlineMessageMediaContact{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1262639204:
		m2 := &TLinputBotInlineMessageGame{data: &InputBotInlineMessage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaAuto() *TLinputBotInlineMessageMediaAuto {
	return &TLinputBotInlineMessageMediaAuto{
		data: m.data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageText() *TLinputBotInlineMessageText {
	return &TLinputBotInlineMessageText{
		data: m.data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaGeo() *TLinputBotInlineMessageMediaGeo {
	return &TLinputBotInlineMessageMediaGeo{
		data: m.data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaVenue() *TLinputBotInlineMessageMediaVenue {
	return &TLinputBotInlineMessageMediaVenue{
		data: m.data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageMediaContact() *TLinputBotInlineMessageMediaContact {
	return &TLinputBotInlineMessageMediaContact{
		data: m.data,
	}
}
func (m InputBotInlineMessage) To_inputBotInlineMessageGame() *TLinputBotInlineMessageGame {
	return &TLinputBotInlineMessageGame{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Contact
//
func (m Contact) Encode() []byte {
	switch m.constructor {
	case -116274796:
		t := m.To_contact()
		return t.Encode()
	default:
		return nil
	}
}
func (m Contact) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -116274796:
		m2 := &TLcontact{data: &Contact_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Contact) To_contact() *TLcontact {
	return &TLcontact{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:BotInlineResult
//
func (m BotInlineResult) Encode() []byte {
	switch m.constructor {
	case 295067450:
		t := m.To_botInlineResult()
		return t.Encode()
	case 400266251:
		t := m.To_botInlineMediaResult()
		return t.Encode()
	default:
		return nil
	}
}
func (m BotInlineResult) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 295067450:
		m2 := &TLbotInlineResult{data: &BotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 400266251:
		m2 := &TLbotInlineMediaResult{data: &BotInlineResult_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m BotInlineResult) To_botInlineResult() *TLbotInlineResult {
	return &TLbotInlineResult{
		data: m.data,
	}
}
func (m BotInlineResult) To_botInlineMediaResult() *TLbotInlineMediaResult {
	return &TLbotInlineMediaResult{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelAdminLogEvent
//
func (m ChannelAdminLogEvent) Encode() []byte {
	switch m.constructor {
	case 995769920:
		t := m.To_channelAdminLogEvent()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelAdminLogEvent) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 995769920:
		m2 := &TLchannelAdminLogEvent{data: &ChannelAdminLogEvent_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelAdminLogEvent) To_channelAdminLogEvent() *TLchannelAdminLogEvent {
	return &TLchannelAdminLogEvent{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Updates
//
func (m Updates) Encode() []byte {
	switch m.constructor {
	case -484987010:
		t := m.To_updatesTooLong()
		return t.Encode()
	case 580309704:
		t := m.To_updateShortMessage()
		return t.Encode()
	case 1076714939:
		t := m.To_updateShortChatMessage()
		return t.Encode()
	case 2027216577:
		t := m.To_updateShort()
		return t.Encode()
	case 1918567619:
		t := m.To_updatesCombined()
		return t.Encode()
	case 1957577280:
		t := m.To_updates()
		return t.Encode()
	case 301019932:
		t := m.To_updateShortSentMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m Updates) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -484987010:
		m2 := &TLupdatesTooLong{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 580309704:
		m2 := &TLupdateShortMessage{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1076714939:
		m2 := &TLupdateShortChatMessage{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2027216577:
		m2 := &TLupdateShort{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1918567619:
		m2 := &TLupdatesCombined{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1957577280:
		m2 := &TLupdates{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 301019932:
		m2 := &TLupdateShortSentMessage{data: &Updates_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Updates) To_updatesTooLong() *TLupdatesTooLong {
	return &TLupdatesTooLong{
		data: m.data,
	}
}
func (m Updates) To_updateShortMessage() *TLupdateShortMessage {
	return &TLupdateShortMessage{
		data: m.data,
	}
}
func (m Updates) To_updateShortChatMessage() *TLupdateShortChatMessage {
	return &TLupdateShortChatMessage{
		data: m.data,
	}
}
func (m Updates) To_updateShort() *TLupdateShort {
	return &TLupdateShort{
		data: m.data,
	}
}
func (m Updates) To_updatesCombined() *TLupdatesCombined {
	return &TLupdatesCombined{
		data: m.data,
	}
}
func (m Updates) To_updates() *TLupdates {
	return &TLupdates{
		data: m.data,
	}
}
func (m Updates) To_updateShortSentMessage() *TLupdateShortSentMessage {
	return &TLupdateShortSentMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DocumentAttribute
//
func (m DocumentAttribute) Encode() []byte {
	switch m.constructor {
	case 1815593308:
		t := m.To_documentAttributeImageSize()
		return t.Encode()
	case 297109817:
		t := m.To_documentAttributeAnimated()
		return t.Encode()
	case 1662637586:
		t := m.To_documentAttributeSticker()
		return t.Encode()
	case 250621158:
		t := m.To_documentAttributeVideo()
		return t.Encode()
	case -1739392570:
		t := m.To_documentAttributeAudio()
		return t.Encode()
	case 358154344:
		t := m.To_documentAttributeFilename()
		return t.Encode()
	case -1744710921:
		t := m.To_documentAttributeHasStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m DocumentAttribute) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1815593308:
		m2 := &TLdocumentAttributeImageSize{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 297109817:
		m2 := &TLdocumentAttributeAnimated{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1662637586:
		m2 := &TLdocumentAttributeSticker{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 250621158:
		m2 := &TLdocumentAttributeVideo{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1739392570:
		m2 := &TLdocumentAttributeAudio{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 358154344:
		m2 := &TLdocumentAttributeFilename{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1744710921:
		m2 := &TLdocumentAttributeHasStickers{data: &DocumentAttribute_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DocumentAttribute) To_documentAttributeImageSize() *TLdocumentAttributeImageSize {
	return &TLdocumentAttributeImageSize{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeAnimated() *TLdocumentAttributeAnimated {
	return &TLdocumentAttributeAnimated{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeSticker() *TLdocumentAttributeSticker {
	return &TLdocumentAttributeSticker{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeVideo() *TLdocumentAttributeVideo {
	return &TLdocumentAttributeVideo{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeAudio() *TLdocumentAttributeAudio {
	return &TLdocumentAttributeAudio{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeFilename() *TLdocumentAttributeFilename {
	return &TLdocumentAttributeFilename{
		data: m.data,
	}
}
func (m DocumentAttribute) To_documentAttributeHasStickers() *TLdocumentAttributeHasStickers {
	return &TLdocumentAttributeHasStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ChannelLocation
//
func (m ChannelLocation) Encode() []byte {
	switch m.constructor {
	case -1078612597:
		t := m.To_channelLocationEmpty()
		return t.Encode()
	case 547062491:
		t := m.To_channelLocation()
		return t.Encode()
	default:
		return nil
	}
}
func (m ChannelLocation) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1078612597:
		m2 := &TLchannelLocationEmpty{data: &ChannelLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 547062491:
		m2 := &TLchannelLocation{data: &ChannelLocation_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ChannelLocation) To_channelLocationEmpty() *TLchannelLocationEmpty {
	return &TLchannelLocationEmpty{
		data: m.data,
	}
}
func (m ChannelLocation) To_channelLocation() *TLchannelLocation {
	return &TLchannelLocation{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:TopPeerCategoryPeers
//
func (m TopPeerCategoryPeers) Encode() []byte {
	switch m.constructor {
	case -75283823:
		t := m.To_topPeerCategoryPeers()
		return t.Encode()
	default:
		return nil
	}
}
func (m TopPeerCategoryPeers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -75283823:
		m2 := &TLtopPeerCategoryPeers{data: &TopPeerCategoryPeers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m TopPeerCategoryPeers) To_topPeerCategoryPeers() *TLtopPeerCategoryPeers {
	return &TLtopPeerCategoryPeers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputSingleMedia
//
func (m InputSingleMedia) Encode() []byte {
	switch m.constructor {
	case 482797855:
		t := m.To_inputSingleMedia()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputSingleMedia) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 482797855:
		m2 := &TLinputSingleMedia{data: &InputSingleMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputSingleMedia) To_inputSingleMedia() *TLinputSingleMedia {
	return &TLinputSingleMedia{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:help_RecentMeUrls
//
func (m help_RecentMeUrls) Encode() []byte {
	switch m.constructor {
	case 235081943:
		t := m.To_help_recentMeUrls()
		return t.Encode()
	default:
		return nil
	}
}
func (m help_RecentMeUrls) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 235081943:
		m2 := &TLhelp_recentMeUrls{data: &help_RecentMeUrls_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m help_RecentMeUrls) To_help_recentMeUrls() *TLhelp_recentMeUrls {
	return &TLhelp_recentMeUrls{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Photo
//
func (m Photo) Encode() []byte {
	switch m.constructor {
	case 590459437:
		t := m.To_photoEmpty()
		return t.Encode()
	case -82216347:
		t := m.To_photo()
		return t.Encode()
	default:
		return nil
	}
}
func (m Photo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 590459437:
		m2 := &TLphotoEmpty{data: &Photo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -82216347:
		m2 := &TLphoto{data: &Photo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Photo) To_photoEmpty() *TLphotoEmpty {
	return &TLphotoEmpty{
		data: m.data,
	}
}
func (m Photo) To_photo() *TLphoto {
	return &TLphoto{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:LangPackLanguage
//
func (m LangPackLanguage) Encode() []byte {
	switch m.constructor {
	case -288727837:
		t := m.To_langPackLanguage()
		return t.Encode()
	default:
		return nil
	}
}
func (m LangPackLanguage) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -288727837:
		m2 := &TLlangPackLanguage{data: &LangPackLanguage_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m LangPackLanguage) To_langPackLanguage() *TLlangPackLanguage {
	return &TLlangPackLanguage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageAction
//
func (m MessageAction) Encode() []byte {
	switch m.constructor {
	case -1230047312:
		t := m.To_messageActionEmpty()
		return t.Encode()
	case -1503425638:
		t := m.To_messageActionChatCreate()
		return t.Encode()
	case -1247687078:
		t := m.To_messageActionChatEditTitle()
		return t.Encode()
	case 2144015272:
		t := m.To_messageActionChatEditPhoto()
		return t.Encode()
	case -1780220945:
		t := m.To_messageActionChatDeletePhoto()
		return t.Encode()
	case 1217033015:
		t := m.To_messageActionChatAddUser()
		return t.Encode()
	case -1297179892:
		t := m.To_messageActionChatDeleteUser()
		return t.Encode()
	case -123931160:
		t := m.To_messageActionChatJoinedByLink()
		return t.Encode()
	case -1781355374:
		t := m.To_messageActionChannelCreate()
		return t.Encode()
	case 1371385889:
		t := m.To_messageActionChatMigrateTo()
		return t.Encode()
	case -1336546578:
		t := m.To_messageActionChannelMigrateFrom()
		return t.Encode()
	case -1799538451:
		t := m.To_messageActionPinMessage()
		return t.Encode()
	case -1615153660:
		t := m.To_messageActionHistoryClear()
		return t.Encode()
	case -1834538890:
		t := m.To_messageActionGameScore()
		return t.Encode()
	case -1892568281:
		t := m.To_messageActionPaymentSentMe()
		return t.Encode()
	case 1080663248:
		t := m.To_messageActionPaymentSent()
		return t.Encode()
	case -2132731265:
		t := m.To_messageActionPhoneCall()
		return t.Encode()
	case 1200788123:
		t := m.To_messageActionScreenshotTaken()
		return t.Encode()
	case -85549226:
		t := m.To_messageActionCustomAction()
		return t.Encode()
	case -1410748418:
		t := m.To_messageActionBotAllowed()
		return t.Encode()
	case 455635795:
		t := m.To_messageActionSecureValuesSentMe()
		return t.Encode()
	case -648257196:
		t := m.To_messageActionSecureValuesSent()
		return t.Encode()
	case -202219658:
		t := m.To_messageActionContactSignUp()
		return t.Encode()
	case -1730095465:
		t := m.To_messageActionGeoProximityReached()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageAction) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1230047312:
		m2 := &TLmessageActionEmpty{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1503425638:
		m2 := &TLmessageActionChatCreate{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1247687078:
		m2 := &TLmessageActionChatEditTitle{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2144015272:
		m2 := &TLmessageActionChatEditPhoto{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1780220945:
		m2 := &TLmessageActionChatDeletePhoto{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1217033015:
		m2 := &TLmessageActionChatAddUser{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1297179892:
		m2 := &TLmessageActionChatDeleteUser{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -123931160:
		m2 := &TLmessageActionChatJoinedByLink{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1781355374:
		m2 := &TLmessageActionChannelCreate{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1371385889:
		m2 := &TLmessageActionChatMigrateTo{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1336546578:
		m2 := &TLmessageActionChannelMigrateFrom{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1799538451:
		m2 := &TLmessageActionPinMessage{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1615153660:
		m2 := &TLmessageActionHistoryClear{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1834538890:
		m2 := &TLmessageActionGameScore{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1892568281:
		m2 := &TLmessageActionPaymentSentMe{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1080663248:
		m2 := &TLmessageActionPaymentSent{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2132731265:
		m2 := &TLmessageActionPhoneCall{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1200788123:
		m2 := &TLmessageActionScreenshotTaken{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -85549226:
		m2 := &TLmessageActionCustomAction{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1410748418:
		m2 := &TLmessageActionBotAllowed{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 455635795:
		m2 := &TLmessageActionSecureValuesSentMe{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -648257196:
		m2 := &TLmessageActionSecureValuesSent{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -202219658:
		m2 := &TLmessageActionContactSignUp{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1730095465:
		m2 := &TLmessageActionGeoProximityReached{data: &MessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageAction) To_messageActionEmpty() *TLmessageActionEmpty {
	return &TLmessageActionEmpty{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatCreate() *TLmessageActionChatCreate {
	return &TLmessageActionChatCreate{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatEditTitle() *TLmessageActionChatEditTitle {
	return &TLmessageActionChatEditTitle{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatEditPhoto() *TLmessageActionChatEditPhoto {
	return &TLmessageActionChatEditPhoto{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatDeletePhoto() *TLmessageActionChatDeletePhoto {
	return &TLmessageActionChatDeletePhoto{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatAddUser() *TLmessageActionChatAddUser {
	return &TLmessageActionChatAddUser{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatDeleteUser() *TLmessageActionChatDeleteUser {
	return &TLmessageActionChatDeleteUser{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatJoinedByLink() *TLmessageActionChatJoinedByLink {
	return &TLmessageActionChatJoinedByLink{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChannelCreate() *TLmessageActionChannelCreate {
	return &TLmessageActionChannelCreate{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChatMigrateTo() *TLmessageActionChatMigrateTo {
	return &TLmessageActionChatMigrateTo{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionChannelMigrateFrom() *TLmessageActionChannelMigrateFrom {
	return &TLmessageActionChannelMigrateFrom{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionPinMessage() *TLmessageActionPinMessage {
	return &TLmessageActionPinMessage{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionHistoryClear() *TLmessageActionHistoryClear {
	return &TLmessageActionHistoryClear{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionGameScore() *TLmessageActionGameScore {
	return &TLmessageActionGameScore{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionPaymentSentMe() *TLmessageActionPaymentSentMe {
	return &TLmessageActionPaymentSentMe{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionPaymentSent() *TLmessageActionPaymentSent {
	return &TLmessageActionPaymentSent{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionPhoneCall() *TLmessageActionPhoneCall {
	return &TLmessageActionPhoneCall{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionScreenshotTaken() *TLmessageActionScreenshotTaken {
	return &TLmessageActionScreenshotTaken{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionCustomAction() *TLmessageActionCustomAction {
	return &TLmessageActionCustomAction{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionBotAllowed() *TLmessageActionBotAllowed {
	return &TLmessageActionBotAllowed{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionSecureValuesSentMe() *TLmessageActionSecureValuesSentMe {
	return &TLmessageActionSecureValuesSentMe{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionSecureValuesSent() *TLmessageActionSecureValuesSent {
	return &TLmessageActionSecureValuesSent{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionContactSignUp() *TLmessageActionContactSignUp {
	return &TLmessageActionContactSignUp{
		data: m.data,
	}
}
func (m MessageAction) To_messageActionGeoProximityReached() *TLmessageActionGeoProximityReached {
	return &TLmessageActionGeoProximityReached{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:NotifyPeer
//
func (m NotifyPeer) Encode() []byte {
	switch m.constructor {
	case -1613493288:
		t := m.To_notifyPeer()
		return t.Encode()
	case -1261946036:
		t := m.To_notifyUsers()
		return t.Encode()
	case -1073230141:
		t := m.To_notifyChats()
		return t.Encode()
	case -703403793:
		t := m.To_notifyBroadcasts()
		return t.Encode()
	default:
		return nil
	}
}
func (m NotifyPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1613493288:
		m2 := &TLnotifyPeer{data: &NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1261946036:
		m2 := &TLnotifyUsers{data: &NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1073230141:
		m2 := &TLnotifyChats{data: &NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -703403793:
		m2 := &TLnotifyBroadcasts{data: &NotifyPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m NotifyPeer) To_notifyPeer() *TLnotifyPeer {
	return &TLnotifyPeer{
		data: m.data,
	}
}
func (m NotifyPeer) To_notifyUsers() *TLnotifyUsers {
	return &TLnotifyUsers{
		data: m.data,
	}
}
func (m NotifyPeer) To_notifyChats() *TLnotifyChats {
	return &TLnotifyChats{
		data: m.data,
	}
}
func (m NotifyPeer) To_notifyBroadcasts() *TLnotifyBroadcasts {
	return &TLnotifyBroadcasts{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputMedia
//
func (m InputMedia) Encode() []byte {
	switch m.constructor {
	case -1771768449:
		t := m.To_inputMediaEmpty()
		return t.Encode()
	case 505969924:
		t := m.To_inputMediaUploadedPhoto()
		return t.Encode()
	case -1279654347:
		t := m.To_inputMediaPhoto()
		return t.Encode()
	case -104578748:
		t := m.To_inputMediaGeoPoint()
		return t.Encode()
	case -122978821:
		t := m.To_inputMediaContact()
		return t.Encode()
	case 1530447553:
		t := m.To_inputMediaUploadedDocument()
		return t.Encode()
	case 598418386:
		t := m.To_inputMediaDocument()
		return t.Encode()
	case -1052959727:
		t := m.To_inputMediaVenue()
		return t.Encode()
	case -440664550:
		t := m.To_inputMediaPhotoExternal()
		return t.Encode()
	case -78455655:
		t := m.To_inputMediaDocumentExternal()
		return t.Encode()
	case -750828557:
		t := m.To_inputMediaGame()
		return t.Encode()
	case -186607933:
		t := m.To_inputMediaInvoice()
		return t.Encode()
	case -1759532989:
		t := m.To_inputMediaGeoLive()
		return t.Encode()
	case 261416433:
		t := m.To_inputMediaPoll()
		return t.Encode()
	case -428884101:
		t := m.To_inputMediaDice()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputMedia) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1771768449:
		m2 := &TLinputMediaEmpty{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 505969924:
		m2 := &TLinputMediaUploadedPhoto{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1279654347:
		m2 := &TLinputMediaPhoto{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -104578748:
		m2 := &TLinputMediaGeoPoint{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -122978821:
		m2 := &TLinputMediaContact{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1530447553:
		m2 := &TLinputMediaUploadedDocument{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 598418386:
		m2 := &TLinputMediaDocument{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1052959727:
		m2 := &TLinputMediaVenue{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -440664550:
		m2 := &TLinputMediaPhotoExternal{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -78455655:
		m2 := &TLinputMediaDocumentExternal{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -750828557:
		m2 := &TLinputMediaGame{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -186607933:
		m2 := &TLinputMediaInvoice{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1759532989:
		m2 := &TLinputMediaGeoLive{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 261416433:
		m2 := &TLinputMediaPoll{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -428884101:
		m2 := &TLinputMediaDice{data: &InputMedia_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputMedia) To_inputMediaEmpty() *TLinputMediaEmpty {
	return &TLinputMediaEmpty{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaUploadedPhoto() *TLinputMediaUploadedPhoto {
	return &TLinputMediaUploadedPhoto{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaPhoto() *TLinputMediaPhoto {
	return &TLinputMediaPhoto{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaGeoPoint() *TLinputMediaGeoPoint {
	return &TLinputMediaGeoPoint{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaContact() *TLinputMediaContact {
	return &TLinputMediaContact{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaUploadedDocument() *TLinputMediaUploadedDocument {
	return &TLinputMediaUploadedDocument{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaDocument() *TLinputMediaDocument {
	return &TLinputMediaDocument{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaVenue() *TLinputMediaVenue {
	return &TLinputMediaVenue{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaPhotoExternal() *TLinputMediaPhotoExternal {
	return &TLinputMediaPhotoExternal{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaDocumentExternal() *TLinputMediaDocumentExternal {
	return &TLinputMediaDocumentExternal{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaGame() *TLinputMediaGame {
	return &TLinputMediaGame{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaInvoice() *TLinputMediaInvoice {
	return &TLinputMediaInvoice{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaGeoLive() *TLinputMediaGeoLive {
	return &TLinputMediaGeoLive{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaPoll() *TLinputMediaPoll {
	return &TLinputMediaPoll{
		data: m.data,
	}
}
func (m InputMedia) To_inputMediaDice() *TLinputMediaDice {
	return &TLinputMediaDice{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_SentCodeType
//
func (m auth_SentCodeType) Encode() []byte {
	switch m.constructor {
	case 1035688326:
		t := m.To_auth_sentCodeTypeApp()
		return t.Encode()
	case -1073693790:
		t := m.To_auth_sentCodeTypeSms()
		return t.Encode()
	case 1398007207:
		t := m.To_auth_sentCodeTypeCall()
		return t.Encode()
	case -1425815847:
		t := m.To_auth_sentCodeTypeFlashCall()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_SentCodeType) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1035688326:
		m2 := &TLauth_sentCodeTypeApp{data: &auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1073693790:
		m2 := &TLauth_sentCodeTypeSms{data: &auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1398007207:
		m2 := &TLauth_sentCodeTypeCall{data: &auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1425815847:
		m2 := &TLauth_sentCodeTypeFlashCall{data: &auth_SentCodeType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_SentCodeType) To_auth_sentCodeTypeApp() *TLauth_sentCodeTypeApp {
	return &TLauth_sentCodeTypeApp{
		data: m.data,
	}
}
func (m auth_SentCodeType) To_auth_sentCodeTypeSms() *TLauth_sentCodeTypeSms {
	return &TLauth_sentCodeTypeSms{
		data: m.data,
	}
}
func (m auth_SentCodeType) To_auth_sentCodeTypeCall() *TLauth_sentCodeTypeCall {
	return &TLauth_sentCodeTypeCall{
		data: m.data,
	}
}
func (m auth_SentCodeType) To_auth_sentCodeTypeFlashCall() *TLauth_sentCodeTypeFlashCall {
	return &TLauth_sentCodeTypeFlashCall{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:payments_PaymentForm
//
func (m payments_PaymentForm) Encode() []byte {
	switch m.constructor {
	case 1062645411:
		t := m.To_payments_paymentForm()
		return t.Encode()
	default:
		return nil
	}
}
func (m payments_PaymentForm) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1062645411:
		m2 := &TLpayments_paymentForm{data: &payments_PaymentForm_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m payments_PaymentForm) To_payments_paymentForm() *TLpayments_paymentForm {
	return &TLpayments_paymentForm{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:PasswordKdfAlgo
//
func (m PasswordKdfAlgo) Encode() []byte {
	switch m.constructor {
	case -732254058:
		t := m.To_passwordKdfAlgoUnknown()
		return t.Encode()
	case 982592842:
		t := m.To_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow()
		return t.Encode()
	default:
		return nil
	}
}
func (m PasswordKdfAlgo) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -732254058:
		m2 := &TLpasswordKdfAlgoUnknown{data: &PasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 982592842:
		m2 := &TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{data: &PasswordKdfAlgo_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m PasswordKdfAlgo) To_passwordKdfAlgoUnknown() *TLpasswordKdfAlgoUnknown {
	return &TLpasswordKdfAlgoUnknown{
		data: m.data,
	}
}
func (m PasswordKdfAlgo) To_passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow() *TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow {
	return &TLpasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StatsGroupTopPoster
//
func (m StatsGroupTopPoster) Encode() []byte {
	switch m.constructor {
	case 418631927:
		t := m.To_statsGroupTopPoster()
		return t.Encode()
	default:
		return nil
	}
}
func (m StatsGroupTopPoster) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 418631927:
		m2 := &TLstatsGroupTopPoster{data: &StatsGroupTopPoster_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StatsGroupTopPoster) To_statsGroupTopPoster() *TLstatsGroupTopPoster {
	return &TLstatsGroupTopPoster{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_TmpPassword
//
func (m account_TmpPassword) Encode() []byte {
	switch m.constructor {
	case -614138572:
		t := m.To_account_tmpPassword()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_TmpPassword) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -614138572:
		m2 := &TLaccount_tmpPassword{data: &account_TmpPassword_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_TmpPassword) To_account_tmpPassword() *TLaccount_tmpPassword {
	return &TLaccount_tmpPassword{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_ArchivedStickers
//
func (m messages_ArchivedStickers) Encode() []byte {
	switch m.constructor {
	case 1338747336:
		t := m.To_messages_archivedStickers()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_ArchivedStickers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1338747336:
		m2 := &TLmessages_archivedStickers{data: &messages_ArchivedStickers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_ArchivedStickers) To_messages_archivedStickers() *TLmessages_archivedStickers {
	return &TLmessages_archivedStickers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPeerNotifySettings
//
func (m InputPeerNotifySettings) Encode() []byte {
	switch m.constructor {
	case -1673717362:
		t := m.To_inputPeerNotifySettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPeerNotifySettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1673717362:
		m2 := &TLinputPeerNotifySettings{data: &InputPeerNotifySettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPeerNotifySettings) To_inputPeerNotifySettings() *TLinputPeerNotifySettings {
	return &TLinputPeerNotifySettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputBotInlineMessageID
//
func (m InputBotInlineMessageID) Encode() []byte {
	switch m.constructor {
	case -1995686519:
		t := m.To_inputBotInlineMessageID()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputBotInlineMessageID) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1995686519:
		m2 := &TLinputBotInlineMessageID{data: &InputBotInlineMessageID_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputBotInlineMessageID) To_inputBotInlineMessageID() *TLinputBotInlineMessageID {
	return &TLinputBotInlineMessageID{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogPeer
//
func (m DialogPeer) Encode() []byte {
	switch m.constructor {
	case -445792507:
		t := m.To_dialogPeer()
		return t.Encode()
	case 1363483106:
		t := m.To_dialogPeerFolder()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -445792507:
		m2 := &TLdialogPeer{data: &DialogPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1363483106:
		m2 := &TLdialogPeerFolder{data: &DialogPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DialogPeer) To_dialogPeer() *TLdialogPeer {
	return &TLdialogPeer{
		data: m.data,
	}
}
func (m DialogPeer) To_dialogPeerFolder() *TLdialogPeerFolder {
	return &TLdialogPeerFolder{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DcOption
//
func (m DcOption) Encode() []byte {
	switch m.constructor {
	case 414687501:
		t := m.To_dcOption()
		return t.Encode()
	default:
		return nil
	}
}
func (m DcOption) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 414687501:
		m2 := &TLdcOption{data: &DcOption_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DcOption) To_dcOption() *TLdcOption {
	return &TLdcOption{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InlineBotSwitchPM
//
func (m InlineBotSwitchPM) Encode() []byte {
	switch m.constructor {
	case 1008755359:
		t := m.To_inlineBotSwitchPM()
		return t.Encode()
	default:
		return nil
	}
}
func (m InlineBotSwitchPM) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1008755359:
		m2 := &TLinlineBotSwitchPM{data: &InlineBotSwitchPM_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InlineBotSwitchPM) To_inlineBotSwitchPM() *TLinlineBotSwitchPM {
	return &TLinlineBotSwitchPM{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PasswordInputSettings
//
func (m account_PasswordInputSettings) Encode() []byte {
	switch m.constructor {
	case -1036572727:
		t := m.To_account_passwordInputSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_PasswordInputSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1036572727:
		m2 := &TLaccount_passwordInputSettings{data: &account_PasswordInputSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_PasswordInputSettings) To_account_passwordInputSettings() *TLaccount_passwordInputSettings {
	return &TLaccount_passwordInputSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_BotResults
//
func (m messages_BotResults) Encode() []byte {
	switch m.constructor {
	case -1803769784:
		t := m.To_messages_botResults()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_BotResults) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1803769784:
		m2 := &TLmessages_botResults{data: &messages_BotResults_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_BotResults) To_messages_botResults() *TLmessages_botResults {
	return &TLmessages_botResults{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:CdnPublicKey
//
func (m CdnPublicKey) Encode() []byte {
	switch m.constructor {
	case -914167110:
		t := m.To_cdnPublicKey()
		return t.Encode()
	default:
		return nil
	}
}
func (m CdnPublicKey) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -914167110:
		m2 := &TLcdnPublicKey{data: &CdnPublicKey_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m CdnPublicKey) To_cdnPublicKey() *TLcdnPublicKey {
	return &TLcdnPublicKey{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputPeer
//
func (m InputPeer) Encode() []byte {
	switch m.constructor {
	case 2134579434:
		t := m.To_inputPeerEmpty()
		return t.Encode()
	case 2107670217:
		t := m.To_inputPeerSelf()
		return t.Encode()
	case 396093539:
		t := m.To_inputPeerChat()
		return t.Encode()
	case 2072935910:
		t := m.To_inputPeerUser()
		return t.Encode()
	case 548253432:
		t := m.To_inputPeerChannel()
		return t.Encode()
	case 398123750:
		t := m.To_inputPeerUserFromMessage()
		return t.Encode()
	case -1667893317:
		t := m.To_inputPeerChannelFromMessage()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2134579434:
		m2 := &TLinputPeerEmpty{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2107670217:
		m2 := &TLinputPeerSelf{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 396093539:
		m2 := &TLinputPeerChat{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 2072935910:
		m2 := &TLinputPeerUser{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 548253432:
		m2 := &TLinputPeerChannel{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 398123750:
		m2 := &TLinputPeerUserFromMessage{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1667893317:
		m2 := &TLinputPeerChannelFromMessage{data: &InputPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputPeer) To_inputPeerEmpty() *TLinputPeerEmpty {
	return &TLinputPeerEmpty{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerSelf() *TLinputPeerSelf {
	return &TLinputPeerSelf{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerChat() *TLinputPeerChat {
	return &TLinputPeerChat{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerUser() *TLinputPeerUser {
	return &TLinputPeerUser{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerChannel() *TLinputPeerChannel {
	return &TLinputPeerChannel{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerUserFromMessage() *TLinputPeerUserFromMessage {
	return &TLinputPeerUserFromMessage{
		data: m.data,
	}
}
func (m InputPeer) To_inputPeerChannelFromMessage() *TLinputPeerChannelFromMessage {
	return &TLinputPeerChannelFromMessage{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureSecretSettings
//
func (m SecureSecretSettings) Encode() []byte {
	switch m.constructor {
	case 354925740:
		t := m.To_secureSecretSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureSecretSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 354925740:
		m2 := &TLsecureSecretSettings{data: &SecureSecretSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureSecretSettings) To_secureSecretSettings() *TLsecureSecretSettings {
	return &TLsecureSecretSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageUserVote
//
func (m MessageUserVote) Encode() []byte {
	switch m.constructor {
	case -1567730343:
		t := m.To_messageUserVote()
		return t.Encode()
	case 909603888:
		t := m.To_messageUserVoteInputOption()
		return t.Encode()
	case 244310238:
		t := m.To_messageUserVoteMultiple()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageUserVote) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1567730343:
		m2 := &TLmessageUserVote{data: &MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 909603888:
		m2 := &TLmessageUserVoteInputOption{data: &MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 244310238:
		m2 := &TLmessageUserVoteMultiple{data: &MessageUserVote_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageUserVote) To_messageUserVote() *TLmessageUserVote {
	return &TLmessageUserVote{
		data: m.data,
	}
}
func (m MessageUserVote) To_messageUserVoteInputOption() *TLmessageUserVoteInputOption {
	return &TLmessageUserVoteInputOption{
		data: m.data,
	}
}
func (m MessageUserVote) To_messageUserVoteMultiple() *TLmessageUserVoteMultiple {
	return &TLmessageUserVoteMultiple{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:HighScore
//
func (m HighScore) Encode() []byte {
	switch m.constructor {
	case 1493171408:
		t := m.To_highScore()
		return t.Encode()
	default:
		return nil
	}
}
func (m HighScore) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1493171408:
		m2 := &TLhighScore{data: &HighScore_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m HighScore) To_highScore() *TLhighScore {
	return &TLhighScore{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ExportedMessageLink
//
func (m ExportedMessageLink) Encode() []byte {
	switch m.constructor {
	case 1571494644:
		t := m.To_exportedMessageLink()
		return t.Encode()
	default:
		return nil
	}
}
func (m ExportedMessageLink) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 1571494644:
		m2 := &TLexportedMessageLink{data: &ExportedMessageLink_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ExportedMessageLink) To_exportedMessageLink() *TLexportedMessageLink {
	return &TLexportedMessageLink{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_MegagroupStats
//
func (m stats_MegagroupStats) Encode() []byte {
	switch m.constructor {
	case -276825834:
		t := m.To_stats_megagroupStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m stats_MegagroupStats) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -276825834:
		m2 := &TLstats_megagroupStats{data: &stats_MegagroupStats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m stats_MegagroupStats) To_stats_megagroupStats() *TLstats_megagroupStats {
	return &TLstats_megagroupStats{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:ThemeSettings
//
func (m ThemeSettings) Encode() []byte {
	switch m.constructor {
	case -1676371894:
		t := m.To_themeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m ThemeSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1676371894:
		m2 := &TLthemeSettings{data: &ThemeSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m ThemeSettings) To_themeSettings() *TLthemeSettings {
	return &TLthemeSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_Dialogs
//
func (m messages_Dialogs) Encode() []byte {
	switch m.constructor {
	case 364538944:
		t := m.To_messages_dialogs()
		return t.Encode()
	case 1910543603:
		t := m.To_messages_dialogsSlice()
		return t.Encode()
	case -253500010:
		t := m.To_messages_dialogsNotModified()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_Dialogs) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 364538944:
		m2 := &TLmessages_dialogs{data: &messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1910543603:
		m2 := &TLmessages_dialogsSlice{data: &messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -253500010:
		m2 := &TLmessages_dialogsNotModified{data: &messages_Dialogs_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_Dialogs) To_messages_dialogs() *TLmessages_dialogs {
	return &TLmessages_dialogs{
		data: m.data,
	}
}
func (m messages_Dialogs) To_messages_dialogsSlice() *TLmessages_dialogsSlice {
	return &TLmessages_dialogsSlice{
		data: m.data,
	}
}
func (m messages_Dialogs) To_messages_dialogsNotModified() *TLmessages_dialogsNotModified {
	return &TLmessages_dialogsNotModified{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageRange
//
func (m MessageRange) Encode() []byte {
	switch m.constructor {
	case 182649427:
		t := m.To_messageRange()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageRange) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 182649427:
		m2 := &TLmessageRange{data: &MessageRange_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageRange) To_messageRange() *TLmessageRange {
	return &TLmessageRange{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:upload_WebFile
//
func (m upload_WebFile) Encode() []byte {
	switch m.constructor {
	case 568808380:
		t := m.To_upload_webFile()
		return t.Encode()
	default:
		return nil
	}
}
func (m upload_WebFile) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 568808380:
		m2 := &TLupload_webFile{data: &upload_WebFile_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m upload_WebFile) To_upload_webFile() *TLupload_webFile {
	return &TLupload_webFile{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:MessageEntity
//
func (m MessageEntity) Encode() []byte {
	switch m.constructor {
	case -1148011883:
		t := m.To_messageEntityUnknown()
		return t.Encode()
	case -100378723:
		t := m.To_messageEntityMention()
		return t.Encode()
	case 1868782349:
		t := m.To_messageEntityHashtag()
		return t.Encode()
	case 1827637959:
		t := m.To_messageEntityBotCommand()
		return t.Encode()
	case 1859134776:
		t := m.To_messageEntityUrl()
		return t.Encode()
	case 1692693954:
		t := m.To_messageEntityEmail()
		return t.Encode()
	case -1117713463:
		t := m.To_messageEntityBold()
		return t.Encode()
	case -2106619040:
		t := m.To_messageEntityItalic()
		return t.Encode()
	case 681706865:
		t := m.To_messageEntityCode()
		return t.Encode()
	case 1938967520:
		t := m.To_messageEntityPre()
		return t.Encode()
	case 1990644519:
		t := m.To_messageEntityTextUrl()
		return t.Encode()
	case 892193368:
		t := m.To_messageEntityMentionName()
		return t.Encode()
	case 546203849:
		t := m.To_inputMessageEntityMentionName()
		return t.Encode()
	case -1687559349:
		t := m.To_messageEntityPhone()
		return t.Encode()
	case 1280209983:
		t := m.To_messageEntityCashtag()
		return t.Encode()
	case -1672577397:
		t := m.To_messageEntityUnderline()
		return t.Encode()
	case -1090087980:
		t := m.To_messageEntityStrike()
		return t.Encode()
	case 34469328:
		t := m.To_messageEntityBlockquote()
		return t.Encode()
	case 1981704948:
		t := m.To_messageEntityBankCard()
		return t.Encode()
	default:
		return nil
	}
}
func (m MessageEntity) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1148011883:
		m2 := &TLmessageEntityUnknown{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -100378723:
		m2 := &TLmessageEntityMention{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1868782349:
		m2 := &TLmessageEntityHashtag{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1827637959:
		m2 := &TLmessageEntityBotCommand{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1859134776:
		m2 := &TLmessageEntityUrl{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1692693954:
		m2 := &TLmessageEntityEmail{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1117713463:
		m2 := &TLmessageEntityBold{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -2106619040:
		m2 := &TLmessageEntityItalic{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 681706865:
		m2 := &TLmessageEntityCode{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1938967520:
		m2 := &TLmessageEntityPre{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1990644519:
		m2 := &TLmessageEntityTextUrl{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 892193368:
		m2 := &TLmessageEntityMentionName{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 546203849:
		m2 := &TLinputMessageEntityMentionName{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1687559349:
		m2 := &TLmessageEntityPhone{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1280209983:
		m2 := &TLmessageEntityCashtag{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1672577397:
		m2 := &TLmessageEntityUnderline{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1090087980:
		m2 := &TLmessageEntityStrike{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 34469328:
		m2 := &TLmessageEntityBlockquote{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1981704948:
		m2 := &TLmessageEntityBankCard{data: &MessageEntity_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m MessageEntity) To_messageEntityUnknown() *TLmessageEntityUnknown {
	return &TLmessageEntityUnknown{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityMention() *TLmessageEntityMention {
	return &TLmessageEntityMention{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityHashtag() *TLmessageEntityHashtag {
	return &TLmessageEntityHashtag{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityBotCommand() *TLmessageEntityBotCommand {
	return &TLmessageEntityBotCommand{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityUrl() *TLmessageEntityUrl {
	return &TLmessageEntityUrl{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityEmail() *TLmessageEntityEmail {
	return &TLmessageEntityEmail{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityBold() *TLmessageEntityBold {
	return &TLmessageEntityBold{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityItalic() *TLmessageEntityItalic {
	return &TLmessageEntityItalic{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityCode() *TLmessageEntityCode {
	return &TLmessageEntityCode{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityPre() *TLmessageEntityPre {
	return &TLmessageEntityPre{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityTextUrl() *TLmessageEntityTextUrl {
	return &TLmessageEntityTextUrl{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityMentionName() *TLmessageEntityMentionName {
	return &TLmessageEntityMentionName{
		data: m.data,
	}
}
func (m MessageEntity) To_inputMessageEntityMentionName() *TLinputMessageEntityMentionName {
	return &TLinputMessageEntityMentionName{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityPhone() *TLmessageEntityPhone {
	return &TLmessageEntityPhone{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityCashtag() *TLmessageEntityCashtag {
	return &TLmessageEntityCashtag{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityUnderline() *TLmessageEntityUnderline {
	return &TLmessageEntityUnderline{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityStrike() *TLmessageEntityStrike {
	return &TLmessageEntityStrike{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityBlockquote() *TLmessageEntityBlockquote {
	return &TLmessageEntityBlockquote{
		data: m.data,
	}
}
func (m MessageEntity) To_messageEntityBankCard() *TLmessageEntityBankCard {
	return &TLmessageEntityBankCard{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:messages_AffectedHistory
//
func (m messages_AffectedHistory) Encode() []byte {
	switch m.constructor {
	case -1269012015:
		t := m.To_messages_affectedHistory()
		return t.Encode()
	default:
		return nil
	}
}
func (m messages_AffectedHistory) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1269012015:
		m2 := &TLmessages_affectedHistory{data: &messages_AffectedHistory_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m messages_AffectedHistory) To_messages_affectedHistory() *TLmessages_affectedHistory {
	return &TLmessages_affectedHistory{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_MessageStats
//
func (m stats_MessageStats) Encode() []byte {
	switch m.constructor {
	case -1986399595:
		t := m.To_stats_messageStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m stats_MessageStats) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1986399595:
		m2 := &TLstats_messageStats{data: &stats_MessageStats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m stats_MessageStats) To_stats_messageStats() *TLstats_messageStats {
	return &TLstats_messageStats{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SendMessageAction
//
func (m SendMessageAction) Encode() []byte {
	switch m.constructor {
	case 381645902:
		t := m.To_sendMessageTypingAction()
		return t.Encode()
	case -44119819:
		t := m.To_sendMessageCancelAction()
		return t.Encode()
	case -1584933265:
		t := m.To_sendMessageRecordVideoAction()
		return t.Encode()
	case -378127636:
		t := m.To_sendMessageUploadVideoAction()
		return t.Encode()
	case -718310409:
		t := m.To_sendMessageRecordAudioAction()
		return t.Encode()
	case -212740181:
		t := m.To_sendMessageUploadAudioAction()
		return t.Encode()
	case -774682074:
		t := m.To_sendMessageUploadPhotoAction()
		return t.Encode()
	case -1441998364:
		t := m.To_sendMessageUploadDocumentAction()
		return t.Encode()
	case 393186209:
		t := m.To_sendMessageGeoLocationAction()
		return t.Encode()
	case 1653390447:
		t := m.To_sendMessageChooseContactAction()
		return t.Encode()
	case -580219064:
		t := m.To_sendMessageGamePlayAction()
		return t.Encode()
	case -1997373508:
		t := m.To_sendMessageRecordRoundAction()
		return t.Encode()
	case 608050278:
		t := m.To_sendMessageUploadRoundAction()
		return t.Encode()
	default:
		return nil
	}
}
func (m SendMessageAction) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 381645902:
		m2 := &TLsendMessageTypingAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -44119819:
		m2 := &TLsendMessageCancelAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1584933265:
		m2 := &TLsendMessageRecordVideoAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -378127636:
		m2 := &TLsendMessageUploadVideoAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -718310409:
		m2 := &TLsendMessageRecordAudioAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -212740181:
		m2 := &TLsendMessageUploadAudioAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -774682074:
		m2 := &TLsendMessageUploadPhotoAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1441998364:
		m2 := &TLsendMessageUploadDocumentAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 393186209:
		m2 := &TLsendMessageGeoLocationAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1653390447:
		m2 := &TLsendMessageChooseContactAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -580219064:
		m2 := &TLsendMessageGamePlayAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case -1997373508:
		m2 := &TLsendMessageRecordRoundAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 608050278:
		m2 := &TLsendMessageUploadRoundAction{data: &SendMessageAction_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SendMessageAction) To_sendMessageTypingAction() *TLsendMessageTypingAction {
	return &TLsendMessageTypingAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageCancelAction() *TLsendMessageCancelAction {
	return &TLsendMessageCancelAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageRecordVideoAction() *TLsendMessageRecordVideoAction {
	return &TLsendMessageRecordVideoAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageUploadVideoAction() *TLsendMessageUploadVideoAction {
	return &TLsendMessageUploadVideoAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageRecordAudioAction() *TLsendMessageRecordAudioAction {
	return &TLsendMessageRecordAudioAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageUploadAudioAction() *TLsendMessageUploadAudioAction {
	return &TLsendMessageUploadAudioAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageUploadPhotoAction() *TLsendMessageUploadPhotoAction {
	return &TLsendMessageUploadPhotoAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageUploadDocumentAction() *TLsendMessageUploadDocumentAction {
	return &TLsendMessageUploadDocumentAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageGeoLocationAction() *TLsendMessageGeoLocationAction {
	return &TLsendMessageGeoLocationAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageChooseContactAction() *TLsendMessageChooseContactAction {
	return &TLsendMessageChooseContactAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageGamePlayAction() *TLsendMessageGamePlayAction {
	return &TLsendMessageGamePlayAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageRecordRoundAction() *TLsendMessageRecordRoundAction {
	return &TLsendMessageRecordRoundAction{
		data: m.data,
	}
}
func (m SendMessageAction) To_sendMessageUploadRoundAction() *TLsendMessageUploadRoundAction {
	return &TLsendMessageUploadRoundAction{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputWebDocument
//
func (m InputWebDocument) Encode() []byte {
	switch m.constructor {
	case -1678949555:
		t := m.To_inputWebDocument()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputWebDocument) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1678949555:
		m2 := &TLinputWebDocument{data: &InputWebDocument_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputWebDocument) To_inputWebDocument() *TLinputWebDocument {
	return &TLinputWebDocument{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:DialogFilterSuggested
//
func (m DialogFilterSuggested) Encode() []byte {
	switch m.constructor {
	case 2004110666:
		t := m.To_dialogFilterSuggested()
		return t.Encode()
	default:
		return nil
	}
}
func (m DialogFilterSuggested) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 2004110666:
		m2 := &TLdialogFilterSuggested{data: &DialogFilterSuggested_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m DialogFilterSuggested) To_dialogFilterSuggested() *TLdialogFilterSuggested {
	return &TLdialogFilterSuggested{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_PasswordSettings
//
func (m account_PasswordSettings) Encode() []byte {
	switch m.constructor {
	case -1705233435:
		t := m.To_account_passwordSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_PasswordSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1705233435:
		m2 := &TLaccount_passwordSettings{data: &account_PasswordSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_PasswordSettings) To_account_passwordSettings() *TLaccount_passwordSettings {
	return &TLaccount_passwordSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:UserFull
//
func (m UserFull) Encode() []byte {
	switch m.constructor {
	case -302941166:
		t := m.To_userFull()
		return t.Encode()
	default:
		return nil
	}
}
func (m UserFull) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -302941166:
		m2 := &TLuserFull{data: &UserFull_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m UserFull) To_userFull() *TLuserFull {
	return &TLuserFull{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:stats_BroadcastStats
//
func (m stats_BroadcastStats) Encode() []byte {
	switch m.constructor {
	case -1107852396:
		t := m.To_stats_broadcastStats()
		return t.Encode()
	default:
		return nil
	}
}
func (m stats_BroadcastStats) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1107852396:
		m2 := &TLstats_broadcastStats{data: &stats_BroadcastStats_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m stats_BroadcastStats) To_stats_broadcastStats() *TLstats_broadcastStats {
	return &TLstats_broadcastStats{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:FolderPeer
//
func (m FolderPeer) Encode() []byte {
	switch m.constructor {
	case -373643672:
		t := m.To_folderPeer()
		return t.Encode()
	default:
		return nil
	}
}
func (m FolderPeer) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -373643672:
		m2 := &TLfolderPeer{data: &FolderPeer_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m FolderPeer) To_folderPeer() *TLfolderPeer {
	return &TLfolderPeer{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:auth_ExportedAuthorization
//
func (m auth_ExportedAuthorization) Encode() []byte {
	switch m.constructor {
	case -543777747:
		t := m.To_auth_exportedAuthorization()
		return t.Encode()
	default:
		return nil
	}
}
func (m auth_ExportedAuthorization) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -543777747:
		m2 := &TLauth_exportedAuthorization{data: &auth_ExportedAuthorization_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m auth_ExportedAuthorization) To_auth_exportedAuthorization() *TLauth_exportedAuthorization {
	return &TLauth_exportedAuthorization{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:StickerSet
//
func (m StickerSet) Encode() []byte {
	switch m.constructor {
	case -290164953:
		t := m.To_stickerSet()
		return t.Encode()
	default:
		return nil
	}
}
func (m StickerSet) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -290164953:
		m2 := &TLstickerSet{data: &StickerSet_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m StickerSet) To_stickerSet() *TLstickerSet {
	return &TLstickerSet{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:InputThemeSettings
//
func (m InputThemeSettings) Encode() []byte {
	switch m.constructor {
	case -1118798639:
		t := m.To_inputThemeSettings()
		return t.Encode()
	default:
		return nil
	}
}
func (m InputThemeSettings) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -1118798639:
		m2 := &TLinputThemeSettings{data: &InputThemeSettings_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m InputThemeSettings) To_inputThemeSettings() *TLinputThemeSettings {
	return &TLinputThemeSettings{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:Document
//
func (m Document) Encode() []byte {
	switch m.constructor {
	case 922273905:
		t := m.To_documentEmpty()
		return t.Encode()
	case 512177195:
		t := m.To_document()
		return t.Encode()
	default:
		return nil
	}
}
func (m Document) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 922273905:
		m2 := &TLdocumentEmpty{data: &Document_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 512177195:
		m2 := &TLdocument{data: &Document_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m Document) To_documentEmpty() *TLdocumentEmpty {
	return &TLdocumentEmpty{
		data: m.data,
	}
}
func (m Document) To_document() *TLdocument {
	return &TLdocument{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:account_WallPapers
//
func (m account_WallPapers) Encode() []byte {
	switch m.constructor {
	case 471437699:
		t := m.To_account_wallPapersNotModified()
		return t.Encode()
	case 1881892265:
		t := m.To_account_wallPapers()
		return t.Encode()
	default:
		return nil
	}
}
func (m account_WallPapers) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case 471437699:
		m2 := &TLaccount_wallPapersNotModified{data: &account_WallPapers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 1881892265:
		m2 := &TLaccount_wallPapers{data: &account_WallPapers_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m account_WallPapers) To_account_wallPapersNotModified() *TLaccount_wallPapersNotModified {
	return &TLaccount_wallPapersNotModified{
		data: m.data,
	}
}
func (m account_WallPapers) To_account_wallPapers() *TLaccount_wallPapers {
	return &TLaccount_wallPapers{
		data: m.data,
	}
}

///////////////////////////////////////////////////////////////////////////////
// ConstructorsCodec:Type:SecureRequiredType
//
func (m SecureRequiredType) Encode() []byte {
	switch m.constructor {
	case -2103600678:
		t := m.To_secureRequiredType()
		return t.Encode()
	case 41187252:
		t := m.To_secureRequiredTypeOneOf()
		return t.Encode()
	default:
		return nil
	}
}
func (m SecureRequiredType) Decode(dbuf *DecodeBuf) error {
	m.constructor = dbuf.Int()
	switch m.constructor {
	case -2103600678:
		m2 := &TLsecureRequiredType{data: &SecureRequiredType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	case 41187252:
		m2 := &TLsecureRequiredTypeOneOf{data: &SecureRequiredType_Data{}}
		m2.Decode(dbuf)
		m.data = m2.data
	default:
		return fmt.Errorf("Invalid constructorId: %d", m.constructor)
	}
	return dbuf.Err
}
func (m SecureRequiredType) To_secureRequiredType() *TLsecureRequiredType {
	return &TLsecureRequiredType{
		data: m.data,
	}
}
func (m SecureRequiredType) To_secureRequiredTypeOneOf() *TLsecureRequiredTypeOneOf {
	return &TLsecureRequiredTypeOneOf{
		data: m.data,
	}
}
